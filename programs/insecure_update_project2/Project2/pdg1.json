[
  {
    "name": "admin_instruction",
    "inputs": [
      "ctx: Context < Unchecked >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let account_data = ctx . accounts . admin_config . try_borrow_data () ? ;"
      },
      {
        "id": 2,
        "label": "let mut account_data_slice : & [u8] = & account_data ;"
      },
      {
        "id": 3,
        "label": "let account_state = AdminConfig :: try_deserialize (& mut account_data_slice) ? ;"
      },
      {
        "id": 4,
        "label": "if account_state . admin != ctx . accounts . admin . key () { return Err (ProgramError :: InvalidArgument . into ()) ; }"
      },
      {
        "id": 5,
        "label": "return Err (ProgramError :: InvalidArgument . into ()) ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Admin: {}\" , account_state . admin . to_string ()) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: account_data"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: account_state"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: account_state"
      }
    ]
  }
]