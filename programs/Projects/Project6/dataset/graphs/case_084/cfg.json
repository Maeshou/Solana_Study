[
  {
    "name": "init_board",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "board . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "board . is_open = is_open ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "submit_artwork",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let art = & mut ctx . accounts . artwork ;"
      },
      {
        "id": 7,
        "label": "art . owner = ctx . accounts . artist . key () ;"
      },
      {
        "id": 8,
        "label": "art . board = ctx . accounts . board . key () ;"
      },
      {
        "id": 9,
        "label": "art . lane = lane ;"
      },
      {
        "id": 10,
        "label": "art . category = category ;"
      },
      {
        "id": 11,
        "label": "art . score_total = 0 ;"
      },
      {
        "id": 12,
        "label": "art . review_count = 0 ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "judge_artwork",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let artwork = & mut ctx . accounts . artwork ;"
      },
      {
        "id": 16,
        "label": "let judge = & mut ctx . accounts . judge ;"
      },
      {
        "id": 17,
        "label": "let log = & mut ctx . accounts . log ;"
      },
      {
        "id": 18,
        "label": "Loop Start"
      },
      {
        "id": 19,
        "label": "let score = * s as u64 ;"
      },
      {
        "id": 20,
        "label": "artwork . score_total = artwork . score_total . checked_add (score) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 21,
        "label": "artwork . review_count = artwork . review_count . checked_add (1) . unwrap_or (255) ;"
      },
      {
        "id": 22,
        "label": "Loop End"
      },
      {
        "id": 23,
        "label": "if statement"
      },
      {
        "id": 24,
        "label": "predicate"
      },
      {
        "id": 25,
        "label": "judge . role == Head"
      },
      {
        "id": 26,
        "label": "True body"
      },
      {
        "id": 27,
        "label": "log . flags = log . flags ^ 0b0000_0011 ;"
      },
      {
        "id": 28,
        "label": "log . notes = judge . role as u8 + artwork . category ;"
      },
      {
        "id": 29,
        "label": "False body"
      },
      {
        "id": 30,
        "label": "log . flags = log . flags | 0b0000_1000 ;"
      },
      {
        "id": 31,
        "label": "log . notes = judge . role as u8 + 1 ;"
      },
      {
        "id": 32,
        "label": "merge"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 18,
        "to": 22,
        "label": "for"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "predicate"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "true"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 23,
        "to": 29,
        "label": "false"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 28,
        "to": 32,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      }
    ]
  }
]