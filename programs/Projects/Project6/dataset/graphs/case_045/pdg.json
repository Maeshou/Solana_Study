[
  {
    "name": "init_beacon",
    "inputs": [
      "ctx: Context < InitBeacon >",
      "strength: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . beacon ;"
      },
      {
        "id": 2,
        "label": "b . lord = ctx . accounts . lord . key () ;"
      },
      {
        "id": 3,
        "label": "b . strength = strength ;"
      },
      {
        "id": 4,
        "label": "b . depth = 5 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "ignite",
    "inputs": [
      "ctx: Context < Ignite >",
      "shards: u64",
      "phase_index: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let b = & mut ctx . accounts . beacon ;"
      },
      {
        "id": 8,
        "label": "if b . depth < 20 { let mut i = 0u8 ; while i < 3 { b . depth = b . depth . saturating_add (((i as u32) << 1) . saturating_add (1)) ; i = i . saturating_add (1) ; } }"
      },
      {
        "id": 9,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while i < 3 { b . depth = b . depth . saturating_add (((i as u32) << 1) . saturating_add (1)) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "b . depth = b . depth . saturating_add (((i as u32) << 1) . saturating_add (1)) ;"
      },
      {
        "id": 12,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "let coef : [u64 ; 3] = [90 , 110 , 140] ;"
      },
      {
        "id": 14,
        "label": "let idx = if phase_index > 2 { 2 } else { phase_index } as usize ;"
      },
      {
        "id": 15,
        "label": "2"
      },
      {
        "id": 16,
        "label": "phase_index"
      },
      {
        "id": 17,
        "label": "let mut inc = shards . saturating_mul (coef [idx]) ;"
      },
      {
        "id": 18,
        "label": "let mut r = 0u8 ;"
      },
      {
        "id": 19,
        "label": "while r < 4 { inc = inc . rotate_left (1) . wrapping_add (13) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "inc = inc . rotate_left (1) . wrapping_add (13) ;"
      },
      {
        "id": 21,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 22,
        "label": "b . strength = b . strength . saturating_add ((inc % 37) as u32) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: b"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: idx"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: inc"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: idx"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: r"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: inc"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: inc"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: inc"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: inc"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: inc"
      }
    ]
  }
]