[
  {
    "name": "init_kiosk",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let k = & mut ctx . accounts . kiosk ;"
      },
      {
        "id": 2,
        "label": "k . owner = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "k . fee_bps = 25 ;"
      },
      {
        "id": 4,
        "label": "k . listed = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_card",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let c = & mut ctx . accounts . card ;"
      },
      {
        "id": 8,
        "label": "c . kiosk = ctx . accounts . kiosk . key () ;"
      },
      {
        "id": 9,
        "label": "c . actor = actor ;"
      },
      {
        "id": 10,
        "label": "c . score = 0 ;"
      },
      {
        "id": 11,
        "label": "c . buf = [0 ; 4] ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_listing",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let k = & mut ctx . accounts . kiosk ;"
      },
      {
        "id": 15,
        "label": "let s = & mut ctx . accounts . seller ;"
      },
      {
        "id": 16,
        "label": "let i = & mut ctx . accounts . inspector ;"
      },
      {
        "id": 17,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 18,
        "label": "Loop Start"
      },
      {
        "id": 19,
        "label": "s . buf [j] = s . buf [j] . saturating_add (((price >> (j * 8)) as u32) & 0xFF) ;"
      },
      {
        "id": 20,
        "label": "Loop End"
      },
      {
        "id": 21,
        "label": "if statement"
      },
      {
        "id": 22,
        "label": "predicate"
      },
      {
        "id": 23,
        "label": "s . actor == Seller"
      },
      {
        "id": 24,
        "label": "True body"
      },
      {
        "id": 25,
        "label": "s . score = s . score . saturating_add (((price % 997) as u32) + k . fee_bps as u32) ;"
      },
      {
        "id": 26,
        "label": "k . listed = k . listed . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "b . cursor = b . cursor . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "b . acc = b . acc . wrapping_add (price . rotate_left (9)) ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"Seller path\") ;"
      },
      {
        "id": 30,
        "label": "False body"
      },
      {
        "id": 31,
        "label": "i . score = i . score . saturating_add (((price >> 2) as u32) % 463) ;"
      },
      {
        "id": 32,
        "label": "k . fee_bps = (k . fee_bps + 1) . min (100) ;"
      },
      {
        "id": 33,
        "label": "b . cursor = b . cursor . saturating_add (2) ;"
      },
      {
        "id": 34,
        "label": "b . acc = b . acc ^ price . rotate_right (11) ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Inspector path\") ;"
      },
      {
        "id": 36,
        "label": "merge"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 18,
        "to": 20,
        "label": "for"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "predicate"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 21,
        "to": 24,
        "label": "true"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 21,
        "to": 30,
        "label": "false"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 29,
        "to": 36,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  }
]