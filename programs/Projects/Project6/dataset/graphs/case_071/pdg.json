[
  {
    "name": "init_hall",
    "inputs": [
      "ctx: Context < InitHall >",
      "code: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let h = & mut ctx . accounts . hall ;"
      },
      {
        "id": 2,
        "label": "h . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "h . code = code ;"
      },
      {
        "id": 4,
        "label": "h . events = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: h"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: h"
      }
    ]
  },
  {
    "name": "register_player",
    "inputs": [
      "ctx: Context < RegisterPlayer >",
      "tag: RoleTag"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let h = & mut ctx . accounts . hall ;"
      },
      {
        "id": 8,
        "label": "let p = & mut ctx . accounts . player ;"
      },
      {
        "id": 9,
        "label": "p . hall = h . key () ;"
      },
      {
        "id": 10,
        "label": "p . tag = tag ;"
      },
      {
        "id": 11,
        "label": "p . score = 0 ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: h"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: p"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: h"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "reward",
    "inputs": [
      "ctx: Context < Reward >",
      "notes: Vec < u8 >",
      "amount_limit: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let h = & mut ctx . accounts . hall ;"
      },
      {
        "id": 15,
        "label": "let a = & mut ctx . accounts . actor ;"
      },
      {
        "id": 16,
        "label": "let b = & mut ctx . accounts . partner ;"
      },
      {
        "id": 17,
        "label": "let mut s : u32 = 0 ;"
      },
      {
        "id": 18,
        "label": "let mut mix : u32 = 0 ;"
      },
      {
        "id": 19,
        "label": "for n in notes { s = s . saturating_add ((n & 0x3F) as u32) ; mix = mix . rotate_left (3) ^ (n as u32) ; }"
      },
      {
        "id": 20,
        "label": "s = s . saturating_add ((n & 0x3F) as u32) ;"
      },
      {
        "id": 21,
        "label": "mix = mix . rotate_left (3) ^ (n as u32) ;"
      },
      {
        "id": 22,
        "label": "let base = (s + (mix & 0xFF)) as u64 ;"
      },
      {
        "id": 23,
        "label": "let amt = base . min (amount_limit) ;"
      },
      {
        "id": 24,
        "label": "if a . tag == Leader { a . score = a . score . saturating_add ((amt / 2) as u32) ; b . score = b . score . saturating_add ((amt / 4) as u32) ; h . events = h . events . saturating_add (1) ; msg ! (\"Leader reward path: amt={}, a={}, b={}, ev={}\" , amt , a . score , b . score , h . events) ; } else { a . score = a . score . saturating_add ((amt / 3) as u32) ; b . score = b . score . saturating_add (((mix & 0x7F) as u32)) ; h . events = h . events . saturating_add (1) ; msg ! (\"Member/Guest reward path: amt={}, a={}, b={}, ev={}\" , amt , a . score , b . score , h . events) ; }"
      },
      {
        "id": 25,
        "label": "a . score = a . score . saturating_add ((amt / 2) as u32) ;"
      },
      {
        "id": 26,
        "label": "b . score = b . score . saturating_add ((amt / 4) as u32) ;"
      },
      {
        "id": 27,
        "label": "h . events = h . events . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"Leader reward path: amt={}, a={}, b={}, ev={}\" , amt , a . score , b . score , h . events) ;"
      },
      {
        "id": 29,
        "label": "a . score = a . score . saturating_add ((amt / 3) as u32) ;"
      },
      {
        "id": 30,
        "label": "b . score = b . score . saturating_add (((mix & 0x7F) as u32)) ;"
      },
      {
        "id": 31,
        "label": "h . events = h . events . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Member/Guest reward path: amt={}, a={}, b={}, ev={}\" , amt , a . score , b . score , h . events) ;"
      },
      {
        "id": 33,
        "label": "if amt > 0 { let cpi_accounts = Transfer { from : ctx . accounts . treasury_vault . to_account_info () , to : ctx . accounts . recipient_vault . to_account_info () , authority : ctx . accounts . treasurer . to_account_info () , } ; let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ; token :: transfer (cpi_ctx , amt) ? ; }"
      },
      {
        "id": 34,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . treasury_vault . to_account_info () , to : ctx . accounts . recipient_vault . to_account_info () , authority : ctx . accounts . treasurer . to_account_info () , } ;"
      },
      {
        "id": 35,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;"
      },
      {
        "id": 36,
        "label": "token :: transfer (cpi_ctx , amt) ? ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: h"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: a"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: b"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: base"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: amt"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: base"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 15,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: amt"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 15,
        "to": 29,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 29,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 33,
        "label": "data_dep: amt"
      },
      {
        "from": 23,
        "to": 33,
        "label": "data_dep: amt"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: cpi_accounts"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: cpi_ctx"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: amt"
      }
    ]
  }
]