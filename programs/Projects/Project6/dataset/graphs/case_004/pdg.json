[
  {
    "name": "init_canvas",
    "inputs": [
      "ctx: Context < InitCanvas >",
      "w: u16",
      "h: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . canvas ;"
      },
      {
        "id": 2,
        "label": "let p = & mut ctx . accounts . palette ;"
      },
      {
        "id": 3,
        "label": "c . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 4,
        "label": "c . size = (w as u32) * (h as u32) ;"
      },
      {
        "id": 5,
        "label": "c . channel = (w ^ h) as u8 ;"
      },
      {
        "id": 6,
        "label": "p . parent = c . key () ;"
      },
      {
        "id": 7,
        "label": "p . mode = 0 ;"
      },
      {
        "id": 8,
        "label": "p . ramps = [0u8 ; 8] ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: c"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "init_brush",
    "inputs": [
      "ctx: Context < InitBrush >",
      "strength: u8"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let b = & mut ctx . accounts . brush ;"
      },
      {
        "id": 12,
        "label": "b . parent = ctx . accounts . canvas . key () ;"
      },
      {
        "id": 13,
        "label": "b . strength = strength ;"
      },
      {
        "id": 14,
        "label": "b . seed = 1 ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: b"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "mix",
    "inputs": [
      "ctx: Context < Mix >",
      "bias: u8"
    ],
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let c = & mut ctx . accounts . canvas ;"
      },
      {
        "id": 18,
        "label": "let b = & mut ctx . accounts . brush ;"
      },
      {
        "id": 19,
        "label": "let p = & mut ctx . accounts . palette ;"
      },
      {
        "id": 20,
        "label": "for i in 0 .. p . ramps . len () { let v = ((p . ramps [i] as u16 + b . strength as u16 + bias as u16) & 0xFF) as u8 ; p . ramps [i] = v ; }"
      },
      {
        "id": 21,
        "label": "let v = ((p . ramps [i] as u16 + b . strength as u16 + bias as u16) & 0xFF) as u8 ;"
      },
      {
        "id": 22,
        "label": "p . ramps [i] = v ;"
      },
      {
        "id": 23,
        "label": "if (p . ramps [0] & 1) == 1 { b . seed = b . seed . rotate_left (1) ; c . size = c . size . saturating_add ((p . ramps [0] as u32) * 3) ; p . mode = p . mode . saturating_add (1) . min (200) ; msg ! (\"odd path: seed rot, size up, mode step\") ; } else { b . seed = b . seed . rotate_right (1) ; c . size = c . size . saturating_sub ((p . ramps [0] as u32) . min (c . size)) ; p . mode = p . mode . saturating_sub (1) ; msg ! (\"even path: seed rot back, size down, mode down\") ; }"
      },
      {
        "id": 24,
        "label": "b . seed = b . seed . rotate_left (1) ;"
      },
      {
        "id": 25,
        "label": "c . size = c . size . saturating_add ((p . ramps [0] as u32) * 3) ;"
      },
      {
        "id": 26,
        "label": "p . mode = p . mode . saturating_add (1) . min (200) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"odd path: seed rot, size up, mode step\") ;"
      },
      {
        "id": 28,
        "label": "b . seed = b . seed . rotate_right (1) ;"
      },
      {
        "id": 29,
        "label": "c . size = c . size . saturating_sub ((p . ramps [0] as u32) . min (c . size)) ;"
      },
      {
        "id": 30,
        "label": "p . mode = p . mode . saturating_sub (1) ;"
      },
      {
        "id": 31,
        "label": "msg ! (\"even path: seed rot back, size down, mode down\") ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 17,
        "label": "def: c"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: b"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: p"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: v"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: v"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: c"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: p"
      }
    ]
  }
]