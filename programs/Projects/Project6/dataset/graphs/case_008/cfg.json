[
  {
    "name": "init_recipe",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . recipe ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "r . tag = tag ;"
      },
      {
        "id": 4,
        "label": "r . ratio = 50 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_queue",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let q = & mut ctx . accounts . queue ;"
      },
      {
        "id": 8,
        "label": "q . parent = ctx . accounts . recipe . key () ;"
      },
      {
        "id": 9,
        "label": "q . head = 0 ;"
      },
      {
        "id": 10,
        "label": "q . tail = 0 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_warehouse2",
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let w = & mut ctx . accounts . warehouse2 ;"
      },
      {
        "id": 14,
        "label": "w . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 15,
        "label": "w . good = 0 ;"
      },
      {
        "id": 16,
        "label": "w . bad = 0 ;"
      },
      {
        "id": 17,
        "label": "w . hash = 0 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_batch",
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let ra = & mut ctx . accounts . recipe_a ;"
      },
      {
        "id": 21,
        "label": "let rb = & mut ctx . accounts . recipe_b ;"
      },
      {
        "id": 22,
        "label": "let qa = & mut ctx . accounts . queue_a ;"
      },
      {
        "id": 23,
        "label": "let qb = & mut ctx . accounts . queue_b ;"
      },
      {
        "id": 24,
        "label": "let w = & mut ctx . accounts . warehouse2 ;"
      },
      {
        "id": 25,
        "label": "let mut i = 0u16 ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "qa . head = qa . head . wrapping_add (ra . ratio as u64 & 7) ;"
      },
      {
        "id": 28,
        "label": "qb . tail = qb . tail . wrapping_add (rb . ratio as u64 & 11) ;"
      },
      {
        "id": 29,
        "label": "let score = ((qa . head ^ qb . tail) as u32) & 0xFFFF ;"
      },
      {
        "id": 30,
        "label": "if statement"
      },
      {
        "id": 31,
        "label": "predicate"
      },
      {
        "id": 32,
        "label": "(score & 1) == 0"
      },
      {
        "id": 33,
        "label": "True body"
      },
      {
        "id": 34,
        "label": "w . good = w . good . saturating_add ((score / 3) as u64 + 1) ;"
      },
      {
        "id": 35,
        "label": "ra . ratio = (ra . ratio + 1) . min (100) ;"
      },
      {
        "id": 36,
        "label": "False body"
      },
      {
        "id": 37,
        "label": "w . bad = w . bad . saturating_add ((score / 2) as u64 + 1) ;"
      },
      {
        "id": 38,
        "label": "rb . ratio = rb . ratio . saturating_sub (1) . max (1) ;"
      },
      {
        "id": 39,
        "label": "merge"
      },
      {
        "id": 40,
        "label": "w . hash ^= ((ra . tag as u64) << 16) ^ ((rb . tag as u64) << 1) ^ (score as u64) ;"
      },
      {
        "id": 41,
        "label": "i += 1 ;"
      },
      {
        "id": 42,
        "label": "Loop End"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "predicate"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 30,
        "to": 33,
        "label": "true"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 30,
        "to": 36,
        "label": "false"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 35,
        "to": 39,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 26,
        "to": 42,
        "label": "while"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      }
    ]
  }
]