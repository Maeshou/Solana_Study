[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "g . name = name ;"
      },
      {
        "id": 4,
        "label": "g . total_points = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      }
    ]
  },
  {
    "name": "enroll_member",
    "inputs": [
      "ctx: Context < EnrollMember >",
      "role: Role",
      "tag: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let card = & mut ctx . accounts . member_card ;"
      },
      {
        "id": 8,
        "label": "card . parent = ctx . accounts . guild . key () ;"
      },
      {
        "id": 9,
        "label": "card . role = role ;"
      },
      {
        "id": 10,
        "label": "card . tag = tag ;"
      },
      {
        "id": 11,
        "label": "card . points = 0 ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: card"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: card"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: card"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: card"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: card"
      }
    ]
  },
  {
    "name": "update_board",
    "inputs": [
      "ctx: Context < UpdateBoard >",
      "delta: i64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let guild = & mut ctx . accounts . guild ;"
      },
      {
        "id": 15,
        "label": "let actor = & mut ctx . accounts . member_actor ;"
      },
      {
        "id": 16,
        "label": "let counter = & mut ctx . accounts . member_counter ;"
      },
      {
        "id": 17,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 18,
        "label": "let mut sum : i64 = 0 ;"
      },
      {
        "id": 19,
        "label": "for i in 0 .. board . slots . len () { let base = board . slots [i] as i64 ; let adj = (base ^ (delta as i64)) & 0x7FFF ; let capped = adj . clamp (0 , 50_000) ; board . slots [i] = capped as u32 ; sum = sum . saturating_add (capped) ; }"
      },
      {
        "id": 20,
        "label": "let base = board . slots [i] as i64 ;"
      },
      {
        "id": 21,
        "label": "let adj = (base ^ (delta as i64)) & 0x7FFF ;"
      },
      {
        "id": 22,
        "label": "let capped = adj . clamp (0 , 50_000) ;"
      },
      {
        "id": 23,
        "label": "board . slots [i] = capped as u32 ;"
      },
      {
        "id": 24,
        "label": "sum = sum . saturating_add (capped) ;"
      },
      {
        "id": 25,
        "label": "let avg = if board . slots . len () > 0 { sum / board . slots . len () as i64 } else { 0 } ;"
      },
      {
        "id": 26,
        "label": "sum / board . slots . len () as i64"
      },
      {
        "id": 27,
        "label": "0"
      },
      {
        "id": 28,
        "label": "if avg >= 10_000 { actor . points = actor . points . checked_add ((avg as u64) . min (5_000)) . unwrap_or (u64 :: MAX) ; guild . total_points = guild . total_points . saturating_add (actor . points / 10) ; board . flag = true ; msg ! (\"High performance: actor boosted, guild total updated\") ; } else { let boost = (10_000 - avg) . max (0) as u64 ; counter . points = counter . points . checked_add (boost) . unwrap_or (u64 :: MAX) ; guild . total_points = guild . total_points . saturating_add (counter . points / 20) ; board . flag = false ; msg ! (\"Low performance: counter supported, guild total updated\") ; }"
      },
      {
        "id": 29,
        "label": "actor . points = actor . points . checked_add ((avg as u64) . min (5_000)) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 30,
        "label": "guild . total_points = guild . total_points . saturating_add (actor . points / 10) ;"
      },
      {
        "id": 31,
        "label": "board . flag = true ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"High performance: actor boosted, guild total updated\") ;"
      },
      {
        "id": 33,
        "label": "let boost = (10_000 - avg) . max (0) as u64 ;"
      },
      {
        "id": 34,
        "label": "counter . points = counter . points . checked_add (boost) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 35,
        "label": "guild . total_points = guild . total_points . saturating_add (counter . points / 20) ;"
      },
      {
        "id": 36,
        "label": "board . flag = false ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"Low performance: counter supported, guild total updated\") ;"
      },
      {
        "id": 38,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: guild"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: actor"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: counter"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: board"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: board"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: board"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: board"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: base"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: board"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: adj"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: base"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: capped"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: adj"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: board"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: capped"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: capped"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: avg"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: board"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: board"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: board"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: avg"
      },
      {
        "from": 15,
        "to": 28,
        "label": "data_dep: actor"
      },
      {
        "from": 15,
        "to": 28,
        "label": "data_dep: actor"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: avg"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: guild"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: guild"
      },
      {
        "from": 15,
        "to": 28,
        "label": "data_dep: actor"
      },
      {
        "from": 17,
        "to": 28,
        "label": "data_dep: board"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: counter"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: counter"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: guild"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: guild"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: counter"
      },
      {
        "from": 17,
        "to": 28,
        "label": "data_dep: board"
      },
      {
        "from": 15,
        "to": 29,
        "label": "data_dep: actor"
      },
      {
        "from": 15,
        "to": 29,
        "label": "data_dep: actor"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: avg"
      },
      {
        "from": 14,
        "to": 30,
        "label": "data_dep: guild"
      },
      {
        "from": 14,
        "to": 30,
        "label": "data_dep: guild"
      },
      {
        "from": 15,
        "to": 30,
        "label": "data_dep: actor"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: board"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: boost"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: counter"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: counter"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: boost"
      },
      {
        "from": 14,
        "to": 35,
        "label": "data_dep: guild"
      },
      {
        "from": 14,
        "to": 35,
        "label": "data_dep: guild"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: counter"
      },
      {
        "from": 17,
        "to": 36,
        "label": "data_dep: board"
      }
    ]
  }
]