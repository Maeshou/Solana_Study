[
  {
    "name": "init_stable",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . stable ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . region = region ;"
      },
      {
        "id": 4,
        "label": "s . rides = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "register",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let s = & mut ctx . accounts . stable ;"
      },
      {
        "id": 8,
        "label": "let r = & mut ctx . accounts . rider_a ;"
      },
      {
        "id": 9,
        "label": "r . stable = s . key () ;"
      },
      {
        "id": 10,
        "label": "r . role = role ;"
      },
      {
        "id": 11,
        "label": "r . tag = tag ;"
      },
      {
        "id": 12,
        "label": "r . energy = 100 ;"
      },
      {
        "id": 13,
        "label": "let m = & mut ctx . accounts . horse ;"
      },
      {
        "id": 14,
        "label": "m . stable = s . key () ;"
      },
      {
        "id": 15,
        "label": "m . mood = 50 ;"
      },
      {
        "id": 16,
        "label": "m . distance = 0 ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  },
  {
    "name": "ride",
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let s = & mut ctx . accounts . stable ;"
      },
      {
        "id": 20,
        "label": "let a = & mut ctx . accounts . actor ;"
      },
      {
        "id": 21,
        "label": "let b = & mut ctx . accounts . partner ;"
      },
      {
        "id": 22,
        "label": "let h = & mut ctx . accounts . horse ;"
      },
      {
        "id": 23,
        "label": "let log = & mut ctx . accounts . ride_log ;"
      },
      {
        "id": 24,
        "label": "let mut total : u32 = 0 ;"
      },
      {
        "id": 25,
        "label": "let mut mix : u16 = 0 ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "total = total . saturating_add ((seg & 0x3FF) as u32) ;"
      },
      {
        "id": 28,
        "label": "mix ^= seg . rotate_left (3) ^ 0x5A5A ;"
      },
      {
        "id": 29,
        "label": "Loop End"
      },
      {
        "id": 30,
        "label": "let gain = total + (mix as u32 & 0xFF) ;"
      },
      {
        "id": 31,
        "label": "if statement"
      },
      {
        "id": 32,
        "label": "predicate"
      },
      {
        "id": 33,
        "label": "a . role == Leader"
      },
      {
        "id": 34,
        "label": "True body"
      },
      {
        "id": 35,
        "label": "a . energy = a . energy . saturating_add ((gain & 0x7F) as u16) ;"
      },
      {
        "id": 36,
        "label": "b . energy = b . energy . saturating_add (((mix >> 2) & 0x7F) as u16) ;"
      },
      {
        "id": 37,
        "label": "h . distance = h . distance . saturating_add ((gain / 2) as u32) ;"
      },
      {
        "id": 38,
        "label": "s . rides = s . rides . saturating_add (1) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Leader branch: gain={}, aE={}, bE={}, dist={}\" , gain , a . energy , b . energy , h . distance) ;"
      },
      {
        "id": 40,
        "label": "False body"
      },
      {
        "id": 41,
        "label": "a . energy = a . energy . saturating_add (((mix >> 1) & 0x7F) as u16) ;"
      },
      {
        "id": 42,
        "label": "b . energy = b . energy . saturating_add ((gain & 0x7F) as u16) ;"
      },
      {
        "id": 43,
        "label": "h . distance = h . distance . saturating_add ((gain / 3) as u32) ;"
      },
      {
        "id": 44,
        "label": "s . rides = s . rides . saturating_add (1) ;"
      },
      {
        "id": 45,
        "label": "msg ! (\"Support/Scout branch: gain={}, aE={}, bE={}, dist={}\" , gain , a . energy , b . energy , h . distance) ;"
      },
      {
        "id": 46,
        "label": "merge"
      },
      {
        "id": 47,
        "label": "let mut x = (s . rides as u128) . max (1) ;"
      },
      {
        "id": 48,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 49,
        "label": "Loop Start"
      },
      {
        "id": 50,
        "label": "x = (x + (s . rides as u128 / x)) . max (1) / 2 ;"
      },
      {
        "id": 51,
        "label": "i += 1 ;"
      },
      {
        "id": 52,
        "label": "Loop End"
      },
      {
        "id": 53,
        "label": "h . mood = (h . mood . saturating_add ((x as u16) & 0x3FF)) . min (2000) ;"
      },
      {
        "id": 54,
        "label": "log . stable = s . key () ;"
      },
      {
        "id": 55,
        "label": "log . index = (x as u32) . min (1_000_000) ;"
      },
      {
        "id": 56,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 26,
        "to": 29,
        "label": "for"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "predicate"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 31,
        "to": 34,
        "label": "true"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 31,
        "to": 40,
        "label": "false"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 39,
        "to": 46,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 49,
        "to": 52,
        "label": "while"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      }
    ]
  }
]