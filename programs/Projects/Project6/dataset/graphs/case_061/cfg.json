[
  {
    "name": "init_guild_registry",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let registry = & mut ctx . accounts . registry ;"
      },
      {
        "id": 2,
        "label": "registry . master_guild = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "registry . guild_tag = guild_tag ;"
      },
      {
        "id": 4,
        "label": "registry . tier = tier ;"
      },
      {
        "id": 5,
        "label": "registry . total_battles = 1u32 ;"
      },
      {
        "id": 6,
        "label": "registry . win_streak = 1u16 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_battle_record",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let record = & mut ctx . accounts . record ;"
      },
      {
        "id": 10,
        "label": "record . parent_registry = ctx . accounts . registry . key () ;"
      },
      {
        "id": 11,
        "label": "record . battle_id = battle_id ;"
      },
      {
        "id": 12,
        "label": "record . status = status ;"
      },
      {
        "id": 13,
        "label": "record . participant_count = 2u8 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_battle_results",
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let left_reg = & mut ctx . accounts . left_registry ;"
      },
      {
        "id": 17,
        "label": "let right_reg = & mut ctx . accounts . right_registry ;"
      },
      {
        "id": 18,
        "label": "let battle_log = & mut ctx . accounts . battle_log ;"
      },
      {
        "id": 19,
        "label": "Loop Start"
      },
      {
        "id": 20,
        "label": "if statement"
      },
      {
        "id": 21,
        "label": "predicate"
      },
      {
        "id": 22,
        "label": "iteration % 2 == 1"
      },
      {
        "id": 23,
        "label": "True body"
      },
      {
        "id": 24,
        "label": "let base_score = left_reg . total_battles . checked_mul (3) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 25,
        "label": "left_reg . total_battles = base_score . checked_add (iteration as u32) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 26,
        "label": "left_reg . win_streak = left_reg . win_streak . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "battle_log . victory_points = battle_log . victory_points . wrapping_add (base_score as u64) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"Left guild processed: iteration {}\" , iteration) ;"
      },
      {
        "id": 29,
        "label": "False body"
      },
      {
        "id": 30,
        "label": "let penalty = right_reg . win_streak . saturating_sub (1) ;"
      },
      {
        "id": 31,
        "label": "right_reg . win_streak = penalty ;"
      },
      {
        "id": 32,
        "label": "right_reg . total_battles = right_reg . total_battles . saturating_add (2) ;"
      },
      {
        "id": 33,
        "label": "battle_log . defeat_penalty = battle_log . defeat_penalty . checked_add (penalty as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "msg ! (\"Right guild processed: iteration {}\" , iteration) ;"
      },
      {
        "id": 35,
        "label": "merge"
      },
      {
        "id": 36,
        "label": "Loop End"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "predicate"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 20,
        "to": 23,
        "label": "true"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 20,
        "to": 29,
        "label": "false"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 28,
        "to": 35,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 19,
        "to": 36,
        "label": "for"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  }
]