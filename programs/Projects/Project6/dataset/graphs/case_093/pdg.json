[
  {
    "name": "init_workshop",
    "inputs": [
      "ctx: Context < InitWorkshop >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let w = & mut ctx . accounts . workshop ;"
      },
      {
        "id": 2,
        "label": "w . owner = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "w . level = 1 ;"
      },
      {
        "id": 4,
        "label": "w . noise = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: w"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: w"
      }
    ]
  },
  {
    "name": "init_recipe",
    "inputs": [
      "ctx: Context < InitRecipe >",
      "kind: RecipeKind"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let r = & mut ctx . accounts . recipe ;"
      },
      {
        "id": 8,
        "label": "r . workshop = ctx . accounts . workshop . key () ;"
      },
      {
        "id": 9,
        "label": "r . kind = kind ;"
      },
      {
        "id": 10,
        "label": "r . quality = 0 ;"
      },
      {
        "id": 11,
        "label": "r . mem = [0 ; 10] ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: r"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "brew",
    "inputs": [
      "ctx: Context < Brew >",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let w = & mut ctx . accounts . workshop ;"
      },
      {
        "id": 15,
        "label": "let a = & mut ctx . accounts . actor ;"
      },
      {
        "id": 16,
        "label": "let b = & mut ctx . accounts . counter ;"
      },
      {
        "id": 17,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 18,
        "label": "let mut s = seed ^ (w . level as u64) ;"
      },
      {
        "id": 19,
        "label": "for k in 0 .. 10 { s = (s ^ (k as u64) . rotate_left (5)) . wrapping_mul (0x9E3779B97F4A7C15) ; a . mem [k] = a . mem [k] . saturating_add (((s >> (k * 3)) & 0x3F) as u32) ; }"
      },
      {
        "id": 20,
        "label": "s = (s ^ (k as u64) . rotate_left (5)) . wrapping_mul (0x9E3779B97F4A7C15) ;"
      },
      {
        "id": 21,
        "label": "a . mem [k] = a . mem [k] . saturating_add (((s >> (k * 3)) & 0x3F) as u32) ;"
      },
      {
        "id": 22,
        "label": "if a . kind == Elixir { a . quality = a . quality . saturating_add (((s & 0xFFFF) as u32) + 11) ; w . level = (w . level + 1) . min (50) ; l . lines = l . lines . saturating_add (1) ; l . mix = l . mix . wrapping_add (s . rotate_left (7)) ; msg ! (\"Elixir brewing path\") ; } else { b . quality = b . quality . saturating_add ((((s >> 6) & 0x7FFF) as u32) + 5) ; w . noise = w . noise ^ ((s as u32) & 0xFFFF) ; l . lines = l . lines . saturating_add (2) ; l . mix = l . mix ^ s . rotate_right (9) ; msg ! (\"Non-elixir brewing path\") ; }"
      },
      {
        "id": 23,
        "label": "a . quality = a . quality . saturating_add (((s & 0xFFFF) as u32) + 11) ;"
      },
      {
        "id": 24,
        "label": "w . level = (w . level + 1) . min (50) ;"
      },
      {
        "id": 25,
        "label": "l . lines = l . lines . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "l . mix = l . mix . wrapping_add (s . rotate_left (7)) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"Elixir brewing path\") ;"
      },
      {
        "id": 28,
        "label": "b . quality = b . quality . saturating_add ((((s >> 6) & 0x7FFF) as u32) + 5) ;"
      },
      {
        "id": 29,
        "label": "w . noise = w . noise ^ ((s as u32) & 0xFFFF) ;"
      },
      {
        "id": 30,
        "label": "l . lines = l . lines . saturating_add (2) ;"
      },
      {
        "id": 31,
        "label": "l . mix = l . mix ^ s . rotate_right (9) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Non-elixir brewing path\") ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: w"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: a"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: b"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: l"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: s"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: w"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: w"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: w"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: w"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: w"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: w"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: w"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: w"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: w"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: s"
      }
    ]
  }
]