[
  {
    "name": "init_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let guild = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "guild . owner = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "guild . name = name ;"
      },
      {
        "id": 4,
        "label": "guild . total_posts = 0 ;"
      },
      {
        "id": 5,
        "label": "guild . flags = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_member_card",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let card = & mut ctx . accounts . card ;"
      },
      {
        "id": 9,
        "label": "card . guild = ctx . accounts . guild . key () ;"
      },
      {
        "id": 10,
        "label": "card . role = role ;"
      },
      {
        "id": 11,
        "label": "card . reputation = 0 ;"
      },
      {
        "id": 12,
        "label": "card . active = true ;"
      },
      {
        "id": 13,
        "label": "card . counters = [0 ; 8] ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_post_flow",
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let guild = & mut ctx . accounts . guild ;"
      },
      {
        "id": 17,
        "label": "let actor = & mut ctx . accounts . actor ;"
      },
      {
        "id": 18,
        "label": "let reviewer = & mut ctx . accounts . reviewer ;"
      },
      {
        "id": 19,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 20,
        "label": "let mut acc : u64 = 0 ;"
      },
      {
        "id": 21,
        "label": "Loop Start"
      },
      {
        "id": 22,
        "label": "let rotated = actor . counters [i] . rotate_left ((i as u32) & 7) ;"
      },
      {
        "id": 23,
        "label": "let mixed = rotated ^ ((boost as u64) << (i as u32 & 15)) ;"
      },
      {
        "id": 24,
        "label": "let next = mixed . checked_add (weight as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 25,
        "label": "actor . counters [i] = if next > 1_000_000 { 1_000_000 } else { next } ;"
      },
      {
        "id": 26,
        "label": "acc = acc . saturating_add (actor . counters [i] & 0xFFFF) ;"
      },
      {
        "id": 27,
        "label": "Loop End"
      },
      {
        "id": 28,
        "label": "if statement"
      },
      {
        "id": 29,
        "label": "predicate"
      },
      {
        "id": 30,
        "label": "actor . role == Leader"
      },
      {
        "id": 31,
        "label": "True body"
      },
      {
        "id": 32,
        "label": "actor . reputation = actor . reputation . saturating_add ((acc % 97) as u32) ;"
      },
      {
        "id": 33,
        "label": "guild . total_posts = guild . total_posts . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "board . last_hash = board . last_hash . wrapping_mul (1_146_295) . wrapping_add (acc as u64) ;"
      },
      {
        "id": 35,
        "label": "board . queue_len = board . queue_len . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"Leader actor updated reputation and queued a post\") ;"
      },
      {
        "id": 37,
        "label": "False body"
      },
      {
        "id": 38,
        "label": "reviewer . reputation = reviewer . reputation . saturating_add (((acc >> 2) % 53) as u32) ;"
      },
      {
        "id": 39,
        "label": "guild . flags = guild . flags | 0b10 ;"
      },
      {
        "id": 40,
        "label": "board . queue_len = board . queue_len . saturating_add (2) ;"
      },
      {
        "id": 41,
        "label": "board . last_hash = board . last_hash ^ (acc as u64) . rotate_right (7) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"Non-leader path: reviewer reputation adjusted and board queued\") ;"
      },
      {
        "id": 43,
        "label": "merge"
      },
      {
        "id": 44,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 21,
        "to": 27,
        "label": "for"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "predicate"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "true"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 28,
        "to": 37,
        "label": "false"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 36,
        "to": 43,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      }
    ]
  }
]