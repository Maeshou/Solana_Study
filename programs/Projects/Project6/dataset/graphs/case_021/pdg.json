[
  {
    "name": "schedule_next_round",
    "inputs": [
      "ctx: Context < MutTournament >",
      "start_in: i64",
      "round_len: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . tournament ;"
      },
      {
        "id": 2,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "let mut s = now + start_in ;"
      },
      {
        "id": 4,
        "label": "let mut e = s + round_len ;"
      },
      {
        "id": 5,
        "label": "if start_in < 0 { s = now + 600 ; }"
      },
      {
        "id": 6,
        "label": "s = now + 600 ;"
      },
      {
        "id": 7,
        "label": "if round_len < 1800 { e = s + 1800 ; }"
      },
      {
        "id": 8,
        "label": "e = s + 1800 ;"
      },
      {
        "id": 9,
        "label": "if round_len > 10_800 { e = s + 10_800 ; }"
      },
      {
        "id": 10,
        "label": "e = s + 10_800 ;"
      },
      {
        "id": 11,
        "label": "t . round_start_time = s ;"
      },
      {
        "id": 12,
        "label": "t . round_end_time = e ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: s"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: now"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: e"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: now"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: now"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: e"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: e"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: t"
      },
      {
        "from": 4,
        "to": 12,
        "label": "data_dep: e"
      }
    ]
  },
  {
    "name": "log_match",
    "inputs": [
      "ctx: Context < LogMatch >",
      "a: LogArgs"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "emit ! (MatchCompleted { tournament_id : a . tournament_id , winner : a . winner , loser : a . loser , round : a . round , victory_type : a . victory_type , reward_earned : a . reward_earned , }) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]