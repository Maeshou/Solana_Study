[
  {
    "name": "init_root",
    "inputs": [
      "ctx: Context < InitRoot >",
      "seed: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . root ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "r . seed = seed ;"
      },
      {
        "id": 4,
        "label": "r . total_levels = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "create_cards",
    "inputs": [
      "ctx: Context < CreateCards >",
      "role: CardRole",
      "boost: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let r = & mut ctx . accounts . root ;"
      },
      {
        "id": 8,
        "label": "let p = & mut ctx . accounts . player ;"
      },
      {
        "id": 9,
        "label": "p . root = r . key () ;"
      },
      {
        "id": 10,
        "label": "p . role = role ;"
      },
      {
        "id": 11,
        "label": "p . level = 1 ;"
      },
      {
        "id": 12,
        "label": "p . energy = 100 ;"
      },
      {
        "id": 13,
        "label": "let b = & mut ctx . accounts . booster ;"
      },
      {
        "id": 14,
        "label": "b . root = r . key () ;"
      },
      {
        "id": 15,
        "label": "b . kind = boost . min (10) ;"
      },
      {
        "id": 16,
        "label": "b . charge = 0 ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: r"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: p"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: b"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "tick",
    "inputs": [
      "ctx: Context < Tick >",
      "deltas: Vec < i16 >"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let r = & mut ctx . accounts . root ;"
      },
      {
        "id": 20,
        "label": "let actor = & mut ctx . accounts . actor ;"
      },
      {
        "id": 21,
        "label": "let counter = & mut ctx . accounts . counter ;"
      },
      {
        "id": 22,
        "label": "let log = & mut ctx . accounts . progress_log ;"
      },
      {
        "id": 23,
        "label": "let mut energy_delta : i32 = 0 ;"
      },
      {
        "id": 24,
        "label": "let mut mix : u32 = 0 ;"
      },
      {
        "id": 25,
        "label": "for d in deltas { energy_delta += d as i32 ; mix = mix . rotate_left (2) ^ (d as u32 as u32) ; }"
      },
      {
        "id": 26,
        "label": "energy_delta += d as i32 ;"
      },
      {
        "id": 27,
        "label": "mix = mix . rotate_left (2) ^ (d as u32 as u32) ;"
      },
      {
        "id": 28,
        "label": "let adj = if energy_delta >= 0 { energy_delta as u32 } else { 0 } ;"
      },
      {
        "id": 29,
        "label": "energy_delta as u32"
      },
      {
        "id": 30,
        "label": "0"
      },
      {
        "id": 31,
        "label": "if actor . role == Player { actor . energy = actor . energy . saturating_add ((adj & 0xFF) as u16) ; counter . energy = counter . energy . saturating_add (((mix >> 3) & 0x7F) as u16) ; actor . level = actor . level . saturating_add (1) ; r . total_levels = r . total_levels . saturating_add (1) ; msg ! (\"Player path: adj={}, mix={}, e_a={}, e_c={}\" , adj , mix , actor . energy , counter . energy) ; } else { actor . energy = actor . energy . saturating_add (((mix >> 2) & 0x3F) as u16) ; counter . energy = counter . energy . saturating_add ((adj & 0x7F) as u16) ; counter . level = counter . level . saturating_add (1) ; r . total_levels = r . total_levels . saturating_add (1) ; msg ! (\"Booster path: adj={}, mix={}, e_a={}, e_c={}\" , adj , mix , actor . energy , counter . energy) ; }"
      },
      {
        "id": 32,
        "label": "actor . energy = actor . energy . saturating_add ((adj & 0xFF) as u16) ;"
      },
      {
        "id": 33,
        "label": "counter . energy = counter . energy . saturating_add (((mix >> 3) & 0x7F) as u16) ;"
      },
      {
        "id": 34,
        "label": "actor . level = actor . level . saturating_add (1) ;"
      },
      {
        "id": 35,
        "label": "r . total_levels = r . total_levels . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"Player path: adj={}, mix={}, e_a={}, e_c={}\" , adj , mix , actor . energy , counter . energy) ;"
      },
      {
        "id": 37,
        "label": "actor . energy = actor . energy . saturating_add (((mix >> 2) & 0x3F) as u16) ;"
      },
      {
        "id": 38,
        "label": "counter . energy = counter . energy . saturating_add ((adj & 0x7F) as u16) ;"
      },
      {
        "id": 39,
        "label": "counter . level = counter . level . saturating_add (1) ;"
      },
      {
        "id": 40,
        "label": "r . total_levels = r . total_levels . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "msg ! (\"Booster path: adj={}, mix={}, e_a={}, e_c={}\" , adj , mix , actor . energy , counter . energy) ;"
      },
      {
        "id": 42,
        "label": "let mut x = (r . total_levels as u128) . max (1) ;"
      },
      {
        "id": 43,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 44,
        "label": "while i < 3 { x = (x + (r . total_levels as u128 / x)) . max (1) / 2 ; i += 1 ; }"
      },
      {
        "id": 45,
        "label": "x = (x + (r . total_levels as u128 / x)) . max (1) / 2 ;"
      },
      {
        "id": 46,
        "label": "i += 1 ;"
      },
      {
        "id": 47,
        "label": "log . root = r . key () ;"
      },
      {
        "id": 48,
        "label": "log . metric = (x as u32) . min (1_000_000) ;"
      },
      {
        "id": 49,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: r"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: actor"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: counter"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: log"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: adj"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: adj"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: actor"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: adj"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: counter"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: actor"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: adj"
      },
      {
        "from": 21,
        "to": 33,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 33,
        "label": "data_dep: counter"
      },
      {
        "from": 20,
        "to": 34,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 34,
        "label": "data_dep: actor"
      },
      {
        "from": 19,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: actor"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: actor"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: counter"
      },
      {
        "from": 28,
        "to": 38,
        "label": "data_dep: adj"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: counter"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: counter"
      },
      {
        "from": 19,
        "to": 40,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 40,
        "label": "data_dep: r"
      },
      {
        "from": 42,
        "to": 42,
        "label": "def: x"
      },
      {
        "from": 19,
        "to": 42,
        "label": "data_dep: r"
      },
      {
        "from": 43,
        "to": 43,
        "label": "def: i"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: i"
      },
      {
        "from": 42,
        "to": 44,
        "label": "data_dep: x"
      },
      {
        "from": 42,
        "to": 44,
        "label": "data_dep: x"
      },
      {
        "from": 19,
        "to": 44,
        "label": "data_dep: r"
      },
      {
        "from": 42,
        "to": 44,
        "label": "data_dep: x"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: i"
      },
      {
        "from": 42,
        "to": 45,
        "label": "data_dep: x"
      },
      {
        "from": 42,
        "to": 45,
        "label": "data_dep: x"
      },
      {
        "from": 19,
        "to": 45,
        "label": "data_dep: r"
      },
      {
        "from": 42,
        "to": 45,
        "label": "data_dep: x"
      },
      {
        "from": 43,
        "to": 46,
        "label": "data_dep: i"
      },
      {
        "from": 22,
        "to": 47,
        "label": "data_dep: log"
      },
      {
        "from": 19,
        "to": 47,
        "label": "data_dep: r"
      },
      {
        "from": 22,
        "to": 48,
        "label": "data_dep: log"
      },
      {
        "from": 42,
        "to": 48,
        "label": "data_dep: x"
      }
    ]
  }
]