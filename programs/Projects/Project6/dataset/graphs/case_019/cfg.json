[
  {
    "name": "start_dungeon_run",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let run = & mut ctx . accounts . dungeon_run ;"
      },
      {
        "id": 2,
        "label": "run . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "run . loot_found = 0 ;"
      },
      {
        "id": 4,
        "label": "run . run_id = Clock :: get () ? . unix_timestamp as u32 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_loot_drop",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let loot_drop = & mut ctx . accounts . loot_drop ;"
      },
      {
        "id": 8,
        "label": "let dungeon_run = & mut ctx . accounts . dungeon_run ;"
      },
      {
        "id": 9,
        "label": "loot_drop . run_id = dungeon_run . run_id ;"
      },
      {
        "id": 10,
        "label": "loot_drop . item_id = item_id ;"
      },
      {
        "id": 11,
        "label": "loot_drop . drop_index = drop_index ;"
      },
      {
        "id": 12,
        "label": "loot_drop . rarity = item_rarity ;"
      },
      {
        "id": 13,
        "label": "dungeon_run . loot_found = dungeon_run . loot_found . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 14,
        "label": "let mut total_rarity = 0u64 ;"
      },
      {
        "id": 15,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 16,
        "label": "Loop Start"
      },
      {
        "id": 17,
        "label": "total_rarity += item_rarity as u64 ;"
      },
      {
        "id": 18,
        "label": "i += 1 ;"
      },
      {
        "id": 19,
        "label": "Loop End"
      },
      {
        "id": 20,
        "label": "if statement"
      },
      {
        "id": 21,
        "label": "predicate"
      },
      {
        "id": 22,
        "label": "item_rarity > 80"
      },
      {
        "id": 23,
        "label": "True body"
      },
      {
        "id": 24,
        "label": "msg ! (\"A rare item was found!\") ;"
      },
      {
        "id": 25,
        "label": "False body"
      },
      {
        "id": 26,
        "label": "msg ! (\"A common item was found.\") ;"
      },
      {
        "id": 27,
        "label": "merge"
      },
      {
        "id": 28,
        "label": "let loot_value = (item_rarity as u64 * 100) . checked_div (255) . unwrap_or (0) ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"Loot value scaled: {}\" , loot_value) ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 16,
        "to": 19,
        "label": "while"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "predicate"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 20,
        "to": 23,
        "label": "true"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 20,
        "to": 25,
        "label": "false"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 24,
        "to": 27,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      }
    ]
  }
]