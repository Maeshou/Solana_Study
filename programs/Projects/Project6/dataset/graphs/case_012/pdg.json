[
  {
    "name": "initialize_equipment",
    "inputs": [
      "ctx: Context < InitializeEquipment >",
      "item_id: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let equipment = & mut ctx . accounts . equipment ;"
      },
      {
        "id": 2,
        "label": "equipment . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "equipment . item_id = item_id ;"
      },
      {
        "id": 4,
        "label": "equipment . level = 0 ;"
      },
      {
        "id": 5,
        "label": "equipment . enhancement_level = 0 ;"
      },
      {
        "id": 6,
        "label": "equipment . is_active = true ;"
      },
      {
        "id": 7,
        "label": "equipment . stat_boosts = [0 ; 4] ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: equipment"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: equipment"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: equipment"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: equipment"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: equipment"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: equipment"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: equipment"
      }
    ]
  },
  {
    "name": "enhance_equipment",
    "inputs": [
      "ctx: Context < EnhanceEquipment >"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let equipment = & mut ctx . accounts . equipment ;"
      },
      {
        "id": 11,
        "label": "let material = & mut ctx . accounts . material_token_account ;"
      },
      {
        "id": 12,
        "label": "if material . amount < 1 { return err ! (ErrorCode :: NotEnoughMaterials) ; }"
      },
      {
        "id": 13,
        "label": "return err ! (ErrorCode :: NotEnoughMaterials) ;"
      },
      {
        "id": 14,
        "label": "let cpi_program = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 15,
        "label": "let cpi_accounts = token :: Burn { mint : ctx . accounts . material_mint . to_account_info () , from : ctx . accounts . material_token_account . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ;"
      },
      {
        "id": 16,
        "label": "let cpi_ctx = CpiContext :: new (cpi_program , cpi_accounts) ;"
      },
      {
        "id": 17,
        "label": "token :: burn (cpi_ctx , 1) ? ;"
      },
      {
        "id": 18,
        "label": "let mut new_level = equipment . enhancement_level . checked_add (1) . unwrap () ;"
      },
      {
        "id": 19,
        "label": "equipment . enhancement_level = new_level ;"
      },
      {
        "id": 20,
        "label": "let stat_boost = new_level . checked_mul (2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 21,
        "label": "equipment . stat_boosts [0] = stat_boost ;"
      },
      {
        "id": 22,
        "label": "equipment . stat_boosts [1] = stat_boost . wrapping_add (1) ;"
      },
      {
        "id": 23,
        "label": "for i in 0 .. 4 { equipment . stat_boosts [i] = equipment . stat_boosts [i] . checked_add (new_level . into ()) . unwrap_or (u32 :: MAX) ; }"
      },
      {
        "id": 24,
        "label": "equipment . stat_boosts [i] = equipment . stat_boosts [i] . checked_add (new_level . into ()) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 25,
        "label": "let base_stat = 100u64 ;"
      },
      {
        "id": 26,
        "label": "let mut x = base_stat ;"
      },
      {
        "id": 27,
        "label": "for _ in 0 .. 5 { x = (x + base_stat . checked_div (x) . unwrap_or (1)) / 2 ; }"
      },
      {
        "id": 28,
        "label": "x = (x + base_stat . checked_div (x) . unwrap_or (1)) / 2 ;"
      },
      {
        "id": 29,
        "label": "if equipment . enhancement_level % 5 == 0 { msg ! (\"Major enhancement achieved!\") ; } else { msg ! (\"Minor enhancement.\") ; }"
      },
      {
        "id": 30,
        "label": "msg ! (\"Major enhancement achieved!\") ;"
      },
      {
        "id": 31,
        "label": "msg ! (\"Minor enhancement.\") ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: equipment"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: material"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: material"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: cpi_program"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: cpi_accounts"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: cpi_ctx"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: cpi_program"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: new_level"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: equipment"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: equipment"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: new_level"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: stat_boost"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: new_level"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: equipment"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: stat_boost"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: equipment"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: stat_boost"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: equipment"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: equipment"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: new_level"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: equipment"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: equipment"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: new_level"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: base_stat"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: x"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: base_stat"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: x"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: x"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: base_stat"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: x"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: base_stat"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 10,
        "to": 29,
        "label": "data_dep: equipment"
      }
    ]
  }
]