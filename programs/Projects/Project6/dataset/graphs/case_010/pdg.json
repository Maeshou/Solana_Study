[
  {
    "name": "init_catalog",
    "inputs": [
      "ctx: Context < InitCatalog >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . catalog ;"
      },
      {
        "id": 2,
        "label": "c . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "c . index = 0 ;"
      },
      {
        "id": 4,
        "label": "c . hash = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "issue_card",
    "inputs": [
      "ctx: Context < IssueCard >",
      "kind: Kind",
      "init_balance: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let card = & mut ctx . accounts . card ;"
      },
      {
        "id": 8,
        "label": "card . parent = ctx . accounts . catalog . key () ;"
      },
      {
        "id": 9,
        "label": "card . kind = kind ;"
      },
      {
        "id": 10,
        "label": "card . balance = init_balance ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: card"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: card"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: card"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: card"
      }
    ]
  },
  {
    "name": "place_order",
    "inputs": [
      "ctx: Context < PlaceOrder >",
      "price: u32",
      "qty: u32"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let o = & mut ctx . accounts . order ;"
      },
      {
        "id": 14,
        "label": "o . parent = ctx . accounts . catalog . key () ;"
      },
      {
        "id": 15,
        "label": "o . price = price ;"
      },
      {
        "id": 16,
        "label": "o . qty = qty ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: o"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: o"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: o"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: o"
      }
    ]
  },
  {
    "name": "settle_trade",
    "inputs": [
      "ctx: Context < SettleTrade >"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let cat = & mut ctx . accounts . catalog ;"
      },
      {
        "id": 20,
        "label": "let buyer = & mut ctx . accounts . card_buyer ;"
      },
      {
        "id": 21,
        "label": "let seller = & mut ctx . accounts . card_seller ;"
      },
      {
        "id": 22,
        "label": "let order = & mut ctx . accounts . order ;"
      },
      {
        "id": 23,
        "label": "let rec = & mut ctx . accounts . record ;"
      },
      {
        "id": 24,
        "label": "let cost = (order . price as u64) . saturating_mul (order . qty as u64) ;"
      },
      {
        "id": 25,
        "label": "if buyer . balance >= cost { buyer . balance = buyer . balance . saturating_sub (cost) ; seller . balance = seller . balance . saturating_add (cost) ; rec . ok = rec . ok . saturating_add (1) ; } else { rec . ng = rec . ng . saturating_add (1) ; }"
      },
      {
        "id": 26,
        "label": "buyer . balance = buyer . balance . saturating_sub (cost) ;"
      },
      {
        "id": 27,
        "label": "seller . balance = seller . balance . saturating_add (cost) ;"
      },
      {
        "id": 28,
        "label": "rec . ok = rec . ok . saturating_add (1) ;"
      },
      {
        "id": 29,
        "label": "rec . ng = rec . ng . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "cat . index = cat . index . wrapping_add (order . qty as u64) ;"
      },
      {
        "id": 31,
        "label": "cat . hash ^= ((order . price as u64) << 7) ^ (order . qty as u64) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: cat"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: buyer"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: seller"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: order"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: rec"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: cost"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: order"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: order"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: buyer"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: cost"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: buyer"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: buyer"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: cost"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: seller"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: seller"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: cost"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rec"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: buyer"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: buyer"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: cost"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: seller"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: seller"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: cost"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: rec"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: rec"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: cat"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: cat"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: order"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: cat"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: order"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: order"
      }
    ]
  }
]