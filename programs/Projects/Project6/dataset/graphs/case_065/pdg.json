[
  {
    "name": "init_hub",
    "inputs": [
      "ctx: Context < InitHub >",
      "code: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let h = & mut ctx . accounts . hub ;"
      },
      {
        "id": 2,
        "label": "h . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "h . code = code ;"
      },
      {
        "id": 4,
        "label": "h . completed = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: h"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: h"
      }
    ]
  },
  {
    "name": "register",
    "inputs": [
      "ctx: Context < Register >",
      "role: Role",
      "tag: u16"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let h = & mut ctx . accounts . hub ;"
      },
      {
        "id": 8,
        "label": "let r = & mut ctx . accounts . runner ;"
      },
      {
        "id": 9,
        "label": "r . hub = h . key () ;"
      },
      {
        "id": 10,
        "label": "r . role = role ;"
      },
      {
        "id": 11,
        "label": "r . tag = tag ;"
      },
      {
        "id": 12,
        "label": "r . progress = 0 ;"
      },
      {
        "id": 13,
        "label": "let v = & mut ctx . accounts . verifier ;"
      },
      {
        "id": 14,
        "label": "v . hub = h . key () ;"
      },
      {
        "id": 15,
        "label": "v . role = Verifier ;"
      },
      {
        "id": 16,
        "label": "v . tag = tag ^ 0x55AA ;"
      },
      {
        "id": 17,
        "label": "v . approvals = 0 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: h"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: r"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: h"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: r"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: v"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: v"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: h"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: v"
      }
    ]
  },
  {
    "name": "verify",
    "inputs": [
      "ctx: Context < Verify >",
      "steps: Vec < u16 >"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let h = & mut ctx . accounts . hub ;"
      },
      {
        "id": 21,
        "label": "let r = & mut ctx . accounts . runner ;"
      },
      {
        "id": 22,
        "label": "let v = & mut ctx . accounts . verifier ;"
      },
      {
        "id": 23,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 24,
        "label": "let mut sum : u32 = 0 ;"
      },
      {
        "id": 25,
        "label": "let mut mix : u16 = 0 ;"
      },
      {
        "id": 26,
        "label": "for s in steps { sum = sum . saturating_add ((s & 0x3FF) as u32) ; mix ^= (s . rotate_left (1)) ^ 0x1234 ; }"
      },
      {
        "id": 27,
        "label": "sum = sum . saturating_add ((s & 0x3FF) as u32) ;"
      },
      {
        "id": 28,
        "label": "mix ^= (s . rotate_left (1)) ^ 0x1234 ;"
      },
      {
        "id": 29,
        "label": "let inc = (sum + (mix & 0xFF) as u32) as u32 ;"
      },
      {
        "id": 30,
        "label": "if r . role == Runner { r . progress = r . progress . saturating_add (inc / 2) ; v . approvals = v . approvals . saturating_add ((mix & 0x3F) as u16) ; h . completed = h . completed . saturating_add ((inc / 8) as u32) ; msg ! (\"Runner path: inc={}, prog={}, appr={}, done={}\" , inc , r . progress , v . approvals , h . completed) ; } else { r . progress = r . progress . saturating_add (inc / 3) ; v . approvals = v . approvals . saturating_add (((mix >> 2) & 0x3F) as u16) ; h . completed = h . completed . saturating_add ((inc / 10) as u32) ; msg ! (\"Verifier-as-actor path: inc={}, prog={}, appr={}, done={}\" , inc , r . progress , v . approvals , h . completed) ; }"
      },
      {
        "id": 31,
        "label": "r . progress = r . progress . saturating_add (inc / 2) ;"
      },
      {
        "id": 32,
        "label": "v . approvals = v . approvals . saturating_add ((mix & 0x3F) as u16) ;"
      },
      {
        "id": 33,
        "label": "h . completed = h . completed . saturating_add ((inc / 8) as u32) ;"
      },
      {
        "id": 34,
        "label": "msg ! (\"Runner path: inc={}, prog={}, appr={}, done={}\" , inc , r . progress , v . approvals , h . completed) ;"
      },
      {
        "id": 35,
        "label": "r . progress = r . progress . saturating_add (inc / 3) ;"
      },
      {
        "id": 36,
        "label": "v . approvals = v . approvals . saturating_add (((mix >> 2) & 0x3F) as u16) ;"
      },
      {
        "id": 37,
        "label": "h . completed = h . completed . saturating_add ((inc / 10) as u32) ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Verifier-as-actor path: inc={}, prog={}, appr={}, done={}\" , inc , r . progress , v . approvals , h . completed) ;"
      },
      {
        "id": 39,
        "label": "let mut x = (h . completed as u128) . max (1) ;"
      },
      {
        "id": 40,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 41,
        "label": "while i < 3 { x = (x + (h . completed as u128 / x)) . max (1) / 2 ; i += 1 ; }"
      },
      {
        "id": 42,
        "label": "x = (x + (h . completed as u128 / x)) . max (1) / 2 ;"
      },
      {
        "id": 43,
        "label": "i += 1 ;"
      },
      {
        "id": 44,
        "label": "b . hub = h . key () ;"
      },
      {
        "id": 45,
        "label": "b . index = (x as u32) . min (2_000_000) ;"
      },
      {
        "id": 46,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: h"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: r"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: v"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: b"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: inc"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: inc"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: v"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: inc"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: inc"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: v"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: inc"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: inc"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: v"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: h"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: h"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: inc"
      },
      {
        "from": 21,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 35,
        "label": "data_dep: inc"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: v"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: h"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: h"
      },
      {
        "from": 29,
        "to": 37,
        "label": "data_dep: inc"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: x"
      },
      {
        "from": 20,
        "to": 39,
        "label": "data_dep: h"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: i"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 39,
        "to": 41,
        "label": "data_dep: x"
      },
      {
        "from": 39,
        "to": 41,
        "label": "data_dep: x"
      },
      {
        "from": 20,
        "to": 41,
        "label": "data_dep: h"
      },
      {
        "from": 39,
        "to": 41,
        "label": "data_dep: x"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: x"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: x"
      },
      {
        "from": 20,
        "to": 42,
        "label": "data_dep: h"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: x"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: i"
      },
      {
        "from": 23,
        "to": 44,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 44,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 39,
        "to": 45,
        "label": "data_dep: x"
      }
    ]
  }
]