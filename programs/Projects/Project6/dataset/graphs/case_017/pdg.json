[
  {
    "name": "initialize_scoreboard",
    "inputs": [
      "ctx: Context < InitializeScoreboard >",
      "title: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let scoreboard = & mut ctx . accounts . scoreboard ;"
      },
      {
        "id": 2,
        "label": "scoreboard . title = title ;"
      },
      {
        "id": 3,
        "label": "scoreboard . entry_count = 0 ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: scoreboard"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: scoreboard"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: scoreboard"
      }
    ]
  },
  {
    "name": "update_player_score",
    "inputs": [
      "ctx: Context < UpdatePlayerScore >",
      "slot_id_player: u8",
      "new_score: u64",
      "slot_id_opponent: u8"
    ],
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let player_score = & mut ctx . accounts . player_score ;"
      },
      {
        "id": 7,
        "label": "let opponent_score = & mut ctx . accounts . opponent_score ;"
      },
      {
        "id": 8,
        "label": "let scoreboard = & mut ctx . accounts . scoreboard ;"
      },
      {
        "id": 9,
        "label": "player_score . score = new_score ;"
      },
      {
        "id": 10,
        "label": "opponent_score . score = opponent_score . score . checked_add (new_score / 10) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 11,
        "label": "player_score . matches_played = player_score . matches_played . checked_add (1) . unwrap () ;"
      },
      {
        "id": 12,
        "label": "opponent_score . matches_played = opponent_score . matches_played . checked_add (1) . unwrap () ;"
      },
      {
        "id": 13,
        "label": "let mut average_score = (player_score . score / (player_score . matches_played as u64)) . min (1000) ;"
      },
      {
        "id": 14,
        "label": "if average_score > 500 { msg ! (\"Player is performing well!\") ; } else { msg ! (\"Player needs more practice.\") ; }"
      },
      {
        "id": 15,
        "label": "msg ! (\"Player is performing well!\") ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Player needs more practice.\") ;"
      },
      {
        "id": 17,
        "label": "player_score . status_flags |= 0b00000001 ;"
      },
      {
        "id": 18,
        "label": "if new_score > 1000 { player_score . status_flags |= 0b00000010 ; } else { player_score . status_flags &= 0b11111101 ; }"
      },
      {
        "id": 19,
        "label": "player_score . status_flags |= 0b00000010 ;"
      },
      {
        "id": 20,
        "label": "player_score . status_flags &= 0b11111101 ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 6,
        "label": "def: player_score"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: opponent_score"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: scoreboard"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: player_score"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: opponent_score"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: opponent_score"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: player_score"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: opponent_score"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: opponent_score"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: average_score"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: player_score"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: average_score"
      },
      {
        "from": 6,
        "to": 17,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 18,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 18,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 19,
        "label": "data_dep: player_score"
      },
      {
        "from": 6,
        "to": 20,
        "label": "data_dep: player_score"
      }
    ]
  }
]