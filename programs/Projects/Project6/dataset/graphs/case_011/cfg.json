[
  {
    "name": "initialize_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let guild_account = & mut ctx . accounts . guild_account ;"
      },
      {
        "id": 2,
        "label": "guild_account . name = guild_name ;"
      },
      {
        "id": 3,
        "label": "guild_account . member_count = 0 ;"
      },
      {
        "id": 4,
        "label": "guild_account . is_active = true ;"
      },
      {
        "id": 5,
        "label": "guild_account . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "register_member_and_log_raid_damage",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let member = & mut ctx . accounts . guild_member ;"
      },
      {
        "id": 9,
        "label": "let raid_log = & mut ctx . accounts . raid_log ;"
      },
      {
        "id": 10,
        "label": "let guild = & mut ctx . accounts . guild_account ;"
      },
      {
        "id": 11,
        "label": "if statement"
      },
      {
        "id": 12,
        "label": "predicate"
      },
      {
        "id": 13,
        "label": "member . tag == 0"
      },
      {
        "id": 14,
        "label": "True body"
      },
      {
        "id": 15,
        "label": "member . tag = member_tag ;"
      },
      {
        "id": 16,
        "label": "member . guild = guild . key () ;"
      },
      {
        "id": 17,
        "label": "member . damage_dealt_total = 0 ;"
      },
      {
        "id": 18,
        "label": "member . raid_count = 0 ;"
      },
      {
        "id": 19,
        "label": "guild . member_count = guild . member_count . checked_add (1) . unwrap () ;"
      },
      {
        "id": 20,
        "label": "False body"
      },
      {
        "id": 21,
        "label": "No-op"
      },
      {
        "id": 22,
        "label": "merge"
      },
      {
        "id": 23,
        "label": "let current_damage = raid_log . damage_entries [raid_id as usize] . checked_add (damage_dealt) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 24,
        "label": "raid_log . damage_entries [raid_id as usize] = current_damage ;"
      },
      {
        "id": 25,
        "label": "let total_damage = member . damage_dealt_total . checked_add (damage_dealt) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 26,
        "label": "member . damage_dealt_total = total_damage ;"
      },
      {
        "id": 27,
        "label": "member . raid_count = member . raid_count . wrapping_add (1) ;"
      },
      {
        "id": 28,
        "label": "if statement"
      },
      {
        "id": 29,
        "label": "predicate"
      },
      {
        "id": 30,
        "label": "total_damage > 1_000_000"
      },
      {
        "id": 31,
        "label": "True body"
      },
      {
        "id": 32,
        "label": "msg ! (\"Member has reached a high damage milestone!\") ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "msg ! (\"Member continues to fight.\") ;"
      },
      {
        "id": 35,
        "label": "merge"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "predicate"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "true"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 11,
        "to": 20,
        "label": "false"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "predicate"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "true"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 28,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 32,
        "to": 35,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      }
    ]
  }
]