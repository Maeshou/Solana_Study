[
  {
    "name": "init_assembly",
    "inputs": [
      "ctx: Context < InitAssembly >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts . assembly ;"
      },
      {
        "id": 2,
        "label": "a . engineer = ctx . accounts . engineer . key () ;"
      },
      {
        "id": 3,
        "label": "a . rank = 1 ;"
      },
      {
        "id": 4,
        "label": "a . quality = 12 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: a"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: a"
      }
    ]
  },
  {
    "name": "assemble",
    "inputs": [
      "ctx: Context < Assemble >",
      "parts: u32",
      "scheme_index: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let a = & mut ctx . accounts . assembly ;"
      },
      {
        "id": 8,
        "label": "if a . rank < 10 { let mut i = 0u8 ; while i < 3 { a . rank = a . rank . saturating_add (((i as u32) << 1) . saturating_add (2)) ; i = i . saturating_add (1) ; } }"
      },
      {
        "id": 9,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while i < 3 { a . rank = a . rank . saturating_add (((i as u32) << 1) . saturating_add (2)) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "a . rank = a . rank . saturating_add (((i as u32) << 1) . saturating_add (2)) ;"
      },
      {
        "id": 12,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "let coef : [u32 ; 3] = [5 , 7 , 11] ;"
      },
      {
        "id": 14,
        "label": "let idx = if scheme_index > 2 { 2 } else { scheme_index } as usize ;"
      },
      {
        "id": 15,
        "label": "2"
      },
      {
        "id": 16,
        "label": "scheme_index"
      },
      {
        "id": 17,
        "label": "let mut score = parts . saturating_mul (coef [idx]) ;"
      },
      {
        "id": 18,
        "label": "let mut r = 0u8 ;"
      },
      {
        "id": 19,
        "label": "while r < 4 { score = score . rotate_left (1) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "score = score . rotate_left (1) ;"
      },
      {
        "id": 21,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 22,
        "label": "a . quality = a . quality . saturating_add (score % 23) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: idx"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: score"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: idx"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: r"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: score"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: score"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: score"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: score"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: score"
      }
    ]
  }
]