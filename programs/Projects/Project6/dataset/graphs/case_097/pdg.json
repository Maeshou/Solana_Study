[
  {
    "name": "init_treasury",
    "inputs": [
      "ctx: Context < InitTreasury >",
      "name: String",
      "config_nonce: u32",
      "lanes_mask: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 2,
        "label": "t . owner = ctx . accounts . chair . key () ;"
      },
      {
        "id": 3,
        "label": "let mut nm = name ;"
      },
      {
        "id": 4,
        "label": "if nm . len () > 64 { nm . truncate (64) ; }"
      },
      {
        "id": 5,
        "label": "nm . truncate (64) ;"
      },
      {
        "id": 6,
        "label": "t . name = nm ;"
      },
      {
        "id": 7,
        "label": "let mut fp : u32 = 0x811C9DC5 ^ config_nonce ;"
      },
      {
        "id": 8,
        "label": "for (i , b) in t . name . as_bytes () . iter () . enumerate () { fp = fp . rotate_left ((i as u32) & 7) ^ (* b as u32) ; fp = fp . wrapping_mul (0x01000193) ; }"
      },
      {
        "id": 9,
        "label": "fp = fp . rotate_left ((i as u32) & 7) ^ (* b as u32) ;"
      },
      {
        "id": 10,
        "label": "fp = fp . wrapping_mul (0x01000193) ;"
      },
      {
        "id": 11,
        "label": "t . fingerprint = fp ;"
      },
      {
        "id": 12,
        "label": "t . epoch = ((config_nonce % 97) + 1) as u16 ;"
      },
      {
        "id": 13,
        "label": "t . lanes_mask = lanes_mask ;"
      },
      {
        "id": 14,
        "label": "let mut state = (config_nonce as u64) ^ 0x9E37_79B9_7F4A_7C15 ;"
      },
      {
        "id": 15,
        "label": "for i in 0 .. t . rolling . len () { state = state . rotate_left (9) ^ (fp as u64) . rotate_right ((i as u32) & 31) ; t . rolling [i] = (state as u32) ^ (fp . rotate_left (i as u32)) ; }"
      },
      {
        "id": 16,
        "label": "state = state . rotate_left (9) ^ (fp as u64) . rotate_right ((i as u32) & 31) ;"
      },
      {
        "id": 17,
        "label": "t . rolling [i] = (state as u32) ^ (fp . rotate_left (i as u32)) ;"
      },
      {
        "id": 18,
        "label": "t . net = 0 ;"
      },
      {
        "id": 19,
        "label": "t . audit_flags = (t . name . len () as u32) & 0x3FF ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: nm"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: nm"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: nm"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: nm"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: t"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: nm"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: state"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: state"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: state"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: state"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "init_voucher",
    "inputs": [
      "ctx: Context < InitVoucher >",
      "kind: VoucherKind",
      "lane: u8",
      "hint: u32",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let v = & mut ctx . accounts . voucher ;"
      },
      {
        "id": 23,
        "label": "v . treasury = ctx . accounts . treasury . key () ;"
      },
      {
        "id": 24,
        "label": "v . kind = kind ;"
      },
      {
        "id": 25,
        "label": "require ! (lane < 32 , ErrCode :: LaneOutOfRange) ;"
      },
      {
        "id": 26,
        "label": "let allowed = (ctx . accounts . treasury . lanes_mask >> lane) & 1 ;"
      },
      {
        "id": 27,
        "label": "require ! (allowed == 1 , ErrCode :: LaneDisabled) ;"
      },
      {
        "id": 28,
        "label": "v . lane = lane ;"
      },
      {
        "id": 29,
        "label": "let base = seed . rotate_left ((lane as u32) & 31) . wrapping_add (hint as u64) ^ 0xC3A5_C85C_97CB_3127u64 ;"
      },
      {
        "id": 30,
        "label": "let weight = match kind { Expense => 3u64 , Income => 5u64 , Transfer => 2u64 , } ;"
      },
      {
        "id": 31,
        "label": "v . amount = ((base & 0xFFFF_FFFF) * weight) . saturating_rem (1_000_000) ;"
      },
      {
        "id": 32,
        "label": "let mut s = base ^ (v . amount as u64) ;"
      },
      {
        "id": 33,
        "label": "for i in 0 .. v . window . len () { s = s . rotate_left (7) ^ ((hint as u64) << (i as u32 & 15)) ; v . window [i] = ((s ^ (i as u64 * 0x9E37)) as u32) & 0x3FFF_FFFF ; }"
      },
      {
        "id": 34,
        "label": "s = s . rotate_left (7) ^ ((hint as u64) << (i as u32 & 15)) ;"
      },
      {
        "id": 35,
        "label": "v . window [i] = ((s ^ (i as u64 * 0x9E37)) as u32) & 0x3FFF_FFFF ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: v"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: v"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: allowed"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: v"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: base"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: weight"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: v"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: base"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: weight"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: s"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: base"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: v"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: v"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: v"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "settle",
    "inputs": [
      "ctx: Context < Settle >",
      "batch: [i64 ; 5]"
    ],
    "nodes": [
      {
        "id": 37,
        "label": "Entry"
      },
      {
        "id": 38,
        "label": "let tr = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 39,
        "label": "let debit = & mut ctx . accounts . debit ;"
      },
      {
        "id": 40,
        "label": "let credit = & mut ctx . accounts . credit ;"
      },
      {
        "id": 41,
        "label": "let q = & mut ctx . accounts . queue ;"
      },
      {
        "id": 42,
        "label": "let mut acc : i128 = 0 ;"
      },
      {
        "id": 43,
        "label": "for i in 0 .. 5 { let scaled = (batch [i] as i128) * ((i as i128) + 1) ; acc = (acc + scaled) . clamp (- 1_000_000 , 1_000_000) ; debit . window [i] = debit . window [i] . saturating_add ((scaled . unsigned_abs () as u32) & 0x3FFF) ; }"
      },
      {
        "id": 44,
        "label": "let scaled = (batch [i] as i128) * ((i as i128) + 1) ;"
      },
      {
        "id": 45,
        "label": "acc = (acc + scaled) . clamp (- 1_000_000 , 1_000_000) ;"
      },
      {
        "id": 46,
        "label": "debit . window [i] = debit . window [i] . saturating_add ((scaled . unsigned_abs () as u32) & 0x3FFF) ;"
      },
      {
        "id": 47,
        "label": "if debit . kind == VoucherKind :: Expense { let delta = (acc . unsigned_abs () as u64) & 0x00FF_FFFF ; tr . net = tr . net . saturating_sub (delta) ; q . cursor = q . cursor . saturating_add (1) ; q . mix = q . mix ^ (delta . rotate_left (11)) ; q . last = q . last . wrapping_add (delta as u128) ; msg ! (\"Expense path applied\") ; } else { let delta = ((acc . abs () as u64) & 0x01FF_FFFF) . saturating_add (credit . amount & 0xFFFF) ; tr . net = tr . net . saturating_add (delta) ; q . cursor = q . cursor . saturating_add (2) ; q . mix = q . mix . rotate_right (5) ^ delta ; q . last = q . last ^ ((delta as u128) << 16) ; msg ! (\"Non-expense path applied\") ; }"
      },
      {
        "id": 48,
        "label": "let delta = (acc . unsigned_abs () as u64) & 0x00FF_FFFF ;"
      },
      {
        "id": 49,
        "label": "tr . net = tr . net . saturating_sub (delta) ;"
      },
      {
        "id": 50,
        "label": "q . cursor = q . cursor . saturating_add (1) ;"
      },
      {
        "id": 51,
        "label": "q . mix = q . mix ^ (delta . rotate_left (11)) ;"
      },
      {
        "id": 52,
        "label": "q . last = q . last . wrapping_add (delta as u128) ;"
      },
      {
        "id": 53,
        "label": "msg ! (\"Expense path applied\") ;"
      },
      {
        "id": 54,
        "label": "let delta = ((acc . abs () as u64) & 0x01FF_FFFF) . saturating_add (credit . amount & 0xFFFF) ;"
      },
      {
        "id": 55,
        "label": "tr . net = tr . net . saturating_add (delta) ;"
      },
      {
        "id": 56,
        "label": "q . cursor = q . cursor . saturating_add (2) ;"
      },
      {
        "id": 57,
        "label": "q . mix = q . mix . rotate_right (5) ^ delta ;"
      },
      {
        "id": 58,
        "label": "q . last = q . last ^ ((delta as u128) << 16) ;"
      },
      {
        "id": 59,
        "label": "msg ! (\"Non-expense path applied\") ;"
      },
      {
        "id": 60,
        "label": "for i in 0 .. tr . rolling . len () { tr . rolling [i] = tr . rolling [i] . rotate_left ((i as u32) & 7) ^ (q . mix & 0xFFFF) ; }"
      },
      {
        "id": 61,
        "label": "tr . rolling [i] = tr . rolling [i] . rotate_left ((i as u32) & 7) ^ (q . mix & 0xFFFF) ;"
      },
      {
        "id": 62,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 38,
        "to": 38,
        "label": "def: tr"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: debit"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: credit"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: q"
      },
      {
        "from": 39,
        "to": 43,
        "label": "data_dep: debit"
      },
      {
        "from": 39,
        "to": 43,
        "label": "data_dep: debit"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: scaled"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: scaled"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: debit"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: debit"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: scaled"
      },
      {
        "from": 39,
        "to": 47,
        "label": "data_dep: debit"
      },
      {
        "from": 38,
        "to": 47,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 47,
        "label": "data_dep: tr"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 40,
        "to": 47,
        "label": "data_dep: credit"
      },
      {
        "from": 38,
        "to": 47,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 47,
        "label": "data_dep: tr"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: q"
      },
      {
        "from": 48,
        "to": 48,
        "label": "def: delta"
      },
      {
        "from": 38,
        "to": 49,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 49,
        "label": "data_dep: tr"
      },
      {
        "from": 48,
        "to": 49,
        "label": "data_dep: delta"
      },
      {
        "from": 41,
        "to": 50,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 50,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 51,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 51,
        "label": "data_dep: q"
      },
      {
        "from": 48,
        "to": 51,
        "label": "data_dep: delta"
      },
      {
        "from": 41,
        "to": 52,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 52,
        "label": "data_dep: q"
      },
      {
        "from": 48,
        "to": 52,
        "label": "data_dep: delta"
      },
      {
        "from": 54,
        "to": 54,
        "label": "def: delta"
      },
      {
        "from": 40,
        "to": 54,
        "label": "data_dep: credit"
      },
      {
        "from": 38,
        "to": 55,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 55,
        "label": "data_dep: tr"
      },
      {
        "from": 54,
        "to": 55,
        "label": "data_dep: delta"
      },
      {
        "from": 41,
        "to": 56,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 56,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 57,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 57,
        "label": "data_dep: q"
      },
      {
        "from": 54,
        "to": 57,
        "label": "data_dep: delta"
      },
      {
        "from": 41,
        "to": 58,
        "label": "data_dep: q"
      },
      {
        "from": 41,
        "to": 58,
        "label": "data_dep: q"
      },
      {
        "from": 54,
        "to": 58,
        "label": "data_dep: delta"
      },
      {
        "from": 38,
        "to": 60,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 60,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 60,
        "label": "data_dep: tr"
      },
      {
        "from": 41,
        "to": 60,
        "label": "data_dep: q"
      },
      {
        "from": 38,
        "to": 61,
        "label": "data_dep: tr"
      },
      {
        "from": 38,
        "to": 61,
        "label": "data_dep: tr"
      },
      {
        "from": 41,
        "to": 61,
        "label": "data_dep: q"
      }
    ]
  }
]