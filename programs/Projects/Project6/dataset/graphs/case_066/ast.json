[
  {
    "name": "init_board",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBoard >",
      "series: u32"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . board ;",
      "b . admin = ctx . accounts . admin . key () ;",
      "b . series = series ;",
      "b . badges = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "enroll_crafter",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < EnrollCrafter >",
      "role: CraftRole",
      "tier: u8"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . board ;",
      "let c = & mut ctx . accounts . crafter ;",
      "c . board = b . key () ;",
      "c . role = role ;",
      "c . tier = tier ;",
      "c . score = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "mint_badge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MintBadge >",
      "materials: Vec < u16 >"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . board ;",
      "let a = & mut ctx . accounts . actor ;",
      "let p = & mut ctx . accounts . partner ;",
      "let l = & mut ctx . accounts . log ;",
      "let mut sum : u32 = 0 ;",
      "let mut mix : u16 = 0 ;",
      "for m in materials",
      "{",
      "let v = (m & 0x3FF) as u32 ;",
      "sum = sum . saturating_add (v) ;",
      "mix ^= ((m << 1) | (m >> 1)) & 0x3FF ;",
      "}",
      "let base = sum + (mix as u32 & 0xFF) ;",
      "if a . role == Master",
      "{",
      "a . score = a . score . saturating_add (base / 2) ;",
      "p . score = p . score . saturating_add (base / 4) ;",
      "b . badges = b . badges . saturating_add (1) ;",
      "msg ! (\"Master branch: base=",
      "{",
      "}, a.score={}, p.score={}, total={}\" , base , a . score , p . score , b . badges) ;",
      "} else",
      "{",
      "a . score = a . score . saturating_add (base / 3) ;",
      "p . score = p . score . saturating_add ((base / 6) + ((mix as u32) & 0x7F)) ;",
      "b . badges = b . badges . saturating_add (1) ;",
      "msg ! (\"Apprentice/Artisan branch: base=",
      "{",
      "}, a.score={}, p.score={}, total={}\" , base , a . score , p . score , b . badges) ;",
      "}",
      "let mut x = (b . badges as u128) . max (1) ;",
      "let mut i = 0 ;",
      "while i < 3",
      "{",
      "x = (x + (b . badges as u128 / x)) . max (1) / 2 ;",
      "i += 1 ;",
      "}",
      "l . board = b . key () ;",
      "l . exhibit_index = (x as u32) . min (1_000_000) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitBoard",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": "# [account (init , payer = admin , space = 8 + 32 + 4 + 4)]",
        "field_type": "Account < 'info , Board >"
      },
      {
        "name": "admin",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EnrollCrafter",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Board >"
      },
      {
        "name": "crafter",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 1 + 1 + 4)]",
        "field_type": "Account < 'info , CrafterCard >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "MintBadge",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Board >"
      },
      {
        "name": "log",
        "attribute": "# [account (mut , has_one = board)]",
        "field_type": "Account < 'info , CraftLog >"
      },
      {
        "name": "actor",
        "attribute": "# [account (mut , has_one = board , constraint = actor . role != partner . role @ ErrCode :: CosplayBlocked)]",
        "field_type": "Account < 'info , CrafterCard >"
      },
      {
        "name": "partner",
        "attribute": "# [account (mut , has_one = board)]",
        "field_type": "Account < 'info , CrafterCard >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Board",
    "node_type": "struct",
    "fields": [
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "series",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "badges",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CrafterCard",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "role",
        "attribute": null,
        "field_type": "CraftRole"
      },
      {
        "name": "tier",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "score",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CraftLog",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "exhibit_index",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]