[
  {
    "name": "init_raid",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . raid ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "r . boss = boss ;"
      },
      {
        "id": 4,
        "label": "r . total_round = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_slot",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let s = & mut ctx . accounts . slot ;"
      },
      {
        "id": 8,
        "label": "s . raid = ctx . accounts . raid . key () ;"
      },
      {
        "id": 9,
        "label": "s . tag = tag ;"
      },
      {
        "id": 10,
        "label": "s . total_damage = 0 ;"
      },
      {
        "id": 11,
        "label": "s . buff = 0 ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "record_round",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let raid = & mut ctx . accounts . raid ;"
      },
      {
        "id": 15,
        "label": "let a = & mut ctx . accounts . attacker ;"
      },
      {
        "id": 16,
        "label": "let d = & mut ctx . accounts . defender ;"
      },
      {
        "id": 17,
        "label": "let book = & mut ctx . accounts . book ;"
      },
      {
        "id": 18,
        "label": "let mut rolling = seed ;"
      },
      {
        "id": 19,
        "label": "Loop Start"
      },
      {
        "id": 20,
        "label": "rolling = rolling . rotate_left (3) ^ 0x9E3779B97F4A7C15u64 ;"
      },
      {
        "id": 21,
        "label": "a . buff = a . buff ^ ((rolling as u32) & 0x3F) ;"
      },
      {
        "id": 22,
        "label": "book . hash = book . hash . wrapping_add (rolling) ;"
      },
      {
        "id": 23,
        "label": "Loop End"
      },
      {
        "id": 24,
        "label": "if statement"
      },
      {
        "id": 25,
        "label": "predicate"
      },
      {
        "id": 26,
        "label": "(rolling & 1) == 0"
      },
      {
        "id": 27,
        "label": "True body"
      },
      {
        "id": 28,
        "label": "a . total_damage = a . total_damage . saturating_add (((rolling >> 8) & 0xFFFF) as u64) ;"
      },
      {
        "id": 29,
        "label": "raid . total_round = raid . total_round . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "book . lines = book . lines . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "book . last = rolling ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Even roll: attacker scores and round increments\") ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "d . total_damage = d . total_damage . saturating_add (((rolling >> 12) & 0x7FFF) as u64) ;"
      },
      {
        "id": 35,
        "label": "raid . total_round = raid . total_round . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "book . lines = book . lines . saturating_add (2) ;"
      },
      {
        "id": 37,
        "label": "book . last = rolling ^ book . hash ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Odd roll: defender absorbs and record adjusted\") ;"
      },
      {
        "id": 39,
        "label": "merge"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 19,
        "to": 23,
        "label": "for"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "predicate"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 24,
        "to": 27,
        "label": "true"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 24,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 32,
        "to": 39,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      }
    ]
  }
]