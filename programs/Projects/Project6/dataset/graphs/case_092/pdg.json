[
  {
    "name": "init_ladder",
    "inputs": [
      "ctx: Context < InitLadder >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let l = & mut ctx . accounts . ladder ;"
      },
      {
        "id": 2,
        "label": "l . owner = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "l . epoch = 0 ;"
      },
      {
        "id": 4,
        "label": "l . seed = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: l"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: l"
      }
    ]
  },
  {
    "name": "init_role_card",
    "inputs": [
      "ctx: Context < InitRoleCard >",
      "role: Role"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let c = & mut ctx . accounts . card ;"
      },
      {
        "id": 8,
        "label": "c . ladder = ctx . accounts . ladder . key () ;"
      },
      {
        "id": 9,
        "label": "c . role = role ;"
      },
      {
        "id": 10,
        "label": "c . points = 0 ;"
      },
      {
        "id": 11,
        "label": "c . hist = [0 ; 8] ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: c"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "run_epoch",
    "inputs": [
      "ctx: Context < RunEpoch >",
      "salt: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let l = & mut ctx . accounts . ladder ;"
      },
      {
        "id": 15,
        "label": "let a = & mut ctx . accounts . card_a ;"
      },
      {
        "id": 16,
        "label": "let b = & mut ctx . accounts . card_b ;"
      },
      {
        "id": 17,
        "label": "let t = & mut ctx . accounts . tally ;"
      },
      {
        "id": 18,
        "label": "let mut s = l . seed ^ salt ;"
      },
      {
        "id": 19,
        "label": "for i in 0 .. 8 { s = s . rotate_left (9) ^ 0xD6E8FEB86659FD93u64 ; a . hist [i] = a . hist [i] . saturating_add (((s >> (i * 7)) & 0x7F) as u32) ; }"
      },
      {
        "id": 20,
        "label": "s = s . rotate_left (9) ^ 0xD6E8FEB86659FD93u64 ;"
      },
      {
        "id": 21,
        "label": "a . hist [i] = a . hist [i] . saturating_add (((s >> (i * 7)) & 0x7F) as u32) ;"
      },
      {
        "id": 22,
        "label": "if a . role == Attacker { a . points = a . points . saturating_add (((s & 0xFFFF) as u32) + 5) ; l . epoch = l . epoch . saturating_add (1) ; t . lines = t . lines . saturating_add (1) ; t . mix = t . mix . wrapping_add (s . rotate_left (13)) ; msg ! (\"Attacker path applied\") ; } else { b . points = b . points . saturating_add ((((s >> 3) & 0x7FFF) as u32) + 3) ; l . epoch = l . epoch . saturating_add (1) ; t . lines = t . lines . saturating_add (2) ; t . mix = t . mix ^ s . rotate_right (11) ; msg ! (\"Non-attacker path applied\") ; }"
      },
      {
        "id": 23,
        "label": "a . points = a . points . saturating_add (((s & 0xFFFF) as u32) + 5) ;"
      },
      {
        "id": 24,
        "label": "l . epoch = l . epoch . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "t . lines = t . lines . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "t . mix = t . mix . wrapping_add (s . rotate_left (13)) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"Attacker path applied\") ;"
      },
      {
        "id": 28,
        "label": "b . points = b . points . saturating_add ((((s >> 3) & 0x7FFF) as u32) + 3) ;"
      },
      {
        "id": 29,
        "label": "l . epoch = l . epoch . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "t . lines = t . lines . saturating_add (2) ;"
      },
      {
        "id": 31,
        "label": "t . mix = t . mix ^ s . rotate_right (11) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Non-attacker path applied\") ;"
      },
      {
        "id": 33,
        "label": "l . seed = s ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: l"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: a"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: b"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: t"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: s"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: a"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: l"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 33,
        "label": "data_dep: s"
      }
    ]
  }
]