[
  {
    "name": "init_player",
    "inputs": [
      "ctx: Context < InitPlayer >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . player ;"
      },
      {
        "id": 2,
        "label": "p . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "p . energy = 100 ;"
      },
      {
        "id": 4,
        "label": "p . level = 1 ;"
      },
      {
        "id": 5,
        "label": "p . flags = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "issue_ticket",
    "inputs": [
      "ctx: Context < IssueTicket >",
      "slot: u8",
      "quota: u16"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let t = & mut ctx . accounts . ticket ;"
      },
      {
        "id": 9,
        "label": "t . parent = ctx . accounts . player . key () ;"
      },
      {
        "id": 10,
        "label": "t . slot = slot ;"
      },
      {
        "id": 11,
        "label": "t . quota = quota ;"
      },
      {
        "id": 12,
        "label": "t . used = 0 ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: t"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "attach_meter",
    "inputs": [
      "ctx: Context < AttachMeter >"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let m = & mut ctx . accounts . meter ;"
      },
      {
        "id": 16,
        "label": "m . parent = ctx . accounts . player . key () ;"
      },
      {
        "id": 17,
        "label": "m . consumed = 0 ;"
      },
      {
        "id": 18,
        "label": "m . regen = 0 ;"
      },
      {
        "id": 19,
        "label": "m . last = 0 ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: m"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: m"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: m"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "run_measure",
    "inputs": [
      "ctx: Context < RunMeasure >",
      "effort: u16"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let p = & mut ctx . accounts . player ;"
      },
      {
        "id": 23,
        "label": "let ta = & mut ctx . accounts . ticket_a ;"
      },
      {
        "id": 24,
        "label": "let tb = & mut ctx . accounts . ticket_b ;"
      },
      {
        "id": 25,
        "label": "let m = & mut ctx . accounts . meter ;"
      },
      {
        "id": 26,
        "label": "let consume = (effort as u64) . min (p . energy as u64) ;"
      },
      {
        "id": 27,
        "label": "p . energy = p . energy . saturating_sub (consume as u32) ;"
      },
      {
        "id": 28,
        "label": "m . consumed = m . consumed . saturating_add (consume) ;"
      },
      {
        "id": 29,
        "label": "if (consume & 1) == 0 { let step = ((consume as u16) % 7) as u16 + 1 ; ta . used = ta . used . saturating_add (step) . min (ta . quota) ; } else { let step = ((consume as u16) % 5) as u16 + 1 ; tb . used = tb . used . saturating_add (step) . min (tb . quota) ; }"
      },
      {
        "id": 30,
        "label": "let step = ((consume as u16) % 7) as u16 + 1 ;"
      },
      {
        "id": 31,
        "label": "ta . used = ta . used . saturating_add (step) . min (ta . quota) ;"
      },
      {
        "id": 32,
        "label": "let step = ((consume as u16) % 5) as u16 + 1 ;"
      },
      {
        "id": 33,
        "label": "tb . used = tb . used . saturating_add (step) . min (tb . quota) ;"
      },
      {
        "id": 34,
        "label": "if p . energy < 20 { let rec = (ta . slot as u32 + tb . slot as u32 + 5) . min (25) ; p . energy = p . energy . saturating_add (rec) ; m . regen = m . regen . saturating_add (rec as u64) ; } else { p . level = p . level . saturating_add (1) ; m . last = (m . last . wrapping_add (consume as u32)) ^ ((ta . slot as u32) << 3) ; }"
      },
      {
        "id": 35,
        "label": "let rec = (ta . slot as u32 + tb . slot as u32 + 5) . min (25) ;"
      },
      {
        "id": 36,
        "label": "p . energy = p . energy . saturating_add (rec) ;"
      },
      {
        "id": 37,
        "label": "m . regen = m . regen . saturating_add (rec as u64) ;"
      },
      {
        "id": 38,
        "label": "p . level = p . level . saturating_add (1) ;"
      },
      {
        "id": 39,
        "label": "m . last = (m . last . wrapping_add (consume as u32)) ^ ((ta . slot as u32) << 3) ;"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: p"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: ta"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: tb"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: m"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: consume"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: consume"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: m"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: consume"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: consume"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: consume"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: ta"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: ta"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: ta"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: consume"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: tb"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: tb"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: tb"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: step"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: consume"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: ta"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: ta"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: ta"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: step"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: consume"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: tb"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: tb"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: step"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: tb"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: ta"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: tb"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: consume"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: ta"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: rec"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: ta"
      },
      {
        "from": 24,
        "to": 35,
        "label": "data_dep: tb"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: rec"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: rec"
      },
      {
        "from": 22,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 39,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 39,
        "label": "data_dep: m"
      },
      {
        "from": 26,
        "to": 39,
        "label": "data_dep: consume"
      },
      {
        "from": 23,
        "to": 39,
        "label": "data_dep: ta"
      }
    ]
  }
]