[
  {
    "name": "grant_champion_bonus",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . tournament ;"
      },
      {
        "id": 2,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 3,
        "label": "let bonus = t . prize_pool / 4 ;"
      },
      {
        "id": 4,
        "label": "p . tournament_earnings = p . tournament_earnings . saturating_add (bonus) ;"
      },
      {
        "id": 5,
        "label": "p . championships_won = p . championships_won . saturating_add (1) ;"
      },
      {
        "id": 6,
        "label": "t . total_prize_distributed = t . total_prize_distributed . saturating_add (bonus) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "grant_streak_bonus",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 10,
        "label": "if statement"
      },
      {
        "id": 11,
        "label": "predicate"
      },
      {
        "id": 12,
        "label": "p . current_win_streak >= threshold"
      },
      {
        "id": 13,
        "label": "True body"
      },
      {
        "id": 14,
        "label": "let steps = p . current_win_streak . saturating_sub (threshold) . saturating_add (1) as u64 ;"
      },
      {
        "id": 15,
        "label": "let add = steps . saturating_mul (per_step) ;"
      },
      {
        "id": 16,
        "label": "p . tournament_earnings = p . tournament_earnings . saturating_add (add) ;"
      },
      {
        "id": 17,
        "label": "False body"
      },
      {
        "id": 18,
        "label": "No-op"
      },
      {
        "id": 19,
        "label": "merge"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "predicate"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 10,
        "to": 13,
        "label": "true"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 10,
        "to": 17,
        "label": "false"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 16,
        "to": 19,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  }
]