[
  {
    "name": "init_foundry",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let f = & mut ctx . accounts . foundry ;"
      },
      {
        "id": 2,
        "label": "f . owner = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "f . name = name ;"
      },
      {
        "id": 4,
        "label": "f . batch = 0 ;"
      },
      {
        "id": 5,
        "label": "f . mix = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_emblem",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let e = & mut ctx . accounts . emblem ;"
      },
      {
        "id": 9,
        "label": "e . foundry = ctx . accounts . foundry . key () ;"
      },
      {
        "id": 10,
        "label": "e . role = role ;"
      },
      {
        "id": 11,
        "label": "e . quality = 0 ;"
      },
      {
        "id": 12,
        "label": "e . hist = [0 ; 8] ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "forge",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let f = & mut ctx . accounts . foundry ;"
      },
      {
        "id": 16,
        "label": "let s = & mut ctx . accounts . smith ;"
      },
      {
        "id": 17,
        "label": "let a = & mut ctx . accounts . appraiser ;"
      },
      {
        "id": 18,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 19,
        "label": "let mut h = salt ^ (f . batch as u64) ;"
      },
      {
        "id": 20,
        "label": "Loop Start"
      },
      {
        "id": 21,
        "label": "h = h . rotate_left (9) ^ 0x9E3779B97F4A7C15u64 ;"
      },
      {
        "id": 22,
        "label": "s . hist [i] = s . hist [i] . saturating_add (((h >> (i * 5)) & 0xFF) as u32) ;"
      },
      {
        "id": 23,
        "label": "f . mix = f . mix ^ ((h as u32) & 0xFFFF) ;"
      },
      {
        "id": 24,
        "label": "Loop End"
      },
      {
        "id": 25,
        "label": "if statement"
      },
      {
        "id": 26,
        "label": "predicate"
      },
      {
        "id": 27,
        "label": "s . role == Smith"
      },
      {
        "id": 28,
        "label": "True body"
      },
      {
        "id": 29,
        "label": "s . quality = s . quality . saturating_add (((h & 0xFFFF) as u32) + 7) ;"
      },
      {
        "id": 30,
        "label": "f . batch = f . batch . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "l . lines = l . lines . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "l . last = l . last . wrapping_add (h . rotate_left (7)) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Smith path: forged new emblem\") ;"
      },
      {
        "id": 34,
        "label": "False body"
      },
      {
        "id": 35,
        "label": "a . quality = a . quality . saturating_add ((((h >> 3) & 0x7FFF) as u32) + 5) ;"
      },
      {
        "id": 36,
        "label": "f . mix = f . mix . rotate_right (3) ^ ((h as u32) & 0xFFFF) ;"
      },
      {
        "id": 37,
        "label": "l . lines = l . lines . saturating_add (2) ;"
      },
      {
        "id": 38,
        "label": "l . last = l . last ^ h . rotate_right (11) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Non-smith path: appraiser evaluated\") ;"
      },
      {
        "id": 40,
        "label": "merge"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 20,
        "to": 24,
        "label": "for"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "predicate"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 25,
        "to": 28,
        "label": "true"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 25,
        "to": 34,
        "label": "false"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 33,
        "to": 40,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      }
    ]
  }
]