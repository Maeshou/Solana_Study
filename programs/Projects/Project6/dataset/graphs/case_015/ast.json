[
  {
    "name": "initialize_artwork",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitializeArtwork >",
      "width: u16",
      "height: u16"
    ],
    "attributes": [],
    "body": [
      "let artwork = & mut ctx . accounts . artwork ;",
      "artwork . owner = ctx . accounts . owner . key () ;",
      "artwork . width = width ;",
      "artwork . height = height ;",
      "artwork . is_published = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "update_palette_and_render_preview",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdatePaletteAndRenderPreview >",
      "pixel_data: Vec < u8 >"
    ],
    "attributes": [],
    "body": [
      "let artwork = & mut ctx . accounts . artwork ;",
      "let palette = & mut ctx . accounts . palette ;",
      "if palette . colors . len () == 0",
      "{",
      "palette . colors = vec ! [Color",
      "{",
      "r : 0 , g : 0 , b : 0 } ;",
      "256] ;",
      "}",
      "for (i , p) in pixel_data . iter () . enumerate ()",
      "{",
      "let color = & mut palette . colors [* p as usize] ;",
      "let new_r = color . r . checked_add (1) . unwrap_or (u8 :: MAX) ;",
      "let new_g = color . g . wrapping_add (1) ;",
      "color . r = new_r ;",
      "color . g = new_g ;",
      "color . b = color . b . checked_add (1) . unwrap_or (u8 :: MAX) ;",
      "if i % 10 == 0",
      "{",
      "msg ! (\"Updated color at index {} to r:{}, g:{}, b:{}\" , p , color . r , color . g , color . b) ;",
      "}",
      "}",
      "let mut flag : u8 = 0b00000001 ;",
      "if artwork . is_published",
      "{",
      "flag &= 0b11111110 ;",
      "} else",
      "{",
      "flag |= 0b00000010 ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitializeArtwork",
    "node_type": "struct",
    "fields": [
      {
        "name": "artwork",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 2 + 2 + 1 , owner = crate :: ID ,)]",
        "field_type": "Account < 'info , Artwork >"
      },
      {
        "name": "palette",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 4 + 256 * 3 + 8 , owner = crate :: ID ,)]",
        "field_type": "Account < 'info , Palette >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UpdatePaletteAndRenderPreview",
    "node_type": "struct",
    "fields": [
      {
        "name": "artwork",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , Artwork >"
      },
      {
        "name": "palette",
        "attribute": "# [account (mut , has_one = owner , constraint = artwork . key () != palette . key () @ ErrorCode :: CosplayBlocked ,)]",
        "field_type": "Account < 'info , Palette >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Artwork",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "width",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "height",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "is_published",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Palette",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "artwork",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "colors",
        "attribute": null,
        "field_type": "Vec < Color >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Color",
    "node_type": "struct",
    "fields": [
      {
        "name": "r",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "g",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "b",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]