[
  {
    "name": "list_nft_for_sale",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ListNftOnMarketplace >",
      "price_lamports: u64"
    ],
    "attributes": [
      "# [doc = \" NFTの所有権をプログラムに移管し、価格を設定して出品リストを作成します。\"]"
    ],
    "body": [
      "let listing = & mut ctx . accounts . item_listing ;",
      "listing . seller = * ctx . accounts . seller . key ;",
      "listing . item_mint = ctx . accounts . item_mint . key () ;",
      "listing . price = price_lamports ;",
      "listing . is_active = true ;",
      "let cpi_accounts = Transfer { from : ctx . accounts . seller_item_token_account . to_account_info () , to : ctx . accounts . vault_item_token_account . to_account_info () , authority : ctx . accounts . seller . to_account_info () , } ;",
      "let cpi_program = ctx . accounts . token_program . to_account_info () ;",
      "let cpi_context = CpiContext :: new (cpi_program , cpi_accounts) ;",
      "token :: transfer (cpi_context , 1) ? ;",
      "msg ! (\"NFT {} listed for sale\" , listing . item_mint) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ListNftOnMarketplace",
    "node_type": "struct",
    "fields": [
      {
        "name": "item_listing",
        "attribute": "# [account (init , payer = seller , space = 8 + 32 + 32 + 8 + 1)]",
        "field_type": "Account < 'info , ItemListing >"
      },
      {
        "name": "seller",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "item_mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "seller_item_token_account",
        "attribute": "# [account (mut , constraint = seller_item_token_account . mint == item_mint . key () && seller_item_token_account . owner == seller . key () && seller_item_token_account . amount == 1)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "vault_item_token_account",
        "attribute": "# [account (init , payer = seller , token :: mint = item_mint , token :: authority = item_listing)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "rent",
        "attribute": null,
        "field_type": "Sysvar < 'info , Rent >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ItemListing",
    "node_type": "struct",
    "fields": [
      {
        "name": "seller",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "item_mint",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "price",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "is_active",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]