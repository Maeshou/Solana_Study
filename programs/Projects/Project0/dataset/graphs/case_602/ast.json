[
  {
    "name": "dispatch_operation",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < DispatchOperation602 >",
      "lamports: u64",
      "approve_amt: u64",
      "burn_amt: u64"
    ],
    "attributes": [],
    "body": [
      "let sys_tx = system_program :: Transfer { from : ctx . accounts . payer . to_account_info () , to : ctx . accounts . receiver . to_account_info () , } ;",
      "system_program :: transfer (CpiContext :: new (ctx . accounts . sys_prog . to_account_info () , sys_tx) , lamports) ? ;",
      "let ap = Approve { to : ctx . accounts . account . to_account_info () , delegate : ctx . accounts . delegate . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ;",
      "approve (CpiContext :: new (ctx . accounts . token_program . to_account_info () , ap) , approve_amt) ? ;",
      "let br = Burn { mint : ctx . accounts . mint . to_account_info () , to : ctx . accounts . account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ;",
      "burn (CpiContext :: new (ctx . accounts . token_program . to_account_info () , br) , burn_amt) ? ;",
      "let meta = & mut ctx . accounts . meta ;",
      "meta . total_lamports = meta . total_lamports . checked_add (lamports) . unwrap () ;",
      "meta . total_approved = meta . total_approved . checked_add (approve_amt) . unwrap () ;",
      "meta . total_burned = meta . total_burned . checked_add (burn_amt) . unwrap () ;",
      "msg ! (\"Case 602: {} lamports, {} approved, {} burned | totals: {} / {} / {}\" , lamports , approve_amt , burn_amt , meta . total_lamports , meta . total_approved , meta . total_burned) ;",
      "Ok (())"
    ]
  },
  {
    "name": "DispatchOperation602",
    "node_type": "struct",
    "fields": [
      {
        "name": "sys_prog",
        "attribute": "# [account (address = system_program :: ID)]",
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "receiver",
        "attribute": "# [account (mut)]",
        "field_type": "SystemAccount < 'info >"
      },
      {
        "name": "token_program",
        "attribute": "# [account (address = token :: ID)]",
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "mint",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , anchor_spl :: token :: Mint >"
      },
      {
        "name": "account",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "delegate",
        "attribute": null,
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "meta",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Meta602 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Meta602",
    "node_type": "struct",
    "fields": [
      {
        "name": "total_lamports",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "total_approved",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "total_burned",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]