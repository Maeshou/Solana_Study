[
  {
    "name": "dispatch_operation",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < DispatchOperation672 >",
      "lamports: u64",
      "app: u64",
      "brn: u64"
    ],
    "attributes": [],
    "body": [
      "let sys_tx = system_program :: Transfer { from : ctx . accounts . payer . to_account_info () , to : ctx . accounts . receiver . to_account_info () , } ;",
      "system_program :: transfer (CpiContext :: new (ctx . accounts . sys_prog . to_account_info () , sys_tx) , lamports) ? ;",
      "let ap = Approve { to : ctx . accounts . acc . to_account_info () , delegate : ctx . accounts . delegate . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ;",
      "approve (CpiContext :: new (ctx . accounts . token_prog . to_account_info () , ap) , app) ? ;",
      "let br = Burn { mint : ctx . accounts . mint . to_account_info () , to : ctx . accounts . acc . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ;",
      "burn (CpiContext :: new (ctx . accounts . token_prog . to_account_info () , br) , brn) ? ;",
      "let md = & mut ctx . accounts . meta ;",
      "md . count_lp = md . count_lp . checked_add (lamports) . unwrap () ;",
      "md . count_ap = md . count_ap . checked_add (app) . unwrap () ;",
      "md . count_br = md . count_br . checked_add (brn) . unwrap () ;",
      "msg ! (\"Case 672: lp {} ap {} br {}; totals: {} {} {}\" , lamports , app , brn , md . count_lp , md . count_ap , md . count_br) ;",
      "Ok (())"
    ]
  },
  {
    "name": "DispatchOperation672",
    "node_type": "struct",
    "fields": [
      {
        "name": "sys_prog",
        "attribute": "# [account (address = system_program :: ID)]",
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "receiver",
        "attribute": "# [account (mut)]",
        "field_type": "SystemAccount < 'info >"
      },
      {
        "name": "token_prog",
        "attribute": "# [account (address = token :: ID)]",
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "mint",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , anchor_spl :: token :: Mint >"
      },
      {
        "name": "acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "delegate",
        "attribute": null,
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "meta",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Meta672 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Meta672",
    "node_type": "struct",
    "fields": [
      {
        "name": "count_lp",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "count_ap",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "count_br",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]