[
  {
    "name": "close_061",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CloseStruct061 >"
    ],
    "attributes": [],
    "body": [
      "let mut acc_061_lam = ctx . accounts . acc_061 . to_account_info () . lamports . borrow_mut () ;",
      "let mut dest_061_lam = ctx . accounts . dest_061 . to_account_info () . lamports . borrow_mut () ;",
      "let lam1 = ctx . accounts . acc_061 . to_account_info () . lamports () . clone () ;",
      "let lam2 = ctx . accounts . dest_061 . to_account_info () . lamports () . clone () ;",
      "let tot = lam2 . checked_add (* lam1 . borrow ()) . unwrap () ;",
      "* ctx . accounts . dest_061 . to_account_info () . lamports . borrow_mut () = tot ;",
      "* ctx . accounts . acc_061 . to_account_info () . lamports . borrow_mut () = 0 ;",
      "msg ! (\"SRC={} DST={}\" , * acc_061_lam , * dest_061_lam) ;",
      "let new = * acc_061_lam + * dest_061_lam ;",
      "* dest_061_lam = new ;",
      "fn transfer (src : & mut u64 , dst : & mut u64) { let tmp = * * src ; * * src = 0 ; * * dst = dst . checked_add (tmp) . unwrap () ; }",
      "transfer (& mut ctx . accounts . acc_061 . to_account_info () . lamports . borrow_mut () , & mut ctx . accounts . dest_061 . to_account_info () . lamports . borrow_mut ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "transfer",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "src: & mut u64",
      "dst: & mut u64"
    ],
    "attributes": [],
    "body": [
      "let tmp = * * src ;",
      "* * src = 0 ;",
      "* * dst = dst . checked_add (tmp) . unwrap () ;"
    ]
  },
  {
    "name": "CloseStruct061",
    "node_type": "struct",
    "fields": [
      {
        "name": "acc_061",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "dest_061",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]