[
  {
    "name": "initialize_manager",
    "inputs": [
      "ctx: Context < InitManager >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 2,
        "label": "mgr . active_quests = (1 ..= 3) . collect () ;"
      },
      {
        "id": 3,
        "label": "mgr . participants = Vec :: with_capacity (50) ;"
      },
      {
        "id": 4,
        "label": "mgr . completions = Vec :: with_capacity (50) ;"
      },
      {
        "id": 5,
        "label": "msg ! (\"Quest manager initialized with quests: {:?}\" , mgr . active_quests) ;"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: mgr"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: mgr"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: mgr"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: mgr"
      }
    ]
  },
  {
    "name": "register_player",
    "inputs": [
      "ctx: Context < RegisterPlayer >"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 8,
        "label": "mgr . participants . push (ctx . accounts . player . key ()) ;"
      },
      {
        "id": 9,
        "label": "msg ! (\"Registered player: {}\" , ctx . accounts . player . key ()) ;"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: mgr"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: mgr"
      }
    ]
  },
  {
    "name": "complete_quest",
    "inputs": [
      "ctx: Context < CompleteQuest >",
      "quest_id: u32"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 12,
        "label": "let now = Clock :: get () . unwrap () . unix_timestamp ;"
      },
      {
        "id": 13,
        "label": "mgr . completions . push (Completion { player : ctx . accounts . player . key () , quest_id , timestamp : now , }) ;"
      },
      {
        "id": 14,
        "label": "mgr . active_quests . retain (| & id | id != quest_id) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Player {} completed quest {}; remaining: {:?}\" , ctx . accounts . player . key () , quest_id , mgr . active_quests) ;"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: mgr"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: now"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: mgr"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: now"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: mgr"
      }
    ]
  }
]