[
  {
    "name": "enhance",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Enhance >"
    ],
    "attributes": [
      "# [doc = \" ５つの NFT をそれぞれ１枚ずつバーンし、\"]",
      "# [doc = \" 疑似乱数でランクアップ先を配列インデックスで選択してミントします。\"]",
      "# [doc = \" `if` や `loop` は一切使わず、比較演算と配列アクセスのみで実現。\"]"
    ],
    "body": [
      "let r = (ctx . accounts . clock . slot % 100) as u8 ;",
      "let tp = ctx . accounts . token_program . to_account_info () ;",
      "let user = ctx . accounts . user . to_account_info () ;",
      "burn (CpiContext :: new (tp . clone () , Burn { mint : ctx . accounts . nft1_mint . to_account_info () , from : ctx . accounts . nft1_acc . to_account_info () , authority : user . clone () }) , 1) . unwrap () ;",
      "burn (CpiContext :: new (tp . clone () , Burn { mint : ctx . accounts . nft2_mint . to_account_info () , from : ctx . accounts . nft2_acc . to_account_info () , authority : user . clone () }) , 1) . unwrap () ;",
      "burn (CpiContext :: new (tp . clone () , Burn { mint : ctx . accounts . nft3_mint . to_account_info () , from : ctx . accounts . nft3_acc . to_account_info () , authority : user . clone () }) , 1) . unwrap () ;",
      "burn (CpiContext :: new (tp . clone () , Burn { mint : ctx . accounts . nft4_mint . to_account_info () , from : ctx . accounts . nft4_acc . to_account_info () , authority : user . clone () }) , 1) . unwrap () ;",
      "burn (CpiContext :: new (tp . clone () , Burn { mint : ctx . accounts . nft5_mint . to_account_info () , from : ctx . accounts . nft5_acc . to_account_info () , authority : user . clone () }) , 1) . unwrap () ;",
      "let b0 = (r >= 98) as usize ;",
      "let b1 = ((r >= 90) & (r < 98)) as usize ;",
      "let b2 = ((r >= 80) & (r < 90)) as usize ;",
      "let b3 = (r < 80) as usize ;",
      "let idx = b0 * 0 + b1 * 1 + b2 * 2 + b3 * 3 ;",
      "let mints : [& Account < '_ , Mint > ; 4] = [& ctx . accounts . mint_special , & ctx . accounts . mint_rainbow , & ctx . accounts . mint_double_up , & ctx . accounts . mint_rank_up ,] ;",
      "let chosen = mints [idx] ;",
      "let cpi_accounts = MintTo { mint : chosen . to_account_info () , to : ctx . accounts . destination . to_account_info () , authority : ctx . accounts . authority . to_account_info () , } ;",
      "mint_to (CpiContext :: new_with_signer (tp , cpi_accounts , & [& [b\"authority\" , & [* ctx . bumps . get (\"authority\") . unwrap ()]]] ,) , 1 ,) . unwrap () ;"
    ]
  },
  {
    "name": "Enhance",
    "node_type": "struct",
    "fields": [
      {
        "name": "user",
        "attribute": "# [doc = \" 署名チェック omitted intentionally\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "nft1_acc",
        "attribute": "# [doc = \" バーン用 NFT TokenAccounts\"] # [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft2_acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft3_acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft4_acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft5_acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft1_mint",
        "attribute": "# [doc = \" 上記 TokenAccounts の Mint\"]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "nft2_mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "nft3_mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "nft4_mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "nft5_mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "mint_rank_up",
        "attribute": "# [doc = \" ミント先の 4 種類の Mint\"]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "mint_double_up",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "mint_rainbow",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "mint_special",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "destination",
        "attribute": "# [doc = \" 新 NFT を受け取る先 ATA\"] # [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "authority",
        "attribute": "# [doc = \" ミント権限を持つ PDA（署名チェック omitted intentionally）\"] # [account (seeds = [b\"authority\"] , bump)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "clock",
        "attribute": null,
        "field_type": "Sysvar < 'info , Clock >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]