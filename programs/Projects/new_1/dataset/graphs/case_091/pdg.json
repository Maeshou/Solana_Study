[
  {
    "name": "init_manager",
    "inputs": [
      "ctx: Context < InitManager >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 2,
        "label": "mgr . records = Vec :: new () ;"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: mgr"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: mgr"
      }
    ]
  },
  {
    "name": "penalize_account",
    "inputs": [
      "ctx: Context < PenalizeAccount >",
      "target: Pubkey",
      "fine_amount: u64"
    ],
    "nodes": [
      {
        "id": 3,
        "label": "Entry"
      },
      {
        "id": 4,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 5,
        "label": "mgr . records . push (PenaltyRecord { user : target , fine : fine_amount , active : true , timestamp : Clock :: get () . unwrap () . unix_timestamp , }) ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Penalized {} with fine {}\" , target , fine_amount) ;"
      }
    ],
    "edges": [
      {
        "from": 4,
        "to": 4,
        "label": "def: mgr"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: mgr"
      }
    ]
  },
  {
    "name": "restore_account",
    "inputs": [
      "ctx: Context < RestoreAccount >",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let mgr = & mut ctx . accounts . manager ;"
      },
      {
        "id": 9,
        "label": "let vault = & ctx . accounts . vault . to_account_info () ;"
      },
      {
        "id": 10,
        "label": "let payer = & ctx . accounts . payer . to_account_info () ;"
      },
      {
        "id": 11,
        "label": "if let Some (rec) = mgr . records . iter_mut () . find (| r | r . user == target && r . active) { let amount = rec . fine ; * * payer . lamports . borrow_mut () -= amount ; * * vault . lamports . borrow_mut () += amount ; rec . active = false ; msg ! (\"Restored {} by paying fine {}\" , target , amount) ; } else { msg ! (\"No active penalty found for {}\" , target) ; }"
      },
      {
        "id": 12,
        "label": "let amount = rec . fine ;"
      },
      {
        "id": 13,
        "label": "* * payer . lamports . borrow_mut () -= amount ;"
      },
      {
        "id": 14,
        "label": "* * vault . lamports . borrow_mut () += amount ;"
      },
      {
        "id": 15,
        "label": "rec . active = false ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Restored {} by paying fine {}\" , target , amount) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"No active penalty found for {}\" , target) ;"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: mgr"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: vault"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: payer"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: mgr"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: payer"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vault"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: amount"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: payer"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: amount"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: vault"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: amount"
      }
    ]
  }
]