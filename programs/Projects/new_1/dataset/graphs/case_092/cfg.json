[
  {
    "name": "create_poll",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let poll = & mut ctx . accounts . poll ;"
      },
      {
        "id": 2,
        "label": "poll . question = question ;"
      },
      {
        "id": 3,
        "label": "poll . options = Vec :: new () ;"
      },
      {
        "id": 4,
        "label": "poll . votes = Vec :: new () ;"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "add_poll_option",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let poll = & mut ctx . accounts . poll ;"
      },
      {
        "id": 7,
        "label": "poll . options . push (option) ;"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "cast_vote",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let poll = & mut ctx . accounts . poll ;"
      },
      {
        "id": 10,
        "label": "let now = Clock :: get () . unwrap () . unix_timestamp ;"
      },
      {
        "id": 11,
        "label": "poll . votes . push (VoteRecord { voter : ctx . accounts . voter . key () , choice : option_index , timestamp : now , }) ;"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      }
    ]
  }
]