[
  {
    "name": "initialize_locker",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitializeLocker >"
    ],
    "attributes": [
      "# [doc = \" ロッカー状態の初期化\"]"
    ],
    "body": [
      "let locker = & mut ctx . accounts . locker ;",
      "locker . locked_accounts = Vec :: new () ;",
      "Ok (())"
    ]
  },
  {
    "name": "lock_invalid_account",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < LockInvalid >",
      "target: Pubkey"
    ],
    "attributes": [
      "# [doc = \" 任意のアカウントをロックリストに追加\"]",
      "# [doc = \" 署名者チェックも何も行わないので、誰でも誰でもロックできます\"]"
    ],
    "body": [
      "let locker = & mut ctx . accounts . locker ;",
      "locker . locked_accounts . push (target) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Locker",
    "node_type": "struct",
    "fields": [
      {
        "name": "locked_accounts",
        "attribute": "# [doc = \" ロックされたアカウントのリスト（Pubkey のベクタ）\"]",
        "field_type": "Vec < Pubkey >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitializeLocker",
    "node_type": "struct",
    "fields": [
      {
        "name": "locker",
        "attribute": "# [doc = \" ロックリストを保持するアカウント\"] # [account (init , payer = payer , space = 8 + 4 + 32 * 128)]",
        "field_type": "Account < 'info , Locker >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "LockInvalid",
    "node_type": "struct",
    "fields": [
      {
        "name": "locker",
        "attribute": "# [doc = \" 既存のロッカーアカウント\"] # [account (mut)]",
        "field_type": "Account < 'info , Locker >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]