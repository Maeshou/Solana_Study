[
  {
    "name": "initialize_locker",
    "inputs": [
      "ctx: Context < InitializeLocker >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let locker = & mut ctx . accounts . locker ;"
      },
      {
        "id": 2,
        "label": "locker . locked_accounts = Vec :: new () ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: locker"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: locker"
      }
    ]
  },
  {
    "name": "lock_invalid_account",
    "inputs": [
      "ctx: Context < LockInvalid >",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let locker = & mut ctx . accounts . locker ;"
      },
      {
        "id": 6,
        "label": "locker . locked_accounts . push (target) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: locker"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: locker"
      }
    ]
  }
]