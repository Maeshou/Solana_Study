[
  {
    "name": "enter_lottery",
    "inputs": [
      "ctx: Context < EnterLottery >",
      "base_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let clock = Clock :: get () ? ;"
      },
      {
        "id": 2,
        "label": "let rand_bps = (clock . unix_timestamp as u64 % 10_000) as u16 ;"
      },
      {
        "id": 3,
        "label": "let hold = ctx . accounts . user_nft_account . amount ;"
      },
      {
        "id": 4,
        "label": "let mut chance = hold . checked_mul (base_bps as u64) . unwrap () . min (10_000) as u16 ;"
      },
      {
        "id": 5,
        "label": "let win = rand_bps < chance ;"
      },
      {
        "id": 6,
        "label": "let result = & mut ctx . accounts . result ;"
      },
      {
        "id": 7,
        "label": "result . user = * ctx . accounts . user . key ;"
      },
      {
        "id": 8,
        "label": "result . hold_amount = hold ;"
      },
      {
        "id": 9,
        "label": "result . chance_bps = chance ;"
      },
      {
        "id": 10,
        "label": "result . random_bps = rand_bps ;"
      },
      {
        "id": 11,
        "label": "result . won = win ;"
      },
      {
        "id": 12,
        "label": "emit ! (LotteryEvent { user : * ctx . accounts . user . key , hold : hold , chance_bps : chance , random_bps : rand_bps , won : win , }) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: clock"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: rand_bps"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: clock"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: hold"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: chance"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: hold"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: win"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: rand_bps"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: chance"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: result"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: result"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: result"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: hold"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: result"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: chance"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: result"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: rand_bps"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: result"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: win"
      }
    ]
  }
]