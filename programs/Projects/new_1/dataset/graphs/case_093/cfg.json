[
  {
    "name": "init_tracker",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . tracker ;"
      },
      {
        "id": 2,
        "label": "t . records = Vec :: new () ;"
      },
      {
        "id": 3,
        "label": "t . total_collected = 0 ;"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      }
    ]
  },
  {
    "name": "penalize_account",
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let t = & mut ctx . accounts . tracker ;"
      },
      {
        "id": 6,
        "label": "t . records . push (PenaltyRecord { user : target , fine : fine_amount , paid : false , timestamp : Clock :: get () . unwrap () . unix_timestamp , }) ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Penalized {} with {} points\" , target , fine_amount) ;"
      }
    ],
    "edges": [
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "settle_penalty",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let t = & mut ctx . accounts . tracker ;"
      },
      {
        "id": 10,
        "label": "if statement"
      },
      {
        "id": 11,
        "label": "predicate"
      },
      {
        "id": 12,
        "label": "let Some (rec) = t . records . iter_mut () . find (| r | r . user == target && ! r . paid)"
      },
      {
        "id": 13,
        "label": "True body"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "paid_amount >= rec . fine"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "rec . paid = true ;"
      },
      {
        "id": 19,
        "label": "t . total_collected = t . total_collected . checked_add (rec . fine) . unwrap () ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Settled penalty for {} ({} points)\" , target , rec . fine) ;"
      },
      {
        "id": 21,
        "label": "False body"
      },
      {
        "id": 22,
        "label": "msg ! (\"Insufficient payment for {}\" , target) ;"
      },
      {
        "id": 23,
        "label": "merge"
      },
      {
        "id": 24,
        "label": "False body"
      },
      {
        "id": 25,
        "label": "msg ! (\"No active penalty for {}\" , target) ;"
      },
      {
        "id": 26,
        "label": "merge"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "predicate"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 10,
        "to": 13,
        "label": "true"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 14,
        "to": 21,
        "label": "false"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 20,
        "to": 23,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 10,
        "to": 24,
        "label": "false"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      }
    ]
  }
]