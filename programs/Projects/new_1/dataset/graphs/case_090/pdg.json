[
  {
    "name": "init_treasury",
    "inputs": [
      "ctx: Context < InitTreasury >",
      "unlock_ts: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 2,
        "label": "t . unlock_time = unlock_ts ;"
      },
      {
        "id": 3,
        "label": "t . owner = ctx . accounts . initializer . key () ;"
      },
      {
        "id": 4,
        "label": "t . deposit_history = Vec :: new () ;"
      },
      {
        "id": 5,
        "label": "t . withdraw_history = Vec :: new () ;"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "record_deposit",
    "inputs": [
      "ctx: Context < RecordDeposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 8,
        "label": "let now = Clock :: get () . unwrap () . unix_timestamp ;"
      },
      {
        "id": 9,
        "label": "t . deposit_history . push (DepositRecord { user : ctx . accounts . user . key () , amount , timestamp : now , }) ;"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: t"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: now"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "record_withdraw",
    "inputs": [
      "ctx: Context < RecordWithdraw >"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 12,
        "label": "let now = Clock :: get () . unwrap () . unix_timestamp ;"
      },
      {
        "id": 13,
        "label": "let total : u64 = t . deposit_history . iter () . map (| d | d . amount) . sum () ;"
      },
      {
        "id": 14,
        "label": "t . withdraw_history . push (WithdrawRecord { user : ctx . accounts . user . key () , amount : total , timestamp : now , }) ;"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: t"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: now"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: t"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: now"
      }
    ]
  }
]