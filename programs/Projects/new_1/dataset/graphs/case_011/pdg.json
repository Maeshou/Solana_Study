[
  {
    "name": "rent_nft",
    "inputs": [
      "ctx: Context < RentNft >",
      "fee: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . owner_token . to_account_info () , to : ctx . accounts . pool_token . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ;"
      },
      {
        "id": 2,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts ,) ;"
      },
      {
        "id": 3,
        "label": "anchor_spl :: token :: transfer (cpi_ctx . with_signer (& []) , 1) ? ;"
      },
      {
        "id": 4,
        "label": "let prev = ctx . accounts . renter_account . balance ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . renter_account . balance = prev . checked_add (fee) . unwrap () ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"NFT rented: prev fee {} -> new fee {} for {}\" , prev , ctx . accounts . renter_account . balance , ctx . accounts . renter . key ()) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cpi_accounts"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: cpi_ctx"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: prev"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: prev"
      }
    ]
  }
]