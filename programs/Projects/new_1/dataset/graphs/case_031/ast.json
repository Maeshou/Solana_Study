[
  {
    "name": "collect_tax",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CollectTax >",
      "fee: u64"
    ],
    "attributes": [
      "# [doc = \" ユーザーから手数料を徴収し、運営口座へ転送します。\"]",
      "# [doc = \" `treasury` の署名チェックがないため、誰でも任意の口座を財務管理者として指定できます。\"]"
    ],
    "body": [
      "let payer = & mut ctx . accounts . payer . to_account_info () ;",
      "let treasury = & mut ctx . accounts . treasury . to_account_info () ;",
      "* * payer . try_borrow_mut_lamports () ? = payer . lamports () . checked_sub (fee) . ok_or (ErrorCode :: InsufficientFunds) ? ;",
      "* * treasury . try_borrow_mut_lamports () ? = treasury . lamports () . checked_add (fee) . ok_or (ErrorCode :: Overflow) ? ;",
      "msg ! (\"Collected {} lamports tax: {} → {}\" , fee , payer . key () , treasury . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "CollectTax",
    "node_type": "struct",
    "fields": [
      {
        "name": "payer",
        "attribute": "# [doc = \" 税を払うユーザー\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "treasury",
        "attribute": "# [doc = \" 集めた手数料を保管する口座 (本来は運営署名が必要だがチェックがない)\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "caller",
        "attribute": "# [doc = \" 呼び出し実行者（署名必須）\"] # [account (signer)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]