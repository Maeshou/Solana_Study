[
  {
    "name": "register_skin",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let skin = & mut ctx . accounts . skin_account ;"
      },
      {
        "id": 2,
        "label": "skin . owner = * ctx . accounts . user . key ;"
      },
      {
        "id": 3,
        "label": "skin . name = name ;"
      },
      {
        "id": 4,
        "label": "skin . symbol = symbol ;"
      },
      {
        "id": 5,
        "label": "skin . uri = uri ;"
      },
      {
        "id": 6,
        "label": "skin . description = description ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "mint_genesis",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let skin = & ctx . accounts . skin_account ;"
      },
      {
        "id": 10,
        "label": "let metadata_data = DataV2 { name : skin . name . clone () , symbol : skin . symbol . clone () , uri : skin . uri . clone () , seller_fee_basis_points : 500 , creators : Some (vec ! [mpl_token_metadata :: state :: Creator { address : skin . owner , verified : false , share : 100 , }]) , collection : None , uses : None , } ;"
      },
      {
        "id": 11,
        "label": "let metadata_ix = create_metadata_accounts_v3 (ctx . accounts . token_metadata_program . key () , ctx . accounts . metadata_account . key () , ctx . accounts . genesis_mint . key () , ctx . accounts . user . key () , ctx . accounts . user . key () , ctx . accounts . user . key () , metadata_data , true , true , None , None , None ,) ;"
      },
      {
        "id": 12,
        "label": "invoke (& metadata_ix , & [ctx . accounts . metadata_account . to_account_info () , ctx . accounts . genesis_mint . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . token_metadata_program . to_account_info () , ctx . accounts . system_program . to_account_info () , ctx . accounts . rent . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 13,
        "label": "let edition_ix = create_master_edition_v3 (ctx . accounts . token_metadata_program . key () , ctx . accounts . master_edition_account . key () , ctx . accounts . genesis_mint . key () , ctx . accounts . user . key () , ctx . accounts . user . key () , ctx . accounts . metadata_account . key () , ctx . accounts . user . key () , Some (0) ,) ;"
      },
      {
        "id": 14,
        "label": "invoke (& edition_ix , & [ctx . accounts . master_edition_account . to_account_info () , ctx . accounts . genesis_mint . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . metadata_account . to_account_info () , ctx . accounts . token_metadata_program . to_account_info () , ctx . accounts . system_program . to_account_info () , ctx . accounts . rent . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 15,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , mint_to :: Accounts { mint : ctx . accounts . genesis_mint . to_account_info () , to : ctx . accounts . user_ata . to_account_info () , authority : ctx . accounts . user . to_account_info () , } ,) ;"
      },
      {
        "id": 16,
        "label": "mint_to (cpi_ctx , 1) ? ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  }
]