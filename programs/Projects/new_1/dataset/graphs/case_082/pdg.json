[
  {
    "name": "configure",
    "inputs": [
      "ctx: Context < Configure >",
      "lamports_per_nft: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cfg = & mut ctx . accounts . config ;"
      },
      {
        "id": 2,
        "label": "cfg . lamports_per_nft = lamports_per_nft ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cfg"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: cfg"
      }
    ]
  },
  {
    "name": "withdraw",
    "inputs": [
      "ctx: Context < Withdraw >",
      "nft_count: u64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let cfg = & ctx . accounts . config ;"
      },
      {
        "id": 6,
        "label": "let vault_info = ctx . accounts . vault . to_account_info () ;"
      },
      {
        "id": 7,
        "label": "let recipient_info = ctx . accounts . recipient . to_account_info () ;"
      },
      {
        "id": 8,
        "label": "let total = cfg . lamports_per_nft . checked_mul (nft_count) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 9,
        "label": "let vault_balance = * * vault_info . lamports . borrow () ;"
      },
      {
        "id": 10,
        "label": "if vault_balance < total { return Err (ErrorCode :: InsufficientFunds . into ()) ; }"
      },
      {
        "id": 11,
        "label": "return Err (ErrorCode :: InsufficientFunds . into ()) ;"
      },
      {
        "id": 12,
        "label": "* * vault_info . lamports . borrow_mut () = vault_balance - total ;"
      },
      {
        "id": 13,
        "label": "* * recipient_info . lamports . borrow_mut () = * * recipient_info . lamports . borrow () + total ;"
      },
      {
        "id": 14,
        "label": "Ok (total)"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: cfg"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: vault_info"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: recipient_info"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: total"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: vault_balance"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: vault_info"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: vault_balance"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: total"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: vault_info"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: vault_balance"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: recipient_info"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: recipient_info"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: total"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: total"
      }
    ]
  }
]