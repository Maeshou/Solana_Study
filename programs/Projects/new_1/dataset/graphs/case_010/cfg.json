[
  {
    "name": "synthesize",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cpi_accounts = Burn { mint : ctx . accounts . base_mint . to_account_info () , from : ctx . accounts . user_base_token . to_account_info () , authority : ctx . accounts . user . to_account_info () , } ;"
      },
      {
        "id": 2,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts ,) ;"
      },
      {
        "id": 3,
        "label": "anchor_spl :: token :: burn (cpi_ctx . with_signer (& []) , 5) ? ;"
      },
      {
        "id": 4,
        "label": "let cpi_accounts = MintTo { mint : ctx . accounts . result_mint . to_account_info () , to : ctx . accounts . user_result_token . to_account_info () , authority : ctx . accounts . mint_authority . to_account_info () , } ;"
      },
      {
        "id": 5,
        "label": "let seeds = & [b\"synth\" , & [ctx . accounts . vault . bump]] ;"
      },
      {
        "id": 6,
        "label": "let signer = & [& seeds [..]] ;"
      },
      {
        "id": 7,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , signer ,) ;"
      },
      {
        "id": 8,
        "label": "anchor_spl :: token :: mint_to (cpi_ctx , 1) ? ;"
      },
      {
        "id": 9,
        "label": "let rand = (_nonce . wrapping_mul (ctx . accounts . clock . unix_timestamp as u64)) % 100 ;"
      },
      {
        "id": 10,
        "label": "let rank = if rand < 70 { 1 } else if rand < 90 { 2 } else { 3 } ;"
      },
      {
        "id": 11,
        "label": "ctx . accounts . metadata . rank = rank ;"
      },
      {
        "id": 12,
        "label": "msg ! (\"Synthesized new NFT with rank {} for {}\" , rank , ctx . accounts . user . key ()) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  }
]