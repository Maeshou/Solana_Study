[
  {
    "name": "Proposal",
    "node_type": "struct",
    "fields": [
      {
        "name": "proposer",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "description",
        "attribute": null,
        "field_type": "String"
      },
      {
        "name": "vote_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "VoteRecord",
    "node_type": "struct",
    "fields": [
      {
        "name": "voter",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "proposal",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "has_voted",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CastVote",
    "node_type": "struct",
    "fields": [
      {
        "name": "vote_record",
        "attribute": "# [doc = \" VoteRecord.voter == voter.key() の検証は行われる\"] # [account (mut , has_one = voter)]",
        "field_type": "Account < 'info , VoteRecord >"
      },
      {
        "name": "proposal",
        "attribute": "# [doc = \" proposal フィールドと一致するかは検証されない\"] # [account (mut)]",
        "field_type": "Account < 'info , Proposal >"
      },
      {
        "name": "voter",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "cast_vote",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CastVote >"
    ],
    "attributes": [],
    "body": [
      "let record = & mut ctx . accounts . vote_record ;",
      "let prop = & mut ctx . accounts . proposal ;",
      "record . has_voted = true ;",
      "prop . vote_count = prop . vote_count . checked_add (1) . unwrap () ;",
      "msg ! (\"Voter {} cast vote on proposal {}\" , record . voter , prop . key ()) ;",
      "Ok (())"
    ]
  }
]