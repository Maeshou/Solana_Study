[
  {
    "name": "initialize_contract",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . rent_contract ;"
      },
      {
        "id": 2,
        "label": "c . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "c . nft_contract = nft_contract ;"
      },
      {
        "id": 4,
        "label": "c . rent_fee = fee ;"
      },
      {
        "id": 5,
        "label": "c . renter = Pubkey :: default () ;"
      },
      {
        "id": 6,
        "label": "c . expires_at = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "rent",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let c = & mut ctx . accounts . rent_contract ;"
      },
      {
        "id": 10,
        "label": "let asset = & mut ctx . accounts . nft_asset ;"
      },
      {
        "id": 11,
        "label": "asset . owner = ctx . accounts . renter . key () ;"
      },
      {
        "id": 12,
        "label": "asset . is_rented = true ;"
      },
      {
        "id": 13,
        "label": "asset . rental_contract = c . key () ;"
      },
      {
        "id": 14,
        "label": "c . renter = ctx . accounts . renter . key () ;"
      },
      {
        "id": 15,
        "label": "c . expires_at = Clock :: get () ? . unix_timestamp + 60 * 60 * 24 ;"
      },
      {
        "id": 16,
        "label": "emit ! (NftRented { contract : c . key () , asset : asset . key () , renter : c . renter , }) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"NFT {} をレンタルしました (契約: {})\" , asset . mint , c . key ()) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  },
  {
    "name": "return_nft",
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let c = & mut ctx . accounts . rent_contract ;"
      },
      {
        "id": 21,
        "label": "let asset = & mut ctx . accounts . nft_asset ;"
      },
      {
        "id": 22,
        "label": "asset . owner = c . owner ;"
      },
      {
        "id": 23,
        "label": "asset . is_rented = false ;"
      },
      {
        "id": 24,
        "label": "asset . rental_contract = Pubkey :: default () ;"
      },
      {
        "id": 25,
        "label": "c . renter = Pubkey :: default () ;"
      },
      {
        "id": 26,
        "label": "c . expires_at = 0 ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"NFT {} を返却しました (契約: {})\" , asset . mint , c . key ()) ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      }
    ]
  }
]