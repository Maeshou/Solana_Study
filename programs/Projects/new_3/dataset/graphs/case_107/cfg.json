[
  {
    "name": "validate_data",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let old_pub = ctx . accounts . rec . data_pub ;"
      },
      {
        "id": 2,
        "label": "let new_pub = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . rec . data_pub = new_pub ;"
      },
      {
        "id": 4,
        "label": "msg ! (\"Case 107: data_pub changed from {} to {}\" , old_pub , new_pub) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "fractionalize",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let frac_acc = & mut ctx . accounts . fraction_account ;"
      },
      {
        "id": 8,
        "label": "frac_acc . total_fractions = frac_acc . total_fractions . checked_add (fraction_amount) . unwrap () ;"
      },
      {
        "id": 9,
        "label": "let cpi_accounts = MintTo { mint : ctx . accounts . fraction_mint . to_account_info () , to : ctx . accounts . user_fraction_account . to_account_info () , authority : ctx . accounts . mint_authority . to_account_info () , } ;"
      },
      {
        "id": 10,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;"
      },
      {
        "id": 11,
        "label": "token :: mint_to (cpi_ctx , fraction_amount) ? ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "defractionalize",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let frac_acc = & mut ctx . accounts . fraction_account ;"
      },
      {
        "id": 15,
        "label": "frac_acc . total_fractions = frac_acc . total_fractions . checked_sub (burn_amount) . unwrap () ;"
      },
      {
        "id": 16,
        "label": "let cpi_accounts = Burn { mint : ctx . accounts . fraction_mint . to_account_info () , from : ctx . accounts . user_fraction_account . to_account_info () , authority : ctx . accounts . user . to_account_info () , } ;"
      },
      {
        "id": 17,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;"
      },
      {
        "id": 18,
        "label": "token :: burn (cpi_ctx , burn_amount) ? ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      }
    ]
  }
]