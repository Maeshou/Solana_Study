[
  {
    "name": "Exam",
    "node_type": "struct",
    "fields": [
      {
        "name": "issuer",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "title",
        "attribute": null,
        "field_type": "String"
      },
      {
        "name": "total_takers",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ExamResult",
    "node_type": "struct",
    "fields": [
      {
        "name": "taker",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "exam",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "score",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CreateExam",
    "node_type": "struct",
    "fields": [
      {
        "name": "exam",
        "attribute": "# [account (init , payer = issuer , space = 8 + 32 + 4 + 64 + 8)]",
        "field_type": "Account < 'info , Exam >"
      },
      {
        "name": "issuer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "SubmitResult",
    "node_type": "struct",
    "fields": [
      {
        "name": "exam",
        "attribute": "# [doc = \" Exam.issuer == issuer.key() は検証される\"] # [account (mut , has_one = issuer)]",
        "field_type": "Account < 'info , Exam >"
      },
      {
        "name": "result",
        "attribute": "# [doc = \" ExamResult.exam ⇔ exam.key() の検証がないため、\"] # [doc = \" 任意の結果アカウントを渡せてしまう\"] # [account (init , payer = taker , space = 8 + 32 + 32 + 1)]",
        "field_type": "Account < 'info , ExamResult >"
      },
      {
        "name": "taker",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FinalizeResult",
    "node_type": "struct",
    "fields": [
      {
        "name": "exam",
        "attribute": "# [doc = \" Exam.issuer == issuer.key() は検証される\"] # [account (mut , has_one = issuer)]",
        "field_type": "Account < 'info , Exam >"
      },
      {
        "name": "result",
        "attribute": "# [doc = \" ExamResult.exam と exam.key() の検証がないため、\"] # [doc = \" 不正な結果アカウントを操作できる\"] # [account (mut)]",
        "field_type": "Account < 'info , ExamResult >"
      },
      {
        "name": "issuer",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "create_exam",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CreateExam >",
      "title: String"
    ],
    "attributes": [
      "# [doc = \" 新規試験を作成\"]"
    ],
    "body": [
      "let e = & mut ctx . accounts . exam ;",
      "e . issuer = ctx . accounts . issuer . key () ;",
      "e . title = title ;",
      "e . total_takers = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "submit_result",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SubmitResult >",
      "score: u8"
    ],
    "attributes": [
      "# [doc = \" 試験結果を提出（得点を記録）\"]"
    ],
    "body": [
      "let r = & mut ctx . accounts . result ;",
      "let e = & ctx . accounts . exam ;",
      "r . taker = ctx . accounts . taker . key () ;",
      "r . exam = e . key () ;",
      "r . score = score ;",
      "Ok (())"
    ]
  },
  {
    "name": "finalize_result",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < FinalizeResult >"
    ],
    "attributes": [
      "# [doc = \" 試験結果を確定（受験者数を更新）\"]"
    ],
    "body": [
      "let e = & mut ctx . accounts . exam ;",
      "let _r = & ctx . accounts . result ;",
      "e . total_takers = e . total_takers . checked_add (1) . unwrap () ;",
      "Ok (())"
    ]
  }
]