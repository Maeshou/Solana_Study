[
  {
    "name": "subscription_action_073",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SubscriptionCtx073 >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "token :: burn (CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . mint . to_account_info () , to : ctx . accounts . subscription_src_073 . to_account_info () , authority : ctx . accounts . auth . to_account_info () } , & [& [b\"subscription\" , & [ctx . bumps [\"auth\"]]]]) , amount ,) ? ;",
      "let mut st = & mut ctx . accounts . state ;",
      "st . count = st . count . checked_add (amount) . unwrap_or (st . count) ;",
      "Ok (())"
    ]
  },
  {
    "name": "SubscriptionCtx073",
    "node_type": "struct",
    "fields": [
      {
        "name": "subscription_src_073",
        "attribute": "# [account (mut , token :: mint = mint , token :: authority = auth)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "mint",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , DataState >"
      },
      {
        "name": "auth",
        "attribute": "# [doc = \" CHECK: PDA derived from static seed, vulnerable to sharing\"] # [account (seeds = [b\"subscription\"] , bump)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "DataState",
    "node_type": "struct",
    "fields": [
      {
        "name": "count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]