[
  {
    "name": "init_agreement",
    "inputs": [
      "ctx: Context < InitAgreement >",
      "scholar_bps: u16",
      "fund_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let agreement_state = & mut ctx . accounts . agreement_state ;"
      },
      {
        "id": 2,
        "label": "agreement_state . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "agreement_state . scholar_bps = scholar_bps ;"
      },
      {
        "id": 4,
        "label": "agreement_state . fund_bps = fund_bps ;"
      },
      {
        "id": 5,
        "label": "agreement_state . round_index = 4 ;"
      },
      {
        "id": 6,
        "label": "agreement_state . last_three_revenues = [8 , 13 , 21] ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: agreement_state"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: agreement_state"
      }
    ]
  },
  {
    "name": "act_split",
    "inputs": [
      "ctx: Context < ActSplit >",
      "cycle_revenue: u64"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let agreement_state = & mut ctx . accounts . agreement_state ;"
      },
      {
        "id": 10,
        "label": "let mut value_a = agreement_state . last_three_revenues [0] ;"
      },
      {
        "id": 11,
        "label": "let mut value_b = agreement_state . last_three_revenues [1] ;"
      },
      {
        "id": 12,
        "label": "let mut value_c = agreement_state . last_three_revenues [2] ;"
      },
      {
        "id": 13,
        "label": "let mut replace_step : u8 = 0 ;"
      },
      {
        "id": 14,
        "label": "while replace_step < 3 { if value_a > value_b { let temp = value_a ; value_a = value_b ; value_b = temp ; } if value_b > value_c { let temp = value_b ; value_b = value_c ; value_c = temp ; } replace_step = replace_step + 1 ; }"
      },
      {
        "id": 15,
        "label": "if value_a > value_b { let temp = value_a ; value_a = value_b ; value_b = temp ; }"
      },
      {
        "id": 16,
        "label": "let temp = value_a ;"
      },
      {
        "id": 17,
        "label": "value_a = value_b ;"
      },
      {
        "id": 18,
        "label": "value_b = temp ;"
      },
      {
        "id": 19,
        "label": "if value_b > value_c { let temp = value_b ; value_b = value_c ; value_c = temp ; }"
      },
      {
        "id": 20,
        "label": "let temp = value_b ;"
      },
      {
        "id": 21,
        "label": "value_b = value_c ;"
      },
      {
        "id": 22,
        "label": "value_c = temp ;"
      },
      {
        "id": 23,
        "label": "replace_step = replace_step + 1 ;"
      },
      {
        "id": 24,
        "label": "let median_value : u64 = value_b ;"
      },
      {
        "id": 25,
        "label": "let mut applied_fund_bps : u64 = agreement_state . fund_bps as u64 ;"
      },
      {
        "id": 26,
        "label": "if cycle_revenue > median_value { applied_fund_bps = applied_fund_bps + 100 ; }"
      },
      {
        "id": 27,
        "label": "applied_fund_bps = applied_fund_bps + 100 ;"
      },
      {
        "id": 28,
        "label": "let fund_cut : u64 = (cycle_revenue as u128 * applied_fund_bps as u128 / 10_000u128) as u64 ;"
      },
      {
        "id": 29,
        "label": "let residual_pool : u64 = cycle_revenue - fund_cut ;"
      },
      {
        "id": 30,
        "label": "let scholar_cut : u64 = (residual_pool as u128 * agreement_state . scholar_bps as u128 / 10_000u128) as u64 ;"
      },
      {
        "id": 31,
        "label": "let manager_cut : u64 = residual_pool - scholar_cut ;"
      },
      {
        "id": 32,
        "label": "token :: transfer (ctx . accounts . income_to_fund_ctx () , fund_cut) ? ;"
      },
      {
        "id": 33,
        "label": "token :: transfer (ctx . accounts . income_to_scholar_ctx () , scholar_cut) ? ;"
      },
      {
        "id": 34,
        "label": "token :: transfer (ctx . accounts . income_to_manager_ctx () , manager_cut) ? ;"
      },
      {
        "id": 35,
        "label": "agreement_state . last_three_revenues = [agreement_state . last_three_revenues [1] , agreement_state . last_three_revenues [2] , cycle_revenue] ;"
      },
      {
        "id": 36,
        "label": "agreement_state . round_index = agreement_state . round_index + 1 ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: agreement_state"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: value_a"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: value_b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: value_c"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: value_a"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: value_a"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: value_a"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: value_c"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: value_b"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: value_c"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: value_c"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: value_a"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: value_b"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: value_a"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: value_a"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: value_b"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: temp"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: value_a"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: value_a"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: value_b"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: temp"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: value_b"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: value_c"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: value_b"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: value_c"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: value_c"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: temp"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: temp"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: value_b"
      },
      {
        "from": 11,
        "to": 21,
        "label": "data_dep: value_b"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: value_c"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: value_c"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: temp"
      },
      {
        "from": 11,
        "to": 24,
        "label": "data_dep: value_b"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 30,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 35,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 35,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 35,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 36,
        "label": "data_dep: agreement_state"
      },
      {
        "from": 9,
        "to": 36,
        "label": "data_dep: agreement_state"
      }
    ]
  }
]