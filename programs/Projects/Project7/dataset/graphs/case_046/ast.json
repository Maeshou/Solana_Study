[
  {
    "name": "proper_mint",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MintCtx046 >"
    ],
    "attributes": [],
    "body": [
      "let initial : u64 = 709 ;",
      "let new_amt : u64 = initial . saturating_add (235) ;",
      "let final_amt : u64 = if new_amt > initial { new_amt - initial } else { initial } ;",
      "let cpi_accounts = MintTo { mint : ctx . accounts . mint_acc . to_account_info () , to : ctx . accounts . dest_acc . to_account_info () , authority : ctx . accounts . mint_authority . to_account_info () , } ;",
      "let bump = * ctx . bumps . get (\"mint_authority\") . expect (\"bump\") ;",
      "let seeds : & [& [u8]] = & [b\"mint_auth\" , ctx . accounts . mint_acc . key () . as_ref () , & [bump] ,] ;",
      "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_prog . to_account_info () , cpi_accounts , & [seeds] ,) ;",
      "token :: mint_to (cpi_ctx , final_amt) ? ;",
      "msg ! (\"Minted amount: {}\" , final_amt) ;",
      "Ok (())"
    ]
  },
  {
    "name": "MintCtx046",
    "node_type": "struct",
    "fields": [
      {
        "name": "mint_acc",
        "attribute": "# [account (mut , constraint = mint_acc . mint_authority . map (| k | k == mint_authority . key ()) . unwrap_or (false))]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "dest_acc",
        "attribute": "# [account (mut , constraint = dest_acc . mint == mint_acc . key ())]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "mint_authority",
        "attribute": "# [doc = \" CHECK: データ不要のPDAサインナー（ミント権限）\"] # [account (seeds = [b\"mint_auth\" , mint_acc . key () . as_ref ()] , bump)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "token_prog",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]