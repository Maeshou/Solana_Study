[
  {
    "name": "initialize_raid_event",
    "inputs": [
      "ctx: Context < InitializeRaidEvent >",
      "max_participants: u32",
      "total_reward_amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let raid_event = & mut ctx . accounts . raid_event ;"
      },
      {
        "id": 2,
        "label": "raid_event . creator = ctx . accounts . creator . key () ;"
      },
      {
        "id": 3,
        "label": "raid_event . reward_mint = ctx . accounts . reward_mint . key () ;"
      },
      {
        "id": 4,
        "label": "raid_event . total_reward_amount = total_reward_amount ;"
      },
      {
        "id": 5,
        "label": "raid_event . max_participants = max_participants ;"
      },
      {
        "id": 6,
        "label": "raid_event . participants_count = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: raid_event"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: raid_event"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: raid_event"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: raid_event"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: raid_event"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: raid_event"
      }
    ]
  },
  {
    "name": "distribute_rewards",
    "inputs": [
      "ctx: Context < DistributeRewards >",
      "ranks: Vec < u32 >"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let raid_event = & mut ctx . accounts . raid_event ;"
      },
      {
        "id": 10,
        "label": "let mut reward_per_participant = 0 ;"
      },
      {
        "id": 11,
        "label": "if raid_event . participants_count > 0 { reward_per_participant = raid_event . total_reward_amount / raid_event . participants_count as u64 ; }"
      },
      {
        "id": 12,
        "label": "reward_per_participant = raid_event . total_reward_amount / raid_event . participants_count as u64 ;"
      },
      {
        "id": 13,
        "label": "let mut amount_to_transfer = 0 ;"
      },
      {
        "id": 14,
        "label": "let mut loop_count = 0 ;"
      },
      {
        "id": 15,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 16,
        "label": "while i < ranks . len () { loop_count += 1 ; if loop_count > raid_event . max_participants { break ; } if ranks [i] <= 10 { amount_to_transfer = reward_per_participant + 100 ; } else { amount_to_transfer = reward_per_participant ; } if amount_to_transfer > 0 { let cpi_accounts = Transfer { from : ctx . accounts . pool_account . to_account_info () , to : ctx . accounts . participant_token_account . to_account_info () , authority : ctx . accounts . creator . to_account_info () , } ; let cpi_program = ctx . accounts . token_program . to_account_info () ; let cpi_ctx = CpiContext :: new (cpi_program , cpi_accounts) ; token :: transfer (cpi_ctx , amount_to_transfer) ? ; } i += 1 ; }"
      },
      {
        "id": 17,
        "label": "loop_count += 1 ;"
      },
      {
        "id": 18,
        "label": "if loop_count > raid_event . max_participants { break ; }"
      },
      {
        "id": 19,
        "label": "break ;"
      },
      {
        "id": 20,
        "label": "if ranks [i] <= 10 { amount_to_transfer = reward_per_participant + 100 ; } else { amount_to_transfer = reward_per_participant ; }"
      },
      {
        "id": 21,
        "label": "amount_to_transfer = reward_per_participant + 100 ;"
      },
      {
        "id": 22,
        "label": "amount_to_transfer = reward_per_participant ;"
      },
      {
        "id": 23,
        "label": "if amount_to_transfer > 0 { let cpi_accounts = Transfer { from : ctx . accounts . pool_account . to_account_info () , to : ctx . accounts . participant_token_account . to_account_info () , authority : ctx . accounts . creator . to_account_info () , } ; let cpi_program = ctx . accounts . token_program . to_account_info () ; let cpi_ctx = CpiContext :: new (cpi_program , cpi_accounts) ; token :: transfer (cpi_ctx , amount_to_transfer) ? ; }"
      },
      {
        "id": 24,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . pool_account . to_account_info () , to : ctx . accounts . participant_token_account . to_account_info () , authority : ctx . accounts . creator . to_account_info () , } ;"
      },
      {
        "id": 25,
        "label": "let cpi_program = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 26,
        "label": "let cpi_ctx = CpiContext :: new (cpi_program , cpi_accounts) ;"
      },
      {
        "id": 27,
        "label": "token :: transfer (cpi_ctx , amount_to_transfer) ? ;"
      },
      {
        "id": 28,
        "label": "i += 1 ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: raid_event"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: reward_per_participant"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: raid_event"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: raid_event"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: raid_event"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: raid_event"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: raid_event"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: amount_to_transfer"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: loop_count"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: i"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: loop_count"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: loop_count"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: raid_event"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: loop_count"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: loop_count"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: raid_event"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: reward_per_participant"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: cpi_accounts"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: cpi_program"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: cpi_ctx"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: cpi_program"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: amount_to_transfer"
      },
      {
        "from": 15,
        "to": 28,
        "label": "data_dep: i"
      }
    ]
  }
]