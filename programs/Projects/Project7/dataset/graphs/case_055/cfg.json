[
  {
    "name": "init_board",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "b . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "b . pool_units = if pool_units < 30 { 30 } else { pool_units } ;"
      },
      {
        "id": 4,
        "label": "b . season = 1 ;"
      },
      {
        "id": 5,
        "label": "b . total_paid = 3 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_payout",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 9,
        "label": "let total_weight = weight1 as u64 + weight2 as u64 + weight3 as u64 ;"
      },
      {
        "id": 10,
        "label": "let mut share1 = b . pool_units * weight1 as u64 / total_weight ;"
      },
      {
        "id": 11,
        "label": "let mut share2 = b . pool_units * weight2 as u64 / total_weight ;"
      },
      {
        "id": 12,
        "label": "let mut share3 = b . pool_units * weight3 as u64 / total_weight ;"
      },
      {
        "id": 13,
        "label": "let sum_now = share1 + share2 + share3 ;"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "sum_now < b . pool_units"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "share1 = share1 + (b . pool_units - sum_now) ;"
      },
      {
        "id": 19,
        "label": "False body"
      },
      {
        "id": 20,
        "label": "No-op"
      },
      {
        "id": 21,
        "label": "merge"
      },
      {
        "id": 22,
        "label": "token :: transfer (ctx . accounts . pool_to_w1 () , share1) ? ;"
      },
      {
        "id": 23,
        "label": "token :: transfer (ctx . accounts . pool_to_w2 () , share2) ? ;"
      },
      {
        "id": 24,
        "label": "token :: transfer (ctx . accounts . pool_to_w3 () , share3) ? ;"
      },
      {
        "id": 25,
        "label": "b . total_paid = b . total_paid + share1 + share2 + share3 ;"
      },
      {
        "id": 26,
        "label": "b . season = b . season + 1 ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 14,
        "to": 19,
        "label": "false"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 18,
        "to": 21,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      }
    ]
  }
]