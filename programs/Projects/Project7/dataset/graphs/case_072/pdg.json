[
  {
    "name": "init_raid",
    "inputs": [
      "ctx: Context < InitRaid >",
      "base_chunk_input: u64",
      "daily_limit_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let raid = & mut ctx . accounts . raid ;"
      },
      {
        "id": 2,
        "label": "raid . leader = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "raid . base_chunk = base_chunk_input ;"
      },
      {
        "id": 4,
        "label": "if raid . base_chunk < 2 { raid . base_chunk = 2 ; }"
      },
      {
        "id": 5,
        "label": "raid . base_chunk = 2 ;"
      },
      {
        "id": 6,
        "label": "raid . daily_limit = daily_limit_input ;"
      },
      {
        "id": 7,
        "label": "if raid . daily_limit < raid . base_chunk { raid . daily_limit = raid . base_chunk ; }"
      },
      {
        "id": 8,
        "label": "raid . daily_limit = raid . base_chunk ;"
      },
      {
        "id": 9,
        "label": "raid . sent_today = 0 ;"
      },
      {
        "id": 10,
        "label": "raid . role_mode = RoleMode :: Balanced ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: raid"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: raid"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: raid"
      }
    ]
  },
  {
    "name": "act_distribute",
    "inputs": [
      "ctx: Context < ActDistribute >",
      "member_count: u8",
      "is_support_heavy: bool"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let raid = & mut ctx . accounts . raid ;"
      },
      {
        "id": 14,
        "label": "let mut grant_units : u64 = raid . base_chunk ;"
      },
      {
        "id": 15,
        "label": "let mut member_cursor : u8 = 1 ;"
      },
      {
        "id": 16,
        "label": "while member_cursor < member_count { grant_units = grant_units + 1 ; member_cursor = member_cursor + 1 ; }"
      },
      {
        "id": 17,
        "label": "grant_units = grant_units + 1 ;"
      },
      {
        "id": 18,
        "label": "member_cursor = member_cursor + 1 ;"
      },
      {
        "id": 19,
        "label": "if is_support_heavy { grant_units = grant_units + 2 ; }"
      },
      {
        "id": 20,
        "label": "grant_units = grant_units + 2 ;"
      },
      {
        "id": 21,
        "label": "if raid . role_mode == RoleMode :: Aggressive { grant_units = grant_units + grant_units / 10 ; }"
      },
      {
        "id": 22,
        "label": "grant_units = grant_units + grant_units / 10 ;"
      },
      {
        "id": 23,
        "label": "if raid . role_mode == RoleMode :: Defensive { grant_units = grant_units - grant_units / 12 ; }"
      },
      {
        "id": 24,
        "label": "grant_units = grant_units - grant_units / 12 ;"
      },
      {
        "id": 25,
        "label": "let projected = raid . sent_today + grant_units ;"
      },
      {
        "id": 26,
        "label": "if projected > raid . daily_limit { return Err (RaidErr :: DailyLimit . into ()) ; }"
      },
      {
        "id": 27,
        "label": "return Err (RaidErr :: DailyLimit . into ()) ;"
      },
      {
        "id": 28,
        "label": "token :: approve (ctx . accounts . approve_ctx () , grant_units) ? ;"
      },
      {
        "id": 29,
        "label": "token :: transfer (ctx . accounts . transfer_ctx () , grant_units) ? ;"
      },
      {
        "id": 30,
        "label": "token :: revoke (ctx . accounts . revoke_ctx ()) ? ;"
      },
      {
        "id": 31,
        "label": "raid . sent_today = projected ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: raid"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: raid"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: raid"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: raid"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: projected"
      },
      {
        "from": 13,
        "to": 25,
        "label": "data_dep: raid"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: projected"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: raid"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: raid"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: projected"
      }
    ]
  }
]