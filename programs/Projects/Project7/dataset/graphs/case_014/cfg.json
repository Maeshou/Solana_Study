[
  {
    "name": "init_forge",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let forge = & mut ctx . accounts . forge ;"
      },
      {
        "id": 2,
        "label": "forge . creator = ctx . accounts . creator . key () ;"
      },
      {
        "id": 3,
        "label": "forge . min_quality = min_quality ;"
      },
      {
        "id": 4,
        "label": "forge . stage_index = 1 ;"
      },
      {
        "id": 5,
        "label": "forge . materials_consumed = 5 ;"
      },
      {
        "id": 6,
        "label": "forge . state_flag = ForgeState :: Dormant ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_forge",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let forge = & mut ctx . accounts . forge ;"
      },
      {
        "id": 10,
        "label": "let mut total_cost = base_cost ;"
      },
      {
        "id": 11,
        "label": "Loop Start"
      },
      {
        "id": 12,
        "label": "total_cost = total_cost . saturating_add (3) ;"
      },
      {
        "id": 13,
        "label": "Loop End"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "quality < forge . min_quality"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "forge . state_flag = ForgeState :: Cooling ;"
      },
      {
        "id": 19,
        "label": "return Err (ForgeErr :: LowQuality . into ()) ;"
      },
      {
        "id": 20,
        "label": "False body"
      },
      {
        "id": 21,
        "label": "forge . state_flag = ForgeState :: Heating ;"
      },
      {
        "id": 22,
        "label": "merge"
      },
      {
        "id": 23,
        "label": "let cpi = ctx . accounts . burn_materials_ctx () ;"
      },
      {
        "id": 24,
        "label": "token :: burn (cpi , total_cost) ? ;"
      },
      {
        "id": 25,
        "label": "forge . materials_consumed = forge . materials_consumed . saturating_add (total_cost) ;"
      },
      {
        "id": 26,
        "label": "forge . stage_index = forge . stage_index . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "forge . state_flag = ForgeState :: Finished ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 11,
        "to": 13,
        "label": "for"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 14,
        "to": 20,
        "label": "false"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      }
    ]
  }
]