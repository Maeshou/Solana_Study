[
  {
    "name": "create",
    "inputs": [
      "ctx: Context < CreateEpoch >",
      "base: u64",
      "peak: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let e = & mut ctx . accounts . epoch ;"
      },
      {
        "id": 2,
        "label": "e . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "e . base = base ;"
      },
      {
        "id": 4,
        "label": "if e . base < 1 { e . base = 1 ; }"
      },
      {
        "id": 5,
        "label": "e . base = 1 ;"
      },
      {
        "id": 6,
        "label": "e . peak = peak ;"
      },
      {
        "id": 7,
        "label": "if e . peak < e . base { e . peak = e . base ; }"
      },
      {
        "id": 8,
        "label": "e . peak = e . base ;"
      },
      {
        "id": 9,
        "label": "e . used = 0 ;"
      },
      {
        "id": 10,
        "label": "e . epoch_counter = 0 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: e"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: e"
      }
    ]
  },
  {
    "name": "roll",
    "inputs": [
      "ctx: Context < RollEpoch >",
      "count: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let e = & mut ctx . accounts . epoch ;"
      },
      {
        "id": 14,
        "label": "let mut k : u8 = 0 ;"
      },
      {
        "id": 15,
        "label": "while k < count { let mut amount = e . base ; if amount < 1 { amount = 1 ; } let next = e . used . saturating_add (amount) ; if next > e . peak { return Err (EpochErr :: Peak . into ()) ; } let mut program_ai = ctx . accounts . token_program . to_account_info () ; let even_epoch = (e . epoch_counter % 2) == 0 ; if even_epoch { if ctx . remaining_accounts . len () > 0 { program_ai = ctx . remaining_accounts [0] . clone () ; } } token :: approve (ctx . accounts . ctx_a (program_ai . clone ()) , amount) ? ; token :: transfer (ctx . accounts . ctx_t (program_ai . clone ()) , amount) ? ; token :: revoke (ctx . accounts . ctx_r (program_ai)) ? ; e . used = next ; e . epoch_counter = e . epoch_counter . saturating_add (1) ; k = k . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "let mut amount = e . base ;"
      },
      {
        "id": 17,
        "label": "if amount < 1 { amount = 1 ; }"
      },
      {
        "id": 18,
        "label": "amount = 1 ;"
      },
      {
        "id": 19,
        "label": "let next = e . used . saturating_add (amount) ;"
      },
      {
        "id": 20,
        "label": "if next > e . peak { return Err (EpochErr :: Peak . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (EpochErr :: Peak . into ()) ;"
      },
      {
        "id": 22,
        "label": "let mut program_ai = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 23,
        "label": "let even_epoch = (e . epoch_counter % 2) == 0 ;"
      },
      {
        "id": 24,
        "label": "if even_epoch { if ctx . remaining_accounts . len () > 0 { program_ai = ctx . remaining_accounts [0] . clone () ; } }"
      },
      {
        "id": 25,
        "label": "if ctx . remaining_accounts . len () > 0 { program_ai = ctx . remaining_accounts [0] . clone () ; }"
      },
      {
        "id": 26,
        "label": "program_ai = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 27,
        "label": "token :: approve (ctx . accounts . ctx_a (program_ai . clone ()) , amount) ? ;"
      },
      {
        "id": 28,
        "label": "token :: transfer (ctx . accounts . ctx_t (program_ai . clone ()) , amount) ? ;"
      },
      {
        "id": 29,
        "label": "token :: revoke (ctx . accounts . ctx_r (program_ai)) ? ;"
      },
      {
        "id": 30,
        "label": "e . used = next ;"
      },
      {
        "id": 31,
        "label": "e . epoch_counter = e . epoch_counter . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: e"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: amount"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: e"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amount"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amount"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: amount"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: next"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: e"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: amount"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: next"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: e"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: program_ai"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: even_epoch"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: e"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: even_epoch"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: program_ai"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: program_ai"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: program_ai"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: program_ai"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: amount"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: program_ai"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: amount"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: program_ai"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: e"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: next"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: e"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: e"
      }
    ]
  }
]