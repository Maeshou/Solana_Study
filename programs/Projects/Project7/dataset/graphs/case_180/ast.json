[
  {
    "name": "configure",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Cfg02 >",
      "base: u64",
      "limit: u64",
      "slot: u8"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . cfg ;",
      "c . owner = ctx . accounts . owner . key () ;",
      "c . base = base . max (1) ;",
      "c . limit = limit . max (c . base) ;",
      "c . idx = slot ;",
      "c . total = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "execute",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Exe02 >",
      "reps: u8"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . cfg ;",
      "let mut k = 0u8 ;",
      "while k < reps",
      "{",
      "let amt = c . base ;",
      "let next = c . total . saturating_add (amt) ;",
      "if next > c . limit",
      "{",
      "return Err (E02 :: Limit . into ()) ;",
      "} let mut program_ai = ctx . accounts . token_program . to_account_info () ;",
      "let want = c . idx as usize ;",
      "if ctx . remaining_accounts . len () > want",
      "{",
      "program_ai = ctx . remaining_accounts [want] . clone () ;",
      "} token :: approve (ctx . accounts . a (program_ai . clone ()) , amt) ? ;",
      "token :: transfer (ctx . accounts . t (program_ai . clone ()) , amt) ? ;",
      "token :: revoke (ctx . accounts . r (program_ai)) ? ;",
      "c . total = next ;",
      "if c . total % (c . base * 4) == 0",
      "{",
      "c . idx = c . idx . wrapping_add (1) ;",
      "} k = k . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Cfg02",
    "node_type": "struct",
    "fields": [
      {
        "name": "cfg",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 8 + 1 + 8)]",
        "field_type": "Account < 'info , State02 >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Exe02",
    "node_type": "struct",
    "fields": [
      {
        "name": "cfg",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , State02 >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "from_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "to_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "State02",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "limit",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "idx",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "total",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]