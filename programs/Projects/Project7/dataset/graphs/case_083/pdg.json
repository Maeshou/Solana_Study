[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "base_pool_input: u64",
      "coach_bps_input: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "p . base_pool = base_pool_input ;"
      },
      {
        "id": 4,
        "label": "if p . base_pool < 30 { p . base_pool = 30 ; }"
      },
      {
        "id": 5,
        "label": "p . base_pool = 30 ;"
      },
      {
        "id": 6,
        "label": "p . coach_bps = clamp_u16 (coach_bps_input , 500 , 3000) ;"
      },
      {
        "id": 7,
        "label": "p . round = 1 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_bonus",
    "inputs": [
      "ctx: Context < ActBonus >",
      "player_count: u8",
      "top_finish: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 11,
        "label": "let mut performance = p . base_pool / 10 + 1 ;"
      },
      {
        "id": 12,
        "label": "let mut step : u8 = 0 ;"
      },
      {
        "id": 13,
        "label": "while step < top_finish { performance = performance + 2 ; step = step + 1 ; }"
      },
      {
        "id": 14,
        "label": "performance = performance + 2 ;"
      },
      {
        "id": 15,
        "label": "step = step + 1 ;"
      },
      {
        "id": 16,
        "label": "let mut team_payout = p . base_pool + performance ;"
      },
      {
        "id": 17,
        "label": "let mut m : u8 = 1 ;"
      },
      {
        "id": 18,
        "label": "while m < player_count { team_payout = team_payout + 1 ; m = m + 1 ; }"
      },
      {
        "id": 19,
        "label": "team_payout = team_payout + 1 ;"
      },
      {
        "id": 20,
        "label": "m = m + 1 ;"
      },
      {
        "id": 21,
        "label": "let coach_cut = team_payout * p . coach_bps as u64 / 10_000 ;"
      },
      {
        "id": 22,
        "label": "let player_cut = team_payout - coach_cut ;"
      },
      {
        "id": 23,
        "label": "token :: transfer (ctx . accounts . pool_to_players () , player_cut) ? ;"
      },
      {
        "id": 24,
        "label": "token :: transfer (ctx . accounts . pool_to_coach () , coach_cut) ? ;"
      },
      {
        "id": 25,
        "label": "p . round = p . round + 1 ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: p"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: performance"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: performance"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: performance"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: performance"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: performance"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: team_payout"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: performance"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: team_payout"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: team_payout"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: team_payout"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: team_payout"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: coach_cut"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: team_payout"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: player_cut"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: team_payout"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: coach_cut"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: player_cut"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: coach_cut"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "nodes": [
      {
        "id": 31,
        "label": "Entry"
      },
      {
        "id": 32,
        "label": "let mut o = v ;"
      },
      {
        "id": 33,
        "label": "if o < lo { o = lo ; }"
      },
      {
        "id": 34,
        "label": "o = lo ;"
      },
      {
        "id": 35,
        "label": "if o > hi { o = hi ; }"
      },
      {
        "id": 36,
        "label": "o = hi ;"
      },
      {
        "id": 37,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 32,
        "to": 32,
        "label": "def: o"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 36,
        "label": "data_dep: o"
      },
      {
        "from": 32,
        "to": 37,
        "label": "data_dep: o"
      }
    ]
  }
]