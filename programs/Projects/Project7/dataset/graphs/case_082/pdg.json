[
  {
    "name": "init_station",
    "inputs": [
      "ctx: Context < InitStation >",
      "chunk_input: u64",
      "daily_limit_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "s . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "s . chunk = chunk_input ;"
      },
      {
        "id": 4,
        "label": "if s . chunk < 2 { s . chunk = 2 ; }"
      },
      {
        "id": 5,
        "label": "s . chunk = 2 ;"
      },
      {
        "id": 6,
        "label": "s . daily_limit = daily_limit_input ;"
      },
      {
        "id": 7,
        "label": "if s . daily_limit < s . chunk { s . daily_limit = s . chunk ; }"
      },
      {
        "id": 8,
        "label": "s . daily_limit = s . chunk ;"
      },
      {
        "id": 9,
        "label": "s . sent_today = 0 ;"
      },
      {
        "id": 10,
        "label": "s . cool_grade = 1 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "act_topup",
    "inputs": [
      "ctx: Context < ActTopup >",
      "bursts: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 14,
        "label": "let mut i : u8 = 0 ;"
      },
      {
        "id": 15,
        "label": "while i < bursts { let divider = s . cool_grade + 1 ; let mut amount = s . chunk / divider ; if amount < 1 { amount = 1 ; } let next = s . sent_today + amount ; if next > s . daily_limit { s . cool_grade = s . cool_grade + 1 ; return Err (TopupErr :: Daily . into ()) ; } token :: approve (ctx . accounts . approve_ctx () , amount) ? ; token :: transfer (ctx . accounts . transfer_ctx () , amount) ? ; token :: revoke (ctx . accounts . revoke_ctx ()) ? ; s . sent_today = next ; let relief_step = s . chunk * 4 ; if relief_step > 0 { if s . sent_today % relief_step == 0 { if s . cool_grade > 0 { s . cool_grade = s . cool_grade - 1 ; } } } i = i + 1 ; }"
      },
      {
        "id": 16,
        "label": "let divider = s . cool_grade + 1 ;"
      },
      {
        "id": 17,
        "label": "let mut amount = s . chunk / divider ;"
      },
      {
        "id": 18,
        "label": "if amount < 1 { amount = 1 ; }"
      },
      {
        "id": 19,
        "label": "amount = 1 ;"
      },
      {
        "id": 20,
        "label": "let next = s . sent_today + amount ;"
      },
      {
        "id": 21,
        "label": "if next > s . daily_limit { s . cool_grade = s . cool_grade + 1 ; return Err (TopupErr :: Daily . into ()) ; }"
      },
      {
        "id": 22,
        "label": "s . cool_grade = s . cool_grade + 1 ;"
      },
      {
        "id": 23,
        "label": "return Err (TopupErr :: Daily . into ()) ;"
      },
      {
        "id": 24,
        "label": "token :: approve (ctx . accounts . approve_ctx () , amount) ? ;"
      },
      {
        "id": 25,
        "label": "token :: transfer (ctx . accounts . transfer_ctx () , amount) ? ;"
      },
      {
        "id": 26,
        "label": "token :: revoke (ctx . accounts . revoke_ctx ()) ? ;"
      },
      {
        "id": 27,
        "label": "s . sent_today = next ;"
      },
      {
        "id": 28,
        "label": "let relief_step = s . chunk * 4 ;"
      },
      {
        "id": 29,
        "label": "if relief_step > 0 { if s . sent_today % relief_step == 0 { if s . cool_grade > 0 { s . cool_grade = s . cool_grade - 1 ; } } }"
      },
      {
        "id": 30,
        "label": "if s . sent_today % relief_step == 0 { if s . cool_grade > 0 { s . cool_grade = s . cool_grade - 1 ; } }"
      },
      {
        "id": 31,
        "label": "if s . cool_grade > 0 { s . cool_grade = s . cool_grade - 1 ; }"
      },
      {
        "id": 32,
        "label": "s . cool_grade = s . cool_grade - 1 ;"
      },
      {
        "id": 33,
        "label": "i = i + 1 ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: divider"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: amount"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: divider"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: amount"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: next"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: amount"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: next"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: amount"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: next"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: relief_step"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: relief_step"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: relief_step"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: relief_step"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: s"
      }
    ]
  }
]