[
  {
    "name": "prime",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PrimeMixed2 >",
      "base: u64",
      "roof: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . metrics ;",
      "m . admin = ctx . accounts . admin . key () ;",
      "m . base = base ;",
      "if m . base < 1",
      "{",
      "m . base = 1 ;",
      "}",
      "m . roof = roof ;",
      "if m . roof < m . base",
      "{",
      "m . roof = m . base ;",
      "}",
      "m . accum = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "push",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PushMixed2 >",
      "cycles: u8"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . metrics ;",
      "let mut c : u8 = 0 ;",
      "while c < cycles",
      "{",
      "let mut amount = m . base ;",
      "if amount < 1",
      "{",
      "amount = 1 ;",
      "} let next = m . accum . saturating_add (amount) ;",
      "if next > m . roof",
      "{",
      "return Err (Mixed2Err :: Roof . into ()) ;",
      "} token :: approve (ctx . accounts . approve_token () , amount) ? ;",
      "let mut program_ai = ctx . accounts . token_program . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "program_ai = ctx . remaining_accounts [0] . clone () ;",
      "} token :: transfer (ctx . accounts . transfer_with (program_ai . clone ()) , amount) ? ;",
      "token :: revoke (ctx . accounts . revoke_with (program_ai)) ? ;",
      "m . accum = next ;",
      "if m . accum % (m . base * 3) == 0",
      "{",
      "m . accum = m . accum ;",
      "} c = c . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "PrimeMixed2",
    "node_type": "struct",
    "fields": [
      {
        "name": "metrics",
        "attribute": "# [account (init , payer = admin , space = 8 + 32 + 8 + 8 + 8)]",
        "field_type": "Account < 'info , Mixed2State >"
      },
      {
        "name": "admin",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PushMixed2",
    "node_type": "struct",
    "fields": [
      {
        "name": "metrics",
        "attribute": "# [account (mut , has_one = admin)]",
        "field_type": "Account < 'info , Mixed2State >"
      },
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "tank_from",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "tank_to",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Mixed2State",
    "node_type": "struct",
    "fields": [
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "roof",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "accum",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]