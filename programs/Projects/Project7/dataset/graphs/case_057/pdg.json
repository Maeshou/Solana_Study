[
  {
    "name": "init_alliance",
    "inputs": [
      "ctx: Context < InitAlliance >",
      "base_units_input: u64",
      "start_fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let state = & mut ctx . accounts . alliance ;"
      },
      {
        "id": 2,
        "label": "state . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "state . base_units = base_units_input ;"
      },
      {
        "id": 4,
        "label": "if state . base_units < 1 { state . base_units = 1 ; }"
      },
      {
        "id": 5,
        "label": "state . base_units = 1 ;"
      },
      {
        "id": 6,
        "label": "state . fee_bps = clamp_u16 (start_fee_bps , 100 , 2500) ;"
      },
      {
        "id": 7,
        "label": "state . round_index = 1 ;"
      },
      {
        "id": 8,
        "label": "state . total_distributed = 1 ;"
      },
      {
        "id": 9,
        "label": "state . scale = AllianceScale :: Mid ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: state"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: state"
      }
    ]
  },
  {
    "name": "act_grant",
    "inputs": [
      "ctx: Context < ActGrant >",
      "member_count: u8",
      "sessions: u8"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let state = & mut ctx . accounts . alliance ;"
      },
      {
        "id": 13,
        "label": "let mut member_bonus : u64 = 0 ;"
      },
      {
        "id": 14,
        "label": "let mut cursor : u8 = 1 ;"
      },
      {
        "id": 15,
        "label": "while cursor <= member_count { if cursor <= 4 { member_bonus = member_bonus + 7 ; } if cursor > 4 { member_bonus = member_bonus + 4 ; } if cursor > 9 { member_bonus = member_bonus + 3 ; } cursor = cursor + 1 ; }"
      },
      {
        "id": 16,
        "label": "if cursor <= 4 { member_bonus = member_bonus + 7 ; }"
      },
      {
        "id": 17,
        "label": "member_bonus = member_bonus + 7 ;"
      },
      {
        "id": 18,
        "label": "if cursor > 4 { member_bonus = member_bonus + 4 ; }"
      },
      {
        "id": 19,
        "label": "member_bonus = member_bonus + 4 ;"
      },
      {
        "id": 20,
        "label": "if cursor > 9 { member_bonus = member_bonus + 3 ; }"
      },
      {
        "id": 21,
        "label": "member_bonus = member_bonus + 3 ;"
      },
      {
        "id": 22,
        "label": "cursor = cursor + 1 ;"
      },
      {
        "id": 23,
        "label": "let mut harmonic_bps : u64 = 0 ;"
      },
      {
        "id": 24,
        "label": "let mut step : u8 = 1 ;"
      },
      {
        "id": 25,
        "label": "while step <= sessions { harmonic_bps = harmonic_bps + (10_000 / (step as u64 + 9)) ; step = step + 1 ; }"
      },
      {
        "id": 26,
        "label": "harmonic_bps = harmonic_bps + (10_000 / (step as u64 + 9)) ;"
      },
      {
        "id": 27,
        "label": "step = step + 1 ;"
      },
      {
        "id": 28,
        "label": "let mut effective = state . base_units + (harmonic_bps / 50) ;"
      },
      {
        "id": 29,
        "label": "if state . scale == AllianceScale :: High { effective = effective + effective / 8 ; }"
      },
      {
        "id": 30,
        "label": "effective = effective + effective / 8 ;"
      },
      {
        "id": 31,
        "label": "if state . scale == AllianceScale :: Low { effective = effective - effective / 12 ; }"
      },
      {
        "id": 32,
        "label": "effective = effective - effective / 12 ;"
      },
      {
        "id": 33,
        "label": "effective = effective + member_bonus ;"
      },
      {
        "id": 34,
        "label": "let mut fee_bps_now : u64 = state . fee_bps as u64 ;"
      },
      {
        "id": 35,
        "label": "let mut r : u64 = 0 ;"
      },
      {
        "id": 36,
        "label": "while r < state . round_index / 2 { if fee_bps_now > 100 { fee_bps_now = fee_bps_now - 100 ; } r = r + 1 ; }"
      },
      {
        "id": 37,
        "label": "if fee_bps_now > 100 { fee_bps_now = fee_bps_now - 100 ; }"
      },
      {
        "id": 38,
        "label": "fee_bps_now = fee_bps_now - 100 ;"
      },
      {
        "id": 39,
        "label": "r = r + 1 ;"
      },
      {
        "id": 40,
        "label": "let cap = state . base_units * 4 ;"
      },
      {
        "id": 41,
        "label": "if effective > cap { effective = cap ; }"
      },
      {
        "id": 42,
        "label": "effective = cap ;"
      },
      {
        "id": 43,
        "label": "if effective < 1 { effective = 1 ; }"
      },
      {
        "id": 44,
        "label": "effective = 1 ;"
      },
      {
        "id": 45,
        "label": "let fee_units = (effective as u128 * fee_bps_now as u128 / 10_000u128) as u64 ;"
      },
      {
        "id": 46,
        "label": "let net_units = effective - fee_units ;"
      },
      {
        "id": 47,
        "label": "token :: transfer (ctx . accounts . treasury_to_member () , net_units) ? ;"
      },
      {
        "id": 48,
        "label": "token :: transfer (ctx . accounts . treasury_to_fee () , fee_units) ? ;"
      },
      {
        "id": 49,
        "label": "state . total_distributed = state . total_distributed + net_units ;"
      },
      {
        "id": 50,
        "label": "state . round_index = state . round_index + 1 ;"
      },
      {
        "id": 51,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: state"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: effective"
      },
      {
        "from": 12,
        "to": 28,
        "label": "data_dep: state"
      },
      {
        "from": 12,
        "to": 29,
        "label": "data_dep: state"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: effective"
      },
      {
        "from": 12,
        "to": 31,
        "label": "data_dep: state"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: effective"
      },
      {
        "from": 12,
        "to": 34,
        "label": "data_dep: state"
      },
      {
        "from": 12,
        "to": 36,
        "label": "data_dep: state"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: cap"
      },
      {
        "from": 12,
        "to": 40,
        "label": "data_dep: state"
      },
      {
        "from": 28,
        "to": 41,
        "label": "data_dep: effective"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: cap"
      },
      {
        "from": 28,
        "to": 41,
        "label": "data_dep: effective"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: cap"
      },
      {
        "from": 28,
        "to": 42,
        "label": "data_dep: effective"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: cap"
      },
      {
        "from": 28,
        "to": 43,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 43,
        "label": "data_dep: effective"
      },
      {
        "from": 28,
        "to": 44,
        "label": "data_dep: effective"
      },
      {
        "from": 45,
        "to": 45,
        "label": "def: fee_units"
      },
      {
        "from": 28,
        "to": 45,
        "label": "data_dep: effective"
      },
      {
        "from": 46,
        "to": 46,
        "label": "def: net_units"
      },
      {
        "from": 28,
        "to": 46,
        "label": "data_dep: effective"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: fee_units"
      },
      {
        "from": 46,
        "to": 47,
        "label": "data_dep: net_units"
      },
      {
        "from": 45,
        "to": 48,
        "label": "data_dep: fee_units"
      },
      {
        "from": 12,
        "to": 49,
        "label": "data_dep: state"
      },
      {
        "from": 12,
        "to": 49,
        "label": "data_dep: state"
      },
      {
        "from": 46,
        "to": 49,
        "label": "data_dep: net_units"
      },
      {
        "from": 12,
        "to": 50,
        "label": "data_dep: state"
      },
      {
        "from": 12,
        "to": 50,
        "label": "data_dep: state"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "nodes": [
      {
        "id": 56,
        "label": "Entry"
      },
      {
        "id": 57,
        "label": "let mut o = v ;"
      },
      {
        "id": 58,
        "label": "if o < lo { o = lo ; }"
      },
      {
        "id": 59,
        "label": "o = lo ;"
      },
      {
        "id": 60,
        "label": "if o > hi { o = hi ; }"
      },
      {
        "id": 61,
        "label": "o = hi ;"
      },
      {
        "id": 62,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 57,
        "to": 57,
        "label": "def: o"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 59,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 60,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 60,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 61,
        "label": "data_dep: o"
      },
      {
        "from": 57,
        "to": 62,
        "label": "data_dep: o"
      }
    ]
  }
]