[
  {
    "name": "ready",
    "inputs": [
      "ctx: Context < ReadyS >",
      "base: u64",
      "peak: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . stack ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . base = if base < 1 { 1 } else { base } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "base"
      },
      {
        "id": 6,
        "label": "s . peak = if peak < s . base { s . base } else { peak } ;"
      },
      {
        "id": 7,
        "label": "s . base"
      },
      {
        "id": 8,
        "label": "peak"
      },
      {
        "id": 9,
        "label": "s . acc = 0 ;"
      },
      {
        "id": 10,
        "label": "s . flag = 0 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "go",
    "inputs": [
      "ctx: Context < GoS >",
      "n: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let s = & mut ctx . accounts . stack ;"
      },
      {
        "id": 14,
        "label": "let mut i : u8 = 0 ;"
      },
      {
        "id": 15,
        "label": "while i < n { let mut amt = s . base ; if amt < 1 { amt = 1 ; } let nxt = s . acc . saturating_add (amt) ; if nxt > s . peak { return Err (StageErr :: Peak . into ()) ; } let odd = (s . flag % 2) == 1 ; let p_ext = ctx . accounts . ext . to_account_info () ; let p_tok = ctx . accounts . token_program . to_account_info () ; token :: approve (ctx . accounts . ctx_a (p_ext . clone ()) , amt) ? ; token :: transfer (ctx . accounts . ctx_t (p_tok . clone ()) , amt) ? ; token :: revoke (ctx . accounts . ctx_r (p_tok)) ? ; s . acc = nxt ; if s . acc % (s . base * 3) == 0 { s . flag = s . flag . saturating_add (1) ; } if odd { s . flag = s . flag ; } i = i . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "let mut amt = s . base ;"
      },
      {
        "id": 17,
        "label": "if amt < 1 { amt = 1 ; }"
      },
      {
        "id": 18,
        "label": "amt = 1 ;"
      },
      {
        "id": 19,
        "label": "let nxt = s . acc . saturating_add (amt) ;"
      },
      {
        "id": 20,
        "label": "if nxt > s . peak { return Err (StageErr :: Peak . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (StageErr :: Peak . into ()) ;"
      },
      {
        "id": 22,
        "label": "let odd = (s . flag % 2) == 1 ;"
      },
      {
        "id": 23,
        "label": "let p_ext = ctx . accounts . ext . to_account_info () ;"
      },
      {
        "id": 24,
        "label": "let p_tok = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 25,
        "label": "token :: approve (ctx . accounts . ctx_a (p_ext . clone ()) , amt) ? ;"
      },
      {
        "id": 26,
        "label": "token :: transfer (ctx . accounts . ctx_t (p_tok . clone ()) , amt) ? ;"
      },
      {
        "id": 27,
        "label": "token :: revoke (ctx . accounts . ctx_r (p_tok)) ? ;"
      },
      {
        "id": 28,
        "label": "s . acc = nxt ;"
      },
      {
        "id": 29,
        "label": "if s . acc % (s . base * 3) == 0 { s . flag = s . flag . saturating_add (1) ; }"
      },
      {
        "id": 30,
        "label": "s . flag = s . flag . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "if odd { s . flag = s . flag ; }"
      },
      {
        "id": 32,
        "label": "s . flag = s . flag ;"
      },
      {
        "id": 33,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: amt"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: amt"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: nxt"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: amt"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: nxt"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: odd"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: p_ext"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: p_tok"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: p_ext"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: p_tok"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: p_tok"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: nxt"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: odd"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: s"
      }
    ]
  }
]