[
  {
    "name": "boot",
    "inputs": [
      "ctx: Context < BootT >",
      "unit: u64",
      "top: u64",
      "threshold: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . device ;"
      },
      {
        "id": 2,
        "label": "d . holder = ctx . accounts . holder . key () ;"
      },
      {
        "id": 3,
        "label": "d . unit = if unit < 1 { 1 } else { unit } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "unit"
      },
      {
        "id": 6,
        "label": "d . top = if top < d . unit { d . unit } else { top } ;"
      },
      {
        "id": 7,
        "label": "d . unit"
      },
      {
        "id": 8,
        "label": "top"
      },
      {
        "id": 9,
        "label": "d . ticks = 0 ;"
      },
      {
        "id": 10,
        "label": "d . threshold = if threshold < 1 { 1 } else { threshold } ;"
      },
      {
        "id": 11,
        "label": "1"
      },
      {
        "id": 12,
        "label": "threshold"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: d"
      }
    ]
  },
  {
    "name": "step",
    "inputs": [
      "ctx: Context < StepT >",
      "times: u8"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let d = & mut ctx . accounts . device ;"
      },
      {
        "id": 16,
        "label": "let mut j : u8 = 0 ;"
      },
      {
        "id": 17,
        "label": "while j < times { let mut amt = d . unit ; if amt < 1 { amt = 1 ; } let next = d . ticks . saturating_add (amt) ; if next > d . top { return Err (ThreshErr :: Top . into ()) ; } if d . ticks >= d . threshold { token :: approve (ctx . accounts . alt_a () , amt) ? ; token :: transfer (ctx . accounts . alt_t () , amt) ? ; token :: revoke (ctx . accounts . alt_r ()) ? ; } else { token :: approve (ctx . accounts . base_a () , amt) ? ; token :: transfer (ctx . accounts . base_t () , amt) ? ; token :: revoke (ctx . accounts . base_r ()) ? ; } d . ticks = next ; if d . ticks % (d . unit * 6) == 0 { d . threshold = d . threshold . saturating_add (1) ; } j = j . saturating_add (1) ; }"
      },
      {
        "id": 18,
        "label": "let mut amt = d . unit ;"
      },
      {
        "id": 19,
        "label": "if amt < 1 { amt = 1 ; }"
      },
      {
        "id": 20,
        "label": "amt = 1 ;"
      },
      {
        "id": 21,
        "label": "let next = d . ticks . saturating_add (amt) ;"
      },
      {
        "id": 22,
        "label": "if next > d . top { return Err (ThreshErr :: Top . into ()) ; }"
      },
      {
        "id": 23,
        "label": "return Err (ThreshErr :: Top . into ()) ;"
      },
      {
        "id": 24,
        "label": "if d . ticks >= d . threshold { token :: approve (ctx . accounts . alt_a () , amt) ? ; token :: transfer (ctx . accounts . alt_t () , amt) ? ; token :: revoke (ctx . accounts . alt_r ()) ? ; } else { token :: approve (ctx . accounts . base_a () , amt) ? ; token :: transfer (ctx . accounts . base_t () , amt) ? ; token :: revoke (ctx . accounts . base_r ()) ? ; }"
      },
      {
        "id": 25,
        "label": "token :: approve (ctx . accounts . alt_a () , amt) ? ;"
      },
      {
        "id": 26,
        "label": "token :: transfer (ctx . accounts . alt_t () , amt) ? ;"
      },
      {
        "id": 27,
        "label": "token :: revoke (ctx . accounts . alt_r ()) ? ;"
      },
      {
        "id": 28,
        "label": "token :: approve (ctx . accounts . base_a () , amt) ? ;"
      },
      {
        "id": 29,
        "label": "token :: transfer (ctx . accounts . base_t () , amt) ? ;"
      },
      {
        "id": 30,
        "label": "token :: revoke (ctx . accounts . base_r ()) ? ;"
      },
      {
        "id": 31,
        "label": "d . ticks = next ;"
      },
      {
        "id": 32,
        "label": "if d . ticks % (d . unit * 6) == 0 { d . threshold = d . threshold . saturating_add (1) ; }"
      },
      {
        "id": 33,
        "label": "d . threshold = d . threshold . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "j = j . saturating_add (1) ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: d"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: amt"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: d"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: amt"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: next"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: d"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: amt"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: next"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: d"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: amt"
      },
      {
        "from": 15,
        "to": 31,
        "label": "data_dep: d"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: next"
      },
      {
        "from": 15,
        "to": 32,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 32,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 32,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 32,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 33,
        "label": "data_dep: d"
      },
      {
        "from": 15,
        "to": 33,
        "label": "data_dep: d"
      }
    ]
  }
]