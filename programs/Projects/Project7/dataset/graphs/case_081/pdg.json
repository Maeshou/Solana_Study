[
  {
    "name": "init_campaign",
    "inputs": [
      "ctx: Context < InitCampaign >",
      "base_cpm_input: u64",
      "fee_bps_input: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . campaign ;"
      },
      {
        "id": 2,
        "label": "c . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "c . base_cpm = base_cpm_input ;"
      },
      {
        "id": 4,
        "label": "if c . base_cpm < 1 { c . base_cpm = 1 ; }"
      },
      {
        "id": 5,
        "label": "c . base_cpm = 1 ;"
      },
      {
        "id": 6,
        "label": "c . fee_bps = clamp_u16 (fee_bps_input , 0 , 2000) ;"
      },
      {
        "id": 7,
        "label": "c . round = 1 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "act_settle",
    "inputs": [
      "ctx: Context < ActSettle >",
      "impressions: u64",
      "publishers: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let c = & mut ctx . accounts . campaign ;"
      },
      {
        "id": 11,
        "label": "let mut effective_cpm = c . base_cpm ;"
      },
      {
        "id": 12,
        "label": "let mut p : u8 = 0 ;"
      },
      {
        "id": 13,
        "label": "while p < publishers { effective_cpm = effective_cpm + 1 + (p as u64 % 3) ; p = p + 1 ; }"
      },
      {
        "id": 14,
        "label": "effective_cpm = effective_cpm + 1 + (p as u64 % 3) ;"
      },
      {
        "id": 15,
        "label": "p = p + 1 ;"
      },
      {
        "id": 16,
        "label": "let gross = (impressions as u128 * effective_cpm as u128 / 1000u128) as u64 ;"
      },
      {
        "id": 17,
        "label": "let fee = gross * c . fee_bps as u64 / 10_000 ;"
      },
      {
        "id": 18,
        "label": "let payout = gross - fee ;"
      },
      {
        "id": 19,
        "label": "token :: transfer (ctx . accounts . pool_to_publishers () , payout) ? ;"
      },
      {
        "id": 20,
        "label": "token :: transfer (ctx . accounts . pool_to_operator_fee () , fee) ? ;"
      },
      {
        "id": 21,
        "label": "c . round = c . round + 1 ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: c"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: effective_cpm"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: effective_cpm"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: effective_cpm"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: effective_cpm"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: effective_cpm"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: gross"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: effective_cpm"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: fee"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: gross"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: c"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: payout"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: gross"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: fee"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: payout"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: fee"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: c"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "nodes": [
      {
        "id": 27,
        "label": "Entry"
      },
      {
        "id": 28,
        "label": "let mut o = v ;"
      },
      {
        "id": 29,
        "label": "if o < lo { o = lo ; }"
      },
      {
        "id": 30,
        "label": "o = lo ;"
      },
      {
        "id": 31,
        "label": "if o > hi { o = hi ; }"
      },
      {
        "id": 32,
        "label": "o = hi ;"
      },
      {
        "id": 33,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 28,
        "label": "def: o"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: o"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: o"
      }
    ]
  }
]