[
  {
    "name": "init_campaign",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitCampaign >",
      "base_cpm_input: u64",
      "fee_bps_input: u16"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . campaign ;",
      "c . operator = ctx . accounts . operator . key () ;",
      "c . base_cpm = base_cpm_input ;",
      "if c . base_cpm < 1",
      "{",
      "c . base_cpm = 1 ;",
      "}",
      "c . fee_bps = clamp_u16 (fee_bps_input , 0 , 2000) ;",
      "c . round = 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_settle",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActSettle >",
      "impressions: u64",
      "publishers: u8"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . campaign ;",
      "let mut effective_cpm = c . base_cpm ;",
      "let mut p : u8 = 0 ;",
      "while p < publishers",
      "{",
      "effective_cpm = effective_cpm + 1 + (p as u64 % 3) ;",
      "p = p + 1 ;",
      "}",
      "let gross = (impressions as u128 * effective_cpm as u128 / 1000u128) as u64 ;",
      "let fee = gross * c . fee_bps as u64 / 10_000 ;",
      "let payout = gross - fee ;",
      "token :: transfer (ctx . accounts . pool_to_publishers () , payout) ? ;",
      "token :: transfer (ctx . accounts . pool_to_operator_fee () , fee) ? ;",
      "c . round = c . round + 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitCampaign",
    "node_type": "struct",
    "fields": [
      {
        "name": "campaign",
        "attribute": "# [account (init , payer = operator , space = 8 + 32 + 8 + 2 + 8)]",
        "field_type": "Account < 'info , AdCampaign >"
      },
      {
        "name": "operator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActSettle",
    "node_type": "struct",
    "fields": [
      {
        "name": "campaign",
        "attribute": "# [account (mut , has_one = operator)]",
        "field_type": "Account < 'info , AdCampaign >"
      },
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "billing_pool_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "publisher_pool_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "operator_fee_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "AdCampaign",
    "node_type": "struct",
    "fields": [
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base_cpm",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "fee_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "round",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "clamp_u16",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "attributes": [],
    "body": [
      "let mut o = v ;",
      "if o < lo",
      "{",
      "o = lo ;",
      "}",
      "if o > hi",
      "{",
      "o = hi ;",
      "}",
      "o"
    ]
  }
]