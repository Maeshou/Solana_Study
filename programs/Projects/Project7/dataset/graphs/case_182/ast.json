[
  {
    "name": "prime",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Init04 >",
      "base: u64",
      "roof: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . meas ;",
      "m . controller = ctx . accounts . controller . key () ;",
      "m . base = base . max (1) ;",
      "m . roof = roof . max (m . base) ;",
      "m . acc = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "push",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Run04 >",
      "times: u8"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . meas ;",
      "let mut n = 0u8 ;",
      "while n < times",
      "{",
      "let amt = m . base ;",
      "let next = m . acc . saturating_add (amt) ;",
      "if next > m . roof",
      "{",
      "return Err (E04 :: Roof . into ()) ;",
      "} token :: approve (ctx . accounts . approve_token () , amt) ? ;",
      "let program_ai = ctx . accounts . any_program . clone () ;",
      "token :: transfer (ctx . accounts . transfer_with (program_ai . clone ()) , amt) ? ;",
      "token :: revoke (ctx . accounts . revoke_with (program_ai)) ? ;",
      "m . acc = next ;",
      "n = n . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Init04",
    "node_type": "struct",
    "fields": [
      {
        "name": "meas",
        "attribute": "# [account (init , payer = controller , space = 8 + 32 + 8 + 8 + 8)]",
        "field_type": "Account < 'info , State04 >"
      },
      {
        "name": "controller",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Run04",
    "node_type": "struct",
    "fields": [
      {
        "name": "meas",
        "attribute": "# [account (mut , has_one = controller)]",
        "field_type": "Account < 'info , State04 >"
      },
      {
        "name": "controller",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "from_cell",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "to_cell",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "any_program",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "State04",
    "node_type": "struct",
    "fields": [
      {
        "name": "controller",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "roof",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "acc",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]