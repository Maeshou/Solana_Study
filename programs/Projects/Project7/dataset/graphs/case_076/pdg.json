[
  {
    "name": "init_quiz",
    "inputs": [
      "ctx: Context < InitQuiz >",
      "daily_cap_input: u64",
      "base_point_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let q = & mut ctx . accounts . quiz ;"
      },
      {
        "id": 2,
        "label": "q . host = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "q . daily_cap = daily_cap_input ;"
      },
      {
        "id": 4,
        "label": "if q . daily_cap < 20 { q . daily_cap = 20 ; }"
      },
      {
        "id": 5,
        "label": "q . daily_cap = 20 ;"
      },
      {
        "id": 6,
        "label": "q . base_point = base_point_input ;"
      },
      {
        "id": 7,
        "label": "if q . base_point < 1 { q . base_point = 1 ; }"
      },
      {
        "id": 8,
        "label": "q . base_point = 1 ;"
      },
      {
        "id": 9,
        "label": "q . issued_today = 0 ;"
      },
      {
        "id": 10,
        "label": "q . streak_counter = 1 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: q"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: q"
      }
    ]
  },
  {
    "name": "act_award",
    "inputs": [
      "ctx: Context < ActAward >",
      "answers_mask: u64",
      "rounds_played: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let q = & mut ctx . accounts . quiz ;"
      },
      {
        "id": 14,
        "label": "let mut score_units : u64 = 0 ;"
      },
      {
        "id": 15,
        "label": "let mut bit_cursor : u8 = 0 ;"
      },
      {
        "id": 16,
        "label": "while bit_cursor < 16 { let bit_flag = (answers_mask >> bit_cursor) & 1 ; if bit_flag == 1 { score_units = score_units + (bit_cursor as u64 + 1) ; } bit_cursor = bit_cursor + 1 ; }"
      },
      {
        "id": 17,
        "label": "let bit_flag = (answers_mask >> bit_cursor) & 1 ;"
      },
      {
        "id": 18,
        "label": "if bit_flag == 1 { score_units = score_units + (bit_cursor as u64 + 1) ; }"
      },
      {
        "id": 19,
        "label": "score_units = score_units + (bit_cursor as u64 + 1) ;"
      },
      {
        "id": 20,
        "label": "bit_cursor = bit_cursor + 1 ;"
      },
      {
        "id": 21,
        "label": "let mut multiplier_percent : u64 = 100 ;"
      },
      {
        "id": 22,
        "label": "let mut round_cursor : u8 = 0 ;"
      },
      {
        "id": 23,
        "label": "while round_cursor < rounds_played { multiplier_percent = multiplier_percent + 3 ; round_cursor = round_cursor + 1 ; }"
      },
      {
        "id": 24,
        "label": "multiplier_percent = multiplier_percent + 3 ;"
      },
      {
        "id": 25,
        "label": "round_cursor = round_cursor + 1 ;"
      },
      {
        "id": 26,
        "label": "let base_units : u64 = q . base_point + score_units / 3 + 1 ;"
      },
      {
        "id": 27,
        "label": "let mut final_units : u64 = (base_units as u128 * multiplier_percent as u128 / 100u128) as u64 ;"
      },
      {
        "id": 28,
        "label": "if q . streak_counter % 5 == 0 { final_units = final_units + 2 ; }"
      },
      {
        "id": 29,
        "label": "final_units = final_units + 2 ;"
      },
      {
        "id": 30,
        "label": "if q . streak_counter % 8 == 0 { final_units = final_units + 3 ; }"
      },
      {
        "id": 31,
        "label": "final_units = final_units + 3 ;"
      },
      {
        "id": 32,
        "label": "let projected = q . issued_today + final_units ;"
      },
      {
        "id": 33,
        "label": "if projected > q . daily_cap { let remainder = q . daily_cap - q . issued_today ; if remainder > 0 { token :: mint_to (ctx . accounts . mint_ctx () , remainder) ? ; } q . issued_today = q . daily_cap ; q . streak_counter = 1 ; return Err (QuizErr :: DailyCap . into ()) ; }"
      },
      {
        "id": 34,
        "label": "let remainder = q . daily_cap - q . issued_today ;"
      },
      {
        "id": 35,
        "label": "if remainder > 0 { token :: mint_to (ctx . accounts . mint_ctx () , remainder) ? ; }"
      },
      {
        "id": 36,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , remainder) ? ;"
      },
      {
        "id": 37,
        "label": "q . issued_today = q . daily_cap ;"
      },
      {
        "id": 38,
        "label": "q . streak_counter = 1 ;"
      },
      {
        "id": 39,
        "label": "return Err (QuizErr :: DailyCap . into ()) ;"
      },
      {
        "id": 40,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , final_units) ? ;"
      },
      {
        "id": 41,
        "label": "q . issued_today = projected ;"
      },
      {
        "id": 42,
        "label": "q . streak_counter = q . streak_counter + 1 ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: q"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: bit_flag"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: bit_flag"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: q"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: projected"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: q"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: projected"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: remainder"
      },
      {
        "from": 13,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: remainder"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: remainder"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: remainder"
      },
      {
        "from": 13,
        "to": 37,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 37,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 38,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 41,
        "label": "data_dep: q"
      },
      {
        "from": 32,
        "to": 41,
        "label": "data_dep: projected"
      },
      {
        "from": 13,
        "to": 42,
        "label": "data_dep: q"
      },
      {
        "from": 13,
        "to": 42,
        "label": "data_dep: q"
      }
    ]
  }
]