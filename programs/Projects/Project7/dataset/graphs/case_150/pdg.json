[
  {
    "name": "store",
    "inputs": [
      "ctx: Context < StoreC >",
      "base: u64",
      "lim: u64",
      "catalog_id: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let v = & mut ctx . accounts . vault_cfg ;"
      },
      {
        "id": 2,
        "label": "v . curator = ctx . accounts . curator . key () ;"
      },
      {
        "id": 3,
        "label": "v . base = if base < 1 { 1 } else { base } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "base"
      },
      {
        "id": 6,
        "label": "v . lim = if lim < v . base { v . base } else { lim } ;"
      },
      {
        "id": 7,
        "label": "v . base"
      },
      {
        "id": 8,
        "label": "lim"
      },
      {
        "id": 9,
        "label": "v . progress = 0 ;"
      },
      {
        "id": 10,
        "label": "v . catalog = catalog_id ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: v"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      }
    ]
  },
  {
    "name": "drain",
    "inputs": [
      "ctx: Context < DrainC >",
      "count: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let v = & mut ctx . accounts . vault_cfg ;"
      },
      {
        "id": 14,
        "label": "let mut u : u8 = 0 ;"
      },
      {
        "id": 15,
        "label": "while u < count { let mut amount = v . base ; if amount < 1 { amount = 1 ; } let tot = v . progress . saturating_add (amount) ; if tot > v . lim { return Err (CatErr :: Lim . into ()) ; } let prg = if v . catalog != Pubkey :: default () { ctx . accounts . external_catalog . to_account_info () } else { ctx . accounts . token_program . to_account_info () } ; token :: approve (ctx . accounts . make_approve (prg . clone ()) , amount) ? ; token :: transfer (ctx . accounts . make_transfer (prg . clone ()) , amount) ? ; token :: revoke (ctx . accounts . make_revoke (prg)) ? ; v . progress = tot ; if v . progress % (v . base * 7) == 0 { v . catalog = v . catalog ; } u = u . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "let mut amount = v . base ;"
      },
      {
        "id": 17,
        "label": "if amount < 1 { amount = 1 ; }"
      },
      {
        "id": 18,
        "label": "amount = 1 ;"
      },
      {
        "id": 19,
        "label": "let tot = v . progress . saturating_add (amount) ;"
      },
      {
        "id": 20,
        "label": "if tot > v . lim { return Err (CatErr :: Lim . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (CatErr :: Lim . into ()) ;"
      },
      {
        "id": 22,
        "label": "let prg = if v . catalog != Pubkey :: default () { ctx . accounts . external_catalog . to_account_info () } else { ctx . accounts . token_program . to_account_info () } ;"
      },
      {
        "id": 23,
        "label": "ctx . accounts . external_catalog . to_account_info ()"
      },
      {
        "id": 24,
        "label": "ctx . accounts . token_program . to_account_info ()"
      },
      {
        "id": 25,
        "label": "token :: approve (ctx . accounts . make_approve (prg . clone ()) , amount) ? ;"
      },
      {
        "id": 26,
        "label": "token :: transfer (ctx . accounts . make_transfer (prg . clone ()) , amount) ? ;"
      },
      {
        "id": 27,
        "label": "token :: revoke (ctx . accounts . make_revoke (prg)) ? ;"
      },
      {
        "id": 28,
        "label": "v . progress = tot ;"
      },
      {
        "id": 29,
        "label": "if v . progress % (v . base * 7) == 0 { v . catalog = v . catalog ; }"
      },
      {
        "id": 30,
        "label": "v . catalog = v . catalog ;"
      },
      {
        "id": 31,
        "label": "u = u . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: amount"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: v"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amount"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: amount"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: amount"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: tot"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: v"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: amount"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: tot"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: prg"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: v"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: prg"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: amount"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: prg"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: amount"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: prg"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: v"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: tot"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: v"
      }
    ]
  }
]