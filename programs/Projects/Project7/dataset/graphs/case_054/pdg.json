[
  {
    "name": "init_program",
    "inputs": [
      "ctx: Context < InitProgram >",
      "cashback_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let prog = & mut ctx . accounts . program_state ;"
      },
      {
        "id": 2,
        "label": "prog . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "prog . cashback_bps = clamp_u16 (cashback_bps , 100 , 3000) ;"
      },
      {
        "id": 4,
        "label": "prog . loyalty_points = 2 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: prog"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: prog"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: prog"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: prog"
      }
    ]
  },
  {
    "name": "act_purchase",
    "inputs": [
      "ctx: Context < ActPurchase >",
      "ticket_price: u64",
      "quantity: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let prog = & mut ctx . accounts . program_state ;"
      },
      {
        "id": 8,
        "label": "let total = ticket_price * quantity ;"
      },
      {
        "id": 9,
        "label": "token :: transfer (ctx . accounts . buyer_to_merchant () , total) ? ;"
      },
      {
        "id": 10,
        "label": "let mut factor = 100u64 ;"
      },
      {
        "id": 11,
        "label": "let mut loop_i : u8 = 0 ;"
      },
      {
        "id": 12,
        "label": "while loop_i < (prog . loyalty_points % 5) as u8 { factor = factor + 5 ; loop_i = loop_i + 1 ; }"
      },
      {
        "id": 13,
        "label": "factor = factor + 5 ;"
      },
      {
        "id": 14,
        "label": "loop_i = loop_i + 1 ;"
      },
      {
        "id": 15,
        "label": "let base_cashback = total * prog . cashback_bps as u64 / 10_000 ;"
      },
      {
        "id": 16,
        "label": "let scaled = (base_cashback as u128 * factor as u128 / 100u128) as u64 ;"
      },
      {
        "id": 17,
        "label": "token :: mint_to (ctx . accounts . mint_reward () , scaled) ? ;"
      },
      {
        "id": 18,
        "label": "prog . loyalty_points = prog . loyalty_points + 1 ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: prog"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: total"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: total"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: factor"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: prog"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: factor"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: factor"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: factor"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: factor"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: base_cashback"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: prog"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: scaled"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: base_cashback"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: factor"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: scaled"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: prog"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: prog"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let mut o = v ;"
      },
      {
        "id": 26,
        "label": "if o < lo { o = lo ; }"
      },
      {
        "id": 27,
        "label": "o = lo ;"
      },
      {
        "id": 28,
        "label": "if o > hi { o = hi ; }"
      },
      {
        "id": 29,
        "label": "o = hi ;"
      },
      {
        "id": 30,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: o"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: o"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: o"
      }
    ]
  }
]