[
  {
    "name": "init_agreement",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitAgreement >",
      "scholar_bps: u16",
      "fund_bps: u16"
    ],
    "attributes": [],
    "body": [
      "let deal = & mut ctx . accounts . deal ;",
      "deal . manager_key = ctx . accounts . manager . key () ;",
      "deal . scholar_share_bps = scholar_bps . min (9000) . max (500) ;",
      "deal . dev_fund_bps = fund_bps . min (2000) ;",
      "deal . round_counter = 5 ;",
      "deal . revenue_accumulator = 13 ;",
      "deal . variable_mode = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_split",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActSplit >",
      "cycle_revenue: u64"
    ],
    "attributes": [],
    "body": [
      "let deal = & mut ctx . accounts . deal ;",
      "let mut extra_bps = 0u64 ;",
      "let mut r = 1u64 ;",
      "while r <= deal . round_counter",
      "{",
      "if r % 5 == 0",
      "{",
      "extra_bps = extra_bps . saturating_add (100) ;",
      "} r = r . saturating_add (1) ;",
      "}",
      "let average = deal . revenue_accumulator . saturating_div (deal . round_counter . max (1)) ;",
      "if cycle_revenue > average",
      "{",
      "deal . variable_mode = true ;",
      "}",
      "if cycle_revenue <= average",
      "{",
      "deal . variable_mode = false ;",
      "}",
      "let fund_cut = cycle_revenue . saturating_mul (deal . dev_fund_bps as u64) / 10_000 ;",
      "let pool_after_fund = cycle_revenue . saturating_sub (fund_cut) ;",
      "let scholar_cut = if deal . variable_mode { pool_after_fund . saturating_mul (55) / 100 . saturating_add (pool_after_fund . saturating_mul (extra_bps) / 10_000) } else { pool_after_fund . saturating_mul ((deal . scholar_share_bps as u64) . saturating_add (extra_bps)) / 10_000 } ;",
      "let manager_cut = pool_after_fund . saturating_sub (scholar_cut) ;",
      "token :: transfer (ctx . accounts . income_to_fund () , fund_cut) ? ;",
      "token :: transfer (ctx . accounts . income_to_scholar () , scholar_cut) ? ;",
      "token :: transfer (ctx . accounts . income_to_manager () , manager_cut) ? ;",
      "deal . revenue_accumulator = deal . revenue_accumulator . saturating_add (cycle_revenue) ;",
      "deal . round_counter = deal . round_counter . saturating_add (1) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitAgreement",
    "node_type": "struct",
    "fields": [
      {
        "name": "deal",
        "attribute": "# [account (init , payer = manager , space = 8 + 32 + 2 + 2 + 8 + 8 + 1)]",
        "field_type": "Account < 'info , AgreementState >"
      },
      {
        "name": "manager",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActSplit",
    "node_type": "struct",
    "fields": [
      {
        "name": "deal",
        "attribute": "# [account (mut , has_one = manager_key)]",
        "field_type": "Account < 'info , AgreementState >"
      },
      {
        "name": "manager_key",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "income_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "scholar_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "manager_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "dev_fund_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "AgreementState",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager_key",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "scholar_share_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "dev_fund_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "round_counter",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "revenue_accumulator",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "variable_mode",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]