[
  {
    "name": "init_arena",
    "inputs": [
      "ctx: Context < InitArena >",
      "penalty_base_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let arena = & mut ctx . accounts . arena ;"
      },
      {
        "id": 2,
        "label": "arena . referee = ctx . accounts . referee . key () ;"
      },
      {
        "id": 3,
        "label": "arena . penalty_base = penalty_base_input ;"
      },
      {
        "id": 4,
        "label": "if arena . penalty_base < 1 { arena . penalty_base = 1 ; }"
      },
      {
        "id": 5,
        "label": "arena . penalty_base = 1 ;"
      },
      {
        "id": 6,
        "label": "arena . losses = 0 ;"
      },
      {
        "id": 7,
        "label": "arena . consolation_issued = 0 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: arena"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: arena"
      }
    ]
  },
  {
    "name": "act_settle",
    "inputs": [
      "ctx: Context < ActSettle >",
      "streak_losses: u8",
      "consolation_mint: bool"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let arena = & mut ctx . accounts . arena ;"
      },
      {
        "id": 11,
        "label": "let mut penalty = arena . penalty_base ;"
      },
      {
        "id": 12,
        "label": "let mut i : u8 = 0 ;"
      },
      {
        "id": 13,
        "label": "while i < streak_losses { penalty = penalty + (arena . penalty_base / 10) + 1 ; i = i + 1 ; }"
      },
      {
        "id": 14,
        "label": "penalty = penalty + (arena . penalty_base / 10) + 1 ;"
      },
      {
        "id": 15,
        "label": "i = i + 1 ;"
      },
      {
        "id": 16,
        "label": "token :: burn (ctx . accounts . burn_ctx () , penalty) ? ;"
      },
      {
        "id": 17,
        "label": "arena . losses = arena . losses + 1 ;"
      },
      {
        "id": 18,
        "label": "if consolation_mint { let mut consolation = penalty / 5 + 1 ; if streak_losses >= 3 { consolation = consolation + 2 ; } token :: mint_to (ctx . accounts . mint_ctx () , consolation) ? ; arena . consolation_issued = arena . consolation_issued + consolation ; }"
      },
      {
        "id": 19,
        "label": "let mut consolation = penalty / 5 + 1 ;"
      },
      {
        "id": 20,
        "label": "if streak_losses >= 3 { consolation = consolation + 2 ; }"
      },
      {
        "id": 21,
        "label": "consolation = consolation + 2 ;"
      },
      {
        "id": 22,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , consolation) ? ;"
      },
      {
        "id": 23,
        "label": "arena . consolation_issued = arena . consolation_issued + consolation ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: arena"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: penalty"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: arena"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: penalty"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: penalty"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: arena"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: penalty"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: penalty"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: arena"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: penalty"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: arena"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: arena"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: penalty"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: arena"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: arena"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: consolation"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: penalty"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: consolation"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: consolation"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: consolation"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: consolation"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: consolation"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: arena"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: arena"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: consolation"
      }
    ]
  }
]