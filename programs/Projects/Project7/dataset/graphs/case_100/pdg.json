[
  {
    "name": "initialize_gacha",
    "inputs": [
      "ctx: Context < InitializeGacha >",
      "ticket_price: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let gacha = & mut ctx . accounts . gacha_state ;"
      },
      {
        "id": 2,
        "label": "gacha . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "gacha . ticket_price = ticket_price ;"
      },
      {
        "id": 4,
        "label": "gacha . ticket_mint = ctx . accounts . ticket_mint . key () ;"
      },
      {
        "id": 5,
        "label": "gacha . item_mint = ctx . accounts . item_mint . key () ;"
      },
      {
        "id": 6,
        "label": "gacha . rewards_granted = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: gacha"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: gacha"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: gacha"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: gacha"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: gacha"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: gacha"
      }
    ]
  },
  {
    "name": "pull_gacha",
    "inputs": [
      "ctx: Context < PullGacha >"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let gacha = & mut ctx . accounts . gacha_state ;"
      },
      {
        "id": 10,
        "label": "let tickets_owned = ctx . accounts . player_ticket_account . amount ;"
      },
      {
        "id": 11,
        "label": "if tickets_owned < gacha . ticket_price { return Err (ErrorCode :: InsufficientTickets . into ()) ; }"
      },
      {
        "id": 12,
        "label": "return Err (ErrorCode :: InsufficientTickets . into ()) ;"
      },
      {
        "id": 13,
        "label": "let mut remaining_tickets = tickets_owned ;"
      },
      {
        "id": 14,
        "label": "let mut pull_count = 0 ;"
      },
      {
        "id": 15,
        "label": "for _ in 0 .. 10 { if remaining_tickets >= gacha . ticket_price { let burn_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . ticket_mint . to_account_info () , from : ctx . accounts . player_ticket_account . to_account_info () , authority : ctx . accounts . player . to_account_info () , } ,) ; token :: burn (burn_ctx , gacha . ticket_price) ? ; remaining_tickets -= gacha . ticket_price ; pull_count += 1 ; } else { break ; } }"
      },
      {
        "id": 16,
        "label": "if remaining_tickets >= gacha . ticket_price { let burn_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . ticket_mint . to_account_info () , from : ctx . accounts . player_ticket_account . to_account_info () , authority : ctx . accounts . player . to_account_info () , } ,) ; token :: burn (burn_ctx , gacha . ticket_price) ? ; remaining_tickets -= gacha . ticket_price ; pull_count += 1 ; } else { break ; }"
      },
      {
        "id": 17,
        "label": "let burn_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . ticket_mint . to_account_info () , from : ctx . accounts . player_ticket_account . to_account_info () , authority : ctx . accounts . player . to_account_info () , } ,) ;"
      },
      {
        "id": 18,
        "label": "token :: burn (burn_ctx , gacha . ticket_price) ? ;"
      },
      {
        "id": 19,
        "label": "remaining_tickets -= gacha . ticket_price ;"
      },
      {
        "id": 20,
        "label": "pull_count += 1 ;"
      },
      {
        "id": 21,
        "label": "break ;"
      },
      {
        "id": 22,
        "label": "if pull_count > 0 { let prize_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , MintTo { mint : ctx . accounts . item_mint . to_account_info () , to : ctx . accounts . player_item_account . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) ; token :: mint_to (prize_ctx , pull_count as u64) ? ; gacha . rewards_granted += pull_count as u64 ; }"
      },
      {
        "id": 23,
        "label": "let prize_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , MintTo { mint : ctx . accounts . item_mint . to_account_info () , to : ctx . accounts . player_item_account . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) ;"
      },
      {
        "id": 24,
        "label": "token :: mint_to (prize_ctx , pull_count as u64) ? ;"
      },
      {
        "id": 25,
        "label": "gacha . rewards_granted += pull_count as u64 ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: gacha"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: tickets_owned"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: tickets_owned"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: gacha"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: remaining_tickets"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: tickets_owned"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: pull_count"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: remaining_tickets"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: gacha"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: gacha"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: remaining_tickets"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: gacha"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: pull_count"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: remaining_tickets"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: gacha"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: gacha"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: remaining_tickets"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: gacha"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: pull_count"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: burn_ctx"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: burn_ctx"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: gacha"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: remaining_tickets"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: gacha"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: pull_count"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: pull_count"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: pull_count"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: gacha"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: pull_count"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: prize_ctx"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: prize_ctx"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: pull_count"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: gacha"
      },
      {
        "from": 14,
        "to": 25,
        "label": "data_dep: pull_count"
      }
    ]
  }
]