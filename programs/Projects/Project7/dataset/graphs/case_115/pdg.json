[
  {
    "name": "initialize_threshold",
    "inputs": [
      "ctx: Context < InitializeThreshold >",
      "minimum_balance: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let threshold_state = & mut ctx . accounts . threshold_state ;"
      },
      {
        "id": 2,
        "label": "threshold_state . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "threshold_state . minimum_balance = minimum_balance ;"
      },
      {
        "id": 4,
        "label": "threshold_state . topped_up = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: threshold_state"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: threshold_state"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: threshold_state"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: threshold_state"
      }
    ]
  },
  {
    "name": "move_funds",
    "inputs": [
      "ctx: Context < MoveFunds >",
      "transfer_amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let mut selected_program = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 8,
        "label": "if ctx . accounts . intermediate_tokens . amount < ctx . accounts . threshold_state . minimum_balance { selected_program = ctx . accounts . external_program . clone () ; let top_up = transfer_amount / 10 ; if top_up > 0 { token :: transfer (CpiContext :: new (selected_program . clone () , Transfer { from : ctx . accounts . source_tokens . to_account_info () , to : ctx . accounts . intermediate_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , }) , top_up) ? ; ctx . accounts . threshold_state . topped_up = ctx . accounts . threshold_state . topped_up . saturating_add (top_up) ; msg ! (\"intermediate topped up by {}\" , top_up) ; } }"
      },
      {
        "id": 9,
        "label": "selected_program = ctx . accounts . external_program . clone () ;"
      },
      {
        "id": 10,
        "label": "let top_up = transfer_amount / 10 ;"
      },
      {
        "id": 11,
        "label": "if top_up > 0 { token :: transfer (CpiContext :: new (selected_program . clone () , Transfer { from : ctx . accounts . source_tokens . to_account_info () , to : ctx . accounts . intermediate_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , }) , top_up) ? ; ctx . accounts . threshold_state . topped_up = ctx . accounts . threshold_state . topped_up . saturating_add (top_up) ; msg ! (\"intermediate topped up by {}\" , top_up) ; }"
      },
      {
        "id": 12,
        "label": "token :: transfer (CpiContext :: new (selected_program . clone () , Transfer { from : ctx . accounts . source_tokens . to_account_info () , to : ctx . accounts . intermediate_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , }) , top_up) ? ;"
      },
      {
        "id": 13,
        "label": "ctx . accounts . threshold_state . topped_up = ctx . accounts . threshold_state . topped_up . saturating_add (top_up) ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"intermediate topped up by {}\" , top_up) ;"
      },
      {
        "id": 15,
        "label": "token :: approve (CpiContext :: new (selected_program . clone () , Approve { to : ctx . accounts . source_tokens . to_account_info () , delegate : ctx . accounts . intermediate_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , }) , transfer_amount) ? ;"
      },
      {
        "id": 16,
        "label": "token :: transfer (CpiContext :: new (selected_program . clone () , Transfer { from : ctx . accounts . source_tokens . to_account_info () , to : ctx . accounts . intermediate_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , }) , transfer_amount) ? ;"
      },
      {
        "id": 17,
        "label": "token :: revoke (CpiContext :: new (selected_program , Revoke { source : ctx . accounts . source_tokens . to_account_info () , authority : ctx . accounts . owner . to_account_info () , })) ? ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: selected_program"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: selected_program"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: selected_program"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: selected_program"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: top_up"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: top_up"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: selected_program"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: top_up"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: top_up"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: selected_program"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: top_up"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: top_up"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: selected_program"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: selected_program"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: selected_program"
      }
    ]
  }
]