[
  {
    "name": "configure",
    "inputs": [
      "ctx: Context < ConfigureC >",
      "base: u64",
      "limit: u64",
      "prefer_alt: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "st . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "st . base = if base < 1 { 1 } else { base } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "base"
      },
      {
        "id": 6,
        "label": "st . limit = if limit < st . base { st . base } else { limit } ;"
      },
      {
        "id": 7,
        "label": "st . base"
      },
      {
        "id": 8,
        "label": "limit"
      },
      {
        "id": 9,
        "label": "st . today = 0 ;"
      },
      {
        "id": 10,
        "label": "st . prefer_alt = prefer_alt ;"
      },
      {
        "id": 11,
        "label": "st . catalog = ctx . accounts . catalog_program . key () ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      }
    ]
  },
  {
    "name": "execute",
    "inputs": [
      "ctx: Context < ExecuteC >",
      "rounds: u8"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let st = & mut ctx . accounts . station ;"
      },
      {
        "id": 15,
        "label": "let mut count = 0u8 ;"
      },
      {
        "id": 16,
        "label": "while count < rounds { let amount = st . base ; let new_total = st . today . saturating_add (amount) ; if new_total > st . limit { return Err (ExecCErr :: Quota . into ()) ; } let chosen = if st . prefer_alt { 1u8 } else { 0u8 } ; if chosen == 1 { token :: approve (ctx . accounts . approve_with_alt () , amount) ? ; token :: transfer (ctx . accounts . transfer_with_alt () , amount) ? ; token :: revoke (ctx . accounts . revoke_with_alt ()) ? ; } else { token :: approve (ctx . accounts . approve_with_token () , amount) ? ; token :: transfer (ctx . accounts . transfer_with_token () , amount) ? ; token :: revoke (ctx . accounts . revoke_with_token ()) ? ; } st . today = new_total ; if st . today % (st . base * 5) == 0 { st . prefer_alt = ! st . prefer_alt ; } count = count . saturating_add (1) ; }"
      },
      {
        "id": 17,
        "label": "let amount = st . base ;"
      },
      {
        "id": 18,
        "label": "let new_total = st . today . saturating_add (amount) ;"
      },
      {
        "id": 19,
        "label": "if new_total > st . limit { return Err (ExecCErr :: Quota . into ()) ; }"
      },
      {
        "id": 20,
        "label": "return Err (ExecCErr :: Quota . into ()) ;"
      },
      {
        "id": 21,
        "label": "let chosen = if st . prefer_alt { 1u8 } else { 0u8 } ;"
      },
      {
        "id": 22,
        "label": "1u8"
      },
      {
        "id": 23,
        "label": "0u8"
      },
      {
        "id": 24,
        "label": "if chosen == 1 { token :: approve (ctx . accounts . approve_with_alt () , amount) ? ; token :: transfer (ctx . accounts . transfer_with_alt () , amount) ? ; token :: revoke (ctx . accounts . revoke_with_alt ()) ? ; } else { token :: approve (ctx . accounts . approve_with_token () , amount) ? ; token :: transfer (ctx . accounts . transfer_with_token () , amount) ? ; token :: revoke (ctx . accounts . revoke_with_token ()) ? ; }"
      },
      {
        "id": 25,
        "label": "token :: approve (ctx . accounts . approve_with_alt () , amount) ? ;"
      },
      {
        "id": 26,
        "label": "token :: transfer (ctx . accounts . transfer_with_alt () , amount) ? ;"
      },
      {
        "id": 27,
        "label": "token :: revoke (ctx . accounts . revoke_with_alt ()) ? ;"
      },
      {
        "id": 28,
        "label": "token :: approve (ctx . accounts . approve_with_token () , amount) ? ;"
      },
      {
        "id": 29,
        "label": "token :: transfer (ctx . accounts . transfer_with_token () , amount) ? ;"
      },
      {
        "id": 30,
        "label": "token :: revoke (ctx . accounts . revoke_with_token ()) ? ;"
      },
      {
        "id": 31,
        "label": "st . today = new_total ;"
      },
      {
        "id": 32,
        "label": "if st . today % (st . base * 5) == 0 { st . prefer_alt = ! st . prefer_alt ; }"
      },
      {
        "id": 33,
        "label": "st . prefer_alt = ! st . prefer_alt ;"
      },
      {
        "id": 34,
        "label": "count = count . saturating_add (1) ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: st"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: count"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: count"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: count"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: count"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: amount"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: new_total"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: st"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: amount"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: new_total"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: chosen"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chosen"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 28,
        "label": "data_dep: amount"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: amount"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: new_total"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: st"
      },
      {
        "from": 15,
        "to": 34,
        "label": "data_dep: count"
      },
      {
        "from": 15,
        "to": 34,
        "label": "data_dep: count"
      }
    ]
  }
]