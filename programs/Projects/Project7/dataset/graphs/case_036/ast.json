[
  {
    "name": "init_boss",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBoss >",
      "base: u64"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . boss ;",
      "b . operator = ctx . accounts . operator . key () ;",
      "b . base = if base < 2 { 2 } else { base } ;",
      "b . clear = 3 ;",
      "b . max_combo = 6 ;",
      "b . hard = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_distribute",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActDistribute >",
      "party: u8",
      "combo: u32"
    ],
    "attributes": [],
    "body": [
      "require ! (party > 0 , ErrRaid :: Empty) ;",
      "let st = & mut ctx . accounts . boss ;",
      "let mut bonus = 0u64 ;",
      "let mut idx = 1u8 ;",
      "while idx <= party",
      "{",
      "if idx <= 4",
      "{",
      "bonus = bonus + 7 ;",
      "} if idx > 4",
      "{",
      "bonus = bonus + 4 ;",
      "} if idx > 8",
      "{",
      "bonus = bonus + 2 ;",
      "} idx = idx + 1 ;",
      "}",
      "let mut estimate = 1u64 ;",
      "let mut step = 0u8 ;",
      "while step < 6",
      "{",
      "estimate = (estimate + (combo as u64 / estimate . max (1))) / 2 ;",
      "step = step + 1 ;",
      "}",
      "if combo as u64 > st . max_combo",
      "{",
      "st . max_combo = combo as u64 ;",
      "}",
      "if estimate >= 8",
      "{",
      "st . hard = true ;",
      "}",
      "if estimate < 5",
      "{",
      "st . hard = false ;",
      "}",
      "let mut reward = st . base + bonus + estimate ;",
      "if st . hard",
      "{",
      "reward = reward + (reward / 2) ;",
      "}",
      "token :: transfer (ctx . accounts . treasury_to_player () , reward) ? ;",
      "st . clear = st . clear + 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitBoss",
    "node_type": "struct",
    "fields": [
      {
        "name": "boss",
        "attribute": "# [account (init , payer = operator , space = 8 + 32 + 8 + 8 + 8 + 1)]",
        "field_type": "Account < 'info , Boss >"
      },
      {
        "name": "operator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActDistribute",
    "node_type": "struct",
    "fields": [
      {
        "name": "boss",
        "attribute": "# [account (mut , has_one = operator)]",
        "field_type": "Account < 'info , Boss >"
      },
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "treasury",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "player",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Boss",
    "node_type": "struct",
    "fields": [
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "clear",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "max_combo",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "hard",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]