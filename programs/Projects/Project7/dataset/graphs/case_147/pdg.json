[
  {
    "name": "configure",
    "inputs": [
      "ctx: Context < CfgRoute >",
      "step: u64",
      "maxv: u64",
      "prefer_alt: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . router ;"
      },
      {
        "id": 2,
        "label": "r . ctrl = ctx . accounts . ctrl . key () ;"
      },
      {
        "id": 3,
        "label": "r . step = if step < 1 { 1 } else { step } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "step"
      },
      {
        "id": 6,
        "label": "r . maxv = if maxv < r . step { r . step } else { maxv } ;"
      },
      {
        "id": 7,
        "label": "r . step"
      },
      {
        "id": 8,
        "label": "maxv"
      },
      {
        "id": 9,
        "label": "r . accu = 0 ;"
      },
      {
        "id": 10,
        "label": "r . prefer_alt = prefer_alt ;"
      },
      {
        "id": 11,
        "label": "r . memo = 0 ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "process",
    "inputs": [
      "ctx: Context < RunRoute >",
      "times: u8"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let r = & mut ctx . accounts . router ;"
      },
      {
        "id": 15,
        "label": "let mut k : u8 = 0 ;"
      },
      {
        "id": 16,
        "label": "while k < times { let mut amt = r . step ; if amt < 1 { amt = 1 ; } let next = r . accu . saturating_add (amt) ; if next > r . maxv { return Err (RouteErr :: Max . into ()) ; } if r . prefer_alt { token :: approve (ctx . accounts . alt_approve () , amt) ? ; token :: transfer (ctx . accounts . alt_transfer () , amt) ? ; token :: revoke (ctx . accounts . alt_revoke ()) ? ; } else { token :: approve (ctx . accounts . base_approve () , amt) ? ; token :: transfer (ctx . accounts . base_transfer () , amt) ? ; token :: revoke (ctx . accounts . base_revoke ()) ? ; } r . accu = next ; if r . accu % (r . step * 5) == 0 { r . prefer_alt = ! r . prefer_alt ; } if r . memo == 0 { r . memo = r . accu ; } k = k . saturating_add (1) ; }"
      },
      {
        "id": 17,
        "label": "let mut amt = r . step ;"
      },
      {
        "id": 18,
        "label": "if amt < 1 { amt = 1 ; }"
      },
      {
        "id": 19,
        "label": "amt = 1 ;"
      },
      {
        "id": 20,
        "label": "let next = r . accu . saturating_add (amt) ;"
      },
      {
        "id": 21,
        "label": "if next > r . maxv { return Err (RouteErr :: Max . into ()) ; }"
      },
      {
        "id": 22,
        "label": "return Err (RouteErr :: Max . into ()) ;"
      },
      {
        "id": 23,
        "label": "if r . prefer_alt { token :: approve (ctx . accounts . alt_approve () , amt) ? ; token :: transfer (ctx . accounts . alt_transfer () , amt) ? ; token :: revoke (ctx . accounts . alt_revoke ()) ? ; } else { token :: approve (ctx . accounts . base_approve () , amt) ? ; token :: transfer (ctx . accounts . base_transfer () , amt) ? ; token :: revoke (ctx . accounts . base_revoke ()) ? ; }"
      },
      {
        "id": 24,
        "label": "token :: approve (ctx . accounts . alt_approve () , amt) ? ;"
      },
      {
        "id": 25,
        "label": "token :: transfer (ctx . accounts . alt_transfer () , amt) ? ;"
      },
      {
        "id": 26,
        "label": "token :: revoke (ctx . accounts . alt_revoke ()) ? ;"
      },
      {
        "id": 27,
        "label": "token :: approve (ctx . accounts . base_approve () , amt) ? ;"
      },
      {
        "id": 28,
        "label": "token :: transfer (ctx . accounts . base_transfer () , amt) ? ;"
      },
      {
        "id": 29,
        "label": "token :: revoke (ctx . accounts . base_revoke ()) ? ;"
      },
      {
        "id": 30,
        "label": "r . accu = next ;"
      },
      {
        "id": 31,
        "label": "if r . accu % (r . step * 5) == 0 { r . prefer_alt = ! r . prefer_alt ; }"
      },
      {
        "id": 32,
        "label": "r . prefer_alt = ! r . prefer_alt ;"
      },
      {
        "id": 33,
        "label": "if r . memo == 0 { r . memo = r . accu ; }"
      },
      {
        "id": 34,
        "label": "r . memo = r . accu ;"
      },
      {
        "id": 35,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: amt"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: amt"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: next"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: amt"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: next"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: amt"
      },
      {
        "from": 17,
        "to": 28,
        "label": "data_dep: amt"
      },
      {
        "from": 14,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: next"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 34,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 34,
        "label": "data_dep: r"
      }
    ]
  }
]