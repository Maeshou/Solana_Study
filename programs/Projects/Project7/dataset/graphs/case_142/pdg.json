[
  {
    "name": "init_station",
    "inputs": [
      "ctx: Context < InitA >",
      "chunk: u64",
      "limit: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "st . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "st . chunk = if chunk < 1 { 1 } else { chunk } ;"
      },
      {
        "id": 4,
        "label": "1"
      },
      {
        "id": 5,
        "label": "chunk"
      },
      {
        "id": 6,
        "label": "st . daily_limit = if limit < st . chunk { st . chunk } else { limit } ;"
      },
      {
        "id": 7,
        "label": "st . chunk"
      },
      {
        "id": 8,
        "label": "limit"
      },
      {
        "id": 9,
        "label": "st . sent_today = 0 ;"
      },
      {
        "id": 10,
        "label": "st . cool_level = 0 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: st"
      }
    ]
  },
  {
    "name": "drip",
    "inputs": [
      "ctx: Context < DripA >",
      "bursts: u8"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let st = & mut ctx . accounts . station ;"
      },
      {
        "id": 14,
        "label": "let mut loop_index : u8 = 0 ;"
      },
      {
        "id": 15,
        "label": "while loop_index < bursts { let base = st . chunk ; let scaled = if st . cool_level > 3 { base / 2 } else { base } ; let amount = if scaled < 1 { 1 } else { scaled } ; let projected = st . sent_today . saturating_add (amount) ; if projected > st . daily_limit { st . cool_level = st . cool_level . saturating_add (1) ; return Err (DripAErr :: Reached . into ()) ; } let use_alt = (st . cool_level % 3) == 0 ; let program_ai = if use_alt { ctx . accounts . alt_program . to_account_info () } else { ctx . accounts . token_program . to_account_info () } ; token :: approve (ctx . accounts . approve_ctx_with (program_ai . clone ()) , amount) ? ; token :: transfer (ctx . accounts . transfer_ctx_with (program_ai . clone ()) , amount) ? ; token :: revoke (ctx . accounts . revoke_ctx_with (program_ai)) ? ; st . sent_today = projected ; if st . sent_today % (st . chunk * 4) == 0 { if st . cool_level > 0 { st . cool_level -= 1 ; } } loop_index = loop_index . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "let base = st . chunk ;"
      },
      {
        "id": 17,
        "label": "let scaled = if st . cool_level > 3 { base / 2 } else { base } ;"
      },
      {
        "id": 18,
        "label": "base / 2"
      },
      {
        "id": 19,
        "label": "base"
      },
      {
        "id": 20,
        "label": "let amount = if scaled < 1 { 1 } else { scaled } ;"
      },
      {
        "id": 21,
        "label": "1"
      },
      {
        "id": 22,
        "label": "scaled"
      },
      {
        "id": 23,
        "label": "let projected = st . sent_today . saturating_add (amount) ;"
      },
      {
        "id": 24,
        "label": "if projected > st . daily_limit { st . cool_level = st . cool_level . saturating_add (1) ; return Err (DripAErr :: Reached . into ()) ; }"
      },
      {
        "id": 25,
        "label": "st . cool_level = st . cool_level . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "return Err (DripAErr :: Reached . into ()) ;"
      },
      {
        "id": 27,
        "label": "let use_alt = (st . cool_level % 3) == 0 ;"
      },
      {
        "id": 28,
        "label": "let program_ai = if use_alt { ctx . accounts . alt_program . to_account_info () } else { ctx . accounts . token_program . to_account_info () } ;"
      },
      {
        "id": 29,
        "label": "ctx . accounts . alt_program . to_account_info ()"
      },
      {
        "id": 30,
        "label": "ctx . accounts . token_program . to_account_info ()"
      },
      {
        "id": 31,
        "label": "token :: approve (ctx . accounts . approve_ctx_with (program_ai . clone ()) , amount) ? ;"
      },
      {
        "id": 32,
        "label": "token :: transfer (ctx . accounts . transfer_ctx_with (program_ai . clone ()) , amount) ? ;"
      },
      {
        "id": 33,
        "label": "token :: revoke (ctx . accounts . revoke_ctx_with (program_ai)) ? ;"
      },
      {
        "id": 34,
        "label": "st . sent_today = projected ;"
      },
      {
        "id": 35,
        "label": "if st . sent_today % (st . chunk * 4) == 0 { if st . cool_level > 0 { st . cool_level -= 1 ; } }"
      },
      {
        "id": 36,
        "label": "if st . cool_level > 0 { st . cool_level -= 1 ; }"
      },
      {
        "id": 37,
        "label": "st . cool_level -= 1 ;"
      },
      {
        "id": 38,
        "label": "loop_index = loop_index . saturating_add (1) ;"
      },
      {
        "id": 39,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: base"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: st"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: scaled"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: base"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: base"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: base"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: base"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: amount"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: scaled"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: scaled"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: scaled"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: projected"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: amount"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: projected"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: use_alt"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: st"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: program_ai"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: use_alt"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: program_ai"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: amount"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: program_ai"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: amount"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: program_ai"
      },
      {
        "from": 13,
        "to": 34,
        "label": "data_dep: st"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: projected"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: st"
      },
      {
        "from": 13,
        "to": 37,
        "label": "data_dep: st"
      }
    ]
  }
]