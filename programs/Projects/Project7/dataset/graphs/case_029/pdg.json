[
  {
    "name": "init_market",
    "inputs": [
      "ctx: Context < InitMarket >",
      "fee_bps: u16",
      "max_settlement: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let market = & mut ctx . accounts . market ;"
      },
      {
        "id": 2,
        "label": "market . operator_key = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "market . fee_bps = fee_bps . min (2000) . max (50) ;"
      },
      {
        "id": 4,
        "label": "market . settlement_cap = max_settlement . max (10) ;"
      },
      {
        "id": 5,
        "label": "market . completed_orders = 4 ;"
      },
      {
        "id": 6,
        "label": "market . total_volume = max_settlement . saturating_div (2) . max (6) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: market"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: market"
      }
    ]
  },
  {
    "name": "act_settle",
    "inputs": [
      "ctx: Context < ActSettle >",
      "price_per_unit: u64",
      "total_quantity: u64",
      "basket_parts: u8"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let market = & mut ctx . accounts . market ;"
      },
      {
        "id": 10,
        "label": "let mut remaining_qty = total_quantity . max (1) ;"
      },
      {
        "id": 11,
        "label": "let parts = basket_parts . max (1) ;"
      },
      {
        "id": 12,
        "label": "let mut part_index = 0u8 ;"
      },
      {
        "id": 13,
        "label": "while part_index < parts { let slice_qty = remaining_qty . saturating_div ((parts - part_index) . max (1) as u64) . max (1) ; let gross = slice_qty . saturating_mul (price_per_unit) ; if gross > market . settlement_cap { return Err (MktErr :: OverCap . into ()) ; } let fee_total = gross . saturating_mul (market . fee_bps as u64) / 10_000 ; let fee_half = fee_total . saturating_div (2) ; let payout_to_seller = gross . saturating_sub (fee_total) ; token :: transfer (ctx . accounts . buyer_to_seller () , payout_to_seller) ? ; token :: transfer (ctx . accounts . buyer_to_fee_primary () , fee_half) ? ; token :: transfer (ctx . accounts . buyer_to_fee_secondary () , fee_total . saturating_sub (fee_half)) ? ; market . total_volume = market . total_volume . saturating_add (gross) ; remaining_qty = remaining_qty . saturating_sub (slice_qty) ; part_index = part_index . saturating_add (1) ; }"
      },
      {
        "id": 14,
        "label": "let slice_qty = remaining_qty . saturating_div ((parts - part_index) . max (1) as u64) . max (1) ;"
      },
      {
        "id": 15,
        "label": "let gross = slice_qty . saturating_mul (price_per_unit) ;"
      },
      {
        "id": 16,
        "label": "if gross > market . settlement_cap { return Err (MktErr :: OverCap . into ()) ; }"
      },
      {
        "id": 17,
        "label": "return Err (MktErr :: OverCap . into ()) ;"
      },
      {
        "id": 18,
        "label": "let fee_total = gross . saturating_mul (market . fee_bps as u64) / 10_000 ;"
      },
      {
        "id": 19,
        "label": "let fee_half = fee_total . saturating_div (2) ;"
      },
      {
        "id": 20,
        "label": "let payout_to_seller = gross . saturating_sub (fee_total) ;"
      },
      {
        "id": 21,
        "label": "token :: transfer (ctx . accounts . buyer_to_seller () , payout_to_seller) ? ;"
      },
      {
        "id": 22,
        "label": "token :: transfer (ctx . accounts . buyer_to_fee_primary () , fee_half) ? ;"
      },
      {
        "id": 23,
        "label": "token :: transfer (ctx . accounts . buyer_to_fee_secondary () , fee_total . saturating_sub (fee_half)) ? ;"
      },
      {
        "id": 24,
        "label": "market . total_volume = market . total_volume . saturating_add (gross) ;"
      },
      {
        "id": 25,
        "label": "remaining_qty = remaining_qty . saturating_sub (slice_qty) ;"
      },
      {
        "id": 26,
        "label": "part_index = part_index . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "market . completed_orders = market . completed_orders . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: market"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: remaining_qty"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: parts"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: part_index"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: part_index"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: parts"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: parts"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: part_index"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: market"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: part_index"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: part_index"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: slice_qty"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: parts"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: part_index"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: gross"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: slice_qty"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: gross"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: market"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: fee_total"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: gross"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: market"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: fee_half"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: fee_total"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: payout_to_seller"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: gross"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: fee_total"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: payout_to_seller"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: fee_half"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: fee_total"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: fee_half"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: market"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: gross"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: remaining_qty"
      },
      {
        "from": 14,
        "to": 25,
        "label": "data_dep: slice_qty"
      },
      {
        "from": 12,
        "to": 26,
        "label": "data_dep: part_index"
      },
      {
        "from": 12,
        "to": 26,
        "label": "data_dep: part_index"
      },
      {
        "from": 9,
        "to": 27,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 27,
        "label": "data_dep: market"
      }
    ]
  }
]