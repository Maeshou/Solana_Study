[
  {
    "name": "initialize_recipe",
    "inputs": [
      "ctx: Context < InitializeRecipe >",
      "recipe_name: String",
      "required_materials: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let recipe = & mut ctx . accounts . crafting_recipe ;"
      },
      {
        "id": 2,
        "label": "recipe . recipe_creator = ctx . accounts . creator . key () ;"
      },
      {
        "id": 3,
        "label": "recipe . recipe_name = recipe_name ;"
      },
      {
        "id": 4,
        "label": "recipe . required_materials = required_materials ;"
      },
      {
        "id": 5,
        "label": "recipe . material_mint = ctx . accounts . material_mint . key () ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: recipe"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: recipe"
      }
    ]
  },
  {
    "name": "craft_nft",
    "inputs": [
      "ctx: Context < CraftNft >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let recipe = & ctx . accounts . crafting_recipe ;"
      },
      {
        "id": 9,
        "label": "let player_materials = ctx . accounts . player_material_account . amount ;"
      },
      {
        "id": 10,
        "label": "if player_materials < recipe . required_materials { return Err (ErrorCode :: InsufficientMaterials . into ()) ; }"
      },
      {
        "id": 11,
        "label": "return Err (ErrorCode :: InsufficientMaterials . into ()) ;"
      },
      {
        "id": 12,
        "label": "let burn_amount = recipe . required_materials ;"
      },
      {
        "id": 13,
        "label": "let mut crafted_count = 0 ;"
      },
      {
        "id": 14,
        "label": "let mut remaining_materials = player_materials ;"
      },
      {
        "id": 15,
        "label": "while remaining_materials >= burn_amount { let burn_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . material_mint . to_account_info () , from : ctx . accounts . player_material_account . to_account_info () , authority : ctx . accounts . player . to_account_info () , } ,) ; token :: burn (burn_ctx , burn_amount) ? ; remaining_materials -= burn_amount ; crafted_count += 1 ; }"
      },
      {
        "id": 16,
        "label": "let burn_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . material_mint . to_account_info () , from : ctx . accounts . player_material_account . to_account_info () , authority : ctx . accounts . player . to_account_info () , } ,) ;"
      },
      {
        "id": 17,
        "label": "token :: burn (burn_ctx , burn_amount) ? ;"
      },
      {
        "id": 18,
        "label": "remaining_materials -= burn_amount ;"
      },
      {
        "id": 19,
        "label": "crafted_count += 1 ;"
      },
      {
        "id": 20,
        "label": "if crafted_count > 0 { } else { return Err (ErrorCode :: InsufficientMaterials . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (ErrorCode :: InsufficientMaterials . into ()) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: recipe"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: player_materials"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: player_materials"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: recipe"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: burn_amount"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: recipe"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: crafted_count"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: remaining_materials"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: player_materials"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: remaining_materials"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: burn_amount"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: burn_amount"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: remaining_materials"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: burn_amount"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: crafted_count"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: burn_ctx"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: burn_ctx"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: burn_amount"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: remaining_materials"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: burn_amount"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: crafted_count"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: crafted_count"
      }
    ]
  }
]