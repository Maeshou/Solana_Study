[
  {
    "name": "prime",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PrimeRem >",
      "base: u64",
      "top: u64"
    ],
    "attributes": [],
    "body": [
      "let st = & mut ctx . accounts . state ;",
      "st . admin = ctx . accounts . admin . key () ;",
      "st . base = base ;",
      "if st . base < 1",
      "{",
      "st . base = 1 ;",
      "}",
      "st . top = top ;",
      "if st . top < st . base",
      "{",
      "st . top = st . base ;",
      "}",
      "st . count = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "fire",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < FireRem >",
      "n: u8"
    ],
    "attributes": [],
    "body": [
      "let st = & mut ctx . accounts . state ;",
      "let mut i : u8 = 0 ;",
      "while i < n",
      "{",
      "let mut amt = st . base ;",
      "if amt < 1",
      "{",
      "amt = 1 ;",
      "} let nxt = st . count . saturating_add (amt) ;",
      "if nxt > st . top",
      "{",
      "return Err (RemErr :: Top . into ()) ;",
      "} let mut chosen = ctx . accounts . token_program . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "let pick = ctx . remaining_accounts [0] . clone () ;",
      "chosen = pick ;",
      "} token :: approve (ctx . accounts . approve_ctx (chosen . clone ()) , amt) ? ;",
      "token :: transfer (ctx . accounts . transfer_ctx (chosen . clone ()) , amt) ? ;",
      "token :: revoke (ctx . accounts . revoke_ctx (chosen)) ? ;",
      "st . count = nxt ;",
      "if st . count % (st . base * 4) == 0",
      "{",
      "st . count = st . count ;",
      "} i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "PrimeRem",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (init , payer = admin , space = 8 + 32 + 8 + 8 + 8)]",
        "field_type": "Account < 'info , RemState >"
      },
      {
        "name": "admin",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FireRem",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut , has_one = admin)]",
        "field_type": "Account < 'info , RemState >"
      },
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "left_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "right_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "RemState",
    "node_type": "struct",
    "fields": [
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "top",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]