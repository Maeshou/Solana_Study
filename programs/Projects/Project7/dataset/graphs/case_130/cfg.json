[
  {
    "name": "configure_route",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let routing_state = & mut ctx . accounts . routing_state ;"
      },
      {
        "id": 2,
        "label": "routing_state . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "routing_state . step_window = if step_window == 0 { 1 } else { step_window } ;"
      },
      {
        "id": 4,
        "label": "routing_state . cursor = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_transfer",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let routing_state = & mut ctx . accounts . routing_state ;"
      },
      {
        "id": 8,
        "label": "let route_index = (routing_state . cursor % routing_state . step_window as u64) as usize ;"
      },
      {
        "id": 9,
        "label": "let selected_program = ctx . remaining_accounts [route_index] . clone () ;"
      },
      {
        "id": 10,
        "label": "token :: transfer (CpiContext :: new (selected_program , Transfer { from : ctx . accounts . source_tokens . to_account_info () , to : ctx . accounts . destination_tokens . to_account_info () , authority : ctx . accounts . authority . to_account_info () , } ,) , transfer_amount . max (1) ,) ? ;"
      },
      {
        "id": 11,
        "label": "routing_state . cursor = routing_state . cursor . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  }
]