[
  {
    "name": "set_route",
    "inputs": [
      "ctx: Context < SetRoute >",
      "target_program_key: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let route_config = & mut ctx . accounts . route_config ;"
      },
      {
        "id": 2,
        "label": "route_config . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "route_config . program_key = target_program_key ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: route_config"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: route_config"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: route_config"
      }
    ]
  },
  {
    "name": "hop",
    "inputs": [
      "ctx: Context < Hop >",
      "move_amount: u64"
    ],
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let wanted_key = ctx . accounts . route_config . program_key ;"
      },
      {
        "id": 7,
        "label": "let mut selected_program : Option < AccountInfo > = None ;"
      },
      {
        "id": 8,
        "label": "for account_info_item in ctx . remaining_accounts . iter () { if account_info_item . key () == wanted_key { selected_program = Some (account_info_item . clone ()) ; break ; } }"
      },
      {
        "id": 9,
        "label": "if account_info_item . key () == wanted_key { selected_program = Some (account_info_item . clone ()) ; break ; }"
      },
      {
        "id": 10,
        "label": "selected_program = Some (account_info_item . clone ()) ;"
      },
      {
        "id": 11,
        "label": "break ;"
      },
      {
        "id": 12,
        "label": "let selected_program = selected_program . ok_or (RouteErr :: ProgramNotFound) ? ;"
      },
      {
        "id": 13,
        "label": "token :: transfer (CpiContext :: new (selected_program , Transfer { from : ctx . accounts . from_account . to_account_info () , to : ctx . accounts . to_account . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) , move_amount ,) ? ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 6,
        "label": "def: wanted_key"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: wanted_key"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: wanted_key"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: selected_program"
      },
      {
        "from": 12,
        "to": 12,
        "label": "data_dep: selected_program"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: selected_program"
      }
    ]
  }
]