[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "due_amount: u64",
      "refund_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . master = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "g . due_amount = due_amount ;"
      },
      {
        "id": 4,
        "label": "g . refund_bps = refund_bps . min (5000) ;"
      },
      {
        "id": 5,
        "label": "g . collected = 0 ;"
      },
      {
        "id": 6,
        "label": "g . refunded = 0 ;"
      },
      {
        "id": 7,
        "label": "g . strict = true ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      }
    ]
  },
  {
    "name": "act_collect_or_refund",
    "inputs": [
      "ctx: Context < ActCollectOrRefund >",
      "months: u8",
      "refund: bool"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 11,
        "label": "let mut total : u64 = 0 ;"
      },
      {
        "id": 12,
        "label": "for _ in 0 .. months { total = total . saturating_add (g . due_amount) ; }"
      },
      {
        "id": 13,
        "label": "total = total . saturating_add (g . due_amount) ;"
      },
      {
        "id": 14,
        "label": "if refund { let amt = total . saturating_mul (g . refund_bps as u64) / 10_000 ; let cpi_ctx = ctx . accounts . treasury_to_member () ; token :: transfer (cpi_ctx , amt) ? ; g . refunded = g . refunded . saturating_add (amt) ; } else { require ! (g . strict || total > 0 , ErrorCode :: InvalidAmount) ; let cpi_ctx = ctx . accounts . member_to_treasury () ; token :: transfer (cpi_ctx , total) ? ; g . collected = g . collected . saturating_add (total) ; }"
      },
      {
        "id": 15,
        "label": "let amt = total . saturating_mul (g . refund_bps as u64) / 10_000 ;"
      },
      {
        "id": 16,
        "label": "let cpi_ctx = ctx . accounts . treasury_to_member () ;"
      },
      {
        "id": 17,
        "label": "token :: transfer (cpi_ctx , amt) ? ;"
      },
      {
        "id": 18,
        "label": "g . refunded = g . refunded . saturating_add (amt) ;"
      },
      {
        "id": 19,
        "label": "require ! (g . strict || total > 0 , ErrorCode :: InvalidAmount) ;"
      },
      {
        "id": 20,
        "label": "let cpi_ctx = ctx . accounts . member_to_treasury () ;"
      },
      {
        "id": 21,
        "label": "token :: transfer (cpi_ctx , total) ? ;"
      },
      {
        "id": 22,
        "label": "g . collected = g . collected . saturating_add (total) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: g"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: amt"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: cpi_ctx"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: amt"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: cpi_ctx"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: g"
      }
    ]
  }
]