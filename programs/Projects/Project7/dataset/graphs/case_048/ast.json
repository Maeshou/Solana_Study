[
  {
    "name": "init_plan",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitPlan >",
      "monthly_fee: u64",
      "discount_bps: u16",
      "penalty_bps: u16"
    ],
    "attributes": [],
    "body": [
      "let plan = & mut ctx . accounts . plan ;",
      "plan . merchant = ctx . accounts . merchant . key () ;",
      "plan . monthly_fee = if monthly_fee < 3 { 3 } else { monthly_fee } ;",
      "plan . discount_bps = clamp_u16 (discount_bps , 0 , 3000) ;",
      "plan . penalty_bps = clamp_u16 (penalty_bps , 0 , 2500) ;",
      "plan . cycles_paid = 1 ;",
      "plan . arrears_units = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_renew",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActRenew >",
      "months: u8",
      "paid_on_time: bool"
    ],
    "attributes": [],
    "body": [
      "let plan = & mut ctx . accounts . plan ;",
      "let mut total_due = plan . monthly_fee ;",
      "let mut cursor : u8 = 1 ;",
      "while cursor < months",
      "{",
      "let mut fee = plan . monthly_fee ;",
      "if cursor >= 1",
      "{",
      "fee = fee - (fee / 50) ;",
      "} total_due = total_due + fee ;",
      "cursor = cursor + 1 ;",
      "}",
      "if paid_on_time",
      "{",
      "let discount = total_due * plan . discount_bps as u64 / 10_000 ;",
      "total_due = total_due - discount ;",
      "}",
      "let mut penalty = plan . arrears_units * plan . penalty_bps as u64 / 10_000 ;",
      "let mut k : u8 = 0 ;",
      "while k < 2",
      "{",
      "penalty = penalty + penalty / 10 ;",
      "k = k + 1 ;",
      "}",
      "total_due = total_due + penalty ;",
      "token :: transfer (ctx . accounts . subscriber_to_merchant () , total_due) ? ;",
      "plan . cycles_paid = plan . cycles_paid + months as u64 ;",
      "plan . arrears_units = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitPlan",
    "node_type": "struct",
    "fields": [
      {
        "name": "plan",
        "attribute": "# [account (init , payer = merchant , space = 8 + 32 + 8 + 2 + 2 + 8 + 8)]",
        "field_type": "Account < 'info , PlanState >"
      },
      {
        "name": "merchant",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActRenew",
    "node_type": "struct",
    "fields": [
      {
        "name": "plan",
        "attribute": "# [account (mut , has_one = merchant)]",
        "field_type": "Account < 'info , PlanState >"
      },
      {
        "name": "merchant",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "subscriber",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "subscriber_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "merchant_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PlanState",
    "node_type": "struct",
    "fields": [
      {
        "name": "merchant",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "monthly_fee",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "discount_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "penalty_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "cycles_paid",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "arrears_units",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "clamp_u16",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "attributes": [],
    "body": [
      "let mut out = v ;",
      "if out < lo",
      "{",
      "out = lo ;",
      "}",
      "if out > hi",
      "{",
      "out = hi ;",
      "}",
      "out"
    ]
  }
]