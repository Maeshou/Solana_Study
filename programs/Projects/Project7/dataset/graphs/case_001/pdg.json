[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "fee_bps: u16",
      "min_lock: u64",
      "tier: RewardTier"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "p . fee_bps = fee_bps . min (500) ;"
      },
      {
        "id": 4,
        "label": "p . min_lock = min_lock ;"
      },
      {
        "id": 5,
        "label": "p . total_settled = 0 ;"
      },
      {
        "id": 6,
        "label": "p . active = true ;"
      },
      {
        "id": 7,
        "label": "p . tier = tier ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_settle",
    "inputs": [
      "ctx: Context < ActSettle >",
      "staked_amount: u64",
      "epochs: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 11,
        "label": "require ! (p . active , ErrorCode :: InactivePool) ;"
      },
      {
        "id": 12,
        "label": "require ! (staked_amount >= p . min_lock , ErrorCode :: BelowMinimum) ;"
      },
      {
        "id": 13,
        "label": "let mut multiplier : u64 = match p . tier { RewardTier :: Bronze => 10 , RewardTier :: Silver => 12 , RewardTier :: Gold => 15 , RewardTier :: Platinum => 18 , } ;"
      },
      {
        "id": 14,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 15,
        "label": "while i < epochs { multiplier = multiplier . saturating_add (1) ; i += 1 ; }"
      },
      {
        "id": 16,
        "label": "multiplier = multiplier . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "i += 1 ;"
      },
      {
        "id": 18,
        "label": "let gross = staked_amount . saturating_mul (multiplier) ;"
      },
      {
        "id": 19,
        "label": "let fee = gross . saturating_mul (p . fee_bps as u64) / 10_000 ;"
      },
      {
        "id": 20,
        "label": "let net = if gross > fee { gross - fee } else { 0 } ;"
      },
      {
        "id": 21,
        "label": "gross - fee"
      },
      {
        "id": 22,
        "label": "0"
      },
      {
        "id": 23,
        "label": "if net == 0 { p . active = false ; return Err (ErrorCode :: NoReward . into ()) ; } else { p . total_settled = p . total_settled . saturating_add (net) ; }"
      },
      {
        "id": 24,
        "label": "p . active = false ;"
      },
      {
        "id": 25,
        "label": "return Err (ErrorCode :: NoReward . into ()) ;"
      },
      {
        "id": 26,
        "label": "p . total_settled = p . total_settled . saturating_add (net) ;"
      },
      {
        "id": 27,
        "label": "let cpi_ctx = ctx . accounts . transfer_ctx () ;"
      },
      {
        "id": 28,
        "label": "token :: transfer (cpi_ctx , net) ? ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: p"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: i"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: gross"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: fee"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: gross"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: net"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: gross"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: fee"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: gross"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: fee"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: gross"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: fee"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: net"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: net"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: net"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: cpi_ctx"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 20,
        "to": 28,
        "label": "data_dep: net"
      }
    ]
  }
]