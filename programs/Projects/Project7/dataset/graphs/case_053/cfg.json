[
  {
    "name": "init_deal",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let deal = & mut ctx . accounts . deal ;"
      },
      {
        "id": 2,
        "label": "deal . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "deal . base_bps = clamp_u16 (base_bps , 500 , 9000) ;"
      },
      {
        "id": 4,
        "label": "deal . depth_limit = 2 ;"
      },
      {
        "id": 5,
        "label": "deal . round = 1 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_distribute",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let deal = & mut ctx . accounts . deal ;"
      },
      {
        "id": 9,
        "label": "let level1_bps = deal . base_bps as u64 ;"
      },
      {
        "id": 10,
        "label": "let level2_bps = level1_bps / 2 ;"
      },
      {
        "id": 11,
        "label": "let l1_share = revenue_units * level1_bps / 10_000 ;"
      },
      {
        "id": 12,
        "label": "let l2_share = revenue_units * level2_bps / 10_000 ;"
      },
      {
        "id": 13,
        "label": "let remainder = revenue_units - l1_share - l2_share ;"
      },
      {
        "id": 14,
        "label": "token :: transfer (ctx . accounts . revenue_to_level1 () , l1_share) ? ;"
      },
      {
        "id": 15,
        "label": "token :: transfer (ctx . accounts . revenue_to_level2 () , l2_share) ? ;"
      },
      {
        "id": 16,
        "label": "token :: transfer (ctx . accounts . revenue_to_manager () , remainder) ? ;"
      },
      {
        "id": 17,
        "label": "deal . round = deal . round + 1 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let mut o = v ;"
      },
      {
        "id": 21,
        "label": "if statement"
      },
      {
        "id": 22,
        "label": "predicate"
      },
      {
        "id": 23,
        "label": "o < lo"
      },
      {
        "id": 24,
        "label": "True body"
      },
      {
        "id": 25,
        "label": "o = lo ;"
      },
      {
        "id": 26,
        "label": "False body"
      },
      {
        "id": 27,
        "label": "No-op"
      },
      {
        "id": 28,
        "label": "merge"
      },
      {
        "id": 29,
        "label": "if statement"
      },
      {
        "id": 30,
        "label": "predicate"
      },
      {
        "id": 31,
        "label": "o > hi"
      },
      {
        "id": 32,
        "label": "True body"
      },
      {
        "id": 33,
        "label": "o = hi ;"
      },
      {
        "id": 34,
        "label": "False body"
      },
      {
        "id": 35,
        "label": "No-op"
      },
      {
        "id": 36,
        "label": "merge"
      },
      {
        "id": 37,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "predicate"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 21,
        "to": 24,
        "label": "true"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 21,
        "to": 26,
        "label": "false"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 25,
        "to": 28,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "predicate"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 29,
        "to": 32,
        "label": "true"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 29,
        "to": 34,
        "label": "false"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 33,
        "to": 36,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  }
]