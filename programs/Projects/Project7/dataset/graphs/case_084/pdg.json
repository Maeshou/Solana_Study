[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "daily_cap_input: u64",
      "base_reward_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "p . daily_cap = daily_cap_input ;"
      },
      {
        "id": 4,
        "label": "if p . daily_cap < 50 { p . daily_cap = 50 ; }"
      },
      {
        "id": 5,
        "label": "p . daily_cap = 50 ;"
      },
      {
        "id": 6,
        "label": "p . base_reward = base_reward_input ;"
      },
      {
        "id": 7,
        "label": "if p . base_reward < 1 { p . base_reward = 1 ; }"
      },
      {
        "id": 8,
        "label": "p . base_reward = 1 ;"
      },
      {
        "id": 9,
        "label": "p . issued_today = 0 ;"
      },
      {
        "id": 10,
        "label": "p . tier = 1 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_reward",
    "inputs": [
      "ctx: Context < ActReward >",
      "tasks: u16",
      "quality_bits: u64"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 14,
        "label": "let mut score = 0u64 ;"
      },
      {
        "id": 15,
        "label": "let mut idx : u8 = 0 ;"
      },
      {
        "id": 16,
        "label": "while idx < 16 { let bit = (quality_bits >> idx) & 1 ; if bit == 1 { score = score + (idx as u64 + 1) ; } idx = idx + 1 ; }"
      },
      {
        "id": 17,
        "label": "let bit = (quality_bits >> idx) & 1 ;"
      },
      {
        "id": 18,
        "label": "if bit == 1 { score = score + (idx as u64 + 1) ; }"
      },
      {
        "id": 19,
        "label": "score = score + (idx as u64 + 1) ;"
      },
      {
        "id": 20,
        "label": "idx = idx + 1 ;"
      },
      {
        "id": 21,
        "label": "let mut work = p . base_reward + (tasks as u64 / 3) + score / 5 ;"
      },
      {
        "id": 22,
        "label": "if p . tier >= 3 { work = work + 2 ; }"
      },
      {
        "id": 23,
        "label": "work = work + 2 ;"
      },
      {
        "id": 24,
        "label": "if p . tier >= 5 { work = work + 3 ; }"
      },
      {
        "id": 25,
        "label": "work = work + 3 ;"
      },
      {
        "id": 26,
        "label": "let next = p . issued_today + work ;"
      },
      {
        "id": 27,
        "label": "if next > p . daily_cap { let rest = p . daily_cap - p . issued_today ; if rest > 0 { token :: mint_to (ctx . accounts . mint_ctx () , rest) ? ; } p . issued_today = p . daily_cap ; p . tier = 1 ; return Err (LabErr :: Daily . into ()) ; }"
      },
      {
        "id": 28,
        "label": "let rest = p . daily_cap - p . issued_today ;"
      },
      {
        "id": 29,
        "label": "if rest > 0 { token :: mint_to (ctx . accounts . mint_ctx () , rest) ? ; }"
      },
      {
        "id": 30,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , rest) ? ;"
      },
      {
        "id": 31,
        "label": "p . issued_today = p . daily_cap ;"
      },
      {
        "id": 32,
        "label": "p . tier = 1 ;"
      },
      {
        "id": 33,
        "label": "return Err (LabErr :: Daily . into ()) ;"
      },
      {
        "id": 34,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , work) ? ;"
      },
      {
        "id": 35,
        "label": "p . issued_today = next ;"
      },
      {
        "id": 36,
        "label": "p . tier = p . tier + 1 ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: p"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: score"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: score"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: bit"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: bit"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: score"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: work"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: score"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: work"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: work"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: work"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: next"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: work"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: next"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: rest"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: p"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: rest"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: rest"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: rest"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: work"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 26,
        "to": 35,
        "label": "data_dep: next"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: p"
      }
    ]
  }
]