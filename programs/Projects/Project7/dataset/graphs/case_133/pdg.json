[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < InitDaily >",
      "unit_tokens: u64",
      "total_cap: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let daily = & mut ctx . accounts . daily ;"
      },
      {
        "id": 2,
        "label": "daily . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "daily . unit_tokens = unit_tokens . max (1) ;"
      },
      {
        "id": 4,
        "label": "daily . total_cap = total_cap . max (daily . unit_tokens) ;"
      },
      {
        "id": 5,
        "label": "daily . total_done = 0 ;"
      },
      {
        "id": 6,
        "label": "daily . last_day = 0 ;"
      },
      {
        "id": 7,
        "label": "daily . use_external_today = false ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: daily"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: daily"
      }
    ]
  },
  {
    "name": "process",
    "inputs": [
      "ctx: Context < ProcDaily >",
      "count: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let daily = & mut ctx . accounts . daily ;"
      },
      {
        "id": 11,
        "label": "let now = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 12,
        "label": "let today_day = now / 86_400 ;"
      },
      {
        "id": 13,
        "label": "if daily . last_day != today_day { daily . last_day = today_day ; daily . use_external_today = ! daily . use_external_today ; }"
      },
      {
        "id": 14,
        "label": "daily . last_day = today_day ;"
      },
      {
        "id": 15,
        "label": "daily . use_external_today = ! daily . use_external_today ;"
      },
      {
        "id": 16,
        "label": "let mut i : u8 = 0 ;"
      },
      {
        "id": 17,
        "label": "while i < count { let next = daily . total_done . saturating_add (daily . unit_tokens) ; if next > daily . total_cap { return Err (DailyErr :: Cap . into ()) ; } let mut program_account_info = ctx . accounts . token_program . to_account_info () ; if daily . use_external_today { program_account_info = ctx . accounts . gateway_program . clone () ; } token :: approve (ctx . accounts . a (program_account_info . clone ()) , daily . unit_tokens) ? ; token :: transfer (ctx . accounts . t (program_account_info . clone ()) , daily . unit_tokens) ? ; token :: revoke (ctx . accounts . r (program_account_info)) ? ; daily . total_done = next ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 18,
        "label": "let next = daily . total_done . saturating_add (daily . unit_tokens) ;"
      },
      {
        "id": 19,
        "label": "if next > daily . total_cap { return Err (DailyErr :: Cap . into ()) ; }"
      },
      {
        "id": 20,
        "label": "return Err (DailyErr :: Cap . into ()) ;"
      },
      {
        "id": 21,
        "label": "let mut program_account_info = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 22,
        "label": "if daily . use_external_today { program_account_info = ctx . accounts . gateway_program . clone () ; }"
      },
      {
        "id": 23,
        "label": "program_account_info = ctx . accounts . gateway_program . clone () ;"
      },
      {
        "id": 24,
        "label": "token :: approve (ctx . accounts . a (program_account_info . clone ()) , daily . unit_tokens) ? ;"
      },
      {
        "id": 25,
        "label": "token :: transfer (ctx . accounts . t (program_account_info . clone ()) , daily . unit_tokens) ? ;"
      },
      {
        "id": 26,
        "label": "token :: revoke (ctx . accounts . r (program_account_info)) ? ;"
      },
      {
        "id": 27,
        "label": "daily . total_done = next ;"
      },
      {
        "id": 28,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: daily"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: now"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: today_day"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: now"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: daily"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: today_day"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: daily"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: today_day"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: daily"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: today_day"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: daily"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: next"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: daily"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: daily"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: next"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: daily"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: program_account_info"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: daily"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: daily"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: daily"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 10,
        "to": 27,
        "label": "data_dep: daily"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: next"
      }
    ]
  }
]