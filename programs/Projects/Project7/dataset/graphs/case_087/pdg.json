[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "min_burn_input: u64",
      "max_transfer_input: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "p . min_burn = min_burn_input ;"
      },
      {
        "id": 4,
        "label": "if p . min_burn < 1 { p . min_burn = 1 ; }"
      },
      {
        "id": 5,
        "label": "p . min_burn = 1 ;"
      },
      {
        "id": 6,
        "label": "p . max_transfer = max_transfer_input ;"
      },
      {
        "id": 7,
        "label": "if p . max_transfer < p . min_burn { p . max_transfer = p . min_burn + 5 ; }"
      },
      {
        "id": 8,
        "label": "p . max_transfer = p . min_burn + 5 ;"
      },
      {
        "id": 9,
        "label": "p . redeem_round = 1 ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_redeem",
    "inputs": [
      "ctx: Context < ActRedeem >",
      "voucher_units: u64",
      "user_level: u8"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 13,
        "label": "let mut burn_units = voucher_units ;"
      },
      {
        "id": 14,
        "label": "if burn_units < p . min_burn { burn_units = p . min_burn ; }"
      },
      {
        "id": 15,
        "label": "burn_units = p . min_burn ;"
      },
      {
        "id": 16,
        "label": "token :: burn (ctx . accounts . burn_ctx () , burn_units) ? ;"
      },
      {
        "id": 17,
        "label": "let mut redeem_units = burn_units / 2 + 1 ;"
      },
      {
        "id": 18,
        "label": "let mut i : u8 = 0 ;"
      },
      {
        "id": 19,
        "label": "while i < user_level { redeem_units = redeem_units + 1 ; i = i + 1 ; }"
      },
      {
        "id": 20,
        "label": "redeem_units = redeem_units + 1 ;"
      },
      {
        "id": 21,
        "label": "i = i + 1 ;"
      },
      {
        "id": 22,
        "label": "if redeem_units > p . max_transfer { redeem_units = p . max_transfer ; }"
      },
      {
        "id": 23,
        "label": "redeem_units = p . max_transfer ;"
      },
      {
        "id": 24,
        "label": "token :: transfer (ctx . accounts . stable_pool_to_user () , redeem_units) ? ;"
      },
      {
        "id": 25,
        "label": "p . redeem_round = p . redeem_round + 1 ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: p"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: burn_units"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: burn_units"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: burn_units"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: burn_units"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: burn_units"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: redeem_units"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: burn_units"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 12,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: redeem_units"
      },
      {
        "from": 12,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 25,
        "label": "data_dep: p"
      }
    ]
  }
]