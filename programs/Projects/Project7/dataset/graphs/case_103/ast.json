[
  {
    "name": "init",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitAx >",
      "do_create_first: bool",
      "unit: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "s . admin = ctx . accounts . admin . key () ;",
      "s . do_create_first = do_create_first ;",
      "s . unit = unit . max (1) ;",
      "Ok (())"
    ]
  },
  {
    "name": "go",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < GoAx >"
    ],
    "attributes": [],
    "body": [
      "if ctx . accounts . state . do_create_first",
      "{",
      "associated_token :: create (CpiContext :: new (ctx . accounts . associated_token_program . to_account_info () , Create",
      "{",
      "payer : ctx . accounts . admin . to_account_info () , associated_token : ctx . accounts . ata . to_account_info () , authority : ctx . accounts . owner . to_account_info () , mint : ctx . accounts . mint . to_account_info () , system_program : ctx . accounts . system_program . to_account_info () , token_program : ctx . accounts . token_program . to_account_info () , } ,)) ? ;",
      "}",
      "if ! ctx . accounts . state . do_create_first",
      "{",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , SplTransfer",
      "{",
      "from : ctx . accounts . source . to_account_info () , to : ctx . accounts . destination . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) , ctx . accounts . state . unit) ? ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitAx",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (init , payer = admin , space = 8 + 32 + 1 + 8)]",
        "field_type": "Account < 'info , AxState >"
      },
      {
        "name": "admin",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "GoAx",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut , has_one = admin)]",
        "field_type": "Account < 'info , AxState >"
      },
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "ata",
        "attribute": "# [doc = \" CHECK: Anchor の Create CPI で使用する派生ATA\"] # [account (mut)]",
        "field_type": "Account < 'info , SystemAccount >"
      },
      {
        "name": "owner",
        "attribute": "# [doc = \" CHECK: オーナー（create の authority）\"]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "mint",
        "attribute": "# [doc = \" CHECK: mint（mint自体はカスタム型を用意せず SystemAccount で受ける例）\"]",
        "field_type": "Account < 'info , SystemAccount >"
      },
      {
        "name": "associated_token_program",
        "attribute": null,
        "field_type": "Program < 'info , AssociatedToken >"
      },
      {
        "name": "source",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "destination",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "AxState",
    "node_type": "struct",
    "fields": [
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "do_create_first",
        "attribute": null,
        "field_type": "bool"
      },
      {
        "name": "unit",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]