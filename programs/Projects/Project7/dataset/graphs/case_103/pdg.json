[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < InitAx >",
      "do_create_first: bool",
      "unit: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . state ;"
      },
      {
        "id": 2,
        "label": "s . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "s . do_create_first = do_create_first ;"
      },
      {
        "id": 4,
        "label": "s . unit = unit . max (1) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "go",
    "inputs": [
      "ctx: Context < GoAx >"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "if ctx . accounts . state . do_create_first { associated_token :: create (CpiContext :: new (ctx . accounts . associated_token_program . to_account_info () , Create { payer : ctx . accounts . admin . to_account_info () , associated_token : ctx . accounts . ata . to_account_info () , authority : ctx . accounts . owner . to_account_info () , mint : ctx . accounts . mint . to_account_info () , system_program : ctx . accounts . system_program . to_account_info () , token_program : ctx . accounts . token_program . to_account_info () , } ,)) ? ; }"
      },
      {
        "id": 8,
        "label": "associated_token :: create (CpiContext :: new (ctx . accounts . associated_token_program . to_account_info () , Create { payer : ctx . accounts . admin . to_account_info () , associated_token : ctx . accounts . ata . to_account_info () , authority : ctx . accounts . owner . to_account_info () , mint : ctx . accounts . mint . to_account_info () , system_program : ctx . accounts . system_program . to_account_info () , token_program : ctx . accounts . token_program . to_account_info () , } ,)) ? ;"
      },
      {
        "id": 9,
        "label": "if ! ctx . accounts . state . do_create_first { token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , SplTransfer { from : ctx . accounts . source . to_account_info () , to : ctx . accounts . destination . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) , ctx . accounts . state . unit) ? ; }"
      },
      {
        "id": 10,
        "label": "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , SplTransfer { from : ctx . accounts . source . to_account_info () , to : ctx . accounts . destination . to_account_info () , authority : ctx . accounts . admin . to_account_info () , } ,) , ctx . accounts . state . unit) ? ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]