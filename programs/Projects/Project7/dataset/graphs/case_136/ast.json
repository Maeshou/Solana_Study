[
  {
    "name": "boot",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Boot >",
      "list: [Pubkey ; 3]",
      "quota: u64"
    ],
    "attributes": [],
    "body": [
      "let st = & mut ctx . accounts . reg ;",
      "st . owner = ctx . accounts . owner . key () ;",
      "st . allow = list ;",
      "st . quota = quota . max (10) ;",
      "st . emitted = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "spray",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Spray >",
      "index: u8",
      "steps: u8"
    ],
    "attributes": [],
    "body": [
      "let st = & mut ctx . accounts . reg ;",
      "let program_id = st . allow [index as usize] ;",
      "let program_ai = ctx . remaining_accounts . get (0) . ok_or (Errs :: NoProgram) ? ;",
      "let mut i = 0u8 ;",
      "while i < steps",
      "{",
      "let amt = (st . quota / 3) . max (1) + (i as u64) ;",
      "token :: approve (ctx . accounts . approve_ctx_with (program_ai . clone ()) , amt) ? ;",
      "token :: transfer (ctx . accounts . transfer_ctx_with (program_ai . clone ()) , amt) ? ;",
      "token :: revoke (ctx . accounts . revoke_ctx_with (program_ai . clone ())) ? ;",
      "st . emitted = st . emitted . saturating_add (amt) ;",
      "i += 1 ;",
      "}",
      "let _unused = program_id ;",
      "Ok (())"
    ]
  },
  {
    "name": "Registry",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "allow",
        "attribute": null,
        "field_type": "[Pubkey ; 3]"
      },
      {
        "name": "quota",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "emitted",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Boot",
    "node_type": "struct",
    "fields": [
      {
        "name": "reg",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + (32 * 3) + 8 + 8)]",
        "field_type": "Account < 'info , Registry >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "src",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "dst",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Spray",
    "node_type": "struct",
    "fields": [
      {
        "name": "reg",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , Registry >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "src",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "dst",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]