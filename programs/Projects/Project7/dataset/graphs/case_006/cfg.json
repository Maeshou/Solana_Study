[
  {
    "name": "init_pass",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pass ;"
      },
      {
        "id": 2,
        "label": "p . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "p . max_bonus = max_bonus ;"
      },
      {
        "id": 4,
        "label": "p . charged = 0 ;"
      },
      {
        "id": 5,
        "label": "p . level = 1 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_charge",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let p = & mut ctx . accounts . pass ;"
      },
      {
        "id": 9,
        "label": "let mut bonus = 0u64 ;"
      },
      {
        "id": 10,
        "label": "Loop Start"
      },
      {
        "id": 11,
        "label": "bonus = bonus . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Loop End"
      },
      {
        "id": 13,
        "label": "let mut amount = base_units . saturating_add (bonus) ;"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "amount as u32 > p . max_bonus"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "amount = p . max_bonus as u64 ;"
      },
      {
        "id": 19,
        "label": "p . level = p . level . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "False body"
      },
      {
        "id": 21,
        "label": "p . level = p . level . saturating_add (0) ;"
      },
      {
        "id": 22,
        "label": "merge"
      },
      {
        "id": 23,
        "label": "let cpi_ctx = ctx . accounts . mint_to_ctx () ;"
      },
      {
        "id": 24,
        "label": "token :: mint_to (cpi_ctx , amount) ? ;"
      },
      {
        "id": 25,
        "label": "p . charged = p . charged . saturating_add (amount) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 10,
        "to": 12,
        "label": "for"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 14,
        "to": 20,
        "label": "false"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      }
    ]
  }
]