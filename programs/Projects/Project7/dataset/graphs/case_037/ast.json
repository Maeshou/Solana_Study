[
  {
    "name": "init_boss",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBoss >",
      "base_reward: u64"
    ],
    "attributes": [],
    "body": [
      "let boss_state = & mut ctx . accounts . boss_state ;",
      "boss_state . operator = ctx . accounts . operator . key () ;",
      "boss_state . base_reward = if base_reward < 2 { 2 } else { base_reward } ;",
      "boss_state . clear_count = 2 ;",
      "boss_state . max_combo_seen = 5 ;",
      "boss_state . challenge_flag = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_distribute",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActDistribute >",
      "party_size: u8",
      "combo_value: u32"
    ],
    "attributes": [],
    "body": [
      "require ! (party_size > 0 , RaidErr :: NoMembers) ;",
      "let boss_state = & mut ctx . accounts . boss_state ;",
      "let mut group_bonus : u64 = 0 ;",
      "let mut party_index : u8 = 1 ;",
      "while party_index <= party_size",
      "{",
      "if party_index <= 3",
      "{",
      "group_bonus = group_bonus + 8 ;",
      "} if party_index > 3",
      "{",
      "group_bonus = group_bonus + 5 ;",
      "} if party_index > 7",
      "{",
      "group_bonus = group_bonus + 2 ;",
      "} party_index = party_index + 1 ;",
      "}",
      "let mut sqrt_estimate : u64 = 1 ;",
      "let mut iteration_step : u8 = 0 ;",
      "while iteration_step < 6",
      "{",
      "let divisor = sqrt_estimate ;",
      "let adjusted = if divisor < 1",
      "{",
      "1 } else { divisor } ;",
      "sqrt_estimate = (sqrt_estimate + ((combo_value as u64) / adjusted)) / 2 ;",
      "iteration_step = iteration_step + 1 ;",
      "}",
      "if combo_value as u64 > boss_state . max_combo_seen",
      "{",
      "boss_state . max_combo_seen = combo_value as u64 ;",
      "}",
      "if sqrt_estimate >= 8",
      "{",
      "boss_state . challenge_flag = true ;",
      "}",
      "if sqrt_estimate < 5",
      "{",
      "boss_state . challenge_flag = false ;",
      "}",
      "let mut payout_amount : u64 = boss_state . base_reward + group_bonus + sqrt_estimate ;",
      "if boss_state . challenge_flag",
      "{",
      "payout_amount = payout_amount + payout_amount / 2 ;",
      "}",
      "token :: transfer (ctx . accounts . treasury_to_player_ctx () , payout_amount) ? ;",
      "boss_state . clear_count = boss_state . clear_count + 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitBoss",
    "node_type": "struct",
    "fields": [
      {
        "name": "boss_state",
        "attribute": "# [account (init , payer = operator , space = 8 + 32 + 8 + 8 + 8 + 1)]",
        "field_type": "Account < 'info , BossState >"
      },
      {
        "name": "operator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActDistribute",
    "node_type": "struct",
    "fields": [
      {
        "name": "boss_state",
        "attribute": "# [account (mut , has_one = operator)]",
        "field_type": "Account < 'info , BossState >"
      },
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "reward_treasury",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "player_wallet",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BossState",
    "node_type": "struct",
    "fields": [
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base_reward",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "clear_count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "max_combo_seen",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "challenge_flag",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]