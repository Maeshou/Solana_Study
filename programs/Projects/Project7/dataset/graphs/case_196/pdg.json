[
  {
    "name": "setup",
    "inputs": [
      "ctx: Context < SetupHold >",
      "step_units: u64",
      "max_volume: u64",
      "hold_external: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 2,
        "label": "settings . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "settings . step_units = step_units . max (1) ;"
      },
      {
        "id": 4,
        "label": "settings . max_volume = max_volume . max (settings . step_units) ;"
      },
      {
        "id": 5,
        "label": "settings . total_volume = 0 ;"
      },
      {
        "id": 6,
        "label": "settings . hold_external = hold_external ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: settings"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: settings"
      }
    ]
  },
  {
    "name": "run",
    "inputs": [
      "ctx: Context < RunHold >",
      "steps: u8"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 10,
        "label": "let mut ticks : u8 = 0 ;"
      },
      {
        "id": 11,
        "label": "while ticks < steps { let next_volume = settings . total_volume . saturating_add (settings . step_units) ; if next_volume > settings . max_volume { return Err (HoldErr :: Cap . into ()) ; } let mut program_account_info = ctx . accounts . token_program . to_account_info () ; if settings . hold_external { program_account_info = ctx . accounts . external_path . clone () ; } token :: approve (ctx . accounts . ctx_a (program_account_info . clone ()) , settings . step_units) ? ; token :: transfer (ctx . accounts . ctx_t (program_account_info . clone ()) , settings . step_units) ? ; token :: revoke (ctx . accounts . ctx_r (program_account_info)) ? ; settings . total_volume = next_volume ; ticks = ticks . saturating_add (1) ; }"
      },
      {
        "id": 12,
        "label": "let next_volume = settings . total_volume . saturating_add (settings . step_units) ;"
      },
      {
        "id": 13,
        "label": "if next_volume > settings . max_volume { return Err (HoldErr :: Cap . into ()) ; }"
      },
      {
        "id": 14,
        "label": "return Err (HoldErr :: Cap . into ()) ;"
      },
      {
        "id": 15,
        "label": "let mut program_account_info = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 16,
        "label": "if settings . hold_external { program_account_info = ctx . accounts . external_path . clone () ; }"
      },
      {
        "id": 17,
        "label": "program_account_info = ctx . accounts . external_path . clone () ;"
      },
      {
        "id": 18,
        "label": "token :: approve (ctx . accounts . ctx_a (program_account_info . clone ()) , settings . step_units) ? ;"
      },
      {
        "id": 19,
        "label": "token :: transfer (ctx . accounts . ctx_t (program_account_info . clone ()) , settings . step_units) ? ;"
      },
      {
        "id": 20,
        "label": "token :: revoke (ctx . accounts . ctx_r (program_account_info)) ? ;"
      },
      {
        "id": 21,
        "label": "settings . total_volume = next_volume ;"
      },
      {
        "id": 22,
        "label": "ticks = ticks . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: settings"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: next_volume"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: settings"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: settings"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: next_volume"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: settings"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: program_account_info"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: settings"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: settings"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: settings"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: settings"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: next_volume"
      }
    ]
  }
]