[
  {
    "name": "register",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Init05 >",
      "unit: u64",
      "cap: u64",
      "hint_key: Pubkey"
    ],
    "attributes": [],
    "body": [
      "let r = & mut ctx . accounts . reg ;",
      "r . manager = ctx . accounts . manager . key () ;",
      "r . unit = unit . max (1) ;",
      "r . cap = cap . max (r . unit) ;",
      "r . total = 0 ;",
      "r . hint_key = hint_key ;",
      "Ok (())"
    ]
  },
  {
    "name": "apply",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Run05 >",
      "count: u8"
    ],
    "attributes": [],
    "body": [
      "let r = & mut ctx . accounts . reg ;",
      "let mut i = 0u8 ;",
      "while i < count",
      "{",
      "let amt = r . unit ;",
      "let next = r . total . saturating_add (amt) ;",
      "if next > r . cap",
      "{",
      "return Err (E05 :: Cap . into ()) ;",
      "} let mut program_ai = ctx . accounts . token_program . to_account_info () ;",
      "let mut j = 0usize ;",
      "while j < ctx . remaining_accounts . len ()",
      "{",
      "let cand = & ctx . remaining_accounts [j] ;",
      "if cand . key () == r . hint_key",
      "{",
      "program_ai = cand . clone () ;",
      "break ;",
      "} j += 1 ;",
      "} token :: approve (ctx . accounts . a (program_ai . clone ()) , amt) ? ;",
      "token :: transfer (ctx . accounts . t (program_ai . clone ()) , amt) ? ;",
      "token :: revoke (ctx . accounts . r (program_ai)) ? ;",
      "r . total = next ;",
      "i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Init05",
    "node_type": "struct",
    "fields": [
      {
        "name": "reg",
        "attribute": "# [account (init , payer = manager , space = 8 + 32 + 8 + 8 + 8 + 32)]",
        "field_type": "Account < 'info , State05 >"
      },
      {
        "name": "manager",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Run05",
    "node_type": "struct",
    "fields": [
      {
        "name": "reg",
        "attribute": "# [account (mut , has_one = manager)]",
        "field_type": "Account < 'info , State05 >"
      },
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "left_bin",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "right_bin",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "State05",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "unit",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "cap",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "total",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "hint_key",
        "attribute": null,
        "field_type": "Pubkey"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]