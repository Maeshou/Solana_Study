[
  {
    "name": "init_deal",
    "inputs": [
      "ctx: Context < InitDeal >",
      "scholar_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . deal ;"
      },
      {
        "id": 2,
        "label": "d . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "d . scholar_bps = scholar_bps . min (9000) ;"
      },
      {
        "id": 4,
        "label": "d . rounds = 0 ;"
      },
      {
        "id": 5,
        "label": "d . paid_out = 0 ;"
      },
      {
        "id": 6,
        "label": "d . mode = SplitMode :: Fixed ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      }
    ]
  },
  {
    "name": "act_split",
    "inputs": [
      "ctx: Context < ActSplit >",
      "revenue: u64",
      "dynamic: bool"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let d = & mut ctx . accounts . deal ;"
      },
      {
        "id": 10,
        "label": "let mut bonus = 0u64 ;"
      },
      {
        "id": 11,
        "label": "for _ in 0 .. (d . rounds % 5) { bonus = bonus . saturating_add (10) ; }"
      },
      {
        "id": 12,
        "label": "bonus = bonus . saturating_add (10) ;"
      },
      {
        "id": 13,
        "label": "if dynamic { d . mode = SplitMode :: Dynamic ; } else { d . mode = SplitMode :: Fixed ; }"
      },
      {
        "id": 14,
        "label": "d . mode = SplitMode :: Dynamic ;"
      },
      {
        "id": 15,
        "label": "d . mode = SplitMode :: Fixed ;"
      },
      {
        "id": 16,
        "label": "let scholar_cut = match d . mode { SplitMode :: Fixed => revenue . saturating_mul (d . scholar_bps as u64) / 10_000 , SplitMode :: Dynamic => (revenue / 2) . saturating_add (bonus) , } ;"
      },
      {
        "id": 17,
        "label": "let manager_cut = revenue . saturating_sub (scholar_cut) ;"
      },
      {
        "id": 18,
        "label": "token :: transfer (ctx . accounts . pay_to_scholar () , scholar_cut) ? ;"
      },
      {
        "id": 19,
        "label": "token :: transfer (ctx . accounts . pay_to_manager () , manager_cut) ? ;"
      },
      {
        "id": 20,
        "label": "d . rounds = d . rounds . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "d . paid_out = d . paid_out . saturating_add (revenue) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: d"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: bonus"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: d"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: bonus"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: bonus"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: bonus"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: bonus"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: d"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: scholar_cut"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: d"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: bonus"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: manager_cut"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: scholar_cut"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: scholar_cut"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: manager_cut"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: d"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: d"
      }
    ]
  }
]