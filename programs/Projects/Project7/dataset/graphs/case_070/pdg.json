[
  {
    "name": "init_market",
    "inputs": [
      "ctx: Context < InitMarket >",
      "fee_bps_input: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let market = & mut ctx . accounts . market ;"
      },
      {
        "id": 2,
        "label": "market . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "market . fee_bps = clamp_u16 (fee_bps_input , 0 , 2000) ;"
      },
      {
        "id": 4,
        "label": "market . round_index = 1 ;"
      },
      {
        "id": 5,
        "label": "market . total_settled = 1 ;"
      },
      {
        "id": 6,
        "label": "market . last_outcome_yes = false ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: market"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: market"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: market"
      }
    ]
  },
  {
    "name": "act_settle",
    "inputs": [
      "ctx: Context < ActSettle >",
      "yes_pool_units: u64",
      "no_pool_units: u64",
      "outcome_yes_flag: bool"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let market = & mut ctx . accounts . market ;"
      },
      {
        "id": 10,
        "label": "let combined_pool : u64 = yes_pool_units + no_pool_units ;"
      },
      {
        "id": 11,
        "label": "let mut winner_pool : u64 = yes_pool_units ;"
      },
      {
        "id": 12,
        "label": "let mut loser_pool : u64 = no_pool_units ;"
      },
      {
        "id": 13,
        "label": "if ! outcome_yes_flag { winner_pool = no_pool_units ; loser_pool = yes_pool_units ; }"
      },
      {
        "id": 14,
        "label": "winner_pool = no_pool_units ;"
      },
      {
        "id": 15,
        "label": "loser_pool = yes_pool_units ;"
      },
      {
        "id": 16,
        "label": "let fee_amount : u64 = (combined_pool as u128 * market . fee_bps as u128 / 10_000u128) as u64 ;"
      },
      {
        "id": 17,
        "label": "let distributable : u64 = combined_pool - fee_amount ;"
      },
      {
        "id": 18,
        "label": "let mut winner_payout : u64 = distributable ;"
      },
      {
        "id": 19,
        "label": "if loser_pool > 0 { winner_payout = distributable ; }"
      },
      {
        "id": 20,
        "label": "winner_payout = distributable ;"
      },
      {
        "id": 21,
        "label": "if loser_pool == 0 { winner_payout = distributable ; }"
      },
      {
        "id": 22,
        "label": "winner_payout = distributable ;"
      },
      {
        "id": 23,
        "label": "token :: transfer (ctx . accounts . pool_to_winners () , winner_payout) ? ;"
      },
      {
        "id": 24,
        "label": "token :: transfer (ctx . accounts . pool_to_fee () , fee_amount) ? ;"
      },
      {
        "id": 25,
        "label": "market . total_settled = market . total_settled + distributable ;"
      },
      {
        "id": 26,
        "label": "market . round_index = market . round_index + 1 ;"
      },
      {
        "id": 27,
        "label": "market . last_outcome_yes = outcome_yes_flag ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: market"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: market"
      },
      {
        "from": 9,
        "to": 27,
        "label": "data_dep: market"
      }
    ]
  },
  {
    "name": "clamp_u16",
    "inputs": [
      "v: u16",
      "lo: u16",
      "hi: u16"
    ],
    "nodes": [
      {
        "id": 33,
        "label": "Entry"
      },
      {
        "id": 34,
        "label": "let mut o = v ;"
      },
      {
        "id": 35,
        "label": "if o < lo { o = lo ; }"
      },
      {
        "id": 36,
        "label": "o = lo ;"
      },
      {
        "id": 37,
        "label": "if o > hi { o = hi ; }"
      },
      {
        "id": 38,
        "label": "o = hi ;"
      },
      {
        "id": 39,
        "label": "o"
      }
    ],
    "edges": [
      {
        "from": 34,
        "to": 34,
        "label": "def: o"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: o"
      },
      {
        "from": 34,
        "to": 39,
        "label": "data_dep: o"
      }
    ]
  }
]