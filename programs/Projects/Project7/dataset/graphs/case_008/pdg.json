[
  {
    "name": "init_machine",
    "inputs": [
      "ctx: Context < InitMachine >",
      "jackpot_rate: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . machine ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "m . jackpot_rate = jackpot_rate . min (500) ;"
      },
      {
        "id": 4,
        "label": "m . rolls = 0 ;"
      },
      {
        "id": 5,
        "label": "m . jackpots = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "act_roll",
    "inputs": [
      "ctx: Context < ActRoll >",
      "ticket_cost: u64",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let m = & mut ctx . accounts . machine ;"
      },
      {
        "id": 9,
        "label": "token :: burn (ctx . accounts . burn_ctx () , ticket_cost) ? ;"
      },
      {
        "id": 10,
        "label": "let mut parity = 0u64 ;"
      },
      {
        "id": 11,
        "label": "for i in 0 .. 5 { parity ^= (seed >> i) & 1 ; }"
      },
      {
        "id": 12,
        "label": "parity ^= (seed >> i) & 1 ;"
      },
      {
        "id": 13,
        "label": "let hit = (parity as u16) * 100 >= m . jackpot_rate ;"
      },
      {
        "id": 14,
        "label": "if hit { token :: mint_to (ctx . accounts . mint_ctx () , ticket_cost * 10) ? ; m . jackpots = m . jackpots . saturating_add (1) ; } else { token :: mint_to (ctx . accounts . mint_ctx () , ticket_cost / 10 + 1) ? ; }"
      },
      {
        "id": 15,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , ticket_cost * 10) ? ;"
      },
      {
        "id": 16,
        "label": "m . jackpots = m . jackpots . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "token :: mint_to (ctx . accounts . mint_ctx () , ticket_cost / 10 + 1) ? ;"
      },
      {
        "id": 18,
        "label": "m . rolls = m . rolls . saturating_add (1) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: m"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: parity"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: parity"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: parity"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: hit"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: parity"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: hit"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 18,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 18,
        "label": "data_dep: m"
      }
    ]
  }
]