[
  {
    "name": "init_market",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitMarket >",
      "fee_bps: u16",
      "settle_cap: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . market ;",
      "m . operator = ctx . accounts . operator . key () ;",
      "m . fee_bps = fee_bps . min (1500) ;",
      "m . settle_cap = settle_cap ;",
      "m . gross_volume = 0 ;",
      "m . settlements = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "act_settle",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActSettle >",
      "price: u64",
      "quantity: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . market ;",
      "let mut total = 0u64 ;",
      "for _ in 0 .. quantity",
      "{",
      "total = total . saturating_add (price) ;",
      "}",
      "if total > m . settle_cap",
      "{",
      "return Err (ErrorCode :: OverCap . into ()) ;",
      "}",
      "let fee = total . saturating_mul (m . fee_bps as u64) / 10_000 ;",
      "let seller_net = total . saturating_sub (fee) ;",
      "token :: transfer (ctx . accounts . pay_buyer_to_seller () , seller_net) ? ;",
      "token :: transfer (ctx . accounts . pay_buyer_to_fee () , fee) ? ;",
      "m . gross_volume = m . gross_volume . saturating_add (total) ;",
      "m . settlements = m . settlements . saturating_add (1) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitMarket",
    "node_type": "struct",
    "fields": [
      {
        "name": "market",
        "attribute": "# [account (init , payer = operator , space = 8 + 32 + 2 + 8 + 8 + 8)]",
        "field_type": "Account < 'info , Market >"
      },
      {
        "name": "operator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActSettle",
    "node_type": "struct",
    "fields": [
      {
        "name": "market",
        "attribute": "# [account (mut , has_one = operator)]",
        "field_type": "Account < 'info , Market >"
      },
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "buyer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "buyer_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "seller_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "fee_vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Market",
    "node_type": "struct",
    "fields": [
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "fee_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "settle_cap",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "gross_volume",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "settlements",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]