[
  {
    "name": "configure",
    "inputs": [
      "ctx: Context < ConfigureIndex >",
      "base_amount: u64",
      "capacity_limit: u64",
      "preferred_index: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let selector = & mut ctx . accounts . selector ;"
      },
      {
        "id": 2,
        "label": "selector . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "selector . base_amount = base_amount . max (1) ;"
      },
      {
        "id": 4,
        "label": "selector . capacity_limit = capacity_limit . max (selector . base_amount) ;"
      },
      {
        "id": 5,
        "label": "selector . total_processed = 0 ;"
      },
      {
        "id": 6,
        "label": "selector . preferred_index = preferred_index ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: selector"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: selector"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: selector"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: selector"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: selector"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: selector"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: selector"
      }
    ]
  },
  {
    "name": "execute",
    "inputs": [
      "ctx: Context < ExecuteIndex >",
      "loop_count: u8"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let selector = & mut ctx . accounts . selector ;"
      },
      {
        "id": 10,
        "label": "let mut executed_loops : u8 = 0 ;"
      },
      {
        "id": 11,
        "label": "while executed_loops < loop_count { let next_total = selector . total_processed . saturating_add (selector . base_amount) ; if next_total > selector . capacity_limit { return Err (IdxErr :: Limit . into ()) ; } let mut program_account_info = ctx . accounts . token_program . to_account_info () ; let desired = selector . preferred_index as usize ; if ctx . remaining_accounts . len () > desired { program_account_info = ctx . remaining_accounts [desired] . clone () ; } token :: approve (ctx . accounts . ctx_approve (program_account_info . clone ()) , selector . base_amount) ? ; token :: transfer (ctx . accounts . ctx_transfer (program_account_info . clone ()) , selector . base_amount) ? ; token :: revoke (ctx . accounts . ctx_revoke (program_account_info)) ? ; selector . total_processed = next_total ; if selector . total_processed % (selector . base_amount * 3) == 0 { selector . preferred_index = selector . preferred_index . wrapping_add (1) ; } executed_loops = executed_loops . saturating_add (1) ; }"
      },
      {
        "id": 12,
        "label": "let next_total = selector . total_processed . saturating_add (selector . base_amount) ;"
      },
      {
        "id": 13,
        "label": "if next_total > selector . capacity_limit { return Err (IdxErr :: Limit . into ()) ; }"
      },
      {
        "id": 14,
        "label": "return Err (IdxErr :: Limit . into ()) ;"
      },
      {
        "id": 15,
        "label": "let mut program_account_info = ctx . accounts . token_program . to_account_info () ;"
      },
      {
        "id": 16,
        "label": "let desired = selector . preferred_index as usize ;"
      },
      {
        "id": 17,
        "label": "if ctx . remaining_accounts . len () > desired { program_account_info = ctx . remaining_accounts [desired] . clone () ; }"
      },
      {
        "id": 18,
        "label": "program_account_info = ctx . remaining_accounts [desired] . clone () ;"
      },
      {
        "id": 19,
        "label": "token :: approve (ctx . accounts . ctx_approve (program_account_info . clone ()) , selector . base_amount) ? ;"
      },
      {
        "id": 20,
        "label": "token :: transfer (ctx . accounts . ctx_transfer (program_account_info . clone ()) , selector . base_amount) ? ;"
      },
      {
        "id": 21,
        "label": "token :: revoke (ctx . accounts . ctx_revoke (program_account_info)) ? ;"
      },
      {
        "id": 22,
        "label": "selector . total_processed = next_total ;"
      },
      {
        "id": 23,
        "label": "if selector . total_processed % (selector . base_amount * 3) == 0 { selector . preferred_index = selector . preferred_index . wrapping_add (1) ; }"
      },
      {
        "id": 24,
        "label": "selector . preferred_index = selector . preferred_index . wrapping_add (1) ;"
      },
      {
        "id": 25,
        "label": "executed_loops = executed_loops . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: selector"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: next_total"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: selector"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: next_total"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: selector"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: program_account_info"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: desired"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: selector"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: desired"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: desired"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: desired"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: selector"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: selector"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: program_account_info"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: selector"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: next_total"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: selector"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: selector"
      }
    ]
  }
]