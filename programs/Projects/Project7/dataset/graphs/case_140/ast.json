[
  {
    "name": "improper_mint",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MintCtx046 >"
    ],
    "attributes": [],
    "body": [
      "let initial = 709 ;",
      "let new_amt = initial . saturating_add (235) ;",
      "let final_amt = if new_amt > initial { new_amt - initial } else { initial } ;",
      "let ix = spl_token :: instruction :: mint_to (& ctx . accounts . token_prog . key () , & ctx . accounts . mint_acc . key () , & ctx . accounts . dest_acc . key () , & ctx . accounts . auth . key () , & [] , final_amt ,) ? ;",
      "invoke_signed (& ix , & [ctx . accounts . token_prog . to_account_info () , ctx . accounts . mint_acc . to_account_info () , ctx . accounts . dest_acc . to_account_info () , ctx . accounts . auth . to_account_info () ,] , & []) ? ;",
      "msg ! (\"Saturating minted amount: {}\" , final_amt) ;",
      "Ok (())"
    ]
  },
  {
    "name": "MintCtx046",
    "node_type": "struct",
    "fields": [
      {
        "name": "mint_acc",
        "attribute": "# [account (mut , has_one = auth)]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "dest_acc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "auth",
        "attribute": "# [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_prog",
        "attribute": "# [doc = \" CHECK: token program unchecked\"]",
        "field_type": "UncheckedAccount < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]