[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < InitTri >",
      "unit: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . route ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "r . unit = unit . max (1) ;"
      },
      {
        "id": 4,
        "label": "r . counter = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "exec",
    "inputs": [
      "ctx: Context < ExecTri >"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let r = & mut ctx . accounts . route ;"
      },
      {
        "id": 8,
        "label": "let m = r . counter % 3 ;"
      },
      {
        "id": 9,
        "label": "if m == 0 { token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Xfer { from : ctx . accounts . a_legacy . to_account_info () , to : ctx . accounts . b_legacy . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ,) , r . unit) ? ; }"
      },
      {
        "id": 10,
        "label": "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Xfer { from : ctx . accounts . a_legacy . to_account_info () , to : ctx . accounts . b_legacy . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ,) , r . unit) ? ;"
      },
      {
        "id": 11,
        "label": "if m == 1 { token_2022 :: transfer (CpiContext :: new (ctx . accounts . token2022_program . to_account_info () , Xfer22 { from : ctx . accounts . a22 . to_account_info () , to : ctx . accounts . b22 . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ,) , r . unit) ? ; }"
      },
      {
        "id": 12,
        "label": "token_2022 :: transfer (CpiContext :: new (ctx . accounts . token2022_program . to_account_info () , Xfer22 { from : ctx . accounts . a22 . to_account_info () , to : ctx . accounts . b22 . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ,) , r . unit) ? ;"
      },
      {
        "id": 13,
        "label": "if m == 2 { associated_token :: create (CpiContext :: new (ctx . accounts . associated_token_program . to_account_info () , Create { payer : ctx . accounts . owner . to_account_info () , associated_token : ctx . accounts . any_ata . to_account_info () , authority : ctx . accounts . owner . to_account_info () , mint : ctx . accounts . mint . to_account_info () , system_program : ctx . accounts . system_program . to_account_info () , token_program : ctx . accounts . token_program . to_account_info () , } ,)) ? ; }"
      },
      {
        "id": 14,
        "label": "associated_token :: create (CpiContext :: new (ctx . accounts . associated_token_program . to_account_info () , Create { payer : ctx . accounts . owner . to_account_info () , associated_token : ctx . accounts . any_ata . to_account_info () , authority : ctx . accounts . owner . to_account_info () , mint : ctx . accounts . mint . to_account_info () , system_program : ctx . accounts . system_program . to_account_info () , token_program : ctx . accounts . token_program . to_account_info () , } ,)) ? ;"
      },
      {
        "id": 15,
        "label": "r . counter = r . counter . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: r"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: m"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: r"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: r"
      }
    ]
  }
]