[
  {
    "name": "init_guild_treasury",
    "inputs": [
      "ctx: Context < InitGuildTreasury >",
      "monthly_fee: u64",
      "refund_period_slots: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let treasury = & mut ctx . accounts . guild_treasury ;"
      },
      {
        "id": 2,
        "label": "treasury . guild_leader = ctx . accounts . guild_leader . key () ;"
      },
      {
        "id": 3,
        "label": "treasury . fee_token_mint = ctx . accounts . fee_mint . key () ;"
      },
      {
        "id": 4,
        "label": "treasury . monthly_fee = monthly_fee ;"
      },
      {
        "id": 5,
        "label": "treasury . refund_period_slots = refund_period_slots ;"
      },
      {
        "id": 6,
        "label": "treasury . total_collected = 0 ;"
      },
      {
        "id": 7,
        "label": "treasury . total_refunded = 0 ;"
      },
      {
        "id": 8,
        "label": "treasury . member_count = 0 ;"
      },
      {
        "id": 9,
        "label": "treasury . treasury_status = TreasuryStatus :: Open ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: treasury"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "process_fee_collection",
    "inputs": [
      "ctx: Context < ProcessFeeCollection >"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let treasury = & mut ctx . accounts . guild_treasury ;"
      },
      {
        "id": 13,
        "label": "let current_slot = Clock :: get () ? . slot ;"
      },
      {
        "id": 14,
        "label": "if treasury . treasury_status == TreasuryStatus :: Closed { return Ok (()) ; }"
      },
      {
        "id": 15,
        "label": "return Ok (()) ;"
      },
      {
        "id": 16,
        "label": "let fee_amount = treasury . monthly_fee ;"
      },
      {
        "id": 17,
        "label": "let member_data = & mut ctx . accounts . member_data ;"
      },
      {
        "id": 18,
        "label": "if member_data . last_payment_slot + 432000 < current_slot { member_data . payment_status = PaymentStatus :: Overdue ; }"
      },
      {
        "id": 19,
        "label": "member_data . payment_status = PaymentStatus :: Overdue ;"
      },
      {
        "id": 20,
        "label": "if member_data . payment_status == PaymentStatus :: Current { return Ok (()) ; }"
      },
      {
        "id": 21,
        "label": "return Ok (()) ;"
      },
      {
        "id": 22,
        "label": "transfer (ctx . accounts . collect_fee_ctx () , fee_amount ,) ? ;"
      },
      {
        "id": 23,
        "label": "member_data . last_payment_slot = current_slot ;"
      },
      {
        "id": 24,
        "label": "member_data . payment_status = PaymentStatus :: Current ;"
      },
      {
        "id": 25,
        "label": "member_data . total_paid += fee_amount ;"
      },
      {
        "id": 26,
        "label": "treasury . total_collected += fee_amount ;"
      },
      {
        "id": 27,
        "label": "if member_data . is_first_payment { treasury . member_count += 1 ; member_data . is_first_payment = false ; }"
      },
      {
        "id": 28,
        "label": "treasury . member_count += 1 ;"
      },
      {
        "id": 29,
        "label": "member_data . is_first_payment = false ;"
      },
      {
        "id": 30,
        "label": "if treasury . member_count >= 100 { treasury . treasury_status = TreasuryStatus :: Full ; }"
      },
      {
        "id": 31,
        "label": "treasury . treasury_status = TreasuryStatus :: Full ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: treasury"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: current_slot"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: treasury"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: fee_amount"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: treasury"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: member_data"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: member_data"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: current_slot"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: member_data"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: member_data"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: member_data"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: member_data"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: current_slot"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: member_data"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: member_data"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 12,
        "to": 26,
        "label": "data_dep: treasury"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: member_data"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: treasury"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: member_data"
      },
      {
        "from": 12,
        "to": 28,
        "label": "data_dep: treasury"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: member_data"
      },
      {
        "from": 12,
        "to": 30,
        "label": "data_dep: treasury"
      },
      {
        "from": 12,
        "to": 30,
        "label": "data_dep: treasury"
      },
      {
        "from": 12,
        "to": 31,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "process_refund_request",
    "inputs": [
      "ctx: Context < ProcessRefundRequest >"
    ],
    "nodes": [
      {
        "id": 33,
        "label": "Entry"
      },
      {
        "id": 34,
        "label": "let treasury = & mut ctx . accounts . guild_treasury ;"
      },
      {
        "id": 35,
        "label": "let member_data = & mut ctx . accounts . member_data ;"
      },
      {
        "id": 36,
        "label": "let current_slot = Clock :: get () ? . slot ;"
      },
      {
        "id": 37,
        "label": "if member_data . last_payment_slot + treasury . refund_period_slots > current_slot { let refund_amount = treasury . monthly_fee ; let mut remaining_refund = refund_amount ; while remaining_refund > 0 { let chunk = std :: cmp :: min (remaining_refund , 100_000 * 10u64 . pow (6)) ; transfer (ctx . accounts . refund_ctx () , chunk ,) ? ; remaining_refund -= chunk ; } member_data . payment_status = PaymentStatus :: Refunded ; treasury . total_refunded += refund_amount ; if member_data . total_paid >= refund_amount { member_data . total_paid -= refund_amount ; } }"
      },
      {
        "id": 38,
        "label": "let refund_amount = treasury . monthly_fee ;"
      },
      {
        "id": 39,
        "label": "let mut remaining_refund = refund_amount ;"
      },
      {
        "id": 40,
        "label": "while remaining_refund > 0 { let chunk = std :: cmp :: min (remaining_refund , 100_000 * 10u64 . pow (6)) ; transfer (ctx . accounts . refund_ctx () , chunk ,) ? ; remaining_refund -= chunk ; }"
      },
      {
        "id": 41,
        "label": "let chunk = std :: cmp :: min (remaining_refund , 100_000 * 10u64 . pow (6)) ;"
      },
      {
        "id": 42,
        "label": "transfer (ctx . accounts . refund_ctx () , chunk ,) ? ;"
      },
      {
        "id": 43,
        "label": "remaining_refund -= chunk ;"
      },
      {
        "id": 44,
        "label": "member_data . payment_status = PaymentStatus :: Refunded ;"
      },
      {
        "id": 45,
        "label": "treasury . total_refunded += refund_amount ;"
      },
      {
        "id": 46,
        "label": "if member_data . total_paid >= refund_amount { member_data . total_paid -= refund_amount ; }"
      },
      {
        "id": 47,
        "label": "member_data . total_paid -= refund_amount ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 34,
        "to": 34,
        "label": "def: treasury"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: member_data"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: current_slot"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: member_data"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: treasury"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: current_slot"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: treasury"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: member_data"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: treasury"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: member_data"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: member_data"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: refund_amount"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: treasury"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: remaining_refund"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: refund_amount"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: remaining_refund"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: remaining_refund"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: remaining_refund"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: chunk"
      },
      {
        "from": 39,
        "to": 41,
        "label": "data_dep: remaining_refund"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: chunk"
      },
      {
        "from": 39,
        "to": 43,
        "label": "data_dep: remaining_refund"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: chunk"
      },
      {
        "from": 35,
        "to": 44,
        "label": "data_dep: member_data"
      },
      {
        "from": 34,
        "to": 45,
        "label": "data_dep: treasury"
      },
      {
        "from": 38,
        "to": 45,
        "label": "data_dep: refund_amount"
      },
      {
        "from": 35,
        "to": 46,
        "label": "data_dep: member_data"
      },
      {
        "from": 38,
        "to": 46,
        "label": "data_dep: refund_amount"
      },
      {
        "from": 35,
        "to": 46,
        "label": "data_dep: member_data"
      },
      {
        "from": 38,
        "to": 46,
        "label": "data_dep: refund_amount"
      },
      {
        "from": 35,
        "to": 47,
        "label": "data_dep: member_data"
      },
      {
        "from": 38,
        "to": 47,
        "label": "data_dep: refund_amount"
      }
    ]
  }
]