[
  {
    "name": "initialize_marketplace",
    "inputs": [
      "ctx: Context < InitializeMarketplace >",
      "fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let market_state = & mut ctx . accounts . marketplace_state ;"
      },
      {
        "id": 2,
        "label": "market_state . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "market_state . fee_bps = fee_bps ;"
      },
      {
        "id": 4,
        "label": "market_state . fee_collector_account = ctx . accounts . fee_collector_account . key () ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: market_state"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: market_state"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: market_state"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: market_state"
      }
    ]
  },
  {
    "name": "process_sale",
    "inputs": [
      "ctx: Context < ProcessSale >",
      "sale_amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let market_state = & ctx . accounts . marketplace_state ;"
      },
      {
        "id": 8,
        "label": "let fee_amount = sale_amount * market_state . fee_bps as u64 / 10000 ;"
      },
      {
        "id": 9,
        "label": "let final_seller_amount = sale_amount - fee_amount ;"
      },
      {
        "id": 10,
        "label": "let mut paid_fee = false ;"
      },
      {
        "id": 11,
        "label": "if fee_amount > 0 { let fee_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . fee_collector_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ; token :: transfer (fee_ctx , fee_amount) ? ; paid_fee = true ; }"
      },
      {
        "id": 12,
        "label": "let fee_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . fee_collector_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ;"
      },
      {
        "id": 13,
        "label": "token :: transfer (fee_ctx , fee_amount) ? ;"
      },
      {
        "id": 14,
        "label": "paid_fee = true ;"
      },
      {
        "id": 15,
        "label": "if final_seller_amount > 0 { let seller_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . seller_token_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ; token :: transfer (seller_ctx , final_seller_amount) ? ; } else { if ! paid_fee { return Err (ErrorCode :: NoPaymentMade . into ()) ; } }"
      },
      {
        "id": 16,
        "label": "let seller_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . seller_token_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ;"
      },
      {
        "id": 17,
        "label": "token :: transfer (seller_ctx , final_seller_amount) ? ;"
      },
      {
        "id": 18,
        "label": "if ! paid_fee { return Err (ErrorCode :: NoPaymentMade . into ()) ; }"
      },
      {
        "id": 19,
        "label": "return Err (ErrorCode :: NoPaymentMade . into ()) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: market_state"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: fee_amount"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: market_state"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: final_seller_amount"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: paid_fee"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: paid_fee"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: fee_ctx"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: fee_ctx"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: paid_fee"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: final_seller_amount"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: final_seller_amount"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: paid_fee"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: seller_ctx"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: seller_ctx"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: final_seller_amount"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: paid_fee"
      }
    ]
  }
]