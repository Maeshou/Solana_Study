[
  {
    "name": "initialize_marketplace",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let market_state = & mut ctx . accounts . marketplace_state ;"
      },
      {
        "id": 2,
        "label": "market_state . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "market_state . fee_bps = fee_bps ;"
      },
      {
        "id": 4,
        "label": "market_state . fee_collector_account = ctx . accounts . fee_collector_account . key () ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_sale",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let market_state = & ctx . accounts . marketplace_state ;"
      },
      {
        "id": 8,
        "label": "let fee_amount = sale_amount * market_state . fee_bps as u64 / 10000 ;"
      },
      {
        "id": 9,
        "label": "let final_seller_amount = sale_amount - fee_amount ;"
      },
      {
        "id": 10,
        "label": "let mut paid_fee = false ;"
      },
      {
        "id": 11,
        "label": "if statement"
      },
      {
        "id": 12,
        "label": "predicate"
      },
      {
        "id": 13,
        "label": "fee_amount > 0"
      },
      {
        "id": 14,
        "label": "True body"
      },
      {
        "id": 15,
        "label": "let fee_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . fee_collector_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ;"
      },
      {
        "id": 16,
        "label": "token :: transfer (fee_ctx , fee_amount) ? ;"
      },
      {
        "id": 17,
        "label": "paid_fee = true ;"
      },
      {
        "id": 18,
        "label": "False body"
      },
      {
        "id": 19,
        "label": "No-op"
      },
      {
        "id": 20,
        "label": "merge"
      },
      {
        "id": 21,
        "label": "if statement"
      },
      {
        "id": 22,
        "label": "predicate"
      },
      {
        "id": 23,
        "label": "final_seller_amount > 0"
      },
      {
        "id": 24,
        "label": "True body"
      },
      {
        "id": 25,
        "label": "let seller_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . payer_token_account . to_account_info () , to : ctx . accounts . seller_token_account . to_account_info () , authority : ctx . accounts . payer . to_account_info () , } ,) ;"
      },
      {
        "id": 26,
        "label": "token :: transfer (seller_ctx , final_seller_amount) ? ;"
      },
      {
        "id": 27,
        "label": "False body"
      },
      {
        "id": 28,
        "label": "if statement"
      },
      {
        "id": 29,
        "label": "predicate"
      },
      {
        "id": 30,
        "label": "! paid_fee"
      },
      {
        "id": 31,
        "label": "True body"
      },
      {
        "id": 32,
        "label": "return Err (ErrorCode :: NoPaymentMade . into ()) ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "No-op"
      },
      {
        "id": 35,
        "label": "merge"
      },
      {
        "id": 36,
        "label": "merge"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "predicate"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "true"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 11,
        "to": 18,
        "label": "false"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 17,
        "to": 20,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "predicate"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 21,
        "to": 24,
        "label": "true"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 21,
        "to": 27,
        "label": "false"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "predicate"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "true"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 28,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 32,
        "to": 35,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 26,
        "to": 36,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  }
]