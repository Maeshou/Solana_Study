[
  {
    "name": "example1_1_4_5",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Example14501 >",
      "init_val: u64",
      "add_val: u64"
    ],
    "attributes": [
      "# [doc = \" 脆弱性:\"]",
      "# [doc = \" - Signer Authorization の欠如\"]",
      "# [doc = \" - Reinitialization Attack の欠如\"]",
      "# [doc = \" - Duplicate Mutable Account の欠如\"]"
    ],
    "body": [
      "let signer_acc = & ctx . accounts . signer_account ;",
      "let data_acc1 = & ctx . accounts . data_account1 ;",
      "let data_acc2 = & ctx . accounts . data_account2 ;",
      "{ let mut raw = data_acc1 . try_borrow_mut_data () ? ; raw [0] = 1 ; let bytes = init_val . to_le_bytes () ; raw [1] = bytes [0] ; raw [2] = bytes [1] ; raw [3] = bytes [2] ; raw [4] = bytes [3] ; raw [5] = bytes [4] ; raw [6] = bytes [5] ; raw [7] = bytes [6] ; raw [8] = bytes [7] ; }",
      "let cur_val : u64 = { let raw = data_acc1 . try_borrow_data () ? ; let mut buf = [0u8 ; 8] ; buf . copy_from_slice (& raw [1 .. 9]) ; u64 :: from_le_bytes (buf) } ;",
      "let v1 = data_acc1 . try_borrow_data () ? [0] ;",
      "let v2 = data_acc2 . try_borrow_data () ? [0] ;",
      "let merged = v1 . wrapping_add (v2) . wrapping_add (add_val as u8) ;",
      "let mut raw2 = data_acc2 . try_borrow_mut_data () ? ;",
      "raw2 [0] = merged ;",
      "Ok (())"
    ]
  },
  {
    "name": "Example14501",
    "node_type": "struct",
    "fields": [
      {
        "name": "signer_account",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "data_account1",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "data_account2",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]