[
  {
    "name": "register_sensor",
    "inputs": [
      "ctx: Context < RegisterSensor >",
      "readings: Vec < u32 >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut sum = 0u32 ;"
      },
      {
        "id": 2,
        "label": "let mut count = 0u32 ;"
      },
      {
        "id": 3,
        "label": "let mut max = 0u32 ;"
      },
      {
        "id": 4,
        "label": "for & r in readings . iter () { if r > 0 { sum += r ; count += 1 ; if r > max { max = r ; } } }"
      },
      {
        "id": 5,
        "label": "if r > 0 { sum += r ; count += 1 ; if r > max { max = r ; } }"
      },
      {
        "id": 6,
        "label": "sum += r ;"
      },
      {
        "id": 7,
        "label": "count += 1 ;"
      },
      {
        "id": 8,
        "label": "if r > max { max = r ; }"
      },
      {
        "id": 9,
        "label": "max = r ;"
      },
      {
        "id": 10,
        "label": "let avg = if count > 0 { sum / count } else { 0 } ;"
      },
      {
        "id": 11,
        "label": "sum / count"
      },
      {
        "id": 12,
        "label": "0"
      },
      {
        "id": 13,
        "label": "let sensor = & mut ctx . accounts . sensor ;"
      },
      {
        "id": 14,
        "label": "sensor . total = sum ;"
      },
      {
        "id": 15,
        "label": "sensor . count = count ;"
      },
      {
        "id": 16,
        "label": "sensor . max = max ;"
      },
      {
        "id": 17,
        "label": "sensor . avg = avg ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: sum"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: count"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: max"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: count"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: max"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: max"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: count"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: max"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: max"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: count"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: max"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: max"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: max"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: avg"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: count"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: count"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: count"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: sensor"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: sensor"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: sensor"
      },
      {
        "from": 2,
        "to": 15,
        "label": "data_dep: count"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: sensor"
      },
      {
        "from": 3,
        "to": 16,
        "label": "data_dep: max"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: sensor"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: avg"
      }
    ]
  },
  {
    "name": "reset_sensor",
    "inputs": [
      "ctx: Context < ResetSensor >"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let sensor = & mut ctx . accounts . sensor ;"
      },
      {
        "id": 21,
        "label": "sensor . total = 0 ;"
      },
      {
        "id": 22,
        "label": "sensor . count = 0 ;"
      },
      {
        "id": 23,
        "label": "sensor . max = 0 ;"
      },
      {
        "id": 24,
        "label": "sensor . avg = 0 ;"
      },
      {
        "id": 25,
        "label": "sensor . last_reset = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: sensor"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: sensor"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: sensor"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: sensor"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: sensor"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: sensor"
      }
    ]
  }
]