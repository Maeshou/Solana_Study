[
  {
    "name": "create_post",
    "inputs": [
      "ctx: Context < CreatePost >",
      "content: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . post ;"
      },
      {
        "id": 2,
        "label": "p . body = content . clone () ;"
      },
      {
        "id": 3,
        "label": "p . likes = 0 ;"
      },
      {
        "id": 4,
        "label": "let word_count = content . split_whitespace () . count () as u32 ;"
      },
      {
        "id": 5,
        "label": "p . word_count = word_count ;"
      },
      {
        "id": 6,
        "label": "p . char_count = content . len () as u32 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: word_count"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: word_count"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "record_likes",
    "inputs": [
      "ctx: Context < RecordLikes >",
      "likes: Vec < u32 >"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let p = & mut ctx . accounts . post ;"
      },
      {
        "id": 10,
        "label": "let mut sum = 0u32 ;"
      },
      {
        "id": 11,
        "label": "let mut max = 0u32 ;"
      },
      {
        "id": 12,
        "label": "let mut min = u32 :: MAX ;"
      },
      {
        "id": 13,
        "label": "for & l in likes . iter () { sum += l ; if l > max { max = l ; } if l < min { min = l ; } }"
      },
      {
        "id": 14,
        "label": "sum += l ;"
      },
      {
        "id": 15,
        "label": "if l > max { max = l ; }"
      },
      {
        "id": 16,
        "label": "max = l ;"
      },
      {
        "id": 17,
        "label": "if l < min { min = l ; }"
      },
      {
        "id": 18,
        "label": "min = l ;"
      },
      {
        "id": 19,
        "label": "p . likes = sum ;"
      },
      {
        "id": 20,
        "label": "p . max_like = max ;"
      },
      {
        "id": 21,
        "label": "p . min_like = if likes . is_empty () { 0 } else { min } ;"
      },
      {
        "id": 22,
        "label": "0"
      },
      {
        "id": 23,
        "label": "min"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: p"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: sum"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: max"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: min"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: sum"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: max"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: max"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: min"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: min"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: max"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: max"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: max"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: min"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: min"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: min"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: sum"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: max"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: min"
      },
      {
        "from": 12,
        "to": 23,
        "label": "data_dep: min"
      }
    ]
  }
]