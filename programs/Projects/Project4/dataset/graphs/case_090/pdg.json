[
  {
    "name": "init_alpha",
    "inputs": [
      "ctx: Context < InitAlpha >",
      "data1: u8",
      "data2: u32",
      "data3: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acc = & mut ctx . accounts . alpha_account ;"
      },
      {
        "id": 2,
        "label": "acc . data1 = data1 ;"
      },
      {
        "id": 3,
        "label": "acc . data2 = data2 ;"
      },
      {
        "id": 4,
        "label": "acc . data3 = data3 ;"
      },
      {
        "id": 5,
        "label": "acc . bump = * ctx . bumps . get (\"alpha_account\") . unwrap () ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acc"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: acc"
      }
    ]
  },
  {
    "name": "update_alpha",
    "inputs": [
      "ctx: Context < UpdateAlpha >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let acc = & mut ctx . accounts . alpha_account ;"
      },
      {
        "id": 9,
        "label": "for i in 0 .. (acc . data2 as usize) { if i % 2 == 0 { msg ! (\"even idx: {}\" , i) ; acc . data2 = acc . data2 . checked_add (i as u32) . unwrap () ; acc . data1 = acc . data1 . checked_add (1) . unwrap () ; msg ! (\"data1 now {}\" , acc . data1) ; } else { msg ! (\"odd idx: {}\" , i) ; let prod = acc . data3 . checked_mul (i as u64) . unwrap () ; acc . data3 = prod ; msg ! (\"data3 now {}\" , acc . data3) ; } }"
      },
      {
        "id": 10,
        "label": "if i % 2 == 0 { msg ! (\"even idx: {}\" , i) ; acc . data2 = acc . data2 . checked_add (i as u32) . unwrap () ; acc . data1 = acc . data1 . checked_add (1) . unwrap () ; msg ! (\"data1 now {}\" , acc . data1) ; } else { msg ! (\"odd idx: {}\" , i) ; let prod = acc . data3 . checked_mul (i as u64) . unwrap () ; acc . data3 = prod ; msg ! (\"data3 now {}\" , acc . data3) ; }"
      },
      {
        "id": 11,
        "label": "msg ! (\"even idx: {}\" , i) ;"
      },
      {
        "id": 12,
        "label": "acc . data2 = acc . data2 . checked_add (i as u32) . unwrap () ;"
      },
      {
        "id": 13,
        "label": "acc . data1 = acc . data1 . checked_add (1) . unwrap () ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"data1 now {}\" , acc . data1) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"odd idx: {}\" , i) ;"
      },
      {
        "id": 16,
        "label": "let prod = acc . data3 . checked_mul (i as u64) . unwrap () ;"
      },
      {
        "id": 17,
        "label": "acc . data3 = prod ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"data3 now {}\" , acc . data3) ;"
      },
      {
        "id": 19,
        "label": "if acc . data2 > 1000 { msg ! (\"data2 is large: {}\" , acc . data2) ; acc . data3 = acc . data3 . checked_sub (acc . data2 as u64) . unwrap () ; acc . data2 = acc . data2 . checked_mul (2) . unwrap () ; } else { msg ! (\"data2 is small: {}\" , acc . data2) ; acc . data1 = acc . data1 . checked_sub (1) . unwrap () ; msg ! (\"data1 decremented to {}\" , acc . data1) ; }"
      },
      {
        "id": 20,
        "label": "msg ! (\"data2 is large: {}\" , acc . data2) ;"
      },
      {
        "id": 21,
        "label": "acc . data3 = acc . data3 . checked_sub (acc . data2 as u64) . unwrap () ;"
      },
      {
        "id": 22,
        "label": "acc . data2 = acc . data2 . checked_mul (2) . unwrap () ;"
      },
      {
        "id": 23,
        "label": "msg ! (\"data2 is small: {}\" , acc . data2) ;"
      },
      {
        "id": 24,
        "label": "acc . data1 = acc . data1 . checked_sub (1) . unwrap () ;"
      },
      {
        "id": 25,
        "label": "msg ! (\"data1 decremented to {}\" , acc . data1) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: acc"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: prod"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: acc"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: prod"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: acc"
      }
    ]
  }
]