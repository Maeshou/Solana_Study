[
  {
    "name": "init_user",
    "inputs": [
      "ctx: Context < InitUser >",
      "nickname: String",
      "theme: String",
      "notify_email: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut sum = 0u32 ;"
      },
      {
        "id": 2,
        "label": "let mut vowels = 0u32 ;"
      },
      {
        "id": 3,
        "label": "let mut consonants = 0u32 ;"
      },
      {
        "id": 4,
        "label": "for c in nickname . chars () { let code = c as u32 ; sum += code ; match c . to_ascii_lowercase () { 'a' | 'e' | 'i' | 'o' | 'u' => vowels += 1 , ch if ch . is_ascii_alphabetic () => consonants += 1 , _ => { } } }"
      },
      {
        "id": 5,
        "label": "let code = c as u32 ;"
      },
      {
        "id": 6,
        "label": "sum += code ;"
      },
      {
        "id": 7,
        "label": "match c . to_ascii_lowercase () { 'a' | 'e' | 'i' | 'o' | 'u' => vowels += 1 , ch if ch . is_ascii_alphabetic () => consonants += 1 , _ => { } }"
      },
      {
        "id": 8,
        "label": "let profile = & mut ctx . accounts . profile ;"
      },
      {
        "id": 9,
        "label": "profile . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 10,
        "label": "profile . ascii_sum = sum ;"
      },
      {
        "id": 11,
        "label": "profile . vowels = vowels ;"
      },
      {
        "id": 12,
        "label": "profile . consonants = consonants ;"
      },
      {
        "id": 13,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 14,
        "label": "let mut clean = String :: new () ;"
      },
      {
        "id": 15,
        "label": "for ch in theme . chars () { if ! ('0' <= ch && ch <= '9') { clean . push (ch) ; } }"
      },
      {
        "id": 16,
        "label": "if ! ('0' <= ch && ch <= '9') { clean . push (ch) ; }"
      },
      {
        "id": 17,
        "label": "clean . push (ch) ;"
      },
      {
        "id": 18,
        "label": "if clean . len () % 2 == 0 { settings . theme = clean . to_uppercase () ; } else { settings . theme = clean . to_lowercase () ; }"
      },
      {
        "id": 19,
        "label": "settings . theme = clean . to_uppercase () ;"
      },
      {
        "id": 20,
        "label": "settings . theme = clean . to_lowercase () ;"
      },
      {
        "id": 21,
        "label": "settings . ascii_mod = (sum % 100) as u8 ;"
      },
      {
        "id": 22,
        "label": "let notifications = & mut ctx . accounts . notifications ;"
      },
      {
        "id": 23,
        "label": "notifications . email = notify_email ;"
      },
      {
        "id": 24,
        "label": "notifications . sms = ! notify_email ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: sum"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: vowels"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: consonants"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: sum"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: vowels"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: consonants"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: code"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: sum"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: code"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: vowels"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: consonants"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: profile"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: profile"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: profile"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: profile"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: vowels"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: profile"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: consonants"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: settings"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: clean"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: clean"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: clean"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: clean"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: clean"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: settings"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: clean"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: settings"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: clean"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: settings"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: clean"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: settings"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: clean"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: settings"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: sum"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: notifications"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: notifications"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: notifications"
      }
    ]
  },
  {
    "name": "update_settings",
    "inputs": [
      "ctx: Context < UpdateSettings >",
      "new_theme: String"
    ],
    "nodes": [
      {
        "id": 26,
        "label": "Entry"
      },
      {
        "id": 27,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 28,
        "label": "let prefix = \">>\" ;"
      },
      {
        "id": 29,
        "label": "if new_theme . starts_with (prefix) { settings . theme = new_theme [prefix . len () ..] . to_string () ; } else { settings . theme = new_theme . clone () ; }"
      },
      {
        "id": 30,
        "label": "settings . theme = new_theme [prefix . len () ..] . to_string () ;"
      },
      {
        "id": 31,
        "label": "settings . theme = new_theme . clone () ;"
      },
      {
        "id": 32,
        "label": "let mut hash = 0u8 ;"
      },
      {
        "id": 33,
        "label": "for (i , c) in settings . theme . chars () . enumerate () { hash = hash . wrapping_add ((c as u8) . wrapping_mul ((i as u8) . wrapping_add (1))) ; }"
      },
      {
        "id": 34,
        "label": "hash = hash . wrapping_add ((c as u8) . wrapping_mul ((i as u8) . wrapping_add (1))) ;"
      },
      {
        "id": 35,
        "label": "settings . ascii_mod = hash ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 27,
        "to": 27,
        "label": "def: settings"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: prefix"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: prefix"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: settings"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: prefix"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: settings"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: settings"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: prefix"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: settings"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: hash"
      },
      {
        "from": 27,
        "to": 33,
        "label": "data_dep: settings"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: hash"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: hash"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: hash"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: hash"
      },
      {
        "from": 27,
        "to": 35,
        "label": "data_dep: settings"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: hash"
      }
    ]
  }
]