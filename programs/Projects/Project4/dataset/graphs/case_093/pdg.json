[
  {
    "name": "init_delta",
    "inputs": [
      "ctx: Context < InitDelta >",
      "x: u8",
      "y: u32",
      "z: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acc = & mut ctx . accounts . delta_account ;"
      },
      {
        "id": 2,
        "label": "acc . x = x ;"
      },
      {
        "id": 3,
        "label": "acc . y = y ;"
      },
      {
        "id": 4,
        "label": "acc . z = z ;"
      },
      {
        "id": 5,
        "label": "acc . bump = * ctx . bumps . get (\"delta_account\") . unwrap () ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acc"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: acc"
      }
    ]
  },
  {
    "name": "update_delta",
    "inputs": [
      "ctx: Context < UpdateDelta >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let acc = & mut ctx . accounts . delta_account ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 10,
        "label": "while i < (acc . x as usize + 3) { if i % 4 == 0 { msg ! (\"idx {} divisible by 4\" , i) ; acc . x = acc . x . checked_add (2) . unwrap () ; acc . y = acc . y . checked_add (acc . x as u32) . unwrap () ; msg ! (\"x and y updated\") ; } else { msg ! (\"idx {} not divisible by 4\" , i) ; acc . z = acc . z . checked_mul (2) . unwrap () ; msg ! (\"z doubled\") ; } i += 1 ; }"
      },
      {
        "id": 11,
        "label": "if i % 4 == 0 { msg ! (\"idx {} divisible by 4\" , i) ; acc . x = acc . x . checked_add (2) . unwrap () ; acc . y = acc . y . checked_add (acc . x as u32) . unwrap () ; msg ! (\"x and y updated\") ; } else { msg ! (\"idx {} not divisible by 4\" , i) ; acc . z = acc . z . checked_mul (2) . unwrap () ; msg ! (\"z doubled\") ; }"
      },
      {
        "id": 12,
        "label": "msg ! (\"idx {} divisible by 4\" , i) ;"
      },
      {
        "id": 13,
        "label": "acc . x = acc . x . checked_add (2) . unwrap () ;"
      },
      {
        "id": 14,
        "label": "acc . y = acc . y . checked_add (acc . x as u32) . unwrap () ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"x and y updated\") ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"idx {} not divisible by 4\" , i) ;"
      },
      {
        "id": 17,
        "label": "acc . z = acc . z . checked_mul (2) . unwrap () ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"z doubled\") ;"
      },
      {
        "id": 19,
        "label": "i += 1 ;"
      },
      {
        "id": 20,
        "label": "if acc . y < 50 { msg ! (\"y is small: {}\" , acc . y) ; acc . z = acc . z . checked_sub (acc . y as u64) . unwrap () ; acc . y = acc . y . checked_add (20) . unwrap () ; } else { msg ! (\"y is large: {}\" , acc . y) ; acc . x = acc . x . checked_sub (1) . unwrap () ; msg ! (\"x decremented\") ; }"
      },
      {
        "id": 21,
        "label": "msg ! (\"y is small: {}\" , acc . y) ;"
      },
      {
        "id": 22,
        "label": "acc . z = acc . z . checked_sub (acc . y as u64) . unwrap () ;"
      },
      {
        "id": 23,
        "label": "acc . y = acc . y . checked_add (20) . unwrap () ;"
      },
      {
        "id": 24,
        "label": "msg ! (\"y is large: {}\" , acc . y) ;"
      },
      {
        "id": 25,
        "label": "acc . x = acc . x . checked_sub (1) . unwrap () ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"x decremented\") ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: acc"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: acc"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: acc"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: acc"
      }
    ]
  }
]