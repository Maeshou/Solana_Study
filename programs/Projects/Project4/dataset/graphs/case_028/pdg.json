[
  {
    "name": "register_user",
    "inputs": [
      "ctx: Context < RegisterUser >",
      "email: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 2,
        "label": "let u = & mut ctx . accounts . user ;"
      },
      {
        "id": 3,
        "label": "u . email = email . clone () ;"
      },
      {
        "id": 4,
        "label": "u . plan = 0 ;"
      },
      {
        "id": 5,
        "label": "u . last_updated = now ;"
      },
      {
        "id": 6,
        "label": "u . valid_email = email . contains (\"@\") ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: now"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: u"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: u"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: u"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: u"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: now"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: u"
      }
    ]
  },
  {
    "name": "upgrade_plan",
    "inputs": [
      "ctx: Context < UpgradePlan >",
      "tier: u8"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 10,
        "label": "let u = & mut ctx . accounts . user ;"
      },
      {
        "id": 11,
        "label": "if tier > 0 { u . plan = tier as u32 ; u . upgrade_count += 1 ; u . last_updated = now ; }"
      },
      {
        "id": 12,
        "label": "u . plan = tier as u32 ;"
      },
      {
        "id": 13,
        "label": "u . upgrade_count += 1 ;"
      },
      {
        "id": 14,
        "label": "u . last_updated = now ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: now"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: u"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: u"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: u"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: u"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: now"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: u"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: u"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: u"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: now"
      }
    ]
  }
]