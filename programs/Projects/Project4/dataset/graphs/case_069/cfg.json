[
  {
    "name": "init_metrics",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . metrics ;"
      },
      {
        "id": 2,
        "label": "m . hits = hits ;"
      },
      {
        "id": 3,
        "label": "m . misses = misses ;"
      },
      {
        "id": 4,
        "label": "let total = m . hits + m . misses ;"
      },
      {
        "id": 5,
        "label": "let mut accuracy : u8 = 0 ;"
      },
      {
        "id": 6,
        "label": "if statement"
      },
      {
        "id": 7,
        "label": "predicate"
      },
      {
        "id": 8,
        "label": "total != 0"
      },
      {
        "id": 9,
        "label": "True body"
      },
      {
        "id": 10,
        "label": "let rate = m . hits * 100 / total ;"
      },
      {
        "id": 11,
        "label": "msg ! (\"Computed raw rate: {}%\" , rate) ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "rate > u8 :: MAX as u32"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "accuracy = u8 :: MAX ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Rate clipped to u8::MAX\") ;"
      },
      {
        "id": 18,
        "label": "False body"
      },
      {
        "id": 19,
        "label": "accuracy = rate as u8 ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Rate within u8 range\") ;"
      },
      {
        "id": 21,
        "label": "merge"
      },
      {
        "id": 22,
        "label": "let failure_rate = 100u32 . saturating_sub (rate) ;"
      },
      {
        "id": 23,
        "label": "msg ! (\"Failure rate: {}%\" , failure_rate) ;"
      },
      {
        "id": 24,
        "label": "let mut warn_flag = false ;"
      },
      {
        "id": 25,
        "label": "if statement"
      },
      {
        "id": 26,
        "label": "predicate"
      },
      {
        "id": 27,
        "label": "failure_rate > 50"
      },
      {
        "id": 28,
        "label": "True body"
      },
      {
        "id": 29,
        "label": "warn_flag = true ;"
      },
      {
        "id": 30,
        "label": "msg ! (\"Warning flag set: failure_rate > 50%\") ;"
      },
      {
        "id": 31,
        "label": "False body"
      },
      {
        "id": 32,
        "label": "msg ! (\"Failure rate acceptable\") ;"
      },
      {
        "id": 33,
        "label": "merge"
      },
      {
        "id": 34,
        "label": "if statement"
      },
      {
        "id": 35,
        "label": "predicate"
      },
      {
        "id": 36,
        "label": "warn_flag"
      },
      {
        "id": 37,
        "label": "True body"
      },
      {
        "id": 38,
        "label": "let penalty = 5u8 ;"
      },
      {
        "id": 39,
        "label": "accuracy = accuracy . saturating_sub (penalty) ;"
      },
      {
        "id": 40,
        "label": "msg ! (\"Applied penalty of {} â†’ new accuracy: {}\" , penalty , accuracy) ;"
      },
      {
        "id": 41,
        "label": "False body"
      },
      {
        "id": 42,
        "label": "No-op"
      },
      {
        "id": 43,
        "label": "merge"
      },
      {
        "id": 44,
        "label": "let average = total / 2 ;"
      },
      {
        "id": 45,
        "label": "msg ! (\"Total/2 midpoint: {}\" , average) ;"
      },
      {
        "id": 46,
        "label": "False body"
      },
      {
        "id": 47,
        "label": "msg ! (\"No records available, setting defaults\") ;"
      },
      {
        "id": 48,
        "label": "let mut default_flag = true ;"
      },
      {
        "id": 49,
        "label": "if statement"
      },
      {
        "id": 50,
        "label": "predicate"
      },
      {
        "id": 51,
        "label": "default_flag"
      },
      {
        "id": 52,
        "label": "True body"
      },
      {
        "id": 53,
        "label": "msg ! (\"Default flag is true\") ;"
      },
      {
        "id": 54,
        "label": "False body"
      },
      {
        "id": 55,
        "label": "No-op"
      },
      {
        "id": 56,
        "label": "merge"
      },
      {
        "id": 57,
        "label": "accuracy = 0 ;"
      },
      {
        "id": 58,
        "label": "merge"
      },
      {
        "id": 59,
        "label": "m . accuracy = accuracy ;"
      },
      {
        "id": 60,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "predicate"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 6,
        "to": 9,
        "label": "true"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 12,
        "to": 18,
        "label": "false"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 17,
        "to": 21,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "predicate"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 25,
        "to": 28,
        "label": "true"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 25,
        "to": 31,
        "label": "false"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 30,
        "to": 33,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "predicate"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 34,
        "to": 37,
        "label": "true"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 34,
        "to": 41,
        "label": "false"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 40,
        "to": 43,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 6,
        "to": 46,
        "label": "false"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "predicate"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 49,
        "to": 52,
        "label": "true"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 49,
        "to": 54,
        "label": "false"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 53,
        "to": 56,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 45,
        "to": 58,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 58,
        "to": 59,
        "label": "next"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      }
    ]
  },
  {
    "name": "record",
    "nodes": [
      {
        "id": 61,
        "label": "Entry"
      },
      {
        "id": 62,
        "label": "let m = & mut ctx . accounts . metrics ;"
      },
      {
        "id": 63,
        "label": "if statement"
      },
      {
        "id": 64,
        "label": "predicate"
      },
      {
        "id": 65,
        "label": "success"
      },
      {
        "id": 66,
        "label": "True body"
      },
      {
        "id": 67,
        "label": "m . hits = m . hits . saturating_add (1) ;"
      },
      {
        "id": 68,
        "label": "msg ! (\"Recorded a hit â†’ hits={}\" , m . hits) ;"
      },
      {
        "id": 69,
        "label": "False body"
      },
      {
        "id": 70,
        "label": "m . misses = m . misses . saturating_add (1) ;"
      },
      {
        "id": 71,
        "label": "msg ! (\"Recorded a miss â†’ misses={}\" , m . misses) ;"
      },
      {
        "id": 72,
        "label": "merge"
      },
      {
        "id": 73,
        "label": "let total = m . hits + m . misses ;"
      },
      {
        "id": 74,
        "label": "let mut accuracy : u8 = 0 ;"
      },
      {
        "id": 75,
        "label": "if statement"
      },
      {
        "id": 76,
        "label": "predicate"
      },
      {
        "id": 77,
        "label": "total != 0"
      },
      {
        "id": 78,
        "label": "True body"
      },
      {
        "id": 79,
        "label": "let rate = m . hits * 100 / total ;"
      },
      {
        "id": 80,
        "label": "msg ! (\"Recomputed raw rate: {}%\" , rate) ;"
      },
      {
        "id": 81,
        "label": "if statement"
      },
      {
        "id": 82,
        "label": "predicate"
      },
      {
        "id": 83,
        "label": "rate > u8 :: MAX as u32"
      },
      {
        "id": 84,
        "label": "True body"
      },
      {
        "id": 85,
        "label": "accuracy = u8 :: MAX ;"
      },
      {
        "id": 86,
        "label": "msg ! (\"Rate clipped on record\") ;"
      },
      {
        "id": 87,
        "label": "False body"
      },
      {
        "id": 88,
        "label": "accuracy = rate as u8 ;"
      },
      {
        "id": 89,
        "label": "msg ! (\"Rate within range on record\") ;"
      },
      {
        "id": 90,
        "label": "merge"
      },
      {
        "id": 91,
        "label": "let failure_rate = 100u32 . saturating_sub (rate) ;"
      },
      {
        "id": 92,
        "label": "msg ! (\"Recomputed failure rate: {}%\" , failure_rate) ;"
      },
      {
        "id": 93,
        "label": "let mut warn_flag = false ;"
      },
      {
        "id": 94,
        "label": "if statement"
      },
      {
        "id": 95,
        "label": "predicate"
      },
      {
        "id": 96,
        "label": "failure_rate > 50"
      },
      {
        "id": 97,
        "label": "True body"
      },
      {
        "id": 98,
        "label": "warn_flag = true ;"
      },
      {
        "id": 99,
        "label": "msg ! (\"Warning flag re-set: failure_rate > 50%\") ;"
      },
      {
        "id": 100,
        "label": "False body"
      },
      {
        "id": 101,
        "label": "msg ! (\"Failure rate still acceptable\") ;"
      },
      {
        "id": 102,
        "label": "merge"
      },
      {
        "id": 103,
        "label": "if statement"
      },
      {
        "id": 104,
        "label": "predicate"
      },
      {
        "id": 105,
        "label": "warn_flag"
      },
      {
        "id": 106,
        "label": "True body"
      },
      {
        "id": 107,
        "label": "let penalty = 3u8 ;"
      },
      {
        "id": 108,
        "label": "accuracy = accuracy . saturating_sub (penalty) ;"
      },
      {
        "id": 109,
        "label": "msg ! (\"Applied record penalty of {} â†’ accuracy={}\" , penalty , accuracy) ;"
      },
      {
        "id": 110,
        "label": "False body"
      },
      {
        "id": 111,
        "label": "No-op"
      },
      {
        "id": 112,
        "label": "merge"
      },
      {
        "id": 113,
        "label": "let average = total / 2 ;"
      },
      {
        "id": 114,
        "label": "msg ! (\"Record midpoint: {}\" , average) ;"
      },
      {
        "id": 115,
        "label": "False body"
      },
      {
        "id": 116,
        "label": "msg ! (\"After record: no data present\") ;"
      },
      {
        "id": 117,
        "label": "let mut default_flag = true ;"
      },
      {
        "id": 118,
        "label": "if statement"
      },
      {
        "id": 119,
        "label": "predicate"
      },
      {
        "id": 120,
        "label": "default_flag"
      },
      {
        "id": 121,
        "label": "True body"
      },
      {
        "id": 122,
        "label": "msg ! (\"Default flag still true after record\") ;"
      },
      {
        "id": 123,
        "label": "False body"
      },
      {
        "id": 124,
        "label": "No-op"
      },
      {
        "id": 125,
        "label": "merge"
      },
      {
        "id": 126,
        "label": "accuracy = 0 ;"
      },
      {
        "id": 127,
        "label": "merge"
      },
      {
        "id": 128,
        "label": "m . accuracy = accuracy ;"
      },
      {
        "id": 129,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 61,
        "to": 62,
        "label": "next"
      },
      {
        "from": 62,
        "to": 63,
        "label": "next"
      },
      {
        "from": 63,
        "to": 64,
        "label": "predicate"
      },
      {
        "from": 64,
        "to": 65,
        "label": "next"
      },
      {
        "from": 63,
        "to": 66,
        "label": "true"
      },
      {
        "from": 66,
        "to": 67,
        "label": "next"
      },
      {
        "from": 67,
        "to": 68,
        "label": "next"
      },
      {
        "from": 63,
        "to": 69,
        "label": "false"
      },
      {
        "from": 69,
        "to": 70,
        "label": "next"
      },
      {
        "from": 70,
        "to": 71,
        "label": "next"
      },
      {
        "from": 68,
        "to": 72,
        "label": "next"
      },
      {
        "from": 71,
        "to": 72,
        "label": "next"
      },
      {
        "from": 72,
        "to": 73,
        "label": "next"
      },
      {
        "from": 73,
        "to": 74,
        "label": "next"
      },
      {
        "from": 74,
        "to": 75,
        "label": "next"
      },
      {
        "from": 75,
        "to": 76,
        "label": "predicate"
      },
      {
        "from": 76,
        "to": 77,
        "label": "next"
      },
      {
        "from": 75,
        "to": 78,
        "label": "true"
      },
      {
        "from": 78,
        "to": 79,
        "label": "next"
      },
      {
        "from": 79,
        "to": 80,
        "label": "next"
      },
      {
        "from": 80,
        "to": 81,
        "label": "next"
      },
      {
        "from": 81,
        "to": 82,
        "label": "predicate"
      },
      {
        "from": 82,
        "to": 83,
        "label": "next"
      },
      {
        "from": 81,
        "to": 84,
        "label": "true"
      },
      {
        "from": 84,
        "to": 85,
        "label": "next"
      },
      {
        "from": 85,
        "to": 86,
        "label": "next"
      },
      {
        "from": 81,
        "to": 87,
        "label": "false"
      },
      {
        "from": 87,
        "to": 88,
        "label": "next"
      },
      {
        "from": 88,
        "to": 89,
        "label": "next"
      },
      {
        "from": 86,
        "to": 90,
        "label": "next"
      },
      {
        "from": 89,
        "to": 90,
        "label": "next"
      },
      {
        "from": 90,
        "to": 91,
        "label": "next"
      },
      {
        "from": 91,
        "to": 92,
        "label": "next"
      },
      {
        "from": 92,
        "to": 93,
        "label": "next"
      },
      {
        "from": 93,
        "to": 94,
        "label": "next"
      },
      {
        "from": 94,
        "to": 95,
        "label": "predicate"
      },
      {
        "from": 95,
        "to": 96,
        "label": "next"
      },
      {
        "from": 94,
        "to": 97,
        "label": "true"
      },
      {
        "from": 97,
        "to": 98,
        "label": "next"
      },
      {
        "from": 98,
        "to": 99,
        "label": "next"
      },
      {
        "from": 94,
        "to": 100,
        "label": "false"
      },
      {
        "from": 100,
        "to": 101,
        "label": "next"
      },
      {
        "from": 99,
        "to": 102,
        "label": "next"
      },
      {
        "from": 101,
        "to": 102,
        "label": "next"
      },
      {
        "from": 102,
        "to": 103,
        "label": "next"
      },
      {
        "from": 103,
        "to": 104,
        "label": "predicate"
      },
      {
        "from": 104,
        "to": 105,
        "label": "next"
      },
      {
        "from": 103,
        "to": 106,
        "label": "true"
      },
      {
        "from": 106,
        "to": 107,
        "label": "next"
      },
      {
        "from": 107,
        "to": 108,
        "label": "next"
      },
      {
        "from": 108,
        "to": 109,
        "label": "next"
      },
      {
        "from": 103,
        "to": 110,
        "label": "false"
      },
      {
        "from": 110,
        "to": 111,
        "label": "next"
      },
      {
        "from": 109,
        "to": 112,
        "label": "next"
      },
      {
        "from": 111,
        "to": 112,
        "label": "next"
      },
      {
        "from": 112,
        "to": 113,
        "label": "next"
      },
      {
        "from": 113,
        "to": 114,
        "label": "next"
      },
      {
        "from": 75,
        "to": 115,
        "label": "false"
      },
      {
        "from": 115,
        "to": 116,
        "label": "next"
      },
      {
        "from": 116,
        "to": 117,
        "label": "next"
      },
      {
        "from": 117,
        "to": 118,
        "label": "next"
      },
      {
        "from": 118,
        "to": 119,
        "label": "predicate"
      },
      {
        "from": 119,
        "to": 120,
        "label": "next"
      },
      {
        "from": 118,
        "to": 121,
        "label": "true"
      },
      {
        "from": 121,
        "to": 122,
        "label": "next"
      },
      {
        "from": 118,
        "to": 123,
        "label": "false"
      },
      {
        "from": 123,
        "to": 124,
        "label": "next"
      },
      {
        "from": 122,
        "to": 125,
        "label": "next"
      },
      {
        "from": 124,
        "to": 125,
        "label": "next"
      },
      {
        "from": 125,
        "to": 126,
        "label": "next"
      },
      {
        "from": 114,
        "to": 127,
        "label": "next"
      },
      {
        "from": 126,
        "to": 127,
        "label": "next"
      },
      {
        "from": 127,
        "to": 128,
        "label": "next"
      },
      {
        "from": 128,
        "to": 129,
        "label": "next"
      }
    ]
  }
]