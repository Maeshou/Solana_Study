[
  {
    "name": "init_metrics",
    "inputs": [
      "ctx: Context < InitMetrics >",
      "hits: u32",
      "misses: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . metrics ;"
      },
      {
        "id": 2,
        "label": "m . hits = hits ;"
      },
      {
        "id": 3,
        "label": "m . misses = misses ;"
      },
      {
        "id": 4,
        "label": "let total = m . hits + m . misses ;"
      },
      {
        "id": 5,
        "label": "let mut accuracy : u8 = 0 ;"
      },
      {
        "id": 6,
        "label": "if total != 0 { let rate = m . hits * 100 / total ; msg ! (\"Computed raw rate: {}%\" , rate) ; if rate > u8 :: MAX as u32 { accuracy = u8 :: MAX ; msg ! (\"Rate clipped to u8::MAX\") ; } else { accuracy = rate as u8 ; msg ! (\"Rate within u8 range\") ; } let failure_rate = 100u32 . saturating_sub (rate) ; msg ! (\"Failure rate: {}%\" , failure_rate) ; let mut warn_flag = false ; if failure_rate > 50 { warn_flag = true ; msg ! (\"Warning flag set: failure_rate > 50%\") ; } else { msg ! (\"Failure rate acceptable\") ; } if warn_flag { let penalty = 5u8 ; accuracy = accuracy . saturating_sub (penalty) ; msg ! (\"Applied penalty of {} → new accuracy: {}\" , penalty , accuracy) ; } let average = total / 2 ; msg ! (\"Total/2 midpoint: {}\" , average) ; } else { msg ! (\"No records available, setting defaults\") ; let mut default_flag = true ; if default_flag { msg ! (\"Default flag is true\") ; } accuracy = 0 ; }"
      },
      {
        "id": 7,
        "label": "let rate = m . hits * 100 / total ;"
      },
      {
        "id": 8,
        "label": "msg ! (\"Computed raw rate: {}%\" , rate) ;"
      },
      {
        "id": 9,
        "label": "if rate > u8 :: MAX as u32 { accuracy = u8 :: MAX ; msg ! (\"Rate clipped to u8::MAX\") ; } else { accuracy = rate as u8 ; msg ! (\"Rate within u8 range\") ; }"
      },
      {
        "id": 10,
        "label": "accuracy = u8 :: MAX ;"
      },
      {
        "id": 11,
        "label": "msg ! (\"Rate clipped to u8::MAX\") ;"
      },
      {
        "id": 12,
        "label": "accuracy = rate as u8 ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Rate within u8 range\") ;"
      },
      {
        "id": 14,
        "label": "let failure_rate = 100u32 . saturating_sub (rate) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Failure rate: {}%\" , failure_rate) ;"
      },
      {
        "id": 16,
        "label": "let mut warn_flag = false ;"
      },
      {
        "id": 17,
        "label": "if failure_rate > 50 { warn_flag = true ; msg ! (\"Warning flag set: failure_rate > 50%\") ; } else { msg ! (\"Failure rate acceptable\") ; }"
      },
      {
        "id": 18,
        "label": "warn_flag = true ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Warning flag set: failure_rate > 50%\") ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Failure rate acceptable\") ;"
      },
      {
        "id": 21,
        "label": "if warn_flag { let penalty = 5u8 ; accuracy = accuracy . saturating_sub (penalty) ; msg ! (\"Applied penalty of {} → new accuracy: {}\" , penalty , accuracy) ; }"
      },
      {
        "id": 22,
        "label": "let penalty = 5u8 ;"
      },
      {
        "id": 23,
        "label": "accuracy = accuracy . saturating_sub (penalty) ;"
      },
      {
        "id": 24,
        "label": "msg ! (\"Applied penalty of {} → new accuracy: {}\" , penalty , accuracy) ;"
      },
      {
        "id": 25,
        "label": "let average = total / 2 ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"Total/2 midpoint: {}\" , average) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"No records available, setting defaults\") ;"
      },
      {
        "id": 28,
        "label": "let mut default_flag = true ;"
      },
      {
        "id": 29,
        "label": "if default_flag { msg ! (\"Default flag is true\") ; }"
      },
      {
        "id": 30,
        "label": "msg ! (\"Default flag is true\") ;"
      },
      {
        "id": 31,
        "label": "accuracy = 0 ;"
      },
      {
        "id": 32,
        "label": "m . accuracy = accuracy ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: total"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: total"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: m"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: total"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: rate"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: m"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: rate"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: rate"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: rate"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: failure_rate"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: rate"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: warn_flag"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: failure_rate"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: penalty"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: penalty"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: average"
      },
      {
        "from": 4,
        "to": 25,
        "label": "data_dep: total"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: default_flag"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: default_flag"
      },
      {
        "from": 1,
        "to": 32,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "record",
    "inputs": [
      "ctx: Context < Record >",
      "success: bool"
    ],
    "nodes": [
      {
        "id": 34,
        "label": "Entry"
      },
      {
        "id": 35,
        "label": "let m = & mut ctx . accounts . metrics ;"
      },
      {
        "id": 36,
        "label": "if success { m . hits = m . hits . saturating_add (1) ; msg ! (\"Recorded a hit → hits={}\" , m . hits) ; } else { m . misses = m . misses . saturating_add (1) ; msg ! (\"Recorded a miss → misses={}\" , m . misses) ; }"
      },
      {
        "id": 37,
        "label": "m . hits = m . hits . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Recorded a hit → hits={}\" , m . hits) ;"
      },
      {
        "id": 39,
        "label": "m . misses = m . misses . saturating_add (1) ;"
      },
      {
        "id": 40,
        "label": "msg ! (\"Recorded a miss → misses={}\" , m . misses) ;"
      },
      {
        "id": 41,
        "label": "let total = m . hits + m . misses ;"
      },
      {
        "id": 42,
        "label": "let mut accuracy : u8 = 0 ;"
      },
      {
        "id": 43,
        "label": "if total != 0 { let rate = m . hits * 100 / total ; msg ! (\"Recomputed raw rate: {}%\" , rate) ; if rate > u8 :: MAX as u32 { accuracy = u8 :: MAX ; msg ! (\"Rate clipped on record\") ; } else { accuracy = rate as u8 ; msg ! (\"Rate within range on record\") ; } let failure_rate = 100u32 . saturating_sub (rate) ; msg ! (\"Recomputed failure rate: {}%\" , failure_rate) ; let mut warn_flag = false ; if failure_rate > 50 { warn_flag = true ; msg ! (\"Warning flag re-set: failure_rate > 50%\") ; } else { msg ! (\"Failure rate still acceptable\") ; } if warn_flag { let penalty = 3u8 ; accuracy = accuracy . saturating_sub (penalty) ; msg ! (\"Applied record penalty of {} → accuracy={}\" , penalty , accuracy) ; } let average = total / 2 ; msg ! (\"Record midpoint: {}\" , average) ; } else { msg ! (\"After record: no data present\") ; let mut default_flag = true ; if default_flag { msg ! (\"Default flag still true after record\") ; } accuracy = 0 ; }"
      },
      {
        "id": 44,
        "label": "let rate = m . hits * 100 / total ;"
      },
      {
        "id": 45,
        "label": "msg ! (\"Recomputed raw rate: {}%\" , rate) ;"
      },
      {
        "id": 46,
        "label": "if rate > u8 :: MAX as u32 { accuracy = u8 :: MAX ; msg ! (\"Rate clipped on record\") ; } else { accuracy = rate as u8 ; msg ! (\"Rate within range on record\") ; }"
      },
      {
        "id": 47,
        "label": "accuracy = u8 :: MAX ;"
      },
      {
        "id": 48,
        "label": "msg ! (\"Rate clipped on record\") ;"
      },
      {
        "id": 49,
        "label": "accuracy = rate as u8 ;"
      },
      {
        "id": 50,
        "label": "msg ! (\"Rate within range on record\") ;"
      },
      {
        "id": 51,
        "label": "let failure_rate = 100u32 . saturating_sub (rate) ;"
      },
      {
        "id": 52,
        "label": "msg ! (\"Recomputed failure rate: {}%\" , failure_rate) ;"
      },
      {
        "id": 53,
        "label": "let mut warn_flag = false ;"
      },
      {
        "id": 54,
        "label": "if failure_rate > 50 { warn_flag = true ; msg ! (\"Warning flag re-set: failure_rate > 50%\") ; } else { msg ! (\"Failure rate still acceptable\") ; }"
      },
      {
        "id": 55,
        "label": "warn_flag = true ;"
      },
      {
        "id": 56,
        "label": "msg ! (\"Warning flag re-set: failure_rate > 50%\") ;"
      },
      {
        "id": 57,
        "label": "msg ! (\"Failure rate still acceptable\") ;"
      },
      {
        "id": 58,
        "label": "if warn_flag { let penalty = 3u8 ; accuracy = accuracy . saturating_sub (penalty) ; msg ! (\"Applied record penalty of {} → accuracy={}\" , penalty , accuracy) ; }"
      },
      {
        "id": 59,
        "label": "let penalty = 3u8 ;"
      },
      {
        "id": 60,
        "label": "accuracy = accuracy . saturating_sub (penalty) ;"
      },
      {
        "id": 61,
        "label": "msg ! (\"Applied record penalty of {} → accuracy={}\" , penalty , accuracy) ;"
      },
      {
        "id": 62,
        "label": "let average = total / 2 ;"
      },
      {
        "id": 63,
        "label": "msg ! (\"Record midpoint: {}\" , average) ;"
      },
      {
        "id": 64,
        "label": "msg ! (\"After record: no data present\") ;"
      },
      {
        "id": 65,
        "label": "let mut default_flag = true ;"
      },
      {
        "id": 66,
        "label": "if default_flag { msg ! (\"Default flag still true after record\") ; }"
      },
      {
        "id": 67,
        "label": "msg ! (\"Default flag still true after record\") ;"
      },
      {
        "id": 68,
        "label": "accuracy = 0 ;"
      },
      {
        "id": 69,
        "label": "m . accuracy = accuracy ;"
      },
      {
        "id": 70,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 35,
        "to": 35,
        "label": "def: m"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 39,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 39,
        "label": "data_dep: m"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: total"
      },
      {
        "from": 35,
        "to": 41,
        "label": "data_dep: m"
      },
      {
        "from": 35,
        "to": 41,
        "label": "data_dep: m"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: total"
      },
      {
        "from": 35,
        "to": 43,
        "label": "data_dep: m"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: total"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: total"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: rate"
      },
      {
        "from": 35,
        "to": 44,
        "label": "data_dep: m"
      },
      {
        "from": 41,
        "to": 44,
        "label": "data_dep: total"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: rate"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: rate"
      },
      {
        "from": 44,
        "to": 49,
        "label": "data_dep: rate"
      },
      {
        "from": 51,
        "to": 51,
        "label": "def: failure_rate"
      },
      {
        "from": 44,
        "to": 51,
        "label": "data_dep: rate"
      },
      {
        "from": 53,
        "to": 53,
        "label": "def: warn_flag"
      },
      {
        "from": 51,
        "to": 54,
        "label": "data_dep: failure_rate"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 53,
        "to": 58,
        "label": "data_dep: warn_flag"
      },
      {
        "from": 59,
        "to": 59,
        "label": "def: penalty"
      },
      {
        "from": 59,
        "to": 60,
        "label": "data_dep: penalty"
      },
      {
        "from": 62,
        "to": 62,
        "label": "def: average"
      },
      {
        "from": 41,
        "to": 62,
        "label": "data_dep: total"
      },
      {
        "from": 65,
        "to": 65,
        "label": "def: default_flag"
      },
      {
        "from": 65,
        "to": 66,
        "label": "data_dep: default_flag"
      },
      {
        "from": 35,
        "to": 69,
        "label": "data_dep: m"
      }
    ]
  }
]