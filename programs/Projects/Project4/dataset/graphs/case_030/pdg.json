[
  {
    "name": "create_course",
    "inputs": [
      "ctx: Context < CreateCourse >",
      "capacity: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . course ;"
      },
      {
        "id": 2,
        "label": "c . capacity = capacity ;"
      },
      {
        "id": 3,
        "label": "c . filled = 0 ;"
      },
      {
        "id": 4,
        "label": "c . has_space = capacity > 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "enroll",
    "inputs": [
      "ctx: Context < Enroll >",
      "want: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 8,
        "label": "let c = & mut ctx . accounts . course ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while i < want { if c . filled >= c . capacity { break ; } c . filled += 1 ; i += 1 ; }"
      },
      {
        "id": 11,
        "label": "if c . filled >= c . capacity { break ; }"
      },
      {
        "id": 12,
        "label": "break ;"
      },
      {
        "id": 13,
        "label": "c . filled += 1 ;"
      },
      {
        "id": 14,
        "label": "i += 1 ;"
      },
      {
        "id": 15,
        "label": "c . has_space = c . filled < c . capacity ;"
      },
      {
        "id": 16,
        "label": "c . last_enroll = now ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: now"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: c"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: now"
      }
    ]
  }
]