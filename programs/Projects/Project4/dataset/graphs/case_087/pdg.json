[
  {
    "name": "init_multiplier",
    "inputs": [
      "ctx: Context < InitMultiplier >",
      "base: u32",
      "mult: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . score ;"
      },
      {
        "id": 2,
        "label": "s . base_score = base ;"
      },
      {
        "id": 3,
        "label": "s . multiplier = mult ;"
      },
      {
        "id": 4,
        "label": "s . adjusted_score = base ;"
      },
      {
        "id": 5,
        "label": "s . adjusted_score = s . base_score . saturating_mul (s . multiplier as u32) ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "apply_multiplier",
    "inputs": [
      "ctx: Context < ApplyMultiplier >",
      "extra: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let s = & mut ctx . accounts . score ;"
      },
      {
        "id": 9,
        "label": "let new_mult = s . multiplier . saturating_add (extra) ;"
      },
      {
        "id": 10,
        "label": "s . multiplier = if new_mult > 10 { 10 } else { new_mult } ;"
      },
      {
        "id": 11,
        "label": "10"
      },
      {
        "id": 12,
        "label": "new_mult"
      },
      {
        "id": 13,
        "label": "s . adjusted_score = s . base_score . saturating_mul (s . multiplier as u32) ;"
      },
      {
        "id": 14,
        "label": "if s . multiplier > 5 { s . adjusted_score = s . adjusted_score . saturating_add (50) ; }"
      },
      {
        "id": 15,
        "label": "s . adjusted_score = s . adjusted_score . saturating_add (50) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: s"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: new_mult"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: new_mult"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: new_mult"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: new_mult"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: s"
      }
    ]
  }
]