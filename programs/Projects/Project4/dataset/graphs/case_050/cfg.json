[
  {
    "name": "init_user",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut sum = 0u32 ;"
      },
      {
        "id": 2,
        "label": "Loop Start"
      },
      {
        "id": 3,
        "label": "sum += c as u32 ;"
      },
      {
        "id": 4,
        "label": "Loop End"
      },
      {
        "id": 5,
        "label": "let profile = & mut ctx . accounts . profile ;"
      },
      {
        "id": 6,
        "label": "profile . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "profile . ascii_sum = sum ;"
      },
      {
        "id": 8,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 9,
        "label": "if statement"
      },
      {
        "id": 10,
        "label": "predicate"
      },
      {
        "id": 11,
        "label": "nickname . len () % 2 == 0"
      },
      {
        "id": 12,
        "label": "True body"
      },
      {
        "id": 13,
        "label": "settings . theme = theme . to_uppercase () ;"
      },
      {
        "id": 14,
        "label": "False body"
      },
      {
        "id": 15,
        "label": "settings . theme = theme . to_lowercase () ;"
      },
      {
        "id": 16,
        "label": "merge"
      },
      {
        "id": 17,
        "label": "settings . ascii_mod = (sum % 100) as u8 ;"
      },
      {
        "id": 18,
        "label": "let notifications = & mut ctx . accounts . notifications ;"
      },
      {
        "id": 19,
        "label": "notifications . email = notify_email ;"
      },
      {
        "id": 20,
        "label": "notifications . sms = ! notify_email ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 2,
        "to": 4,
        "label": "for"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "predicate"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 9,
        "to": 12,
        "label": "true"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 9,
        "to": 14,
        "label": "false"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 13,
        "to": 16,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_settings",
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let settings = & mut ctx . accounts . settings ;"
      },
      {
        "id": 24,
        "label": "if statement"
      },
      {
        "id": 25,
        "label": "predicate"
      },
      {
        "id": 26,
        "label": "new_theme . len () > 10"
      },
      {
        "id": 27,
        "label": "True body"
      },
      {
        "id": 28,
        "label": "settings . theme = new_theme . chars () . take (10) . collect () ;"
      },
      {
        "id": 29,
        "label": "False body"
      },
      {
        "id": 30,
        "label": "settings . theme = new_theme ;"
      },
      {
        "id": 31,
        "label": "merge"
      },
      {
        "id": 32,
        "label": "settings . ascii_mod = settings . theme . len () as u8 ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "predicate"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 24,
        "to": 27,
        "label": "true"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 24,
        "to": 29,
        "label": "false"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      }
    ]
  }
]