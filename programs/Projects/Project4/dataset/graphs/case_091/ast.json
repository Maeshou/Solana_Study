[
  {
    "name": "init_beta",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBeta >",
      "count: u8",
      "amount: u32",
      "total: u64"
    ],
    "attributes": [],
    "body": [
      "let acc = & mut ctx . accounts . beta_account ;",
      "acc . count = count ;",
      "acc . amount = amount ;",
      "acc . total = total ;",
      "acc . bump = * ctx . bumps . get (\"beta_account\") . unwrap () ;",
      "Ok (())"
    ]
  },
  {
    "name": "update_beta",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdateBeta >"
    ],
    "attributes": [],
    "body": [
      "let acc = & mut ctx . accounts . beta_account ;",
      "for i in 0 .. (acc . amount as usize)",
      "{",
      "if i % 3 == 0",
      "{",
      "msg ! (\"multiple of 3: {}\" , i) ;",
      "acc . amount = acc . amount . checked_add (5) . unwrap () ;",
      "acc . count = acc . count . checked_add (2) . unwrap () ;",
      "msg ! (\"count now",
      "{",
      "}\" , acc . count) ;",
      "} else",
      "{",
      "msg ! (\"not mult of 3: {}\" , i) ;",
      "let new_total = acc . total . checked_add (i as u64) . unwrap () ;",
      "acc . total = new_total ;",
      "msg ! (\"total now",
      "{",
      "}\" , acc . total) ;",
      "}",
      "}",
      "if acc . total > 500",
      "{",
      "msg ! (\"total exceeds 500\") ;",
      "acc . amount = acc . amount . checked_mul (3) . unwrap () ;",
      "acc . count = acc . count . checked_sub (1) . unwrap () ;",
      "msg ! (\"amount x3, count -1\") ;",
      "} else",
      "{",
      "msg ! (\"total within limit\") ;",
      "acc . total = acc . total . checked_add (acc . amount as u64) . unwrap () ;",
      "msg ! (\"total increased\") ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitBeta",
    "node_type": "struct",
    "fields": [
      {
        "name": "beta_account",
        "attribute": "# [account (init , seeds = [b\"beta\"] , bump , payer = payer , space = 8 + 1 + 4 + 8 + 1)]",
        "field_type": "Account < 'info , BetaAccount >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UpdateBeta",
    "node_type": "struct",
    "fields": [
      {
        "name": "beta_account",
        "attribute": "# [account (mut , seeds = [b\"beta\"] , bump)]",
        "field_type": "Account < 'info , BetaAccount >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BetaAccount",
    "node_type": "struct",
    "fields": [
      {
        "name": "count",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "amount",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "total",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]