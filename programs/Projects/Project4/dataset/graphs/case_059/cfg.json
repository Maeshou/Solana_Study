[
  {
    "name": "init_inventory",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let stock = & mut ctx . accounts . stock ;"
      },
      {
        "id": 2,
        "label": "stock . level = 0 ;"
      },
      {
        "id": 3,
        "label": "let mut square_sum = 0u64 ;"
      },
      {
        "id": 4,
        "label": "Loop Start"
      },
      {
        "id": 5,
        "label": "stock . level += 1 ;"
      },
      {
        "id": 6,
        "label": "square_sum += (i as u64) * (i as u64) ;"
      },
      {
        "id": 7,
        "label": "Loop End"
      },
      {
        "id": 8,
        "label": "stock . square_sum = square_sum ;"
      },
      {
        "id": 9,
        "label": "let thresh = & mut ctx . accounts . threshold ;"
      },
      {
        "id": 10,
        "label": "thresh . value = threshold ;"
      },
      {
        "id": 11,
        "label": "let log = & mut ctx . accounts . alert_log ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "stock . level > threshold"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "let diff = stock . level - threshold ;"
      },
      {
        "id": 17,
        "label": "log . count = diff * diff ;"
      },
      {
        "id": 18,
        "label": "log . over = true ;"
      },
      {
        "id": 19,
        "label": "False body"
      },
      {
        "id": 20,
        "label": "log . count = 0 ;"
      },
      {
        "id": 21,
        "label": "log . over = false ;"
      },
      {
        "id": 22,
        "label": "merge"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 4,
        "to": 7,
        "label": "for"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 12,
        "to": 19,
        "label": "false"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 18,
        "to": 22,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      }
    ]
  },
  {
    "name": "adjust_stock",
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let stock = & mut ctx . accounts . stock ;"
      },
      {
        "id": 26,
        "label": "if statement"
      },
      {
        "id": 27,
        "label": "predicate"
      },
      {
        "id": 28,
        "label": "change >= 0"
      },
      {
        "id": 29,
        "label": "True body"
      },
      {
        "id": 30,
        "label": "let half = (change as u32) / 2 ;"
      },
      {
        "id": 31,
        "label": "stock . level = stock . level . saturating_add (half) ;"
      },
      {
        "id": 32,
        "label": "stock . level = stock . level . saturating_add (change as u32 - half) ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "let dec = (- change) as u32 ;"
      },
      {
        "id": 35,
        "label": "let half = dec / 2 ;"
      },
      {
        "id": 36,
        "label": "stock . level = stock . level . saturating_sub (half) ;"
      },
      {
        "id": 37,
        "label": "stock . level = stock . level . saturating_sub (dec - half) ;"
      },
      {
        "id": 38,
        "label": "merge"
      },
      {
        "id": 39,
        "label": "let thresh = ctx . accounts . threshold . value ;"
      },
      {
        "id": 40,
        "label": "let log = & mut ctx . accounts . alert_log ;"
      },
      {
        "id": 41,
        "label": "if statement"
      },
      {
        "id": 42,
        "label": "predicate"
      },
      {
        "id": 43,
        "label": "stock . level > thresh"
      },
      {
        "id": 44,
        "label": "True body"
      },
      {
        "id": 45,
        "label": "let diff = stock . level - thresh ;"
      },
      {
        "id": 46,
        "label": "log . count = diff * diff ;"
      },
      {
        "id": 47,
        "label": "log . over = true ;"
      },
      {
        "id": 48,
        "label": "False body"
      },
      {
        "id": 49,
        "label": "log . count = 0 ;"
      },
      {
        "id": 50,
        "label": "log . over = false ;"
      },
      {
        "id": 51,
        "label": "merge"
      },
      {
        "id": 52,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "predicate"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 26,
        "to": 29,
        "label": "true"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 26,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 32,
        "to": 38,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "predicate"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 41,
        "to": 44,
        "label": "true"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 41,
        "to": 48,
        "label": "false"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 47,
        "to": 51,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      }
    ]
  }
]