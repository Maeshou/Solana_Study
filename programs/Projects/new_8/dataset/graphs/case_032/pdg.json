[
  {
    "name": "open",
    "inputs": [
      "ctx: Context < Open >",
      "window: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "b . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "b . window = window ;"
      },
      {
        "id": 4,
        "label": "b . records = 1 ;"
      },
      {
        "id": 5,
        "label": "b . bonus = 0 ;"
      },
      {
        "id": 6,
        "label": "if b . window < 3 { b . window = 3 ; }"
      },
      {
        "id": 7,
        "label": "b . window = 3 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "submit",
    "inputs": [
      "ctx: Context < Submit >",
      "score: u32",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 11,
        "label": "let seeds = & [b\"raid_sink\" , ctx . accounts . manager . key . as_ref () , & [user_bump] ,] ;"
      },
      {
        "id": 12,
        "label": "let sink = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (RaidErr :: Make)) ? ;"
      },
      {
        "id": 13,
        "label": "if sink != ctx . accounts . raid_sink . key () { return Err (error ! (RaidErr :: Route)) ; }"
      },
      {
        "id": 14,
        "label": "return Err (error ! (RaidErr :: Route)) ;"
      },
      {
        "id": 15,
        "label": "let mut s = score ;"
      },
      {
        "id": 16,
        "label": "if s > 700 { s = 700 ; }"
      },
      {
        "id": 17,
        "label": "s = 700 ;"
      },
      {
        "id": 18,
        "label": "b . records = b . records . saturating_add (1) ;"
      },
      {
        "id": 19,
        "label": "let mut t = 5u32 ;"
      },
      {
        "id": 20,
        "label": "while t < s { b . bonus = b . bonus . saturating_add (2) ; t = t . saturating_add (17) ; }"
      },
      {
        "id": 21,
        "label": "b . bonus = b . bonus . saturating_add (2) ;"
      },
      {
        "id": 22,
        "label": "t = t . saturating_add (17) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: b"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: seeds"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: sink"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: seeds"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: sink"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: s"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: t"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: t"
      }
    ]
  }
]