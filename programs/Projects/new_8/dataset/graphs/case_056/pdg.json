[
  {
    "name": "init_pouch",
    "inputs": [
      "ctx: Context < InitPouch >",
      "limit: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let pouch = & mut ctx . accounts . pouch ;"
      },
      {
        "id": 2,
        "label": "pouch . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "pouch . limit = limit + 20 ;"
      },
      {
        "id": 4,
        "label": "pouch . runes = 0 ;"
      },
      {
        "id": 5,
        "label": "pouch . count = 1 ;"
      },
      {
        "id": 6,
        "label": "let bump = * ctx . bumps . get (\"pouch\") . ok_or (error ! (PErr :: MissingBump)) ? ;"
      },
      {
        "id": 7,
        "label": "pouch . saved_bump = bump ;"
      },
      {
        "id": 8,
        "label": "let mut sum = pouch . limit ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 10,
        "label": "while i < 4 { if sum % 2 == 0 { pouch . runes = pouch . runes . saturating_add (sum % 11 + 3) ; } else { pouch . count = pouch . count . saturating_add ((sum % 5) + 1) ; } sum = sum . wrapping_mul (7) . wrapping_add (9) ; i = i + 1 ; }"
      },
      {
        "id": 11,
        "label": "if sum % 2 == 0 { pouch . runes = pouch . runes . saturating_add (sum % 11 + 3) ; } else { pouch . count = pouch . count . saturating_add ((sum % 5) + 1) ; }"
      },
      {
        "id": 12,
        "label": "pouch . runes = pouch . runes . saturating_add (sum % 11 + 3) ;"
      },
      {
        "id": 13,
        "label": "pouch . count = pouch . count . saturating_add ((sum % 5) + 1) ;"
      },
      {
        "id": 14,
        "label": "sum = sum . wrapping_mul (7) . wrapping_add (9) ;"
      },
      {
        "id": 15,
        "label": "i = i + 1 ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: pouch"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: pouch"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: bump"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: pouch"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: bump"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: sum"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: pouch"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: sum"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: sum"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: pouch"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: pouch"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: sum"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "cast_spell",
    "inputs": [
      "ctx: Context < CastSpell >",
      "power: u64"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let pouch = & mut ctx . accounts . pouch ;"
      },
      {
        "id": 19,
        "label": "let seeds = & [b\"spell_sink\" , pouch . owner . as_ref () , & [pouch . saved_bump]] ;"
      },
      {
        "id": 20,
        "label": "let expect = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (PErr :: SeedCompute)) ? ;"
      },
      {
        "id": 21,
        "label": "if expect != ctx . accounts . spell_sink . key () { return Err (error ! (PErr :: KeyMismatch)) ; }"
      },
      {
        "id": 22,
        "label": "return Err (error ! (PErr :: KeyMismatch)) ;"
      },
      {
        "id": 23,
        "label": "let ix = Instruction { program_id : * ctx . program_id , accounts : vec ! [AccountMeta :: new (pouch . key () , false)] , data : power . to_le_bytes () . to_vec () , } ;"
      },
      {
        "id": 24,
        "label": "invoke_signed (& ix , & [pouch . to_account_info ()] , & [seeds]) ? ;"
      },
      {
        "id": 25,
        "label": "let mut remain = power as u32 ;"
      },
      {
        "id": 26,
        "label": "while remain > 0 { if remain % 3 == 1 { pouch . runes = pouch . runes . saturating_add (remain % 7 + 2) ; } else { pouch . count = pouch . count . saturating_add (remain % 5 + 1) ; } remain = remain . saturating_sub (4) ; }"
      },
      {
        "id": 27,
        "label": "if remain % 3 == 1 { pouch . runes = pouch . runes . saturating_add (remain % 7 + 2) ; } else { pouch . count = pouch . count . saturating_add (remain % 5 + 1) ; }"
      },
      {
        "id": 28,
        "label": "pouch . runes = pouch . runes . saturating_add (remain % 7 + 2) ;"
      },
      {
        "id": 29,
        "label": "pouch . count = pouch . count . saturating_add (remain % 5 + 1) ;"
      },
      {
        "id": 30,
        "label": "remain = remain . saturating_sub (4) ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: pouch"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: seeds"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: pouch"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: expect"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: seeds"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: expect"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: ix"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: ix"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: pouch"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: seeds"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: remain"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: remain"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: pouch"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: pouch"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: remain"
      }
    ]
  }
]