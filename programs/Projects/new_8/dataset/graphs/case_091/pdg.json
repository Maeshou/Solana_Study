[
  {
    "name": "init_stable",
    "inputs": [
      "ctx: Context < InitStable >",
      "capacity: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . stable ;"
      },
      {
        "id": 2,
        "label": "st . owner = ctx . accounts . herder . key () ;"
      },
      {
        "id": 3,
        "label": "st . bump_mem = * ctx . bumps . get (\"stable\") . ok_or (error ! (EMS :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "st . feed = capacity . rotate_left (1) . wrapping_add (53) ;"
      },
      {
        "id": 5,
        "label": "st . turns = 2 ;"
      },
      {
        "id": 6,
        "label": "let mut packs : Vec < u64 > = (1 .. 5) . map (| i | st . feed . wrapping_mul (i * 5)) . collect () ;"
      },
      {
        "id": 7,
        "label": "let mut i = 1u8 ;"
      },
      {
        "id": 8,
        "label": "while i < 4 { let v = packs [i as usize - 1] . rotate_right (1) . wrapping_add (7 + i as u64) ; st . feed = st . feed . wrapping_add (v) . wrapping_mul (2) ; st . turns = st . turns . saturating_add (((st . feed % 23) as u32) + 3) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "let v = packs [i as usize - 1] . rotate_right (1) . wrapping_add (7 + i as u64) ;"
      },
      {
        "id": 10,
        "label": "st . feed = st . feed . wrapping_add (v) . wrapping_mul (2) ;"
      },
      {
        "id": 11,
        "label": "st . turns = st . turns . saturating_add (((st . feed % 23) as u32) + 3) ;"
      },
      {
        "id": 12,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "if st . feed > capacity { st . feed = st . feed . rotate_left (2) . wrapping_add (19) ; st . turns = st . turns . saturating_add (((st . feed % 27) as u32) + 4) ; }"
      },
      {
        "id": 14,
        "label": "st . feed = st . feed . rotate_left (2) . wrapping_add (19) ;"
      },
      {
        "id": 15,
        "label": "st . turns = st . turns . saturating_add (((st . feed % 27) as u32) + 4) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: st"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: v"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: st"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: st"
      }
    ]
  },
  {
    "name": "pay_grooming",
    "inputs": [
      "ctx: Context < PayGrooming >",
      "horse_id: u64",
      "user_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let st = & mut ctx . accounts . stable ;"
      },
      {
        "id": 19,
        "label": "for r in 1 .. 3 { let delta = (st . feed ^ (r as u64 * 13)) . rotate_left (1) ; st . feed = st . feed . wrapping_add (delta) . wrapping_mul (2) . wrapping_add (11 + r as u64) ; st . turns = st . turns . saturating_add (((st . feed % 21) as u32) + 3) ; }"
      },
      {
        "id": 20,
        "label": "let delta = (st . feed ^ (r as u64 * 13)) . rotate_left (1) ;"
      },
      {
        "id": 21,
        "label": "st . feed = st . feed . wrapping_add (delta) . wrapping_mul (2) . wrapping_add (11 + r as u64) ;"
      },
      {
        "id": 22,
        "label": "st . turns = st . turns . saturating_add (((st . feed % 21) as u32) + 3) ;"
      },
      {
        "id": 23,
        "label": "if lamports > 360 { let mut u = 1u8 ; let mut x = lamports . rotate_left (2) ; while u < 4 { let z = (x ^ (u as u64 * 17)) . rotate_right (1) ; x = x . wrapping_add (z) ; st . feed = st . feed . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ; st . turns = st . turns . saturating_add (((st . feed % 25) as u32) + 5) ; u = u . saturating_add (1) ; } }"
      },
      {
        "id": 24,
        "label": "let mut u = 1u8 ;"
      },
      {
        "id": 25,
        "label": "let mut x = lamports . rotate_left (2) ;"
      },
      {
        "id": 26,
        "label": "while u < 4 { let z = (x ^ (u as u64 * 17)) . rotate_right (1) ; x = x . wrapping_add (z) ; st . feed = st . feed . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ; st . turns = st . turns . saturating_add (((st . feed % 25) as u32) + 5) ; u = u . saturating_add (1) ; }"
      },
      {
        "id": 27,
        "label": "let z = (x ^ (u as u64 * 17)) . rotate_right (1) ;"
      },
      {
        "id": 28,
        "label": "x = x . wrapping_add (z) ;"
      },
      {
        "id": 29,
        "label": "st . feed = st . feed . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ;"
      },
      {
        "id": 30,
        "label": "st . turns = st . turns . saturating_add (((st . feed % 25) as u32) + 5) ;"
      },
      {
        "id": 31,
        "label": "u = u . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "let seeds = & [b\"groom_fee\" . as_ref () , st . owner . as_ref () , & horse_id . to_le_bytes () , core :: slice :: from_ref (& user_bump) ,] ;"
      },
      {
        "id": 33,
        "label": "let purse = Pubkey :: create_program_address (& [b\"groom_fee\" , st . owner . as_ref () , & horse_id . to_le_bytes () , & [user_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EMS :: SeedCompute)) ? ;"
      },
      {
        "id": 34,
        "label": "let ix = system_instruction :: transfer (& purse , & ctx . accounts . groomer . key () , lamports) ;"
      },
      {
        "id": 35,
        "label": "invoke_signed (& ix , & [ctx . accounts . fee_hint . to_account_info () , ctx . accounts . groomer . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: st"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: delta"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: st"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: delta"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: st"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: u"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: x"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: u"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: x"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: u"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: x"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: x"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: u"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: u"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: u"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: z"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: x"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: u"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: z"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: st"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: z"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: u"
      },
      {
        "from": 18,
        "to": 30,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 30,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 30,
        "label": "data_dep: st"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: seeds"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: purse"
      },
      {
        "from": 18,
        "to": 33,
        "label": "data_dep: st"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: ix"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: purse"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: ix"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: seeds"
      }
    ]
  }
]