[
  {
    "name": "init_crafting",
    "inputs": [
      "ctx: Context < InitCrafting >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . crafting ;"
      },
      {
        "id": 2,
        "label": "c . owner = ctx . accounts . artisan . key () ;"
      },
      {
        "id": 3,
        "label": "c . bump_slot = * ctx . bumps . get (\"crafting\") . ok_or (error ! (ECF :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "c . power = base . rotate_left (2) . wrapping_add (83) ;"
      },
      {
        "id": 5,
        "label": "c . turns = 1 ;"
      },
      {
        "id": 6,
        "label": "if (c . power & 1) > 0 { for j in 1 .. 3 { let x = (c . power ^ (j as u64 * 11)) . rotate_left (1) ; c . power = c . power . wrapping_add (x) . wrapping_mul (2) . wrapping_add (13) ; c . turns = c . turns . saturating_add (((c . power % 25) as u32) + 3) ; } }"
      },
      {
        "id": 7,
        "label": "for j in 1 .. 3 { let x = (c . power ^ (j as u64 * 11)) . rotate_left (1) ; c . power = c . power . wrapping_add (x) . wrapping_mul (2) . wrapping_add (13) ; c . turns = c . turns . saturating_add (((c . power % 25) as u32) + 3) ; }"
      },
      {
        "id": 8,
        "label": "let x = (c . power ^ (j as u64 * 11)) . rotate_left (1) ;"
      },
      {
        "id": 9,
        "label": "c . power = c . power . wrapping_add (x) . wrapping_mul (2) . wrapping_add (13) ;"
      },
      {
        "id": 10,
        "label": "c . turns = c . turns . saturating_add (((c . power % 25) as u32) + 3) ;"
      },
      {
        "id": 11,
        "label": "if (c . power & 2) > 0 { let mut r = 1u8 ; while r < 4 { let y = (c . power ^ (r as u64 * 17)) . rotate_right (1) ; c . power = c . power . wrapping_add (y) . wrapping_mul (3) . wrapping_add (9) ; c . turns = c . turns . saturating_add (((c . power % 31) as u32) + 5) ; r = r . saturating_add (1) ; } }"
      },
      {
        "id": 12,
        "label": "let mut r = 1u8 ;"
      },
      {
        "id": 13,
        "label": "while r < 4 { let y = (c . power ^ (r as u64 * 17)) . rotate_right (1) ; c . power = c . power . wrapping_add (y) . wrapping_mul (3) . wrapping_add (9) ; c . turns = c . turns . saturating_add (((c . power % 31) as u32) + 5) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 14,
        "label": "let y = (c . power ^ (r as u64 * 17)) . rotate_right (1) ;"
      },
      {
        "id": 15,
        "label": "c . power = c . power . wrapping_add (y) . wrapping_mul (3) . wrapping_add (9) ;"
      },
      {
        "id": 16,
        "label": "c . turns = c . turns . saturating_add (((c . power % 31) as u32) + 5) ;"
      },
      {
        "id": 17,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: x"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: x"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: r"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: y"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: y"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "spend_queue",
    "inputs": [
      "ctx: Context < SpendQueue >",
      "item_id: u64",
      "bump_arg: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let c = & mut ctx . accounts . crafting ;"
      },
      {
        "id": 21,
        "label": "let mut d = 1u8 ;"
      },
      {
        "id": 22,
        "label": "let mut acc = lamports . rotate_right (1) ;"
      },
      {
        "id": 23,
        "label": "while d < 3 { let g = (acc ^ (d as u64 * 14)) . rotate_left (1) ; acc = acc . wrapping_add (g) ; c . power = c . power . wrapping_add (g) . wrapping_mul (2) . wrapping_add (17 + d as u64) ; c . turns = c . turns . saturating_add (((c . power % 24) as u32) + 4) ; d = d . saturating_add (1) ; }"
      },
      {
        "id": 24,
        "label": "let g = (acc ^ (d as u64 * 14)) . rotate_left (1) ;"
      },
      {
        "id": 25,
        "label": "acc = acc . wrapping_add (g) ;"
      },
      {
        "id": 26,
        "label": "c . power = c . power . wrapping_add (g) . wrapping_mul (2) . wrapping_add (17 + d as u64) ;"
      },
      {
        "id": 27,
        "label": "c . turns = c . turns . saturating_add (((c . power % 24) as u32) + 4) ;"
      },
      {
        "id": 28,
        "label": "d = d . saturating_add (1) ;"
      },
      {
        "id": 29,
        "label": "for s in 1 .. 3 { let h = (c . power ^ (s as u64 * 21)) . rotate_left (1) ; c . power = c . power . wrapping_add (h) . wrapping_mul (3) . wrapping_add (11 + s as u64) ; c . turns = c . turns . saturating_add (((c . power % 28) as u32) + 5) ; }"
      },
      {
        "id": 30,
        "label": "let h = (c . power ^ (s as u64 * 21)) . rotate_left (1) ;"
      },
      {
        "id": 31,
        "label": "c . power = c . power . wrapping_add (h) . wrapping_mul (3) . wrapping_add (11 + s as u64) ;"
      },
      {
        "id": 32,
        "label": "c . turns = c . turns . saturating_add (((c . power % 28) as u32) + 5) ;"
      },
      {
        "id": 33,
        "label": "let seeds = & [b\"craft_order\" . as_ref () , c . owner . as_ref () , & item_id . to_le_bytes () , core :: slice :: from_ref (& bump_arg) ,] ;"
      },
      {
        "id": 34,
        "label": "let slot = Pubkey :: create_program_address (& [b\"craft_order\" , c . owner . as_ref () , & item_id . to_le_bytes () , & [bump_arg]] , ctx . program_id ,) . map_err (| _ | error ! (ECF :: SeedCompute)) ? ;"
      },
      {
        "id": 35,
        "label": "let ix = system_instruction :: transfer (& slot , & ctx . accounts . customer . key () , lamports) ;"
      },
      {
        "id": 36,
        "label": "invoke_signed (& ix , & [ctx . accounts . order_hint . to_account_info () , ctx . accounts . customer . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: c"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: d"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: acc"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: acc"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: acc"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: acc"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: d"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: d"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: d"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: g"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: acc"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: acc"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: c"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: d"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: c"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: d"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: d"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: c"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: h"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: c"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: c"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: c"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: seeds"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: c"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: slot"
      },
      {
        "from": 20,
        "to": 34,
        "label": "data_dep: c"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: ix"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: slot"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: ix"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: seeds"
      }
    ]
  }
]