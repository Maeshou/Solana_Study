[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . owner = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "g . bump_mem = * ctx . bumps . get (\"guild\") . ok_or (error ! (EGD :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "g . strength = base . rotate_left (2) . wrapping_add (45) ;"
      },
      {
        "id": 5,
        "label": "g . phase = 1 ;"
      },
      {
        "id": 6,
        "label": "let sequence : Vec < u64 > = (1 .. 6) . map (| x | base . wrapping_mul (x * 7)) . collect () ;"
      },
      {
        "id": 7,
        "label": "let total = sequence . iter () . fold (0u64 , | acc , v | acc . wrapping_add (* v)) ;"
      },
      {
        "id": 8,
        "label": "if total > base { g . strength = g . strength . wrapping_add (total) . wrapping_mul (2) . wrapping_add (21) ; g . phase = g . phase . saturating_add (((total % 23) as u32) + 3) ; } else { let mut val = total ; for k in 1 .. 4 { let b = (val ^ (k as u64 * 19)) . rotate_left (1) ; val = val . wrapping_add (b) ; g . strength = g . strength . wrapping_add (b) . wrapping_mul (3) ; g . phase = g . phase . saturating_add (((g . strength % 29) as u32) + 4) ; } }"
      },
      {
        "id": 9,
        "label": "g . strength = g . strength . wrapping_add (total) . wrapping_mul (2) . wrapping_add (21) ;"
      },
      {
        "id": 10,
        "label": "g . phase = g . phase . saturating_add (((total % 23) as u32) + 3) ;"
      },
      {
        "id": 11,
        "label": "let mut val = total ;"
      },
      {
        "id": 12,
        "label": "for k in 1 .. 4 { let b = (val ^ (k as u64 * 19)) . rotate_left (1) ; val = val . wrapping_add (b) ; g . strength = g . strength . wrapping_add (b) . wrapping_mul (3) ; g . phase = g . phase . saturating_add (((g . strength % 29) as u32) + 4) ; }"
      },
      {
        "id": 13,
        "label": "let b = (val ^ (k as u64 * 19)) . rotate_left (1) ;"
      },
      {
        "id": 14,
        "label": "val = val . wrapping_add (b) ;"
      },
      {
        "id": 15,
        "label": "g . strength = g . strength . wrapping_add (b) . wrapping_mul (3) ;"
      },
      {
        "id": 16,
        "label": "g . phase = g . phase . saturating_add (((g . strength % 29) as u32) + 4) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: total"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: total"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: total"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: total"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: total"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: val"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: val"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: val"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: val"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: b"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: val"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: val"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: val"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      }
    ]
  },
  {
    "name": "disburse_dues",
    "inputs": [
      "ctx: Context < DisburseDues >",
      "member_id: u64",
      "external_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 20,
        "label": "for i in 1 .. 3 { let mut t = 1u8 ; while t < 3 { let z = (g . strength ^ (i as u64 * t as u64 * 13)) . rotate_right (1) ; g . strength = g . strength . wrapping_add (z) . wrapping_mul (2) . wrapping_add (15 + i as u64) ; g . phase = g . phase . saturating_add (((g . strength % 21) as u32) + 4) ; t = t . saturating_add (1) ; } }"
      },
      {
        "id": 21,
        "label": "let mut t = 1u8 ;"
      },
      {
        "id": 22,
        "label": "while t < 3 { let z = (g . strength ^ (i as u64 * t as u64 * 13)) . rotate_right (1) ; g . strength = g . strength . wrapping_add (z) . wrapping_mul (2) . wrapping_add (15 + i as u64) ; g . phase = g . phase . saturating_add (((g . strength % 21) as u32) + 4) ; t = t . saturating_add (1) ; }"
      },
      {
        "id": 23,
        "label": "let z = (g . strength ^ (i as u64 * t as u64 * 13)) . rotate_right (1) ;"
      },
      {
        "id": 24,
        "label": "g . strength = g . strength . wrapping_add (z) . wrapping_mul (2) . wrapping_add (15 + i as u64) ;"
      },
      {
        "id": 25,
        "label": "g . phase = g . phase . saturating_add (((g . strength % 21) as u32) + 4) ;"
      },
      {
        "id": 26,
        "label": "t = t . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "let seeds = & [b\"member_dues\" . as_ref () , g . owner . as_ref () , & member_id . to_le_bytes () , core :: slice :: from_ref (& external_bump) ,] ;"
      },
      {
        "id": 28,
        "label": "let purse = Pubkey :: create_program_address (& [b\"member_dues\" , g . owner . as_ref () , & member_id . to_le_bytes () , & [external_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EGD :: SeedCompute)) ? ;"
      },
      {
        "id": 29,
        "label": "let ix = system_instruction :: transfer (& purse , & ctx . accounts . member_wallet . key () , lamports) ;"
      },
      {
        "id": 30,
        "label": "invoke_signed (& ix , & [ctx . accounts . dues_hint . to_account_info () , ctx . accounts . member_wallet . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: t"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: z"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: t"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: z"
      },
      {
        "from": 19,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 19,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: seeds"
      },
      {
        "from": 19,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: purse"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: g"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: ix"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: purse"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: ix"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: seeds"
      }
    ]
  }
]