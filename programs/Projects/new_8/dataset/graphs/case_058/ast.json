[
  {
    "name": "init",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Init >",
      "seed_base: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . chest ;",
      "s . owner = ctx . accounts . owner . key () ;",
      "s . bump = * ctx . bumps . get (\"chest\") . ok_or (error ! (E :: MissingBump)) ? ;",
      "s . score = (seed_base % 900) as u32 + 50 ;",
      "let mut i = 0u8 ;",
      "while i < 5",
      "{",
      "if s . score % 2 == 0",
      "{",
      "s . score = s . score . wrapping_add (i as u32 + 3) ;",
      "} else",
      "{",
      "s . score = s . score . wrapping_mul (3) . wrapping_add (7) ;",
      "} i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "payout",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Pay >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . chest ;",
      "let drift_seeds : & [& [u8]] = & [b\"chest_alt\" , s . owner . as_ref () , & [s . bump]] ;",
      "let alt = Pubkey :: create_program_address (& [b\"chest_alt\" , s . owner . as_ref () , & [s . bump]] , ctx . program_id) . map_err (| _ | error ! (E :: SeedCompute)) ? ;",
      "let ix = system_instruction :: transfer (& alt , & ctx . accounts . receiver . key () , amount) ;",
      "let infos = & [ctx . accounts . chest_alt . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] ;",
      "invoke_signed (& ix , infos , & [drift_seeds]) ? ;",
      "let mut v = amount as u32 ;",
      "while v > 1",
      "{",
      "if v % 3 == 1",
      "{",
      "s . score = s . score . saturating_add (v % 11 + 2) ;",
      "} else",
      "{",
      "s . score = s . score . saturating_add (v % 13 + 1) ;",
      "} v = v . saturating_sub (4) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Init",
    "node_type": "struct",
    "fields": [
      {
        "name": "chest",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 4 + 1 , seeds = [b\"chest\" , owner . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , ChestState >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pay",
    "node_type": "struct",
    "fields": [
      {
        "name": "chest",
        "attribute": "# [account (mut , seeds = [b\"chest\" , owner . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , ChestState >"
      },
      {
        "name": "chest_alt",
        "attribute": "# [doc = \" CHECK: 不検証\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "receiver",
        "attribute": "# [doc = \" CHECK: 受取先は緩く\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ChestState",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "score",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]