[
  {
    "name": "create_gallery",
    "inputs": [
      "ctx: Context < CreateGallery >",
      "rooms: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . gallery ;"
      },
      {
        "id": 2,
        "label": "g . owner = ctx . accounts . curator . key () ;"
      },
      {
        "id": 3,
        "label": "g . rooms = rooms % 60 + 6 ;"
      },
      {
        "id": 4,
        "label": "g . exhibits = 7 ;"
      },
      {
        "id": 5,
        "label": "g . visits = 3 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      }
    ]
  },
  {
    "name": "rotate",
    "inputs": [
      "ctx: Context < Rotate >",
      "count: u16",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let g = & mut ctx . accounts . gallery ;"
      },
      {
        "id": 9,
        "label": "let mut turn = 2u32 ;"
      },
      {
        "id": 10,
        "label": "while turn < (count as u32 % 21 + 6) { g . exhibits = g . exhibits . saturating_add (turn) ; if g . exhibits % 5 != 2 { g . visits = g . visits . saturating_add (1) ; } let pack = (turn * 3) % 10 + 1 ; g . rooms = g . rooms . saturating_add (pack as u16) ; turn = turn . saturating_add (4) ; }"
      },
      {
        "id": 11,
        "label": "g . exhibits = g . exhibits . saturating_add (turn) ;"
      },
      {
        "id": 12,
        "label": "if g . exhibits % 5 != 2 { g . visits = g . visits . saturating_add (1) ; }"
      },
      {
        "id": 13,
        "label": "g . visits = g . visits . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "let pack = (turn * 3) % 10 + 1 ;"
      },
      {
        "id": 15,
        "label": "g . rooms = g . rooms . saturating_add (pack as u16) ;"
      },
      {
        "id": 16,
        "label": "turn = turn . saturating_add (4) ;"
      },
      {
        "id": 17,
        "label": "let seeds = & [b\"ticket_pad\" , ctx . accounts . curator . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 18,
        "label": "let p = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (GalErr :: SeedIssue)) ? ;"
      },
      {
        "id": 19,
        "label": "if p != ctx . accounts . ticket_pad . key () { return Err (error ! (GalErr :: TicketKey)) ; }"
      },
      {
        "id": 20,
        "label": "return Err (error ! (GalErr :: TicketKey)) ;"
      },
      {
        "id": 21,
        "label": "if count > 10 { let add = (count % 7) as u32 + 2 ; g . visits = g . visits . saturating_add (add) ; let stamp = g . owner . to_bytes () [1] ; g . exhibits = g . exhibits . saturating_add (stamp as u32) ; }"
      },
      {
        "id": 22,
        "label": "let add = (count % 7) as u32 + 2 ;"
      },
      {
        "id": 23,
        "label": "g . visits = g . visits . saturating_add (add) ;"
      },
      {
        "id": 24,
        "label": "let stamp = g . owner . to_bytes () [1] ;"
      },
      {
        "id": 25,
        "label": "g . exhibits = g . exhibits . saturating_add (stamp as u32) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: g"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: turn"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: turn"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: g"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: pack"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: turn"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: pack"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: turn"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: turn"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: seeds"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: p"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: seeds"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: add"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: add"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: stamp"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: g"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: stamp"
      }
    ]
  }
]