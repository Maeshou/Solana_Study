[
  {
    "name": "init_arena",
    "inputs": [
      "ctx: Context < InitArena >",
      "crowd: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts . arena ;"
      },
      {
        "id": 2,
        "label": "a . owner = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "a . bump_mem = * ctx . bumps . get (\"arena\") . ok_or (error ! (EAB :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "a . hype = crowd . rotate_left (2) . wrapping_add (63) ;"
      },
      {
        "id": 5,
        "label": "a . round = 3 ;"
      },
      {
        "id": 6,
        "label": "if a . hype > 350 { let base = a . hype . rotate_right (1) . wrapping_add (27) ; a . hype = a . hype . wrapping_add (base) . wrapping_mul (2) ; a . round = a . round . saturating_add (((a . hype % 17) as u32) + 2) ; } else { let mutate = a . hype . rotate_left (1) . wrapping_add (15) ; a . hype = a . hype . wrapping_add (mutate) . wrapping_mul (3) ; a . round = a . round . saturating_add (((a . hype % 19) as u32) + 2) ; }"
      },
      {
        "id": 7,
        "label": "let base = a . hype . rotate_right (1) . wrapping_add (27) ;"
      },
      {
        "id": 8,
        "label": "a . hype = a . hype . wrapping_add (base) . wrapping_mul (2) ;"
      },
      {
        "id": 9,
        "label": "a . round = a . round . saturating_add (((a . hype % 17) as u32) + 2) ;"
      },
      {
        "id": 10,
        "label": "let mutate = a . hype . rotate_left (1) . wrapping_add (15) ;"
      },
      {
        "id": 11,
        "label": "a . hype = a . hype . wrapping_add (mutate) . wrapping_mul (3) ;"
      },
      {
        "id": 12,
        "label": "a . round = a . round . saturating_add (((a . hype % 19) as u32) + 2) ;"
      },
      {
        "id": 13,
        "label": "for w in 1 .. 4 { let burst = (a . hype ^ (w as u64 * 23)) . rotate_left (1) ; a . hype = a . hype . wrapping_add (burst) . wrapping_mul (2) . wrapping_add (13 + w as u64) ; a . round = a . round . saturating_add (((a . hype % 31) as u32) + 4) ; }"
      },
      {
        "id": 14,
        "label": "let burst = (a . hype ^ (w as u64 * 23)) . rotate_left (1) ;"
      },
      {
        "id": 15,
        "label": "a . hype = a . hype . wrapping_add (burst) . wrapping_mul (2) . wrapping_add (13 + w as u64) ;"
      },
      {
        "id": 16,
        "label": "a . round = a . round . saturating_add (((a . hype % 31) as u32) + 4) ;"
      },
      {
        "id": 17,
        "label": "let mut r = 1u8 ;"
      },
      {
        "id": 18,
        "label": "while r < 3 { let j = (a . hype ^ (r as u64 * 11)) . rotate_right (1) ; a . hype = a . hype . wrapping_add (j) . wrapping_mul (2) . wrapping_add (21 + r as u64) ; a . round = a . round . saturating_add (((a . hype % 27) as u32) + 4) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 19,
        "label": "let j = (a . hype ^ (r as u64 * 11)) . rotate_right (1) ;"
      },
      {
        "id": 20,
        "label": "a . hype = a . hype . wrapping_add (j) . wrapping_mul (2) . wrapping_add (21 + r as u64) ;"
      },
      {
        "id": 21,
        "label": "a . round = a . round . saturating_add (((a . hype % 27) as u32) + 4) ;"
      },
      {
        "id": 22,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: a"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: base"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: base"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: mutate"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: mutate"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: burst"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: burst"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: r"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: j"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: a"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "payout_prize",
    "inputs": [
      "ctx: Context < PayoutPrize >",
      "match_id: u64",
      "bump_input: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let a = & mut ctx . accounts . arena ;"
      },
      {
        "id": 26,
        "label": "if lamports > 420 { for i in 1 .. 5 { let add = (lamports ^ (i as u64 * 37)) . rotate_left (1) ; a . hype = a . hype . wrapping_add (add) . wrapping_mul (3) . wrapping_add (5 + i as u64) ; a . round = a . round . saturating_add (((a . hype % 28) as u32) + 5) ; } } else { let mut p = 1u8 ; let mut stash = lamports . rotate_right (2) ; while p < 4 { let k = (stash ^ (p as u64 * 14)) . rotate_left (p as u32) ; stash = stash . wrapping_add (k) ; a . hype = a . hype . wrapping_add (k) . wrapping_mul (2) . wrapping_add (17 + p as u64) ; a . round = a . round . saturating_add (((a . hype % 24) as u32) + 4) ; p = p . saturating_add (1) ; } }"
      },
      {
        "id": 27,
        "label": "for i in 1 .. 5 { let add = (lamports ^ (i as u64 * 37)) . rotate_left (1) ; a . hype = a . hype . wrapping_add (add) . wrapping_mul (3) . wrapping_add (5 + i as u64) ; a . round = a . round . saturating_add (((a . hype % 28) as u32) + 5) ; }"
      },
      {
        "id": 28,
        "label": "let add = (lamports ^ (i as u64 * 37)) . rotate_left (1) ;"
      },
      {
        "id": 29,
        "label": "a . hype = a . hype . wrapping_add (add) . wrapping_mul (3) . wrapping_add (5 + i as u64) ;"
      },
      {
        "id": 30,
        "label": "a . round = a . round . saturating_add (((a . hype % 28) as u32) + 5) ;"
      },
      {
        "id": 31,
        "label": "let mut p = 1u8 ;"
      },
      {
        "id": 32,
        "label": "let mut stash = lamports . rotate_right (2) ;"
      },
      {
        "id": 33,
        "label": "while p < 4 { let k = (stash ^ (p as u64 * 14)) . rotate_left (p as u32) ; stash = stash . wrapping_add (k) ; a . hype = a . hype . wrapping_add (k) . wrapping_mul (2) . wrapping_add (17 + p as u64) ; a . round = a . round . saturating_add (((a . hype % 24) as u32) + 4) ; p = p . saturating_add (1) ; }"
      },
      {
        "id": 34,
        "label": "let k = (stash ^ (p as u64 * 14)) . rotate_left (p as u32) ;"
      },
      {
        "id": 35,
        "label": "stash = stash . wrapping_add (k) ;"
      },
      {
        "id": 36,
        "label": "a . hype = a . hype . wrapping_add (k) . wrapping_mul (2) . wrapping_add (17 + p as u64) ;"
      },
      {
        "id": 37,
        "label": "a . round = a . round . saturating_add (((a . hype % 24) as u32) + 4) ;"
      },
      {
        "id": 38,
        "label": "p = p . saturating_add (1) ;"
      },
      {
        "id": 39,
        "label": "let seeds = & [b\"arena_prize\" . as_ref () , a . owner . as_ref () , & match_id . to_le_bytes () , core :: slice :: from_ref (& bump_input) ,] ;"
      },
      {
        "id": 40,
        "label": "let vault = Pubkey :: create_program_address (& [b\"arena_prize\" , a . owner . as_ref () , & match_id . to_le_bytes () , & [bump_input]] , ctx . program_id ,) . map_err (| _ | error ! (EAB :: SeedCompute)) ? ;"
      },
      {
        "id": 41,
        "label": "let ix = system_instruction :: transfer (& vault , & ctx . accounts . champion . key () , lamports) ;"
      },
      {
        "id": 42,
        "label": "invoke_signed (& ix , & [ctx . accounts . prize_hint . to_account_info () , ctx . accounts . champion . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: add"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: add"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: p"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: stash"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: stash"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: stash"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: stash"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: k"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: stash"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: stash"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: stash"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: k"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 31,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 31,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: seeds"
      },
      {
        "from": 25,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: vault"
      },
      {
        "from": 25,
        "to": 40,
        "label": "data_dep: a"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: ix"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: vault"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: ix"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: seeds"
      }
    ]
  }
]