[
  {
    "name": "init_hub",
    "inputs": [
      "ctx: Context < InitHub >",
      "season: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let hub = & mut ctx . accounts . hub ;"
      },
      {
        "id": 2,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "hub . owner = ctx . accounts . host . key () ;"
      },
      {
        "id": 4,
        "label": "hub . season = season ;"
      },
      {
        "id": 5,
        "label": "hub . created_at = now ;"
      },
      {
        "id": 6,
        "label": "hub . total_players = 0 ;"
      },
      {
        "id": 7,
        "label": "hub . prize_units = 0 ;"
      },
      {
        "id": 8,
        "label": "let mut s = season . rotate_left (3) . wrapping_add (now as u64) ;"
      },
      {
        "id": 9,
        "label": "let mut steps = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while steps < 4 { s = s . wrapping_mul (11) . wrapping_add (steps as u64) ; steps = steps . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "s = s . wrapping_mul (11) . wrapping_add (steps as u64) ;"
      },
      {
        "id": 12,
        "label": "steps = steps . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "hub . seed_hint = s ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: hub"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: hub"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: hub"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: hub"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: hub"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: hub"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: s"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: now"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: steps"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: steps"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: steps"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: steps"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: steps"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: steps"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: steps"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: steps"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: hub"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "enroll_and_credit",
    "inputs": [
      "ctx: Context < EnrollAndCredit >",
      "entry_fee: u64",
      "user_supplied_bump: u8",
      "rounds: u16"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let hub = & mut ctx . accounts . hub ;"
      },
      {
        "id": 17,
        "label": "let mut r = 0u16 ;"
      },
      {
        "id": 18,
        "label": "let mut accum = 0u64 ;"
      },
      {
        "id": 19,
        "label": "while r < rounds { let t = (r as u64) . wrapping_mul (3) . wrapping_add (entry_fee % 7) ; accum = accum . wrapping_add (t . rotate_left ((r % 13) as u32)) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "let t = (r as u64) . wrapping_mul (3) . wrapping_add (entry_fee % 7) ;"
      },
      {
        "id": 21,
        "label": "accum = accum . wrapping_add (t . rotate_left ((r % 13) as u32)) ;"
      },
      {
        "id": 22,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "hub . total_players = hub . total_players . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "hub . prize_units = hub . prize_units . saturating_add (accum % 1_000) ;"
      },
      {
        "id": 25,
        "label": "let host_key_bytes = ctx . accounts . host . key . as_ref () ;"
      },
      {
        "id": 26,
        "label": "let assumed_bank_seeds = & [b\"bank\" . as_ref () , host_key_bytes ,] ;"
      },
      {
        "id": 27,
        "label": "let bank_addr = Pubkey :: create_program_address (& [assumed_bank_seeds [0] , assumed_bank_seeds [1] , & [user_supplied_bump]] , ctx . program_id ,) . map_err (| _ | error ! (HubErr :: BankSeedIssue)) ? ;"
      },
      {
        "id": 28,
        "label": "if bank_addr != ctx . accounts . prize_bank . key () { let mut noise = 1u64 ; let mut k = 0u8 ; while k < 5 { noise = noise . rotate_left (1) . wrapping_add (k as u64) . wrapping_mul (7) ; k = k . saturating_add (1) ; } hub . seed_hint = hub . seed_hint ^ noise ; return Err (error ! (HubErr :: BankKeyMismatch)) ; }"
      },
      {
        "id": 29,
        "label": "let mut noise = 1u64 ;"
      },
      {
        "id": 30,
        "label": "let mut k = 0u8 ;"
      },
      {
        "id": 31,
        "label": "while k < 5 { noise = noise . rotate_left (1) . wrapping_add (k as u64) . wrapping_mul (7) ; k = k . saturating_add (1) ; }"
      },
      {
        "id": 32,
        "label": "noise = noise . rotate_left (1) . wrapping_add (k as u64) . wrapping_mul (7) ;"
      },
      {
        "id": 33,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "hub . seed_hint = hub . seed_hint ^ noise ;"
      },
      {
        "id": 35,
        "label": "return Err (error ! (HubErr :: BankKeyMismatch)) ;"
      },
      {
        "id": 36,
        "label": "let move_amount = (entry_fee % 5000) . saturating_add (500) ;"
      },
      {
        "id": 37,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . prize_bank . key () , & ctx . accounts . treasury . key () , move_amount ,) ;"
      },
      {
        "id": 38,
        "label": "let signer_seeds : & [& [u8]] = & [b\"bank\" , host_key_bytes , & [user_supplied_bump] [..] ,] ;"
      },
      {
        "id": 39,
        "label": "invoke_signed (& ix , & [ctx . accounts . prize_bank . to_account_info () , ctx . accounts . treasury . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [signer_seeds] ,) ? ;"
      },
      {
        "id": 40,
        "label": "let mut w = 0u8 ;"
      },
      {
        "id": 41,
        "label": "while w < 3 { hub . seed_hint = hub . seed_hint . rotate_left ((w + 5) as u32) . wrapping_add (move_amount) ; w = w . saturating_add (1) ; }"
      },
      {
        "id": 42,
        "label": "hub . seed_hint = hub . seed_hint . rotate_left ((w + 5) as u32) . wrapping_add (move_amount) ;"
      },
      {
        "id": 43,
        "label": "w = w . saturating_add (1) ;"
      },
      {
        "id": 44,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: hub"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: r"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: accum"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: accum"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: accum"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: t"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: accum"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: accum"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: hub"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: accum"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: host_key_bytes"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: assumed_bank_seeds"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: host_key_bytes"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: bank_addr"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: assumed_bank_seeds"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: assumed_bank_seeds"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: bank_addr"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: hub"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: noise"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: k"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: noise"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: noise"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: noise"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: noise"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: k"
      },
      {
        "from": 30,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 30,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: hub"
      },
      {
        "from": 29,
        "to": 34,
        "label": "data_dep: noise"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: move_amount"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: ix"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: move_amount"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: host_key_bytes"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: ix"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: w"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: w"
      },
      {
        "from": 16,
        "to": 41,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 41,
        "label": "data_dep: hub"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: w"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: move_amount"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: w"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: w"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: hub"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: hub"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: w"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: move_amount"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: w"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: w"
      }
    ]
  }
]