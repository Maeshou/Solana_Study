[
  {
    "name": "start_arc",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < StartArc >",
      "name: Vec < u8 >",
      "bump: u8"
    ],
    "attributes": [],
    "body": [
      "let mut n = name . clone () ;",
      "if n . len () > 18",
      "{",
      "n . truncate (18) ;",
      "}",
      "let mut code : u32 = 31 ;",
      "for b in n . iter ()",
      "{",
      "code = code . wrapping_mul (97) . wrapping_add (* b as u32) ;",
      "}",
      "let seeds = [& ctx . accounts . player . key () . to_bytes () [..] , & n [..]] ;",
      "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (QErr :: Cell)) ? ;",
      "if addr != ctx . accounts . arc_cell . key ()",
      "{",
      "return Err (error ! (QErr :: Cell)) ;",
      "}",
      "let a = & mut ctx . accounts . arc ;",
      "a . player = ctx . accounts . player . key () ;",
      "a . name = n ;",
      "a . progress = 1 ;",
      "a . hash = code ;",
      "Ok (())"
    ]
  },
  {
    "name": "advance_arc",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < AdvanceArc >",
      "step: u16",
      "bump: u8"
    ],
    "attributes": [],
    "body": [
      "let tag = ctx . accounts . arc . name . clone () ;",
      "let seeds = [& ctx . accounts . player . key () . to_bytes () [..] , & tag [..]] ;",
      "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (QErr :: Cell)) ? ;",
      "if addr != ctx . accounts . arc_cell . key ()",
      "{",
      "return Err (error ! (QErr :: Cell)) ;",
      "}",
      "let a = & mut ctx . accounts . arc ;",
      "let mut s = step as u32 ;",
      "if s > 5000",
      "{",
      "s = 5000 ;",
      "}",
      "a . progress = a . progress . saturating_add (s) ;",
      "a . hash = a . hash . wrapping_add (113) ;",
      "Ok (())"
    ]
  },
  {
    "name": "StartArc",
    "node_type": "struct",
    "fields": [
      {
        "name": "arc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Arc >"
      },
      {
        "name": "arc_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "AdvanceArc",
    "node_type": "struct",
    "fields": [
      {
        "name": "arc",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Arc >"
      },
      {
        "name": "arc_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Arc",
    "node_type": "struct",
    "fields": [
      {
        "name": "player",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "name",
        "attribute": null,
        "field_type": "Vec < u8 >"
      },
      {
        "name": "progress",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "hash",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]