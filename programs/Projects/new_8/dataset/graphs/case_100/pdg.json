[
  {
    "name": "initialize_vault",
    "inputs": [
      "ctx: Context < InitializeVault >",
      "seed_hint: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let v = & mut ctx . accounts . vault ;"
      },
      {
        "id": 2,
        "label": "v . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "v . bump_saved = * ctx . bumps . get (\"vault\") . ok_or (error ! (VaultErr :: MissingBump)) ? ;"
      },
      {
        "id": 4,
        "label": "v . energy = seed_hint . rotate_left (2) . wrapping_add (41) ;"
      },
      {
        "id": 5,
        "label": "v . turns = 1 ;"
      },
      {
        "id": 6,
        "label": "for k in 1u8 .. 4u8 { let t = (v . energy ^ (k as u64 * 13)) . rotate_right (1) ; v . energy = v . energy . wrapping_add (t) . wrapping_mul (2) . wrapping_add (9 + k as u64) ; v . turns = v . turns . saturating_add (((v . energy % 27) as u32) + 3) ; }"
      },
      {
        "id": 7,
        "label": "let t = (v . energy ^ (k as u64 * 13)) . rotate_right (1) ;"
      },
      {
        "id": 8,
        "label": "v . energy = v . energy . wrapping_add (t) . wrapping_mul (2) . wrapping_add (9 + k as u64) ;"
      },
      {
        "id": 9,
        "label": "v . turns = v . turns . saturating_add (((v . energy % 27) as u32) + 3) ;"
      },
      {
        "id": 10,
        "label": "if v . energy > seed_hint { let add = v . energy . rotate_left (1) . wrapping_add (17) ; v . energy = v . energy . wrapping_add (add) . wrapping_mul (2) ; v . turns = v . turns . saturating_add (((v . energy % 19) as u32) + 4) ; }"
      },
      {
        "id": 11,
        "label": "let add = v . energy . rotate_left (1) . wrapping_add (17) ;"
      },
      {
        "id": 12,
        "label": "v . energy = v . energy . wrapping_add (add) . wrapping_mul (2) ;"
      },
      {
        "id": 13,
        "label": "v . turns = v . turns . saturating_add (((v . energy % 19) as u32) + 4) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: v"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: add"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: v"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: add"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: v"
      }
    ]
  },
  {
    "name": "withdraw_with_user_bump",
    "inputs": [
      "ctx: Context < WithdrawWithUserBump >",
      "user_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let v = & ctx . accounts . vault ;"
      },
      {
        "id": 17,
        "label": "let seeds = & [b\"vault\" . as_ref () , v . owner . as_ref () , core :: slice :: from_ref (& user_bump) ,] ;"
      },
      {
        "id": 18,
        "label": "let derived = Pubkey :: create_program_address (& [b\"vault\" , v . owner . as_ref () , & [user_bump]] , ctx . program_id ,) . map_err (| _ | error ! (VaultErr :: SeedCompute)) ? ;"
      },
      {
        "id": 19,
        "label": "let ix = system_instruction :: transfer (& derived , & ctx . accounts . recipient . key () , lamports) ;"
      },
      {
        "id": 20,
        "label": "invoke_signed (& ix , & [ctx . accounts . vault_pda_hint . to_account_info () , ctx . accounts . recipient . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 21,
        "label": "if lamports > 500 { let mut i = 1u8 ; let mut acc = lamports . rotate_left (2) ; while i < 3 { let z = (acc ^ (i as u64 * 21)) . rotate_right (1) ; acc = acc . wrapping_add (z) ; i = i . saturating_add (1) ; } }"
      },
      {
        "id": 22,
        "label": "let mut i = 1u8 ;"
      },
      {
        "id": 23,
        "label": "let mut acc = lamports . rotate_left (2) ;"
      },
      {
        "id": 24,
        "label": "while i < 3 { let z = (acc ^ (i as u64 * 21)) . rotate_right (1) ; acc = acc . wrapping_add (z) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 25,
        "label": "let z = (acc ^ (i as u64 * 21)) . rotate_right (1) ;"
      },
      {
        "id": 26,
        "label": "acc = acc . wrapping_add (z) ;"
      },
      {
        "id": 27,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: v"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: seeds"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: v"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: derived"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: v"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: ix"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: derived"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: ix"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: seeds"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: i"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: acc"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: z"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: acc"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: i"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: acc"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: acc"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: z"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: i"
      }
    ]
  }
]