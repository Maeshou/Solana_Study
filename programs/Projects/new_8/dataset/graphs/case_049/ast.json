[
  {
    "name": "init_map",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitMap >",
      "size: u16"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . map ;",
      "m . owner = ctx . accounts . ranger . key () ;",
      "m . size = size % 200 + 25 ;",
      "m . position = 3 ;",
      "m . finds = 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "move_step",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MoveStep >",
      "stride: u16",
      "user_bump: u8"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . map ;",
      "if stride > 15",
      "{",
      "let add = (stride % 9) as u32 + 1 ;",
      "m . position = m . position . saturating_add (add) ;",
      "let code = m . owner . to_bytes () ;",
      "m . finds = m . finds . saturating_add (code [0] as u32) ;",
      "}",
      "let mut hop = 1u32 ;",
      "while hop < (stride as u32 % 28 + 5)",
      "{",
      "m . position = m . position . saturating_add (hop) ;",
      "let gain = (m . position % 7) + 2 ;",
      "m . finds = m . finds . saturating_add (gain) ;",
      "hop = hop . saturating_add (4) ;",
      "}",
      "let seeds = & [b\"stash_slot\" , ctx . accounts . ranger . key . as_ref () , & [user_bump]] ;",
      "let s = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (MapErr :: SeedBad)) ? ;",
      "if s != ctx . accounts . stash_slot . key ()",
      "{",
      "return Err (error ! (MapErr :: StashKey)) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitMap",
    "node_type": "struct",
    "fields": [
      {
        "name": "map",
        "attribute": "# [account (init , payer = ranger , space = 8 + 32 + 2 + 4 + 4 , seeds = [b\"map\" , ranger . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Map >"
      },
      {
        "name": "ranger",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "MoveStep",
    "node_type": "struct",
    "fields": [
      {
        "name": "map",
        "attribute": "# [account (mut , seeds = [b\"map\" , ranger . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Map >"
      },
      {
        "name": "stash_slot",
        "attribute": "# [doc = \" CHECK\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "ranger",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Map",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "size",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "position",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "finds",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]