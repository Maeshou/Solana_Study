[
  {
    "name": "init_map",
    "inputs": [
      "ctx: Context < InitMap >",
      "size: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . map ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . ranger . key () ;"
      },
      {
        "id": 3,
        "label": "m . size = size % 200 + 25 ;"
      },
      {
        "id": 4,
        "label": "m . position = 3 ;"
      },
      {
        "id": 5,
        "label": "m . finds = 1 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "move_step",
    "inputs": [
      "ctx: Context < MoveStep >",
      "stride: u16",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let m = & mut ctx . accounts . map ;"
      },
      {
        "id": 9,
        "label": "if stride > 15 { let add = (stride % 9) as u32 + 1 ; m . position = m . position . saturating_add (add) ; let code = m . owner . to_bytes () ; m . finds = m . finds . saturating_add (code [0] as u32) ; }"
      },
      {
        "id": 10,
        "label": "let add = (stride % 9) as u32 + 1 ;"
      },
      {
        "id": 11,
        "label": "m . position = m . position . saturating_add (add) ;"
      },
      {
        "id": 12,
        "label": "let code = m . owner . to_bytes () ;"
      },
      {
        "id": 13,
        "label": "m . finds = m . finds . saturating_add (code [0] as u32) ;"
      },
      {
        "id": 14,
        "label": "let mut hop = 1u32 ;"
      },
      {
        "id": 15,
        "label": "while hop < (stride as u32 % 28 + 5) { m . position = m . position . saturating_add (hop) ; let gain = (m . position % 7) + 2 ; m . finds = m . finds . saturating_add (gain) ; hop = hop . saturating_add (4) ; }"
      },
      {
        "id": 16,
        "label": "m . position = m . position . saturating_add (hop) ;"
      },
      {
        "id": 17,
        "label": "let gain = (m . position % 7) + 2 ;"
      },
      {
        "id": 18,
        "label": "m . finds = m . finds . saturating_add (gain) ;"
      },
      {
        "id": 19,
        "label": "hop = hop . saturating_add (4) ;"
      },
      {
        "id": 20,
        "label": "let seeds = & [b\"stash_slot\" , ctx . accounts . ranger . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 21,
        "label": "let s = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (MapErr :: SeedBad)) ? ;"
      },
      {
        "id": 22,
        "label": "if s != ctx . accounts . stash_slot . key () { return Err (error ! (MapErr :: StashKey)) ; }"
      },
      {
        "id": 23,
        "label": "return Err (error ! (MapErr :: StashKey)) ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: m"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: add"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: add"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: code"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: code"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: hop"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: hop"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: hop"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: hop"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: hop"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: hop"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: gain"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 18,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 18,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: gain"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: hop"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: hop"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: seeds"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: s"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: seeds"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: s"
      }
    ]
  }
]