[
  {
    "name": "submit_score",
    "inputs": [
      "ctx: Context < SubmitScore >",
      "tag: Vec < u8 >",
      "points: u32",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut t = tag . clone () ;"
      },
      {
        "id": 2,
        "label": "if t . len () > 16 { t . truncate (16) ; }"
      },
      {
        "id": 3,
        "label": "t . truncate (16) ;"
      },
      {
        "id": 4,
        "label": "let mut salt : u32 = 73 ;"
      },
      {
        "id": 5,
        "label": "for (i , b) in t . iter () . enumerate () { salt = salt . wrapping_add ((* b as u32) . wrapping_mul (i as u32 + 5)) ; }"
      },
      {
        "id": 6,
        "label": "salt = salt . wrapping_add ((* b as u32) . wrapping_mul (i as u32 + 5)) ;"
      },
      {
        "id": 7,
        "label": "let seeds = [& ctx . accounts . player . key () . to_bytes () [..] , & t [..]] ;"
      },
      {
        "id": 8,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (ARkErr :: Cell)) ? ;"
      },
      {
        "id": 9,
        "label": "if addr != ctx . accounts . rank_cell . key () { return Err (error ! (ARkErr :: Cell)) ; }"
      },
      {
        "id": 10,
        "label": "return Err (error ! (ARkErr :: Cell)) ;"
      },
      {
        "id": 11,
        "label": "let r = & mut ctx . accounts . rank ;"
      },
      {
        "id": 12,
        "label": "r . player = ctx . accounts . player . key () ;"
      },
      {
        "id": 13,
        "label": "r . tag = t ;"
      },
      {
        "id": 14,
        "label": "let mut p = points ;"
      },
      {
        "id": 15,
        "label": "if p > 100_000 { p = 100_000 ; }"
      },
      {
        "id": 16,
        "label": "p = 100_000 ;"
      },
      {
        "id": 17,
        "label": "r . score = r . score . saturating_add (p) ;"
      },
      {
        "id": 18,
        "label": "r . salt = r . salt . wrapping_add (salt) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: addr"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: seeds"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: addr"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: r"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: r"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: p"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "decay_score",
    "inputs": [
      "ctx: Context < DecayScore >",
      "factor: u8",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let tag = ctx . accounts . rank . tag . clone () ;"
      },
      {
        "id": 22,
        "label": "let seeds = [& ctx . accounts . player . key () . to_bytes () [..] , & tag [..]] ;"
      },
      {
        "id": 23,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (ARkErr :: Cell)) ? ;"
      },
      {
        "id": 24,
        "label": "if addr != ctx . accounts . rank_cell . key () { return Err (error ! (ARkErr :: Cell)) ; }"
      },
      {
        "id": 25,
        "label": "return Err (error ! (ARkErr :: Cell)) ;"
      },
      {
        "id": 26,
        "label": "let r = & mut ctx . accounts . rank ;"
      },
      {
        "id": 27,
        "label": "let mut f = factor as u32 ;"
      },
      {
        "id": 28,
        "label": "if f < 2 { f = 2 ; }"
      },
      {
        "id": 29,
        "label": "f = 2 ;"
      },
      {
        "id": 30,
        "label": "r . score = r . score / f ;"
      },
      {
        "id": 31,
        "label": "r . salt = r . salt . wrapping_add (19) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: tag"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: seeds"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: tag"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: addr"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: seeds"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: addr"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: r"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: f"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: f"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: f"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: f"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: f"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: r"
      }
    ]
  }
]