[
  {
    "name": "init_museum",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitMuseum >",
      "base: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . museum ;",
      "m . owner = ctx . accounts . curator . key () ;",
      "m . bump_mem = * ctx . bumps . get (\"museum\") . ok_or (error ! (EAM :: NoBump)) ? ;",
      "m . glow = base . rotate_left (3) . wrapping_add (69) ;",
      "m . steps = 1 ;",
      "let seq : Vec < u64 > = (1 .. 5) . map (| i | m . glow . wrapping_mul (i * 11)) . collect () ;",
      "let sum = seq . iter () . fold (0u64 , | acc , v | acc . wrapping_add (* v)) ;",
      "if sum > base",
      "{",
      "m . glow = m . glow . wrapping_add (sum) . wrapping_mul (2) . wrapping_add (23) ;",
      "m . steps = m . steps . saturating_add (((sum % 29) as u32) + 3) ;",
      "}",
      "let mut t = 1u8 ;",
      "let mut a = sum . rotate_right (1) . wrapping_add (17) ;",
      "while t < 3",
      "{",
      "let e = (a ^ (t as u64 * 13)) . rotate_left (1) ;",
      "a = a . wrapping_add (e) ;",
      "m . glow = m . glow . wrapping_add (e) . wrapping_mul (3) . wrapping_add (9 + t as u64) ;",
      "m . steps = m . steps . saturating_add (((m . glow % 25) as u32) + 4) ;",
      "t = t . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "pay_exhibit_fee",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PayExhibitFee >",
      "exhibit_id: u64",
      "bump_feed: u8",
      "lamports: u64"
    ],
    "attributes": [],
    "body": [
      "let m = & mut ctx . accounts . museum ;",
      "for z in 1 .. 3",
      "{",
      "let q = (m . glow ^ (z as u64 * 21)) . rotate_left (1) ;",
      "m . glow = m . glow . wrapping_add (q) . wrapping_mul (2) . wrapping_add (15 + z as u64) ;",
      "m . steps = m . steps . saturating_add (((m . glow % 27) as u32) + 4) ;",
      "}",
      "let seeds = & [b\"exhibit_fee\" . as_ref () , m . owner . as_ref () , & exhibit_id . to_le_bytes () , core :: slice :: from_ref (& bump_feed) ,] ;",
      "let purse = Pubkey :: create_program_address (& [b\"exhibit_fee\" , m . owner . as_ref () , & exhibit_id . to_le_bytes () , & [bump_feed]] , ctx . program_id ,) . map_err (| _ | error ! (EAM :: SeedCompute)) ? ;",
      "let ix = system_instruction :: transfer (& purse , & ctx . accounts . visitor . key () , lamports) ;",
      "invoke_signed (& ix , & [ctx . accounts . fee_hint . to_account_info () , ctx . accounts . visitor . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitMuseum",
    "node_type": "struct",
    "fields": [
      {
        "name": "museum",
        "attribute": "# [account (init , payer = curator , space = 8 + 32 + 8 + 4 + 1 , seeds = [b\"museum\" , curator . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , MuseumState >"
      },
      {
        "name": "curator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PayExhibitFee",
    "node_type": "struct",
    "fields": [
      {
        "name": "museum",
        "attribute": "# [account (mut , seeds = [b\"museum\" , curator . key () . as_ref ()] , bump = museum . bump_mem)]",
        "field_type": "Account < 'info , MuseumState >"
      },
      {
        "name": "fee_hint",
        "attribute": "# [doc = \" CHECK\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "visitor",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "curator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "MuseumState",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "glow",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "steps",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "bump_mem",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]