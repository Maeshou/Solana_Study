[
  {
    "name": "init_market",
    "inputs": [
      "ctx: Context < InitMarket >",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mk = & mut ctx . accounts . market ;"
      },
      {
        "id": 2,
        "label": "mk . owner = ctx . accounts . trader . key () ;"
      },
      {
        "id": 3,
        "label": "mk . bump_keep = * ctx . bumps . get (\"market\") . ok_or (error ! (EMK :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "mk . tokens = seed . rotate_left (3) . wrapping_add (77) ;"
      },
      {
        "id": 5,
        "label": "mk . turns = 3 ;"
      },
      {
        "id": 6,
        "label": "let base = mk . tokens . rotate_right (2) . wrapping_add (33) ;"
      },
      {
        "id": 7,
        "label": "let bonus = mk . tokens . rotate_left (1) . wrapping_add (19) ;"
      },
      {
        "id": 8,
        "label": "let mut idx = 1u8 ;"
      },
      {
        "id": 9,
        "label": "while idx < 5 { let adj = (base ^ bonus . wrapping_mul (idx as u64)) . rotate_right (1) ; mk . tokens = mk . tokens . wrapping_add (adj) . wrapping_mul (2) . wrapping_add (11 + idx as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 27) as u32) + 5) ; idx = idx . saturating_add (1) ; }"
      },
      {
        "id": 10,
        "label": "let adj = (base ^ bonus . wrapping_mul (idx as u64)) . rotate_right (1) ;"
      },
      {
        "id": 11,
        "label": "mk . tokens = mk . tokens . wrapping_add (adj) . wrapping_mul (2) . wrapping_add (11 + idx as u64) ;"
      },
      {
        "id": 12,
        "label": "mk . turns = mk . turns . saturating_add (((mk . tokens % 27) as u32) + 5) ;"
      },
      {
        "id": 13,
        "label": "idx = idx . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "if mk . tokens > seed { let mut gain = seed . rotate_left (2) ; for i in 1 .. 3 { let step = (gain ^ (i as u64 * 29)) . rotate_left (1) ; gain = gain . wrapping_add (step) ; mk . tokens = mk . tokens . wrapping_add (step) . wrapping_mul (3) . wrapping_add (7 + i as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 25) as u32) + 4) ; } }"
      },
      {
        "id": 15,
        "label": "let mut gain = seed . rotate_left (2) ;"
      },
      {
        "id": 16,
        "label": "for i in 1 .. 3 { let step = (gain ^ (i as u64 * 29)) . rotate_left (1) ; gain = gain . wrapping_add (step) ; mk . tokens = mk . tokens . wrapping_add (step) . wrapping_mul (3) . wrapping_add (7 + i as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 25) as u32) + 4) ; }"
      },
      {
        "id": 17,
        "label": "let step = (gain ^ (i as u64 * 29)) . rotate_left (1) ;"
      },
      {
        "id": 18,
        "label": "gain = gain . wrapping_add (step) ;"
      },
      {
        "id": 19,
        "label": "mk . tokens = mk . tokens . wrapping_add (step) . wrapping_mul (3) . wrapping_add (7 + i as u64) ;"
      },
      {
        "id": 20,
        "label": "mk . turns = mk . turns . saturating_add (((mk . tokens % 25) as u32) + 4) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: mk"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: mk"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: base"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: mk"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: bonus"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: mk"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: idx"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: base"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: bonus"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: mk"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: mk"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: adj"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: base"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: bonus"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: idx"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: mk"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: adj"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: idx"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: mk"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: idx"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: idx"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: mk"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: gain"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: gain"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: gain"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: gain"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: mk"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: step"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: gain"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: gain"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: gain"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: step"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: mk"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: step"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: mk"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: mk"
      }
    ]
  },
  {
    "name": "settle_trade",
    "inputs": [
      "ctx: Context < SettleTrade >",
      "order_id: u64",
      "external_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let mk = & mut ctx . accounts . market ;"
      },
      {
        "id": 24,
        "label": "for r in 1 .. 4 { let swing = (mk . tokens ^ (r as u64 * 31)) . rotate_left (1) ; mk . tokens = mk . tokens . wrapping_add (swing) . wrapping_mul (2) . wrapping_add (13 + r as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 31) as u32) + 4) ; }"
      },
      {
        "id": 25,
        "label": "let swing = (mk . tokens ^ (r as u64 * 31)) . rotate_left (1) ;"
      },
      {
        "id": 26,
        "label": "mk . tokens = mk . tokens . wrapping_add (swing) . wrapping_mul (2) . wrapping_add (13 + r as u64) ;"
      },
      {
        "id": 27,
        "label": "mk . turns = mk . turns . saturating_add (((mk . tokens % 31) as u32) + 4) ;"
      },
      {
        "id": 28,
        "label": "if lamports > 450 { let mut steps = lamports . rotate_left (2) ; let mut u = 1u8 ; while u < 4 { let z = (steps ^ (u as u64 * 17)) . rotate_right (1) ; steps = steps . wrapping_add (z) ; mk . tokens = mk . tokens . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 28) as u32) + 4) ; u = u . saturating_add (1) ; } }"
      },
      {
        "id": 29,
        "label": "let mut steps = lamports . rotate_left (2) ;"
      },
      {
        "id": 30,
        "label": "let mut u = 1u8 ;"
      },
      {
        "id": 31,
        "label": "while u < 4 { let z = (steps ^ (u as u64 * 17)) . rotate_right (1) ; steps = steps . wrapping_add (z) ; mk . tokens = mk . tokens . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ; mk . turns = mk . turns . saturating_add (((mk . tokens % 28) as u32) + 4) ; u = u . saturating_add (1) ; }"
      },
      {
        "id": 32,
        "label": "let z = (steps ^ (u as u64 * 17)) . rotate_right (1) ;"
      },
      {
        "id": 33,
        "label": "steps = steps . wrapping_add (z) ;"
      },
      {
        "id": 34,
        "label": "mk . tokens = mk . tokens . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + u as u64) ;"
      },
      {
        "id": 35,
        "label": "mk . turns = mk . turns . saturating_add (((mk . tokens % 28) as u32) + 4) ;"
      },
      {
        "id": 36,
        "label": "u = u . saturating_add (1) ;"
      },
      {
        "id": 37,
        "label": "let seeds = & [b\"order_purse\" . as_ref () , mk . owner . as_ref () , & order_id . to_le_bytes () , core :: slice :: from_ref (& external_bump) ,] ;"
      },
      {
        "id": 38,
        "label": "let target = Pubkey :: create_program_address (& [b\"order_purse\" , mk . owner . as_ref () , & order_id . to_le_bytes () , & [external_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EMK :: SeedCompute)) ? ;"
      },
      {
        "id": 39,
        "label": "let ix = system_instruction :: transfer (& target , & ctx . accounts . counterparty . key () , lamports) ;"
      },
      {
        "id": 40,
        "label": "invoke_signed (& ix , & [ctx . accounts . order_hint . to_account_info () , ctx . accounts . counterparty . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 23,
        "to": 23,
        "label": "def: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: mk"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: swing"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: mk"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: swing"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: mk"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: steps"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: u"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: steps"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: steps"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: steps"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: mk"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: mk"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: u"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: z"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: steps"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: u"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: steps"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: steps"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: z"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: mk"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: z"
      },
      {
        "from": 30,
        "to": 34,
        "label": "data_dep: u"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: mk"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: mk"
      },
      {
        "from": 30,
        "to": 36,
        "label": "data_dep: u"
      },
      {
        "from": 30,
        "to": 36,
        "label": "data_dep: u"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: seeds"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: mk"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: target"
      },
      {
        "from": 23,
        "to": 38,
        "label": "data_dep: mk"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: ix"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: target"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: ix"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: seeds"
      }
    ]
  }
]