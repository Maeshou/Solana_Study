[
  {
    "name": "add_canvas",
    "inputs": [
      "ctx: Context < AddCanvas >",
      "tag: [u8 ; 6]",
      "size: u16",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut t = tag ;"
      },
      {
        "id": 2,
        "label": "for i in 0 .. t . len () { if ! t [i] . is_ascii_uppercase () { let orig = t [i] ; t [i] = b'A' + (i as u8 % 26) ; let diff = (t [i] as i16) - (orig as i16) ; msg ! (\"fix {} diff={}\" , i , diff) ; } else { let x = (t [i] as u32) ^ 0x41 ; if (x & 2) == 2 { msg ! (\"flag {} x={}\" , i , x) ; } } }"
      },
      {
        "id": 3,
        "label": "if ! t [i] . is_ascii_uppercase () { let orig = t [i] ; t [i] = b'A' + (i as u8 % 26) ; let diff = (t [i] as i16) - (orig as i16) ; msg ! (\"fix {} diff={}\" , i , diff) ; } else { let x = (t [i] as u32) ^ 0x41 ; if (x & 2) == 2 { msg ! (\"flag {} x={}\" , i , x) ; } }"
      },
      {
        "id": 4,
        "label": "let orig = t [i] ;"
      },
      {
        "id": 5,
        "label": "t [i] = b'A' + (i as u8 % 26) ;"
      },
      {
        "id": 6,
        "label": "let diff = (t [i] as i16) - (orig as i16) ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"fix {} diff={}\" , i , diff) ;"
      },
      {
        "id": 8,
        "label": "let x = (t [i] as u32) ^ 0x41 ;"
      },
      {
        "id": 9,
        "label": "if (x & 2) == 2 { msg ! (\"flag {} x={}\" , i , x) ; }"
      },
      {
        "id": 10,
        "label": "msg ! (\"flag {} x={}\" , i , x) ;"
      },
      {
        "id": 11,
        "label": "let mut s = size ;"
      },
      {
        "id": 12,
        "label": "if s < 12 { let gain = 12 - s ; s = 12 ; let mut pulse = 0u16 ; for k in 0 .. gain { pulse = pulse . wrapping_add ((k * 3) as u16) ; } msg ! (\"pulse {}\" , pulse) ; }"
      },
      {
        "id": 13,
        "label": "let gain = 12 - s ;"
      },
      {
        "id": 14,
        "label": "s = 12 ;"
      },
      {
        "id": 15,
        "label": "let mut pulse = 0u16 ;"
      },
      {
        "id": 16,
        "label": "for k in 0 .. gain { pulse = pulse . wrapping_add ((k * 3) as u16) ; }"
      },
      {
        "id": 17,
        "label": "pulse = pulse . wrapping_add ((k * 3) as u16) ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"pulse {}\" , pulse) ;"
      },
      {
        "id": 19,
        "label": "let seeds = [& ctx . accounts . artist . key () . to_bytes () [..] , & t [..]] ;"
      },
      {
        "id": 20,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (CnvErr :: Cell)) ? ;"
      },
      {
        "id": 21,
        "label": "if addr != ctx . accounts . canvas_cell . key () { msg ! (\"add mismatch\") ; return Err (error ! (CnvErr :: Cell)) ; }"
      },
      {
        "id": 22,
        "label": "msg ! (\"add mismatch\") ;"
      },
      {
        "id": 23,
        "label": "return Err (error ! (CnvErr :: Cell)) ;"
      },
      {
        "id": 24,
        "label": "let c = & mut ctx . accounts . canvas ;"
      },
      {
        "id": 25,
        "label": "c . artist = ctx . accounts . artist . key () ;"
      },
      {
        "id": 26,
        "label": "c . tag = t ;"
      },
      {
        "id": 27,
        "label": "c . size = s ;"
      },
      {
        "id": 28,
        "label": "let mut acc = 0u16 ;"
      },
      {
        "id": 29,
        "label": "for _ in 0 .. 3 { acc = acc . saturating_add (1) ; }"
      },
      {
        "id": 30,
        "label": "acc = acc . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "c . layers = c . layers . saturating_add (acc) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: orig"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: diff"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: t"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: orig"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: x"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: x"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: s"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: gain"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: pulse"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: gain"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: pulse"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: pulse"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: pulse"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: pulse"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: addr"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: seeds"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: addr"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: c"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: c"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: c"
      },
      {
        "from": 11,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: acc"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: acc"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: acc"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: acc"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: acc"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: c"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: c"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: acc"
      }
    ]
  },
  {
    "name": "draw_stroke",
    "inputs": [
      "ctx: Context < DrawStroke >",
      "pixels: u32",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 33,
        "label": "Entry"
      },
      {
        "id": 34,
        "label": "let tag = ctx . accounts . canvas . tag ;"
      },
      {
        "id": 35,
        "label": "if tag [0] == b'Z' { msg ! (\"rare tag path\") ; let mut zz = 0u32 ; for j in 0 .. 6 { zz = zz . wrapping_add ((tag [j] as u32) . wrapping_mul ((j as u32) + 9)) ; } ctx . accounts . canvas . painted = ctx . accounts . canvas . painted . wrapping_add (zz) ; }"
      },
      {
        "id": 36,
        "label": "msg ! (\"rare tag path\") ;"
      },
      {
        "id": 37,
        "label": "let mut zz = 0u32 ;"
      },
      {
        "id": 38,
        "label": "for j in 0 .. 6 { zz = zz . wrapping_add ((tag [j] as u32) . wrapping_mul ((j as u32) + 9)) ; }"
      },
      {
        "id": 39,
        "label": "zz = zz . wrapping_add ((tag [j] as u32) . wrapping_mul ((j as u32) + 9)) ;"
      },
      {
        "id": 40,
        "label": "ctx . accounts . canvas . painted = ctx . accounts . canvas . painted . wrapping_add (zz) ;"
      },
      {
        "id": 41,
        "label": "let seeds = [& ctx . accounts . artist . key () . to_bytes () [..] , & tag [..]] ;"
      },
      {
        "id": 42,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (CnvErr :: Cell)) ? ;"
      },
      {
        "id": 43,
        "label": "if addr != ctx . accounts . canvas_cell . key () { msg ! (\"draw mismatch\") ; return Err (error ! (CnvErr :: Cell)) ; }"
      },
      {
        "id": 44,
        "label": "msg ! (\"draw mismatch\") ;"
      },
      {
        "id": 45,
        "label": "return Err (error ! (CnvErr :: Cell)) ;"
      },
      {
        "id": 46,
        "label": "let c = & mut ctx . accounts . canvas ;"
      },
      {
        "id": 47,
        "label": "let mut px = pixels ;"
      },
      {
        "id": 48,
        "label": "if px > 200_000 { let cut = px - 200_000 ; px = 200_000 ; let mut leak = 0u32 ; for r in 0 .. 4 { leak = leak . wrapping_add (cut . wrapping_mul ((r + 1) * 7)) ; } c . painted = c . painted . wrapping_add (leak) ; }"
      },
      {
        "id": 49,
        "label": "let cut = px - 200_000 ;"
      },
      {
        "id": 50,
        "label": "px = 200_000 ;"
      },
      {
        "id": 51,
        "label": "let mut leak = 0u32 ;"
      },
      {
        "id": 52,
        "label": "for r in 0 .. 4 { leak = leak . wrapping_add (cut . wrapping_mul ((r + 1) * 7)) ; }"
      },
      {
        "id": 53,
        "label": "leak = leak . wrapping_add (cut . wrapping_mul ((r + 1) * 7)) ;"
      },
      {
        "id": 54,
        "label": "c . painted = c . painted . wrapping_add (leak) ;"
      },
      {
        "id": 55,
        "label": "let mut step = 0u32 ;"
      },
      {
        "id": 56,
        "label": "while step < px . min (4096) { c . strokes = c . strokes . saturating_add (1) ; if (c . strokes & 31) == 0 { msg ! (\"combo {}\" , c . strokes) ; } step = step . saturating_add (64) ; }"
      },
      {
        "id": 57,
        "label": "c . strokes = c . strokes . saturating_add (1) ;"
      },
      {
        "id": 58,
        "label": "if (c . strokes & 31) == 0 { msg ! (\"combo {}\" , c . strokes) ; }"
      },
      {
        "id": 59,
        "label": "msg ! (\"combo {}\" , c . strokes) ;"
      },
      {
        "id": 60,
        "label": "step = step . saturating_add (64) ;"
      },
      {
        "id": 61,
        "label": "c . painted = c . painted . saturating_add (px) ;"
      },
      {
        "id": 62,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 34,
        "to": 34,
        "label": "def: tag"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: tag"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: tag"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: zz"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: zz"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: zz"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: tag"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: zz"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: zz"
      },
      {
        "from": 34,
        "to": 39,
        "label": "data_dep: tag"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: zz"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: seeds"
      },
      {
        "from": 34,
        "to": 41,
        "label": "data_dep: tag"
      },
      {
        "from": 42,
        "to": 42,
        "label": "def: addr"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: seeds"
      },
      {
        "from": 42,
        "to": 43,
        "label": "data_dep: addr"
      },
      {
        "from": 46,
        "to": 46,
        "label": "def: c"
      },
      {
        "from": 47,
        "to": 47,
        "label": "def: px"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: px"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: px"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: px"
      },
      {
        "from": 46,
        "to": 48,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 48,
        "label": "data_dep: c"
      },
      {
        "from": 49,
        "to": 49,
        "label": "def: cut"
      },
      {
        "from": 47,
        "to": 49,
        "label": "data_dep: px"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: px"
      },
      {
        "from": 51,
        "to": 51,
        "label": "def: leak"
      },
      {
        "from": 51,
        "to": 52,
        "label": "data_dep: leak"
      },
      {
        "from": 51,
        "to": 52,
        "label": "data_dep: leak"
      },
      {
        "from": 49,
        "to": 52,
        "label": "data_dep: cut"
      },
      {
        "from": 51,
        "to": 53,
        "label": "data_dep: leak"
      },
      {
        "from": 51,
        "to": 53,
        "label": "data_dep: leak"
      },
      {
        "from": 49,
        "to": 53,
        "label": "data_dep: cut"
      },
      {
        "from": 46,
        "to": 54,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 54,
        "label": "data_dep: c"
      },
      {
        "from": 51,
        "to": 54,
        "label": "data_dep: leak"
      },
      {
        "from": 55,
        "to": 55,
        "label": "def: step"
      },
      {
        "from": 55,
        "to": 56,
        "label": "data_dep: step"
      },
      {
        "from": 47,
        "to": 56,
        "label": "data_dep: px"
      },
      {
        "from": 46,
        "to": 56,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 56,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 56,
        "label": "data_dep: c"
      },
      {
        "from": 55,
        "to": 56,
        "label": "data_dep: step"
      },
      {
        "from": 55,
        "to": 56,
        "label": "data_dep: step"
      },
      {
        "from": 46,
        "to": 57,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 57,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 58,
        "label": "data_dep: c"
      },
      {
        "from": 55,
        "to": 60,
        "label": "data_dep: step"
      },
      {
        "from": 55,
        "to": 60,
        "label": "data_dep: step"
      },
      {
        "from": 46,
        "to": 61,
        "label": "data_dep: c"
      },
      {
        "from": 46,
        "to": 61,
        "label": "data_dep: c"
      },
      {
        "from": 47,
        "to": 61,
        "label": "data_dep: px"
      }
    ]
  }
]