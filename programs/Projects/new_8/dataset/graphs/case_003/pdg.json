[
  {
    "name": "upsert_item",
    "inputs": [
      "ctx: Context < UpsertItem >",
      "code: [u8 ; 8]",
      "qty: u16",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut sanitized = code ;"
      },
      {
        "id": 2,
        "label": "let mut odd : u16 = 0 ;"
      },
      {
        "id": 3,
        "label": "for k in 0 .. sanitized . len () { let c = sanitized [k] ; if ! (c . is_ascii_alphanumeric ()) { sanitized [k] = b'_' ; } if (k as u8) & 1 == 1 { odd = odd . saturating_add (c as u16) ; } }"
      },
      {
        "id": 4,
        "label": "let c = sanitized [k] ;"
      },
      {
        "id": 5,
        "label": "if ! (c . is_ascii_alphanumeric ()) { sanitized [k] = b'_' ; }"
      },
      {
        "id": 6,
        "label": "sanitized [k] = b'_' ;"
      },
      {
        "id": 7,
        "label": "if (k as u8) & 1 == 1 { odd = odd . saturating_add (c as u16) ; }"
      },
      {
        "id": 8,
        "label": "odd = odd . saturating_add (c as u16) ;"
      },
      {
        "id": 9,
        "label": "let seeds = [& ctx . accounts . owner . key () . to_bytes () [..] , & sanitized [..]] ;"
      },
      {
        "id": 10,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (InvError :: BadKey)) ? ;"
      },
      {
        "id": 11,
        "label": "if addr != ctx . accounts . vault_cell . key () { return Err (error ! (InvError :: BadKey)) ; }"
      },
      {
        "id": 12,
        "label": "return Err (error ! (InvError :: BadKey)) ;"
      },
      {
        "id": 13,
        "label": "let v = & mut ctx . accounts . vault ;"
      },
      {
        "id": 14,
        "label": "v . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 15,
        "label": "v . code = sanitized ;"
      },
      {
        "id": 16,
        "label": "let mut new_qty = v . qty . saturating_add (qty) ;"
      },
      {
        "id": 17,
        "label": "if new_qty > 5000 { new_qty = 5000 ; }"
      },
      {
        "id": 18,
        "label": "new_qty = 5000 ;"
      },
      {
        "id": 19,
        "label": "v . qty = new_qty ;"
      },
      {
        "id": 20,
        "label": "v . odd_sum = v . odd_sum . saturating_add (odd) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: sanitized"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: sanitized"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: sanitized"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: sanitized"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: sanitized"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: sanitized"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: sanitized"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: c"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: c"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: sanitized"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: addr"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: seeds"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: addr"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: v"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: sanitized"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: new_qty"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: v"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: new_qty"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: new_qty"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: new_qty"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: v"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: new_qty"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: v"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: v"
      }
    ]
  }
]