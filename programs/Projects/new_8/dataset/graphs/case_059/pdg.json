[
  {
    "name": "init_vault",
    "inputs": [
      "ctx: Context < InitVault >",
      "salt: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let v = & mut ctx . accounts . vault ;"
      },
      {
        "id": 2,
        "label": "v . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "v . bump_saved = * ctx . bumps . get (\"vault\") . ok_or (error ! (Errs :: MissingBump)) ? ;"
      },
      {
        "id": 4,
        "label": "v . salt = salt % 777 + 123 ;"
      },
      {
        "id": 5,
        "label": "v . flags = 0 ;"
      },
      {
        "id": 6,
        "label": "let mut roll : u32 = v . salt as u32 ;"
      },
      {
        "id": 7,
        "label": "let mut step : u8 = 0 ;"
      },
      {
        "id": 8,
        "label": "while step < 6 { if roll % 4 == 0 { v . flags = v . flags . saturating_add ((roll % 11) + 3) ; } else { v . flags = v . flags . saturating_add ((roll % 9) + 1) ; } roll = roll . wrapping_mul (13) . wrapping_add (step as u32 + 7) ; step = step . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "if roll % 4 == 0 { v . flags = v . flags . saturating_add ((roll % 11) + 3) ; } else { v . flags = v . flags . saturating_add ((roll % 9) + 1) ; }"
      },
      {
        "id": 10,
        "label": "v . flags = v . flags . saturating_add ((roll % 11) + 3) ;"
      },
      {
        "id": 11,
        "label": "v . flags = v . flags . saturating_add ((roll % 9) + 1) ;"
      },
      {
        "id": 12,
        "label": "roll = roll . wrapping_mul (13) . wrapping_add (step as u32 + 7) ;"
      },
      {
        "id": 13,
        "label": "step = step . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: v"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: v"
      }
    ]
  },
  {
    "name": "payout",
    "inputs": [
      "ctx: Context < Payout >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let st = & mut ctx . accounts . vault ;"
      },
      {
        "id": 17,
        "label": "let wrong : & [& [u8]] = & [b\"vault_alt\" , st . owner . as_ref () , & [st . bump_saved] ,] ;"
      },
      {
        "id": 18,
        "label": "let alt_key = Pubkey :: create_program_address (& [b\"vault_alt\" , st . owner . as_ref () , & [st . bump_saved]] , ctx . program_id ,) . map_err (| _ | error ! (Errs :: SeedCompute)) ? ;"
      },
      {
        "id": 19,
        "label": "let ix = system_instruction :: transfer (& alt_key , & ctx . accounts . recipient . key () , amount) ;"
      },
      {
        "id": 20,
        "label": "let infos = & [ctx . accounts . alt_vault . to_account_info () , ctx . accounts . recipient . to_account_info () , ctx . accounts . system_program . to_account_info () ,] ;"
      },
      {
        "id": 21,
        "label": "invoke_signed (& ix , infos , & [wrong]) ? ;"
      },
      {
        "id": 22,
        "label": "let mut remain : u64 = amount ;"
      },
      {
        "id": 23,
        "label": "let mut rounds : u8 = 0 ;"
      },
      {
        "id": 24,
        "label": "while remain > 0 { if (remain % 3) == 1 { st . flags = st . flags . saturating_add ((remain % 13) as u32 + 2) ; } else { st . flags = st . flags . saturating_add ((remain % 7) as u32 + 4) ; } remain = remain . saturating_sub (5) ; rounds = rounds . saturating_add (1) ; if rounds > 9 { remain = 0 ; } }"
      },
      {
        "id": 25,
        "label": "if (remain % 3) == 1 { st . flags = st . flags . saturating_add ((remain % 13) as u32 + 2) ; } else { st . flags = st . flags . saturating_add ((remain % 7) as u32 + 4) ; }"
      },
      {
        "id": 26,
        "label": "st . flags = st . flags . saturating_add ((remain % 13) as u32 + 2) ;"
      },
      {
        "id": 27,
        "label": "st . flags = st . flags . saturating_add ((remain % 7) as u32 + 4) ;"
      },
      {
        "id": 28,
        "label": "remain = remain . saturating_sub (5) ;"
      },
      {
        "id": 29,
        "label": "rounds = rounds . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "if rounds > 9 { remain = 0 ; }"
      },
      {
        "id": 31,
        "label": "remain = 0 ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: st"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: st"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: alt_key"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: st"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: ix"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: alt_key"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: infos"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: ix"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: infos"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: st"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: st"
      }
    ]
  }
]