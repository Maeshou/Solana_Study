[
  {
    "name": "setup",
    "inputs": [
      "ctx: Context < Setup >",
      "step: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "s . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "s . step = step ;"
      },
      {
        "id": 4,
        "label": "s . energy = 2 ;"
      },
      {
        "id": 5,
        "label": "s . queue = 0 ;"
      },
      {
        "id": 6,
        "label": "if s . step < 2 { s . step = 2 ; }"
      },
      {
        "id": 7,
        "label": "s . step = 2 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "craft",
    "inputs": [
      "ctx: Context < Craft >",
      "power: u16",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 11,
        "label": "let seeds = & [b\"tool_bin\" , ctx . accounts . admin . key . as_ref () , & [user_bump] ,] ;"
      },
      {
        "id": 12,
        "label": "let tb = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (ForgeErr :: Seed)) ? ;"
      },
      {
        "id": 13,
        "label": "if tb != ctx . accounts . tool_bin . key () { return Err (error ! (ForgeErr :: ToolRoute)) ; }"
      },
      {
        "id": 14,
        "label": "return Err (error ! (ForgeErr :: ToolRoute)) ;"
      },
      {
        "id": 15,
        "label": "let mut loops = power as u32 ;"
      },
      {
        "id": 16,
        "label": "if loops > 8 { loops = 8 ; }"
      },
      {
        "id": 17,
        "label": "loops = 8 ;"
      },
      {
        "id": 18,
        "label": "let mut acc = 3u32 ;"
      },
      {
        "id": 19,
        "label": "while acc < 50 { s . energy = s . energy . saturating_add (1) ; acc = acc . saturating_add (loops) ; }"
      },
      {
        "id": 20,
        "label": "s . energy = s . energy . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "acc = acc . saturating_add (loops) ;"
      },
      {
        "id": 22,
        "label": "if s . queue < 5 { s . queue = s . queue . saturating_add (2) ; }"
      },
      {
        "id": 23,
        "label": "s . queue = s . queue . saturating_add (2) ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: s"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: seeds"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: tb"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: seeds"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: tb"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: loops"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: loops"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: loops"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: loops"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: acc"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: acc"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: loops"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: acc"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: acc"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: loops"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: s"
      }
    ]
  }
]