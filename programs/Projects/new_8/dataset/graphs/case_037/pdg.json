[
  {
    "name": "register_meter",
    "inputs": [
      "ctx: Context < RegisterMeter >",
      "span: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . meter ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "m . window = span % 128 + 16 ;"
      },
      {
        "id": 4,
        "label": "m . readings = span / 5 + 6 ;"
      },
      {
        "id": 5,
        "label": "m . alerts = 4 ;"
      },
      {
        "id": 6,
        "label": "if m . window < 10 { m . window = 10 ; }"
      },
      {
        "id": 7,
        "label": "m . window = 10 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "push_reading",
    "inputs": [
      "ctx: Context < PushReading >",
      "value: u32",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let m = & mut ctx . accounts . meter ;"
      },
      {
        "id": 11,
        "label": "let seeds = & [b\"alert_buffer\" , ctx . accounts . leader . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 12,
        "label": "let check = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (MeterErr :: SeedBroken)) ? ;"
      },
      {
        "id": 13,
        "label": "if check != ctx . accounts . alert_buffer . key () { return Err (error ! (MeterErr :: BufferKeyMismatch)) ; }"
      },
      {
        "id": 14,
        "label": "return Err (error ! (MeterErr :: BufferKeyMismatch)) ;"
      },
      {
        "id": 15,
        "label": "m . readings = m . readings . saturating_add (value % 97 + 3) ;"
      },
      {
        "id": 16,
        "label": "if m . readings % 6 != 3 { m . alerts = m . alerts . saturating_add (2) ; }"
      },
      {
        "id": 17,
        "label": "m . alerts = m . alerts . saturating_add (2) ;"
      },
      {
        "id": 18,
        "label": "let mut cursor = 2u32 ;"
      },
      {
        "id": 19,
        "label": "while cursor < m . window { m . alerts = m . alerts . saturating_add (1) ; cursor = cursor . saturating_add (11) ; }"
      },
      {
        "id": 20,
        "label": "m . alerts = m . alerts . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "cursor = cursor . saturating_add (11) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: m"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: seeds"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: check"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: seeds"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: check"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: cursor"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cursor"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cursor"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cursor"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: m"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: cursor"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: cursor"
      }
    ]
  }
]