[
  {
    "name": "start_fest",
    "inputs": [
      "ctx: Context < StartFest >",
      "plots: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let f = & mut ctx . accounts . fest ;"
      },
      {
        "id": 2,
        "label": "f . owner = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "f . plots = plots % 90 + 9 ;"
      },
      {
        "id": 4,
        "label": "f . crates = 5 ;"
      },
      {
        "id": 5,
        "label": "f . guests = 2 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: f"
      }
    ]
  },
  {
    "name": "gather",
    "inputs": [
      "ctx: Context < Gather >",
      "amount: u16",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let f = & mut ctx . accounts . fest ;"
      },
      {
        "id": 9,
        "label": "if amount > 25 { let gain = (amount % 11) as u32 + 3 ; f . crates = f . crates . saturating_add (gain) ; let head = f . owner . to_bytes () [2] ; f . guests = f . guests . saturating_add (head as u32 % 5 + 1) ; }"
      },
      {
        "id": 10,
        "label": "let gain = (amount % 11) as u32 + 3 ;"
      },
      {
        "id": 11,
        "label": "f . crates = f . crates . saturating_add (gain) ;"
      },
      {
        "id": 12,
        "label": "let head = f . owner . to_bytes () [2] ;"
      },
      {
        "id": 13,
        "label": "f . guests = f . guests . saturating_add (head as u32 % 5 + 1) ;"
      },
      {
        "id": 14,
        "label": "let seeds = & [b\"storage_bin\" , ctx . accounts . host . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 15,
        "label": "let s = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (FestErr :: SeedIssue)) ? ;"
      },
      {
        "id": 16,
        "label": "if s != ctx . accounts . storage_bin . key () { return Err (error ! (FestErr :: StorageKey)) ; }"
      },
      {
        "id": 17,
        "label": "return Err (error ! (FestErr :: StorageKey)) ;"
      },
      {
        "id": 18,
        "label": "let mut loopc = 1u32 ;"
      },
      {
        "id": 19,
        "label": "while loopc < (amount as u32 % 27 + 6) { f . plots = f . plots . saturating_add (1) ; f . crates = f . crates . saturating_add (loopc) ; let push = (f . crates % 7) + 2 ; f . guests = f . guests . saturating_add (push) ; loopc = loopc . saturating_add (5) ; }"
      },
      {
        "id": 20,
        "label": "f . plots = f . plots . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "f . crates = f . crates . saturating_add (loopc) ;"
      },
      {
        "id": 22,
        "label": "let push = (f . crates % 7) + 2 ;"
      },
      {
        "id": 23,
        "label": "f . guests = f . guests . saturating_add (push) ;"
      },
      {
        "id": 24,
        "label": "loopc = loopc . saturating_add (5) ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: f"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: gain"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: f"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: gain"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: head"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: f"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: head"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: seeds"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: s"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: seeds"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: loopc"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: loopc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: loopc"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: loopc"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: loopc"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: f"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: loopc"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: push"
      },
      {
        "from": 8,
        "to": 22,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: f"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: f"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: push"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: loopc"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: loopc"
      }
    ]
  }
]