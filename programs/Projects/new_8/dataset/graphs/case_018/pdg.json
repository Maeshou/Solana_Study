[
  {
    "name": "plant_seed",
    "inputs": [
      "ctx: Context < PlantSeed >",
      "field: [u8 ; 8]",
      "water: u16",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut f = field ;"
      },
      {
        "id": 2,
        "label": "for i in 0 .. f . len () { if ! f [i] . is_ascii_alphanumeric () { f [i] = b'1' + (i as u8 % 9) ; } }"
      },
      {
        "id": 3,
        "label": "if ! f [i] . is_ascii_alphanumeric () { f [i] = b'1' + (i as u8 % 9) ; }"
      },
      {
        "id": 4,
        "label": "f [i] = b'1' + (i as u8 % 9) ;"
      },
      {
        "id": 5,
        "label": "let mut w = water as u32 ;"
      },
      {
        "id": 6,
        "label": "if w > 4000 { w = 4000 ; }"
      },
      {
        "id": 7,
        "label": "w = 4000 ;"
      },
      {
        "id": 8,
        "label": "let seeds = [& ctx . accounts . farmer . key () . to_bytes () [..] , & f [..]] ;"
      },
      {
        "id": 9,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (FarmErr :: Cell)) ? ;"
      },
      {
        "id": 10,
        "label": "if addr != ctx . accounts . plot_cell . key () { return Err (error ! (FarmErr :: Cell)) ; }"
      },
      {
        "id": 11,
        "label": "return Err (error ! (FarmErr :: Cell)) ;"
      },
      {
        "id": 12,
        "label": "let p = & mut ctx . accounts . plot ;"
      },
      {
        "id": 13,
        "label": "p . farmer = ctx . accounts . farmer . key () ;"
      },
      {
        "id": 14,
        "label": "p . field = f ;"
      },
      {
        "id": 15,
        "label": "p . moist = p . moist . saturating_add (w) ;"
      },
      {
        "id": 16,
        "label": "p . cycle = p . cycle . wrapping_add (1) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: f"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: w"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: w"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: w"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: w"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: f"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: addr"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: seeds"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: addr"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: p"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 5,
        "to": 15,
        "label": "data_dep: w"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "collect_crop",
    "inputs": [
      "ctx: Context < CollectCrop >",
      "field: [u8 ; 8]",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let seeds = [& ctx . accounts . farmer . key () . to_bytes () [..] , & field [..]] ;"
      },
      {
        "id": 20,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (FarmErr :: Cell)) ? ;"
      },
      {
        "id": 21,
        "label": "if addr != ctx . accounts . plot_cell . key () { return Err (error ! (FarmErr :: Cell)) ; }"
      },
      {
        "id": 22,
        "label": "return Err (error ! (FarmErr :: Cell)) ;"
      },
      {
        "id": 23,
        "label": "let p = & mut ctx . accounts . plot ;"
      },
      {
        "id": 24,
        "label": "let gained = (p . moist / 9) as u64 ;"
      },
      {
        "id": 25,
        "label": "p . harvest = p . harvest . saturating_add (gained) ;"
      },
      {
        "id": 26,
        "label": "p . moist = p . moist . saturating_sub ((gained as u32) * 8) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: seeds"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: addr"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: seeds"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: addr"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: p"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: gained"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: gained"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: gained"
      }
    ]
  }
]