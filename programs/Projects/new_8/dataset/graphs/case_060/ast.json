[
  {
    "name": "setup",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Setup >",
      "nonce: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . store ;",
      "s . owner = ctx . accounts . owner . key () ;",
      "s . nonce = nonce . rotate_left (7) ^ 0xA5A5_A5A5_A5A5_A5A5 ;",
      "s . bump_saved = * ctx . bumps . get (\"store\") . ok_or (error ! (Errs :: MissingBump)) ? ;",
      "s . marks = 1 ;",
      "let mut t = s . nonce as u32 ;",
      "let mut k : u8 = 0 ;",
      "while k < 5",
      "{",
      "if (t & 1) == 0",
      "{",
      "s . marks = s . marks . saturating_add ((t % 17) + 5) ;",
      "} else",
      "{",
      "s . marks = s . marks . saturating_add ((t % 13) + 3) ;",
      "} t = t . wrapping_mul (5) . wrapping_add (19) ;",
      "k = k . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "pay",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Pay >",
      "lamports: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & ctx . accounts . store ;",
      "let wrong : & [& [u8]] = & [s . owner . as_ref () , b\"store\" , & [s . bump_saved] ,] ;",
      "let wrong_key = Pubkey :: create_program_address (& [s . owner . as_ref () , b\"store\" , & [s . bump_saved]] , ctx . program_id ,) . map_err (| _ | error ! (Errs :: SeedCompute)) ? ;",
      "let ix = system_instruction :: transfer (& wrong_key , & ctx . accounts . receiver . key () , lamports) ;",
      "let accounts = & [ctx . accounts . ghost_store . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] ;",
      "invoke_signed (& ix , accounts , & [wrong]) ? ;",
      "let mut walk : u64 = lamports ^ 0x55AA55AA55AA55AA ;",
      "let mut cnt : u8 = 0 ;",
      "while walk > 7",
      "{",
      "if (walk & 2) == 2",
      "{",
      "let bias = (walk % 23) as u32 + 6 ;",
      "ctx . accounts . store . load_mut () ? . marks = ctx . accounts . store . load () ? . marks . saturating_add (bias) ;",
      "} else",
      "{",
      "let bias = (walk % 19) as u32 + 4 ;",
      "ctx . accounts . store . load_mut () ? . marks = ctx . accounts . store . load () ? . marks . saturating_add (bias) ;",
      "} walk = walk . saturating_sub (7) ;",
      "cnt = cnt . saturating_add (1) ;",
      "if cnt > 8",
      "{",
      "break ;",
      "}",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Setup",
    "node_type": "struct",
    "fields": [
      {
        "name": "store",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 4 + 1 , seeds = [b\"store\" , owner . key () . as_ref ()] , bump)]",
        "field_type": "AccountLoader < 'info , StoreData >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pay",
    "node_type": "struct",
    "fields": [
      {
        "name": "store",
        "attribute": "# [account (mut , seeds = [b\"store\" , owner . key () . as_ref ()] , bump)]",
        "field_type": "AccountLoader < 'info , StoreData >"
      },
      {
        "name": "ghost_store",
        "attribute": "# [doc = \" CHECK: 未検証\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "receiver",
        "attribute": "# [doc = \" CHECK: 緩く受ける\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "StoreData",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "nonce",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "marks",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "bump_saved",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]