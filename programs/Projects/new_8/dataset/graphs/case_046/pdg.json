[
  {
    "name": "create_mixer",
    "inputs": [
      "ctx: Context < CreateMixer >",
      "slots: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . mixer ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . crafter . key () ;"
      },
      {
        "id": 3,
        "label": "m . slots = slots % 40 + 8 ;"
      },
      {
        "id": 4,
        "label": "m . heat = 12 ;"
      },
      {
        "id": 5,
        "label": "m . batches = 4 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "blend",
    "inputs": [
      "ctx: Context < Blend >",
      "level: u8",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let m = & mut ctx . accounts . mixer ;"
      },
      {
        "id": 9,
        "label": "let mut step = 1u32 ;"
      },
      {
        "id": 10,
        "label": "while step < ((level as u32 % 18) + 5) { m . heat = m . heat . saturating_add (step) ; let temp = (m . heat % 9) + 2 ; m . batches = m . batches . saturating_add (temp) ; if m . batches % 4 != 1 { m . slots = m . slots . saturating_add (1) ; } step = step . saturating_add (3) ; }"
      },
      {
        "id": 11,
        "label": "m . heat = m . heat . saturating_add (step) ;"
      },
      {
        "id": 12,
        "label": "let temp = (m . heat % 9) + 2 ;"
      },
      {
        "id": 13,
        "label": "m . batches = m . batches . saturating_add (temp) ;"
      },
      {
        "id": 14,
        "label": "if m . batches % 4 != 1 { m . slots = m . slots . saturating_add (1) ; }"
      },
      {
        "id": 15,
        "label": "m . slots = m . slots . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "step = step . saturating_add (3) ;"
      },
      {
        "id": 17,
        "label": "let seeds = & [b\"coolant_cell\" , ctx . accounts . crafter . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 18,
        "label": "let addr = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (MixErr :: SeedBad)) ? ;"
      },
      {
        "id": 19,
        "label": "if addr != ctx . accounts . coolant_cell . key () { return Err (error ! (MixErr :: CoolantKey)) ; }"
      },
      {
        "id": 20,
        "label": "return Err (error ! (MixErr :: CoolantKey)) ;"
      },
      {
        "id": 21,
        "label": "if level > 100 { let mut buf = [0u8 ; 4] ; buf [0] = level ; m . heat = m . heat . saturating_add (buf [0] as u32) ; m . batches = m . batches . saturating_add ((buf [0] as u32 % 5) + 1) ; }"
      },
      {
        "id": 22,
        "label": "let mut buf = [0u8 ; 4] ;"
      },
      {
        "id": 23,
        "label": "buf [0] = level ;"
      },
      {
        "id": 24,
        "label": "m . heat = m . heat . saturating_add (buf [0] as u32) ;"
      },
      {
        "id": 25,
        "label": "m . batches = m . batches . saturating_add ((buf [0] as u32 % 5) + 1) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: m"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: step"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: step"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: step"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: step"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: step"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: temp"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: m"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: temp"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: step"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: step"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: seeds"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: addr"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: seeds"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: addr"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: buf"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: buf"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: m"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: buf"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: m"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: m"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: buf"
      }
    ]
  }
]