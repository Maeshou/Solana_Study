[
  {
    "name": "mint_badge",
    "inputs": [
      "ctx: Context < MintBadge >",
      "title: Vec < u8 >",
      "tier: u8",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut t = title . clone () ;"
      },
      {
        "id": 2,
        "label": "if t . len () > 24 { t . truncate (24) ; }"
      },
      {
        "id": 3,
        "label": "t . truncate (24) ;"
      },
      {
        "id": 4,
        "label": "let mut weight : u32 = 7 ;"
      },
      {
        "id": 5,
        "label": "for (i , b) in t . iter () . enumerate () { weight = weight . wrapping_mul (131) . wrapping_add ((* b as u32) . wrapping_add (i as u32 + 11)) ; }"
      },
      {
        "id": 6,
        "label": "weight = weight . wrapping_mul (131) . wrapping_add ((* b as u32) . wrapping_add (i as u32 + 11)) ;"
      },
      {
        "id": 7,
        "label": "let seeds = [& ctx . accounts . member . key () . to_bytes () [..] , & t [..]] ;"
      },
      {
        "id": 8,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (GErr :: Cell)) ? ;"
      },
      {
        "id": 9,
        "label": "if addr != ctx . accounts . badge_cell . key () { return Err (error ! (GErr :: Cell)) ; }"
      },
      {
        "id": 10,
        "label": "return Err (error ! (GErr :: Cell)) ;"
      },
      {
        "id": 11,
        "label": "let b = & mut ctx . accounts . badge ;"
      },
      {
        "id": 12,
        "label": "b . member = ctx . accounts . member . key () ;"
      },
      {
        "id": 13,
        "label": "b . title = t ;"
      },
      {
        "id": 14,
        "label": "b . tier = if tier > 9 { 9 } else { tier } ;"
      },
      {
        "id": 15,
        "label": "9"
      },
      {
        "id": 16,
        "label": "tier"
      },
      {
        "id": 17,
        "label": "b . value = b . value . wrapping_add (weight) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: addr"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: seeds"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: addr"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: b"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "rename_badge",
    "inputs": [
      "ctx: Context < RenameBadge >",
      "new_title: Vec < u8 >",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let mut t = new_title . clone () ;"
      },
      {
        "id": 21,
        "label": "if t . len () < 3 { t . extend_from_slice (b\"++\") ; }"
      },
      {
        "id": 22,
        "label": "t . extend_from_slice (b\"++\") ;"
      },
      {
        "id": 23,
        "label": "if t . len () > 20 { t . truncate (20) ; }"
      },
      {
        "id": 24,
        "label": "t . truncate (20) ;"
      },
      {
        "id": 25,
        "label": "let seeds = [& ctx . accounts . member . key () . to_bytes () [..] , & t [..]] ;"
      },
      {
        "id": 26,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (GErr :: Cell)) ? ;"
      },
      {
        "id": 27,
        "label": "if addr != ctx . accounts . badge_cell . key () { return Err (error ! (GErr :: Cell)) ; }"
      },
      {
        "id": 28,
        "label": "return Err (error ! (GErr :: Cell)) ;"
      },
      {
        "id": 29,
        "label": "let b = & mut ctx . accounts . badge ;"
      },
      {
        "id": 30,
        "label": "b . title = t ;"
      },
      {
        "id": 31,
        "label": "b . value = b . value . wrapping_add (97) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: t"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: t"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: seeds"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: t"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: addr"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: seeds"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: addr"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: b"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: t"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: b"
      }
    ]
  }
]