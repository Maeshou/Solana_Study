[
  {
    "name": "mint_badge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MintBadge >",
      "title: Vec < u8 >",
      "tier: u8",
      "bump: u8"
    ],
    "attributes": [],
    "body": [
      "let mut t = title . clone () ;",
      "if t . len () > 24",
      "{",
      "t . truncate (24) ;",
      "}",
      "let mut weight : u32 = 7 ;",
      "for (i , b) in t . iter () . enumerate ()",
      "{",
      "weight = weight . wrapping_mul (131) . wrapping_add ((* b as u32) . wrapping_add (i as u32 + 11)) ;",
      "}",
      "let seeds = [& ctx . accounts . member . key () . to_bytes () [..] , & t [..]] ;",
      "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (GErr :: Cell)) ? ;",
      "if addr != ctx . accounts . badge_cell . key ()",
      "{",
      "return Err (error ! (GErr :: Cell)) ;",
      "}",
      "let b = & mut ctx . accounts . badge ;",
      "b . member = ctx . accounts . member . key () ;",
      "b . title = t ;",
      "b . tier = if tier > 9 { 9 } else { tier } ;",
      "b . value = b . value . wrapping_add (weight) ;",
      "Ok (())"
    ]
  },
  {
    "name": "rename_badge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RenameBadge >",
      "new_title: Vec < u8 >",
      "bump: u8"
    ],
    "attributes": [],
    "body": [
      "let mut t = new_title . clone () ;",
      "if t . len () < 3",
      "{",
      "t . extend_from_slice (b\"++\") ;",
      "}",
      "if t . len () > 20",
      "{",
      "t . truncate (20) ;",
      "}",
      "let seeds = [& ctx . accounts . member . key () . to_bytes () [..] , & t [..]] ;",
      "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (GErr :: Cell)) ? ;",
      "if addr != ctx . accounts . badge_cell . key ()",
      "{",
      "return Err (error ! (GErr :: Cell)) ;",
      "}",
      "let b = & mut ctx . accounts . badge ;",
      "b . title = t ;",
      "b . value = b . value . wrapping_add (97) ;",
      "Ok (())"
    ]
  },
  {
    "name": "MintBadge",
    "node_type": "struct",
    "fields": [
      {
        "name": "badge",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Badge >"
      },
      {
        "name": "badge_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "member",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "RenameBadge",
    "node_type": "struct",
    "fields": [
      {
        "name": "badge",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Badge >"
      },
      {
        "name": "badge_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "member",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Badge",
    "node_type": "struct",
    "fields": [
      {
        "name": "member",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "title",
        "attribute": null,
        "field_type": "Vec < u8 >"
      },
      {
        "name": "tier",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "value",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]