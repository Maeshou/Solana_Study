[
  {
    "name": "init_ledger",
    "inputs": [
      "ctx: Context < InitLedger >",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let rl = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 2,
        "label": "rl . owner = ctx . accounts . captain . key () ;"
      },
      {
        "id": 3,
        "label": "rl . bump_hold = * ctx . bumps . get (\"ledger\") . ok_or (error ! (ERL :: NoBump)) ? ;"
      },
      {
        "id": 4,
        "label": "rl . score = seed . rotate_left (1) . wrapping_add (71) ;"
      },
      {
        "id": 5,
        "label": "rl . turns = 2 ;"
      },
      {
        "id": 6,
        "label": "if rl . score > 200 { let mut a = rl . score . rotate_right (1) ; for j in 1 .. 4 { let q = (a ^ (j as u64 * 27)) . rotate_left (1) ; a = a . wrapping_add (q) ; rl . score = rl . score . wrapping_add (q) . wrapping_mul (2) . wrapping_add (11 + j as u64) ; rl . turns = rl . turns . saturating_add (((rl . score % 29) as u32) + 4) ; } } else { let mut t = 1u8 ; let mut b = rl . score . rotate_left (1) ; while t < 4 { let z = (b ^ (t as u64 * 15)) . rotate_right (1) ; b = b . wrapping_add (z) ; rl . score = rl . score . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + t as u64) ; rl . turns = rl . turns . saturating_add (((rl . score % 27) as u32) + 5) ; t = t . saturating_add (1) ; } }"
      },
      {
        "id": 7,
        "label": "let mut a = rl . score . rotate_right (1) ;"
      },
      {
        "id": 8,
        "label": "for j in 1 .. 4 { let q = (a ^ (j as u64 * 27)) . rotate_left (1) ; a = a . wrapping_add (q) ; rl . score = rl . score . wrapping_add (q) . wrapping_mul (2) . wrapping_add (11 + j as u64) ; rl . turns = rl . turns . saturating_add (((rl . score % 29) as u32) + 4) ; }"
      },
      {
        "id": 9,
        "label": "let q = (a ^ (j as u64 * 27)) . rotate_left (1) ;"
      },
      {
        "id": 10,
        "label": "a = a . wrapping_add (q) ;"
      },
      {
        "id": 11,
        "label": "rl . score = rl . score . wrapping_add (q) . wrapping_mul (2) . wrapping_add (11 + j as u64) ;"
      },
      {
        "id": 12,
        "label": "rl . turns = rl . turns . saturating_add (((rl . score % 29) as u32) + 4) ;"
      },
      {
        "id": 13,
        "label": "let mut t = 1u8 ;"
      },
      {
        "id": 14,
        "label": "let mut b = rl . score . rotate_left (1) ;"
      },
      {
        "id": 15,
        "label": "while t < 4 { let z = (b ^ (t as u64 * 15)) . rotate_right (1) ; b = b . wrapping_add (z) ; rl . score = rl . score . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + t as u64) ; rl . turns = rl . turns . saturating_add (((rl . score % 27) as u32) + 5) ; t = t . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "let z = (b ^ (t as u64 * 15)) . rotate_right (1) ;"
      },
      {
        "id": 17,
        "label": "b = b . wrapping_add (z) ;"
      },
      {
        "id": 18,
        "label": "rl . score = rl . score . wrapping_add (z) . wrapping_mul (3) . wrapping_add (9 + t as u64) ;"
      },
      {
        "id": 19,
        "label": "rl . turns = rl . turns . saturating_add (((rl . score % 27) as u32) + 5) ;"
      },
      {
        "id": 20,
        "label": "t = t . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: rl"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: rl"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: a"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: rl"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: rl"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: q"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: rl"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: rl"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: t"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: rl"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: rl"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: rl"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: t"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: z"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: b"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: z"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: rl"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: z"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: rl"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: rl"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "pay_raid_share",
    "inputs": [
      "ctx: Context < PayRaidShare >",
      "raid_key: u64",
      "bump_feed: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let rl = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 24,
        "label": "for p in 1 .. 3 { rl . score = rl . score . wrapping_add ((rl . turns as u64) . wrapping_mul (p * 13)) . rotate_left (1) ; rl . turns = rl . turns . saturating_add (((rl . score % 21) as u32) + 3) ; }"
      },
      {
        "id": 25,
        "label": "rl . score = rl . score . wrapping_add ((rl . turns as u64) . wrapping_mul (p * 13)) . rotate_left (1) ;"
      },
      {
        "id": 26,
        "label": "rl . turns = rl . turns . saturating_add (((rl . score % 21) as u32) + 3) ;"
      },
      {
        "id": 27,
        "label": "let mut s = 1u8 ;"
      },
      {
        "id": 28,
        "label": "while s < 3 { let add = (rl . score ^ (s as u64 * 19)) . rotate_left (1) ; rl . score = rl . score . wrapping_add (add) . wrapping_mul (2) . wrapping_add (17 + s as u64) ; rl . turns = rl . turns . saturating_add (((rl . score % 25) as u32) + 4) ; s = s . saturating_add (1) ; }"
      },
      {
        "id": 29,
        "label": "let add = (rl . score ^ (s as u64 * 19)) . rotate_left (1) ;"
      },
      {
        "id": 30,
        "label": "rl . score = rl . score . wrapping_add (add) . wrapping_mul (2) . wrapping_add (17 + s as u64) ;"
      },
      {
        "id": 31,
        "label": "rl . turns = rl . turns . saturating_add (((rl . score % 25) as u32) + 4) ;"
      },
      {
        "id": 32,
        "label": "s = s . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "let seeds = & [b\"raid_share\" . as_ref () , rl . owner . as_ref () , & raid_key . to_le_bytes () , core :: slice :: from_ref (& bump_feed) ,] ;"
      },
      {
        "id": 34,
        "label": "let purse = Pubkey :: create_program_address (& [b\"raid_share\" , rl . owner . as_ref () , & raid_key . to_le_bytes () , & [bump_feed]] , ctx . program_id ,) . map_err (| _ | error ! (ERL :: SeedCompute)) ? ;"
      },
      {
        "id": 35,
        "label": "let ix = system_instruction :: transfer (& purse , & ctx . accounts . raider . key () , lamports) ;"
      },
      {
        "id": 36,
        "label": "invoke_signed (& ix , & [ctx . accounts . share_hint . to_account_info () , ctx . accounts . raider . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 23,
        "to": 23,
        "label": "def: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: s"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: add"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: rl"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: add"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: rl"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: rl"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: seeds"
      },
      {
        "from": 23,
        "to": 33,
        "label": "data_dep: rl"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: purse"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: rl"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: ix"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: purse"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: ix"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: seeds"
      }
    ]
  }
]