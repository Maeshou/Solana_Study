[
  {
    "name": "post_message",
    "inputs": [
      "ctx: Context < PostMessage >",
      "title: String",
      "content: Vec < u8 >",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut t = title . as_bytes () . to_vec () ;"
      },
      {
        "id": 2,
        "label": "if t . len () < 3 { t . extend_from_slice (b\"---\") ; }"
      },
      {
        "id": 3,
        "label": "t . extend_from_slice (b\"---\") ;"
      },
      {
        "id": 4,
        "label": "if t . len () > 48 { t . truncate (48) ; }"
      },
      {
        "id": 5,
        "label": "t . truncate (48) ;"
      },
      {
        "id": 6,
        "label": "let mut checksum : u32 = 0 ;"
      },
      {
        "id": 7,
        "label": "for b in content . iter () { checksum = checksum . wrapping_mul (16777619) ^ (* b as u32) ; }"
      },
      {
        "id": 8,
        "label": "checksum = checksum . wrapping_mul (16777619) ^ (* b as u32) ;"
      },
      {
        "id": 9,
        "label": "let seeds = [& ctx . accounts . guild . key () . to_bytes () [..] , & t [..]] ;"
      },
      {
        "id": 10,
        "label": "let addr = Pubkey :: create_program_address (& seeds , & ctx . program_id , & [bump]) . map_err (| _ | error ! (BoardError :: Addr)) ? ;"
      },
      {
        "id": 11,
        "label": "if addr != ctx . accounts . board_cell . key () { return Err (error ! (BoardError :: Addr)) ; }"
      },
      {
        "id": 12,
        "label": "return Err (error ! (BoardError :: Addr)) ;"
      },
      {
        "id": 13,
        "label": "let mut credit = ctx . accounts . board . credit ;"
      },
      {
        "id": 14,
        "label": "if content . len () > 256 { credit = credit . saturating_add (2) ; }"
      },
      {
        "id": 15,
        "label": "credit = credit . saturating_add (2) ;"
      },
      {
        "id": 16,
        "label": "if t . first () . copied () . unwrap_or (b'?') != b'[' { credit = credit . saturating_add (1) ; }"
      },
      {
        "id": 17,
        "label": "credit = credit . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 19,
        "label": "board . guild = ctx . accounts . guild . key () ;"
      },
      {
        "id": 20,
        "label": "board . title = t ;"
      },
      {
        "id": 21,
        "label": "board . digest = checksum ;"
      },
      {
        "id": 22,
        "label": "board . credit = credit ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: seeds"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: addr"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: seeds"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: addr"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: credit"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: credit"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: credit"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: credit"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: board"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: board"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: board"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: board"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: credit"
      }
    ]
  }
]