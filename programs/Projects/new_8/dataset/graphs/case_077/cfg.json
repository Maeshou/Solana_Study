[
  {
    "name": "init_ledger",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 2,
        "label": "l . owner = ctx . accounts . captain . key () ;"
      },
      {
        "id": 3,
        "label": "l . bump_main = * ctx . bumps . get (\"ledger\") . ok_or (error ! (EE :: MissingBump)) ? ;"
      },
      {
        "id": 4,
        "label": "l . weight = seed . rotate_right (2) . wrapping_add (433) ;"
      },
      {
        "id": 5,
        "label": "l . tally = 3 ;"
      },
      {
        "id": 6,
        "label": "let path = [5u64 , 8 , 12 , 18 , 27] ;"
      },
      {
        "id": 7,
        "label": "let mut i = 1u8 ;"
      },
      {
        "id": 8,
        "label": "Loop Start"
      },
      {
        "id": 9,
        "label": "l . weight = l . weight . wrapping_add (base . rotate_left ((i as u32 % 4) + 1)) . wrapping_mul (2) ;"
      },
      {
        "id": 10,
        "label": "l . tally = l . tally . saturating_add (((l . weight % 21) as u32) + 4) ;"
      },
      {
        "id": 11,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "let mut inner = 1u8 ;"
      },
      {
        "id": 13,
        "label": "Loop Start"
      },
      {
        "id": 14,
        "label": "l . weight = l . weight . rotate_right (inner as u32) . wrapping_add (31 + inner as u64) ;"
      },
      {
        "id": 15,
        "label": "l . tally = l . tally . saturating_add (((l . weight % 17) as u32) + 3) ;"
      },
      {
        "id": 16,
        "label": "inner = inner . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "Loop End"
      },
      {
        "id": 18,
        "label": "Loop End"
      },
      {
        "id": 19,
        "label": "if statement"
      },
      {
        "id": 20,
        "label": "predicate"
      },
      {
        "id": 21,
        "label": "l . tally > 7"
      },
      {
        "id": 22,
        "label": "True body"
      },
      {
        "id": 23,
        "label": "l . weight = l . weight . wrapping_mul (3) . wrapping_add (61) . rotate_left ((l . tally % 5) + 1) ;"
      },
      {
        "id": 24,
        "label": "l . tally = l . tally . saturating_add (7) ;"
      },
      {
        "id": 25,
        "label": "False body"
      },
      {
        "id": 26,
        "label": "l . weight = l . weight . rotate_right (1) . wrapping_add (43) ;"
      },
      {
        "id": 27,
        "label": "l . tally = l . tally . saturating_add (5) ;"
      },
      {
        "id": 28,
        "label": "merge"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 13,
        "to": 17,
        "label": "while"
      },
      {
        "from": 8,
        "to": 18,
        "label": "for"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "predicate"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "true"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 19,
        "to": 25,
        "label": "false"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 24,
        "to": 28,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      }
    ]
  },
  {
    "name": "pay_from_page",
    "nodes": [
      {
        "id": 30,
        "label": "Entry"
      },
      {
        "id": 31,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 32,
        "label": "if statement"
      },
      {
        "id": 33,
        "label": "predicate"
      },
      {
        "id": 34,
        "label": "lamports > 540"
      },
      {
        "id": 35,
        "label": "True body"
      },
      {
        "id": 36,
        "label": "l . weight = l . weight . rotate_left (2) . wrapping_add (73) ;"
      },
      {
        "id": 37,
        "label": "l . tally = l . tally . saturating_add (8) ;"
      },
      {
        "id": 38,
        "label": "False body"
      },
      {
        "id": 39,
        "label": "l . weight = l . weight . wrapping_add (25) . rotate_right (2) . wrapping_mul (2) ;"
      },
      {
        "id": 40,
        "label": "l . tally = l . tally . saturating_add (4) ;"
      },
      {
        "id": 41,
        "label": "merge"
      },
      {
        "id": 42,
        "label": "Loop Start"
      },
      {
        "id": 43,
        "label": "let inc = (page_id ^ (k as u64 * 13)) . rotate_left (1) ;"
      },
      {
        "id": 44,
        "label": "l . weight = l . weight . wrapping_add (inc) . wrapping_mul (2) . wrapping_add (17) ;"
      },
      {
        "id": 45,
        "label": "l . tally = l . tally . saturating_add (((l . weight % 33) as u32) + 3) ;"
      },
      {
        "id": 46,
        "label": "Loop End"
      },
      {
        "id": 47,
        "label": "if statement"
      },
      {
        "id": 48,
        "label": "predicate"
      },
      {
        "id": 49,
        "label": "l . tally & 1 == 1"
      },
      {
        "id": 50,
        "label": "True body"
      },
      {
        "id": 51,
        "label": "l . weight = l . weight . rotate_left (1) . wrapping_add (29) ;"
      },
      {
        "id": 52,
        "label": "l . tally = l . tally . saturating_add (3) ;"
      },
      {
        "id": 53,
        "label": "False body"
      },
      {
        "id": 54,
        "label": "l . weight = l . weight . rotate_right (2) . wrapping_add (19) ;"
      },
      {
        "id": 55,
        "label": "l . tally = l . tally . saturating_add (2) ;"
      },
      {
        "id": 56,
        "label": "merge"
      },
      {
        "id": 57,
        "label": "let seeds = & [b\"page_cell\" . as_ref () , l . owner . as_ref () , & page_id . to_le_bytes () , core :: slice :: from_ref (& user_bump) ,] ;"
      },
      {
        "id": 58,
        "label": "let cell = Pubkey :: create_program_address (& [b\"page_cell\" , l . owner . as_ref () , & page_id . to_le_bytes () , & [user_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EE :: SeedCompute)) ? ;"
      },
      {
        "id": 59,
        "label": "let ix = system_instruction :: transfer (& cell , & ctx . accounts . reward_sink . key () , lamports) ;"
      },
      {
        "id": 60,
        "label": "invoke_signed (& ix , & [ctx . accounts . page_cell_hint . to_account_info () , ctx . accounts . reward_sink . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 61,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "predicate"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 32,
        "to": 35,
        "label": "true"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 32,
        "to": 38,
        "label": "false"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 37,
        "to": 41,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 42,
        "to": 46,
        "label": "for"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "predicate"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 47,
        "to": 50,
        "label": "true"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 47,
        "to": 53,
        "label": "false"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 52,
        "to": 56,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 58,
        "to": 59,
        "label": "next"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      }
    ]
  }
]