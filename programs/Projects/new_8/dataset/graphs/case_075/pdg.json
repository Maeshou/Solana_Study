[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "seed_factor: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . owner = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "g . main_bump = * ctx . bumps . get (\"guild\") . ok_or (error ! (EE :: MissingBump)) ? ;"
      },
      {
        "id": 4,
        "label": "g . power = seed_factor . rotate_left (2) . wrapping_add (507) ;"
      },
      {
        "id": 5,
        "label": "g . turns = 2 ;"
      },
      {
        "id": 6,
        "label": "let mut t = 1u8 ;"
      },
      {
        "id": 7,
        "label": "while t < 4 { g . power = g . power . wrapping_add ((t as u64 + 23) * 11) . rotate_right (1) ; g . turns = g . turns . saturating_add (((g . power % 19) as u32) + 4) ; g . power = g . power . wrapping_mul (2) . wrapping_add (37) ; t = t . saturating_add (1) ; }"
      },
      {
        "id": 8,
        "label": "g . power = g . power . wrapping_add ((t as u64 + 23) * 11) . rotate_right (1) ;"
      },
      {
        "id": 9,
        "label": "g . turns = g . turns . saturating_add (((g . power % 19) as u32) + 4) ;"
      },
      {
        "id": 10,
        "label": "g . power = g . power . wrapping_mul (2) . wrapping_add (37) ;"
      },
      {
        "id": 11,
        "label": "t = t . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "for k in 0 .. 3 { g . power = g . power . rotate_left (1) . wrapping_add (17 + k as u64 * 9) ; g . turns = g . turns . saturating_add (((g . power % 29) as u32) + 3) ; g . power = g . power . wrapping_add (41) ; }"
      },
      {
        "id": 13,
        "label": "g . power = g . power . rotate_left (1) . wrapping_add (17 + k as u64 * 9) ;"
      },
      {
        "id": 14,
        "label": "g . turns = g . turns . saturating_add (((g . power % 29) as u32) + 3) ;"
      },
      {
        "id": 15,
        "label": "g . power = g . power . wrapping_add (41) ;"
      },
      {
        "id": 16,
        "label": "if g . turns > 7 { g . power = g . power . rotate_left (2) . wrapping_add (59) ; g . turns = g . turns . saturating_add (6) ; g . power = g . power . wrapping_mul (3) . wrapping_add (101) ; } else { g . power = g . power . rotate_right (1) . wrapping_add (31) ; g . turns = g . turns . saturating_add (5) ; g . power = g . power . wrapping_mul (2) . wrapping_add (23) ; }"
      },
      {
        "id": 17,
        "label": "g . power = g . power . rotate_left (2) . wrapping_add (59) ;"
      },
      {
        "id": 18,
        "label": "g . turns = g . turns . saturating_add (6) ;"
      },
      {
        "id": 19,
        "label": "g . power = g . power . wrapping_mul (3) . wrapping_add (101) ;"
      },
      {
        "id": 20,
        "label": "g . power = g . power . rotate_right (1) . wrapping_add (31) ;"
      },
      {
        "id": 21,
        "label": "g . turns = g . turns . saturating_add (5) ;"
      },
      {
        "id": 22,
        "label": "g . power = g . power . wrapping_mul (2) . wrapping_add (23) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: t"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 22,
        "label": "data_dep: g"
      }
    ]
  },
  {
    "name": "pay_from_cell",
    "inputs": [
      "ctx: Context < PayFromCell >",
      "member_slot: u64",
      "user_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 26,
        "label": "if lamports > 700 { g . power = g . power . wrapping_mul (2) . wrapping_add (77) ; g . turns = g . turns . saturating_add (8) ; g . power = g . power . rotate_left (2) . wrapping_add (29) ; } else { g . power = g . power . wrapping_add (19) . rotate_right (1) ; g . turns = g . turns . saturating_add (4) ; g . power = g . power . wrapping_mul (3) . wrapping_add (13) ; }"
      },
      {
        "id": 27,
        "label": "g . power = g . power . wrapping_mul (2) . wrapping_add (77) ;"
      },
      {
        "id": 28,
        "label": "g . turns = g . turns . saturating_add (8) ;"
      },
      {
        "id": 29,
        "label": "g . power = g . power . rotate_left (2) . wrapping_add (29) ;"
      },
      {
        "id": 30,
        "label": "g . power = g . power . wrapping_add (19) . rotate_right (1) ;"
      },
      {
        "id": 31,
        "label": "g . turns = g . turns . saturating_add (4) ;"
      },
      {
        "id": 32,
        "label": "g . power = g . power . wrapping_mul (3) . wrapping_add (13) ;"
      },
      {
        "id": 33,
        "label": "let mut i = 1u8 ;"
      },
      {
        "id": 34,
        "label": "while i < 3 { g . power = g . power . rotate_left (i as u32) . wrapping_add (21 + i as u64) ; g . turns = g . turns . saturating_add (((g . power % 31) as u32) + 4) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 35,
        "label": "g . power = g . power . rotate_left (i as u32) . wrapping_add (21 + i as u64) ;"
      },
      {
        "id": 36,
        "label": "g . turns = g . turns . saturating_add (((g . power % 31) as u32) + 4) ;"
      },
      {
        "id": 37,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "for s in 0 .. 4 { g . power = g . power . wrapping_add ((member_slot % 53) + 9 + s as u64) ; g . turns = g . turns . saturating_add (((lamports % 37) as u32) + 2) ; g . power = g . power . rotate_right (((g . turns % 3) + 1) as u32) . wrapping_add (25) ; }"
      },
      {
        "id": 39,
        "label": "g . power = g . power . wrapping_add ((member_slot % 53) + 9 + s as u64) ;"
      },
      {
        "id": 40,
        "label": "g . turns = g . turns . saturating_add (((lamports % 37) as u32) + 2) ;"
      },
      {
        "id": 41,
        "label": "g . power = g . power . rotate_right (((g . turns % 3) + 1) as u32) . wrapping_add (25) ;"
      },
      {
        "id": 42,
        "label": "let seeds = & [b\"treasury_cell\" . as_ref () , g . owner . as_ref () , & member_slot . to_le_bytes () , core :: slice :: from_ref (& user_bump) ,] ;"
      },
      {
        "id": 43,
        "label": "let cell = Pubkey :: create_program_address (& [b\"treasury_cell\" , g . owner . as_ref () , & member_slot . to_le_bytes () , & [user_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EE :: SeedCompute)) ? ;"
      },
      {
        "id": 44,
        "label": "let ix = system_instruction :: transfer (& cell , & ctx . accounts . receiver . key () , lamports) ;"
      },
      {
        "id": 45,
        "label": "invoke_signed (& ix , & [ctx . accounts . treasury_cell_hint . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 46,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: i"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: i"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: i"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 35,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 35,
        "label": "data_dep: g"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: i"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: g"
      },
      {
        "from": 33,
        "to": 37,
        "label": "data_dep: i"
      },
      {
        "from": 33,
        "to": 37,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 39,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 39,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 40,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 40,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 41,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 41,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 41,
        "label": "data_dep: g"
      },
      {
        "from": 42,
        "to": 42,
        "label": "def: seeds"
      },
      {
        "from": 25,
        "to": 42,
        "label": "data_dep: g"
      },
      {
        "from": 43,
        "to": 43,
        "label": "def: cell"
      },
      {
        "from": 25,
        "to": 43,
        "label": "data_dep: g"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: ix"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: cell"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: ix"
      },
      {
        "from": 42,
        "to": 45,
        "label": "data_dep: seeds"
      }
    ]
  }
]