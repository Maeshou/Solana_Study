[
  {
    "name": "init_station",
    "inputs": [
      "ctx: Context < InitStation >",
      "salt: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . artisan . key () ;"
      },
      {
        "id": 3,
        "label": "s . bump_main = * ctx . bumps . get (\"station\") . ok_or (error ! (EE :: MissingBump)) ? ;"
      },
      {
        "id": 4,
        "label": "s . charge = salt . rotate_left (1) . wrapping_add (615) ;"
      },
      {
        "id": 5,
        "label": "s . turn = 3 ;"
      },
      {
        "id": 6,
        "label": "let mats = [2u64 , 3 , 5 , 7 , 11 , 13] ;"
      },
      {
        "id": 7,
        "label": "for (i , m) in mats . iter () . enumerate () { s . charge = s . charge . wrapping_add (m . rotate_left (((i as u32) % 3) + 1)) . wrapping_mul (2) ; s . turn = s . turn . saturating_add (((s . charge % 24) as u32) + 3) ; let mut spin = 1u8 ; while spin < 3 { s . charge = s . charge . rotate_right (spin as u32) . wrapping_add (23 + spin as u64) ; s . turn = s . turn . saturating_add (((s . charge % 17) as u32) + 2) ; spin = spin . saturating_add (1) ; } }"
      },
      {
        "id": 8,
        "label": "s . charge = s . charge . wrapping_add (m . rotate_left (((i as u32) % 3) + 1)) . wrapping_mul (2) ;"
      },
      {
        "id": 9,
        "label": "s . turn = s . turn . saturating_add (((s . charge % 24) as u32) + 3) ;"
      },
      {
        "id": 10,
        "label": "let mut spin = 1u8 ;"
      },
      {
        "id": 11,
        "label": "while spin < 3 { s . charge = s . charge . rotate_right (spin as u32) . wrapping_add (23 + spin as u64) ; s . turn = s . turn . saturating_add (((s . charge % 17) as u32) + 2) ; spin = spin . saturating_add (1) ; }"
      },
      {
        "id": 12,
        "label": "s . charge = s . charge . rotate_right (spin as u32) . wrapping_add (23 + spin as u64) ;"
      },
      {
        "id": 13,
        "label": "s . turn = s . turn . saturating_add (((s . charge % 17) as u32) + 2) ;"
      },
      {
        "id": 14,
        "label": "spin = spin . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "if s . charge > 800 { s . charge = s . charge . rotate_left (2) . wrapping_add (49) ; s . turn = s . turn . saturating_add (6) ; } else { s . charge = s . charge . rotate_right (1) . wrapping_add (37) ; s . turn = s . turn . saturating_add (4) ; }"
      },
      {
        "id": 16,
        "label": "s . charge = s . charge . rotate_left (2) . wrapping_add (49) ;"
      },
      {
        "id": 17,
        "label": "s . turn = s . turn . saturating_add (6) ;"
      },
      {
        "id": 18,
        "label": "s . charge = s . charge . rotate_right (1) . wrapping_add (37) ;"
      },
      {
        "id": 19,
        "label": "s . turn = s . turn . saturating_add (4) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: mats"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: mats"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: spin"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: spin"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: spin"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: spin"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: spin"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: spin"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: spin"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: spin"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: spin"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: spin"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "spend_from_queue",
    "inputs": [
      "ctx: Context < SpendFromQueue >",
      "queue_id: u64",
      "user_bump: u8",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let s = & mut ctx . accounts . station ;"
      },
      {
        "id": 23,
        "label": "for shift in 0 .. 4u32 { let mix = (queue_id . rotate_left (shift) ^ s . charge) . rotate_right (((s . turn % 3) + 1) as u32) ; s . charge = s . charge . wrapping_add (mix) . wrapping_mul (2) . wrapping_add (13 + shift as u64) ; s . turn = s . turn . saturating_add (((s . charge % 31) as u32) + 3) ; }"
      },
      {
        "id": 24,
        "label": "let mix = (queue_id . rotate_left (shift) ^ s . charge) . rotate_right (((s . turn % 3) + 1) as u32) ;"
      },
      {
        "id": 25,
        "label": "s . charge = s . charge . wrapping_add (mix) . wrapping_mul (2) . wrapping_add (13 + shift as u64) ;"
      },
      {
        "id": 26,
        "label": "s . turn = s . turn . saturating_add (((s . charge % 31) as u32) + 3) ;"
      },
      {
        "id": 27,
        "label": "if lamports > 520 { s . charge = s . charge . rotate_left (2) . wrapping_add (33) ; s . turn = s . turn . saturating_add (7) ; } else { s . charge = s . charge . rotate_right (2) . wrapping_add (21) ; s . turn = s . turn . saturating_add (5) ; }"
      },
      {
        "id": 28,
        "label": "s . charge = s . charge . rotate_left (2) . wrapping_add (33) ;"
      },
      {
        "id": 29,
        "label": "s . turn = s . turn . saturating_add (7) ;"
      },
      {
        "id": 30,
        "label": "s . charge = s . charge . rotate_right (2) . wrapping_add (21) ;"
      },
      {
        "id": 31,
        "label": "s . turn = s . turn . saturating_add (5) ;"
      },
      {
        "id": 32,
        "label": "if s . turn & 1 == 1 { s . charge = s . charge . wrapping_mul (3) . wrapping_add (27) ; s . turn = s . turn . saturating_add (3) ; } else { s . charge = s . charge . wrapping_add (19) . rotate_left (1) ; s . turn = s . turn . saturating_add (2) ; }"
      },
      {
        "id": 33,
        "label": "s . charge = s . charge . wrapping_mul (3) . wrapping_add (27) ;"
      },
      {
        "id": 34,
        "label": "s . turn = s . turn . saturating_add (3) ;"
      },
      {
        "id": 35,
        "label": "s . charge = s . charge . wrapping_add (19) . rotate_left (1) ;"
      },
      {
        "id": 36,
        "label": "s . turn = s . turn . saturating_add (2) ;"
      },
      {
        "id": 37,
        "label": "let seeds = & [b\"queue_cell\" . as_ref () , s . owner . as_ref () , & queue_id . to_le_bytes () , core :: slice :: from_ref (& user_bump) ,] ;"
      },
      {
        "id": 38,
        "label": "let cell = Pubkey :: create_program_address (& [b\"queue_cell\" , s . owner . as_ref () , & queue_id . to_le_bytes () , & [user_bump]] , ctx . program_id ,) . map_err (| _ | error ! (EE :: SeedCompute)) ? ;"
      },
      {
        "id": 39,
        "label": "let ix = system_instruction :: transfer (& cell , & ctx . accounts . consumer . key () , lamports) ;"
      },
      {
        "id": 40,
        "label": "invoke_signed (& ix , & [ctx . accounts . queue_cell_hint . to_account_info () , ctx . accounts . consumer . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: mix"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: mix"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: seeds"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: cell"
      },
      {
        "from": 22,
        "to": 38,
        "label": "data_dep: s"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: ix"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: cell"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: ix"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: seeds"
      }
    ]
  }
]