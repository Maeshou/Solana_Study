[
  {
    "name": "setup_chain",
    "inputs": [
      "ctx: Context < SetupChain >",
      "length: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let chain = & mut ctx . accounts . chain ;"
      },
      {
        "id": 2,
        "label": "chain . owner = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "chain . length = length % 100 + 10 ;"
      },
      {
        "id": 4,
        "label": "chain . progress = 0 ;"
      },
      {
        "id": 5,
        "label": "chain . bonus = 5 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: chain"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: chain"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: chain"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: chain"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: chain"
      }
    ]
  },
  {
    "name": "advance",
    "inputs": [
      "ctx: Context < Advance >",
      "steps: u32",
      "user_bump: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let chain = & mut ctx . accounts . chain ;"
      },
      {
        "id": 9,
        "label": "let mut index = 1u32 ;"
      },
      {
        "id": 10,
        "label": "while index < (steps % 30 + 5) { chain . progress = chain . progress . saturating_add (index) ; let mut calc = (index * 2) % 7 ; calc = calc . saturating_add (3) ; chain . bonus = chain . bonus . saturating_add (calc) ; let derived_val = chain . progress . saturating_mul (2) / (calc + 1) ; if derived_val % 3 != 0 { chain . bonus = chain . bonus . saturating_add (1) ; } index = index . saturating_add (4) ; }"
      },
      {
        "id": 11,
        "label": "chain . progress = chain . progress . saturating_add (index) ;"
      },
      {
        "id": 12,
        "label": "let mut calc = (index * 2) % 7 ;"
      },
      {
        "id": 13,
        "label": "calc = calc . saturating_add (3) ;"
      },
      {
        "id": 14,
        "label": "chain . bonus = chain . bonus . saturating_add (calc) ;"
      },
      {
        "id": 15,
        "label": "let derived_val = chain . progress . saturating_mul (2) / (calc + 1) ;"
      },
      {
        "id": 16,
        "label": "if derived_val % 3 != 0 { chain . bonus = chain . bonus . saturating_add (1) ; }"
      },
      {
        "id": 17,
        "label": "chain . bonus = chain . bonus . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "index = index . saturating_add (4) ;"
      },
      {
        "id": 19,
        "label": "let seeds = & [b\"reward_pool\" , ctx . accounts . manager . key . as_ref () , & [user_bump]] ;"
      },
      {
        "id": 20,
        "label": "let manual = Pubkey :: create_program_address (seeds , ctx . program_id) . map_err (| _ | error ! (ChainErr :: SeedProblem)) ? ;"
      },
      {
        "id": 21,
        "label": "if manual != ctx . accounts . reward_pool . key () { return Err (error ! (ChainErr :: PoolMismatch)) ; }"
      },
      {
        "id": 22,
        "label": "return Err (error ! (ChainErr :: PoolMismatch)) ;"
      },
      {
        "id": 23,
        "label": "if steps > 15 { let extra = steps % 9 + 2 ; chain . bonus = chain . bonus . saturating_add (extra) ; chain . length = chain . length . saturating_add (1) ; let mut buffer = Vec :: new () ; buffer . push (chain . owner . to_bytes () [0]) ; buffer . push (extra as u8) ; if buffer . len () != 0 { chain . progress = chain . progress . saturating_add (buffer [0] as u32) ; } }"
      },
      {
        "id": 24,
        "label": "let extra = steps % 9 + 2 ;"
      },
      {
        "id": 25,
        "label": "chain . bonus = chain . bonus . saturating_add (extra) ;"
      },
      {
        "id": 26,
        "label": "chain . length = chain . length . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "let mut buffer = Vec :: new () ;"
      },
      {
        "id": 28,
        "label": "buffer . push (chain . owner . to_bytes () [0]) ;"
      },
      {
        "id": 29,
        "label": "buffer . push (extra as u8) ;"
      },
      {
        "id": 30,
        "label": "if buffer . len () != 0 { chain . progress = chain . progress . saturating_add (buffer [0] as u32) ; }"
      },
      {
        "id": 31,
        "label": "chain . progress = chain . progress . saturating_add (buffer [0] as u32) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: chain"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: index"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: index"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chain"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: index"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: chain"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: index"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: calc"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: index"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: calc"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: calc"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: chain"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: calc"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: derived_val"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: chain"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: calc"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: derived_val"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: chain"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: index"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: index"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: seeds"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: manual"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: seeds"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: manual"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: chain"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: extra"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: chain"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: extra"
      },
      {
        "from": 8,
        "to": 26,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 26,
        "label": "data_dep: chain"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: buffer"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: buffer"
      },
      {
        "from": 8,
        "to": 28,
        "label": "data_dep: chain"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: buffer"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: extra"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: buffer"
      },
      {
        "from": 8,
        "to": 30,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 30,
        "label": "data_dep: chain"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: buffer"
      },
      {
        "from": 8,
        "to": 31,
        "label": "data_dep: chain"
      },
      {
        "from": 8,
        "to": 31,
        "label": "data_dep: chain"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: buffer"
      }
    ]
  }
]