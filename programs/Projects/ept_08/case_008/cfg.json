[
  {
    "name": "example4_1_2",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let signer_acc = & ctx . accounts . signer_account ;"
      },
      {
        "id": 2,
        "label": "let base_acc = & ctx . accounts . base_account ;"
      },
      {
        "id": 3,
        "label": "let rec_acc = & ctx . accounts . recipient_account ;"
      },
      {
        "id": 4,
        "label": "let base_val : u64 = { let raw = base_acc . try_borrow_data () ? ; let mut buf = [0u8 ; 8] ; buf . copy_from_slice (& raw [0 .. 8]) ; u64 :: from_le_bytes (buf) } ;"
      },
      {
        "id": 5,
        "label": "let computed = base_val . wrapping_add (offset) . wrapping_mul (mult) ;"
      },
      {
        "id": 6,
        "label": "let bytes = computed . to_le_bytes () ;"
      },
      {
        "id": 7,
        "label": "let mut raw_b = base_acc . try_borrow_mut_data () ? ;"
      },
      {
        "id": 8,
        "label": "raw_b [1] = bytes [0] ;"
      },
      {
        "id": 9,
        "label": "raw_b [2] = bytes [1] ;"
      },
      {
        "id": 10,
        "label": "raw_b [3] = bytes [2] ;"
      },
      {
        "id": 11,
        "label": "raw_b [4] = bytes [3] ;"
      },
      {
        "id": 12,
        "label": "raw_b [5] = bytes [4] ;"
      },
      {
        "id": 13,
        "label": "raw_b [6] = bytes [5] ;"
      },
      {
        "id": 14,
        "label": "raw_b [7] = bytes [6] ;"
      },
      {
        "id": 15,
        "label": "raw_b [8] = bytes [7] ;"
      },
      {
        "id": 16,
        "label": "let reward = (computed / 10) as u64 ;"
      },
      {
        "id": 17,
        "label": "* * rec_acc . try_borrow_mut_lamports () ? += reward ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "call"
      }
    ]
  }
]