[
  {
    "name": "execute",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Execute >",
      "step: u64",
      "bonus: u64"
    ],
    "attributes": [],
    "body": [
      "let payload : Vec < u8 > = [step , step . rotate_left (7)] . into_iter () . flat_map (| x | x . to_le_bytes ()) . collect () ;",
      "invoke (& Instruction { program_id : FIXED_BLEND_ID , accounts : [AccountMeta :: new (ctx . accounts . counter . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] . into () , data : payload . clone () , } , & [ctx . accounts . fixed_hint . to_account_info () , ctx . accounts . counter . to_account_info () , ctx . accounts . user . to_account_info ()]) ? ;",
      "let mut prog_ai = ctx . accounts . emit_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "prog_ai = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "invoke (& Instruction { program_id : * prog_ai . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . outbox . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] , data : bonus . to_le_bytes () . to_vec () , } , & [prog_ai , ctx . accounts . outbox . to_account_info () , ctx . accounts . user . to_account_info ()]) ? ;",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . pool . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . pool_authority . to_account_info () }) , bonus) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Execute",
    "node_type": "struct",
    "fields": [
      {
        "name": "counter",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "fixed_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "outbox",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "emit_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "pool",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "pool_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]