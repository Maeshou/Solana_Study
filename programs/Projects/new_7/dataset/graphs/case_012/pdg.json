[
  {
    "name": "config",
    "inputs": [
      "ctx: Context < Config >",
      "cap: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . host = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "p . cap = cap ;"
      },
      {
        "id": 4,
        "label": "p . games = 0 ;"
      },
      {
        "id": 5,
        "label": "p . paid = 0 ;"
      },
      {
        "id": 6,
        "label": "p . acc = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "record_and_pay",
    "inputs": [
      "ctx: Context < RecordAndPay >",
      "place: u8",
      "label: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 10,
        "label": "require ! (p . host == ctx . accounts . host . key () , Errs :: Host) ;"
      },
      {
        "id": 11,
        "label": "if place == 1 { let mut bonus = 0 ; let mut i = 0 ; while i < label . len () { bonus = bonus . saturating_add ((label . as_bytes () [i] % 7) as u64) ; i += 1 ; } p . acc = p . acc . saturating_add (bonus as u32) ; } else { let mut cool = 0 ; while cool < 3 { if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; } cool = cool . saturating_add (1) ; } }"
      },
      {
        "id": 12,
        "label": "let mut bonus = 0 ;"
      },
      {
        "id": 13,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 14,
        "label": "while i < label . len () { bonus = bonus . saturating_add ((label . as_bytes () [i] % 7) as u64) ; i += 1 ; }"
      },
      {
        "id": 15,
        "label": "bonus = bonus . saturating_add ((label . as_bytes () [i] % 7) as u64) ;"
      },
      {
        "id": 16,
        "label": "i += 1 ;"
      },
      {
        "id": 17,
        "label": "p . acc = p . acc . saturating_add (bonus as u32) ;"
      },
      {
        "id": 18,
        "label": "let mut cool = 0 ;"
      },
      {
        "id": 19,
        "label": "while cool < 3 { if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; } cool = cool . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; }"
      },
      {
        "id": 21,
        "label": "p . acc = p . acc . saturating_sub (1) ;"
      },
      {
        "id": 22,
        "label": "cool = cool . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "p . games = p . games . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "let mut prize = (p . cap / 10) . saturating_mul ((4 - (place as u64) . min (3))) ;"
      },
      {
        "id": 25,
        "label": "if p . acc as u64 > prize { prize = (p . acc as u64) ; }"
      },
      {
        "id": 26,
        "label": "prize = (p . acc as u64) ;"
      },
      {
        "id": 27,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . fund . key () , ctx . accounts . winner_ata . key () , ctx . accounts . host . key () , & [] , prize ,) ? ;"
      },
      {
        "id": 28,
        "label": "invoke (& ix , & [ctx . accounts . fund . to_account_info () , ctx . accounts . winner_ata . to_account_info () , ctx . accounts . host . to_account_info () ,]) ? ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: bonus"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: i"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: bonus"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: bonus"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: bonus"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: bonus"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: bonus"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: cool"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cool"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cool"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: cool"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: prize"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: prize"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: prize"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: prize"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: ix"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: prize"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: ix"
      }
    ]
  }
]