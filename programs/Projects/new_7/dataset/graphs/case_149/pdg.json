[
  {
    "name": "drop_and_pay",
    "inputs": [
      "ctx: Context < DropAndPay >",
      "crest: u64",
      "pay: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if crest % 2 == 0 { ctx . accounts . meta . even_count += 1 ; }"
      },
      {
        "id": 2,
        "label": "ctx . accounts . meta . even_count += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut router = ctx . accounts . notify_program . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { router = ctx . remaining_accounts [0] . clone () ; ctx . accounts . meta . paths += 1 ; }"
      },
      {
        "id": 5,
        "label": "router = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . meta . paths += 1 ;"
      },
      {
        "id": 7,
        "label": "let nb = NoticeBridge { board : ctx . accounts . notice_board . to_account_info () , actor : ctx . accounts . receiver_wallet . to_account_info () , } ;"
      },
      {
        "id": 8,
        "label": "let cx = nb . as_cpi (router . clone ()) ;"
      },
      {
        "id": 9,
        "label": "nb . post (cx , crest . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 10,
        "label": "ctx . accounts . meta . hash ^= crest . rotate_left (5) ;"
      },
      {
        "id": 11,
        "label": "let t = Transfer { from : ctx . accounts . treasury_token . to_account_info () , to : ctx . accounts . receiver_token . to_account_info () , authority : ctx . accounts . treasury_authority . to_account_info () , } ;"
      },
      {
        "id": 12,
        "label": "let tctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , t) ;"
      },
      {
        "id": 13,
        "label": "token :: transfer (tctx , pay) ? ;"
      },
      {
        "id": 14,
        "label": "for _ in 0 .. (pay % 3) { ctx . accounts . meta . bump = ctx . accounts . meta . bump . wrapping_add (1) ; }"
      },
      {
        "id": 15,
        "label": "ctx . accounts . meta . bump = ctx . accounts . meta . bump . wrapping_add (1) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: router"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: router"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: router"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: nb"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: cx"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: nb"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: router"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: nb"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: cx"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: t"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: tctx"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: t"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: tctx"
      }
    ]
  }
]