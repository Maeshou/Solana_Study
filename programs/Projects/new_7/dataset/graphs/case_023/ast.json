[
  {
    "name": "open",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Open >",
      "cap_bps: u16"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "s . owner = ctx . accounts . owner . key () ;",
      "s . cap_bps = if cap_bps > 2500 { 2500 } else { cap_bps } ;",
      "s . trades = 0 ;",
      "s . cashback = 0 ;",
      "s . salt = 0 ;",
      "let seed = s . owner . as_ref () [0] as u32 ;",
      "let mut i = 0u8 ;",
      "while i < 7",
      "{",
      "s . salt = s . salt . saturating_add (((seed + i as u32) % 5) + 1) ;",
      "i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "fill_and_cashback",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < FillAndCashback >",
      "price: u64",
      "qty: u64",
      "tag: String"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "require ! (s . owner == ctx . accounts . owner . key () , Errs :: Owner) ;",
      "s . trades = s . trades . saturating_add (1) ;",
      "let value = price . saturating_mul (qty) ;",
      "let mut cb = value . saturating_mul (s . cap_bps as u64) / 10_000 ;",
      "if s . trades % 2 == 0",
      "{",
      "let b = tag . as_bytes () ;",
      "let mut i = 0usize ;",
      "let mut wave = 0u64 ;",
      "while i < b . len ()",
      "{",
      "wave = wave . saturating_add ((b [i] as u64) % 7 + 1) ;",
      "if i % 4 == 0",
      "{",
      "wave = wave . saturating_add (2) ;",
      "} i += 1 ;",
      "} let mut j = 0u8 ;",
      "while j < 5",
      "{",
      "cb = cb . saturating_add ((j as u64) + (wave % 3)) ;",
      "if cb > value",
      "{",
      "cb = value ;",
      "} j = j . saturating_add (1) ;",
      "} } else",
      "{",
      "let mut d = 0u8 ;",
      "while d < 6",
      "{",
      "if cb > (value / 25) { cb = cb . saturating_sub (((d + 1) as u64)) ;",
      "} d = d . saturating_add (1) ;",
      "} if tag . len () < 6",
      "{",
      "let mut bump = 0u8 ;",
      "while bump < 4",
      "{",
      "cb = cb . saturating_add (1) ;",
      "bump = bump . saturating_add (1) ;",
      "} }",
      "}",
      "s . cashback = s . cashback . saturating_add (cb) ;",
      "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . fee_vault . key () , ctx . accounts . trader_ata . key () , ctx . accounts . owner . key () , & [] , cb ,) ? ;",
      "invoke (& ix , & [ctx . accounts . fee_vault . to_account_info () , ctx . accounts . trader_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,] ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "State",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "cap_bps",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "trades",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "cashback",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "salt",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Open",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 2 + 4 + 8 + 4)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FillAndCashback",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "fee_vault",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "trader_ata",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "token_program",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "UncheckedAccount < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]