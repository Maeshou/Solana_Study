[
  {
    "name": "init",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 2,
        "label": "c . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "c . target = id ;"
      },
      {
        "id": 4,
        "label": "c . bump = * ctx . bumps . get (\"cfg\") . unwrap () ;"
      },
      {
        "id": 5,
        "label": "c . count = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "set_target",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 9,
        "label": "require ! (c . admin == ctx . accounts . admin . key () , Errs :: Admin) ;"
      },
      {
        "id": 10,
        "label": "c . target = id ;"
      },
      {
        "id": 11,
        "label": "c . count = c . count . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "pay",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 15,
        "label": "require ! (c . admin == ctx . accounts . admin . key () , Errs :: Admin) ;"
      },
      {
        "id": 16,
        "label": "let mut amt = base ;"
      },
      {
        "id": 17,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 18,
        "label": "Loop Start"
      },
      {
        "id": 19,
        "label": "amt = amt . saturating_add ((i as u64) + ((c . count % 9) as u64)) ;"
      },
      {
        "id": 20,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "Loop End"
      },
      {
        "id": 22,
        "label": "let ix = spl_token :: instruction :: transfer (c . target , ctx . accounts . vault . key () , ctx . accounts . member_ata . key () , ctx . accounts . admin . key () , & [] , amt ,) ? ;"
      },
      {
        "id": 23,
        "label": "invoke (& ix , & [ctx . accounts . vault . to_account_info () , ctx . accounts . member_ata . to_account_info () , ctx . accounts . admin . to_account_info () ,]) ? ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 18,
        "to": 21,
        "label": "while"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      }
    ]
  }
]