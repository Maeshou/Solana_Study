[
  {
    "name": "setup",
    "inputs": [
      "ctx: Context < Setup >",
      "fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 2,
        "label": "t . controller = ctx . accounts . controller . key () ;"
      },
      {
        "id": 3,
        "label": "t . fee_bps = fee_bps . min (2000) ;"
      },
      {
        "id": 4,
        "label": "t . rebated = 0 ;"
      },
      {
        "id": 5,
        "label": "t . steps = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "rebate",
    "inputs": [
      "ctx: Context < Rebate >",
      "base: u64",
      "rounds: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let t = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 9,
        "label": "let fee = base . saturating_mul (t . fee_bps as u64) / 10_000 ;"
      },
      {
        "id": 10,
        "label": "let mut give = if base > fee { base - fee } else { 0 } ;"
      },
      {
        "id": 11,
        "label": "base - fee"
      },
      {
        "id": 12,
        "label": "0"
      },
      {
        "id": 13,
        "label": "if give == 0 { t . steps = t . steps . saturating_add (1) ; return Ok (()) ; }"
      },
      {
        "id": 14,
        "label": "t . steps = t . steps . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "return Ok (()) ;"
      },
      {
        "id": 16,
        "label": "let mut r = 0 ;"
      },
      {
        "id": 17,
        "label": "while r < rounds { let part = give / 3 ; if part == 0 { break ; } let ix = token_ix :: transfer (& ctx . accounts . any_program . key () , & ctx . accounts . vault . key () , & ctx . accounts . client_vault . key () , & ctx . accounts . controller . key () , & [] , part ,) ? ; invoke (& ix , & [ctx . accounts . any_program . to_account_info () , ctx . accounts . vault . to_account_info () , ctx . accounts . client_vault . to_account_info () , ctx . accounts . controller . to_account_info () ,] ,) ? ; give = give . saturating_sub (part) ; t . rebated = t . rebated . saturating_add (part) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 18,
        "label": "let part = give / 3 ;"
      },
      {
        "id": 19,
        "label": "if part == 0 { break ; }"
      },
      {
        "id": 20,
        "label": "break ;"
      },
      {
        "id": 21,
        "label": "let ix = token_ix :: transfer (& ctx . accounts . any_program . key () , & ctx . accounts . vault . key () , & ctx . accounts . client_vault . key () , & ctx . accounts . controller . key () , & [] , part ,) ? ;"
      },
      {
        "id": 22,
        "label": "invoke (& ix , & [ctx . accounts . any_program . to_account_info () , ctx . accounts . vault . to_account_info () , ctx . accounts . client_vault . to_account_info () , ctx . accounts . controller . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 23,
        "label": "give = give . saturating_sub (part) ;"
      },
      {
        "id": 24,
        "label": "t . rebated = t . rebated . saturating_add (part) ;"
      },
      {
        "id": 25,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "if give > 0 { let ix2 = token_ix :: transfer (& ctx . accounts . any_program . key () , & ctx . accounts . vault . key () , & ctx . accounts . client_vault . key () , & ctx . accounts . controller . key () , & [] , give ,) ? ; invoke (& ix2 , & [ctx . accounts . any_program . to_account_info () , ctx . accounts . vault . to_account_info () , ctx . accounts . client_vault . to_account_info () , ctx . accounts . controller . to_account_info () ,] ,) ? ; t . rebated = t . rebated . saturating_add (give) ; }"
      },
      {
        "id": 27,
        "label": "let ix2 = token_ix :: transfer (& ctx . accounts . any_program . key () , & ctx . accounts . vault . key () , & ctx . accounts . client_vault . key () , & ctx . accounts . controller . key () , & [] , give ,) ? ;"
      },
      {
        "id": 28,
        "label": "invoke (& ix2 , & [ctx . accounts . any_program . to_account_info () , ctx . accounts . vault . to_account_info () , ctx . accounts . client_vault . to_account_info () , ctx . accounts . controller . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 29,
        "label": "t . rebated = t . rebated . saturating_add (give) ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: t"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: fee"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: give"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: fee"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: fee"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: fee"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: give"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: t"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: r"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: give"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: give"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: give"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: part"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: give"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: part"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: ix"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: part"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: ix"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: give"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: give"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: part"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: t"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: part"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: give"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: give"
      },
      {
        "from": 8,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: give"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: ix2"
      },
      {
        "from": 10,
        "to": 27,
        "label": "data_dep: give"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: ix2"
      },
      {
        "from": 8,
        "to": 29,
        "label": "data_dep: t"
      },
      {
        "from": 8,
        "to": 29,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 29,
        "label": "data_dep: give"
      }
    ]
  }
]