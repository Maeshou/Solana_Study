[
  {
    "name": "reward_mix",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RewardMix >",
      "stage: u64",
      "payout: u64"
    ],
    "attributes": [],
    "body": [
      "let ix = Instruction { program_id : FIXED_COUNTER_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . fixed_slot . key () , false) , AccountMeta :: new_readonly (ctx . accounts . actor . key () , false) ,] , data : stage . to_le_bytes () . to_vec () , } ;",
      "invoke (& ix , & [ctx . accounts . fixed_hint . to_account_info () , ctx . accounts . fixed_slot . to_account_info () , ctx . accounts . actor . to_account_info () ,]) ? ;",
      "let mut prog = ctx . accounts . report_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "prog = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "let dyn_ix = Instruction { program_id : * prog . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . report_pad . key () , false) , AccountMeta :: new_readonly (ctx . accounts . actor . key () , false) ,] , data : stage . wrapping_mul (11) . to_le_bytes () . to_vec () , } ;",
      "invoke (& dyn_ix , & [prog , ctx . accounts . report_pad . to_account_info () , ctx . accounts . actor . to_account_info () ,]) ? ;",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . treasury . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . treasury_authority . to_account_info () , }) , payout) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "RewardMix",
    "node_type": "struct",
    "fields": [
      {
        "name": "local_note",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , LocalNote >"
      },
      {
        "name": "fixed_slot",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "actor",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "fixed_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "report_pad",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "report_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "treasury",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "treasury_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "LocalNote",
    "node_type": "struct",
    "fields": [
      {
        "name": "routes",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]