[
  {
    "name": "run",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "mut ctx: Context < Run >",
      "n: u64",
      "gift: u64"
    ],
    "attributes": [],
    "body": [
      "ctx . accounts . ring_push (n) ;",
      "let mut s = 0u64 ;",
      "let mut i = 0 ;",
      "while i < 8",
      "{",
      "s = s . wrapping_add (ctx . accounts . sheet . buf [i]) ;",
      "i += 1 ;",
      "}",
      "if s > 0",
      "{",
      "ctx . accounts . sheet . acc = ctx . accounts . sheet . acc . saturating_add (s) ;",
      "}",
      "let mut pack = Vec :: with_capacity (16) ;",
      "pack . extend_from_slice (& ctx . accounts . sheet . buf [0] . to_le_bytes ()) ;",
      "pack . extend_from_slice (& ctx . accounts . sheet . buf [1] . to_le_bytes ()) ;",
      "invoke (& Instruction { program_id : FIXED_NOTE_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . note_cell . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] , data : pack } , & [ctx . accounts . note_hint . to_account_info () , ctx . accounts . note_cell . to_account_info () , ctx . accounts . user . to_account_info () ,]) ? ;",
      "let mut host = ctx . accounts . notice_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "host = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . sheet . paths = ctx . accounts . sheet . paths . saturating_add (2) ;",
      "}",
      "let msg = gift . rotate_right ((ctx . accounts . sheet . head & 31) as u32) . to_le_bytes () . to_vec () ;",
      "invoke (& Instruction { program_id : * host . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . notice_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] , data : msg } , & [host , ctx . accounts . notice_board . to_account_info () , ctx . accounts . user . to_account_info () ,]) ? ;",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . vault . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . vault_auth . to_account_info () , }) , gift ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Sheet",
    "node_type": "struct",
    "fields": [
      {
        "name": "buf",
        "attribute": null,
        "field_type": "[u64 ; 8]"
      },
      {
        "name": "head",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "acc",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "paths",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Run",
    "node_type": "struct",
    "fields": [
      {
        "name": "sheet",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Sheet >"
      },
      {
        "name": "note_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "note_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "notice_board",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "notice_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "vault_auth",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]