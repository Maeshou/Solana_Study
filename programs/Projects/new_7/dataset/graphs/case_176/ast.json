[
  {
    "name": "open",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Open >",
      "seed: u64",
      "grant: u64"
    ],
    "attributes": [],
    "body": [
      "let mut metas = Vec :: with_capacity (2) ;",
      "metas . push (AccountMeta :: new (ctx . accounts . incubator . key () , false)) ;",
      "metas . push (AccountMeta :: new_readonly (ctx . accounts . owner . key () , false)) ;",
      "let mix = seed . rotate_right (13) . wrapping_add (777) ;",
      "let mut data = seed . to_le_bytes () . to_vec () ;",
      "data . extend_from_slice (& mix . to_le_bytes ()) ;",
      "invoke (& Instruction { program_id : FIXED_HATCH_ID , accounts : metas , data } , & [ctx . accounts . hatch_hint . to_account_info () , ctx . accounts . incubator . to_account_info () , ctx . accounts . owner . to_account_info ()]) ? ;",
      "let mut p = ctx . accounts . notify_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "p = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "invoke (& Instruction { program_id : * p . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . notice_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . owner . key () , false) ,] , data : grant . to_le_bytes () . to_vec () , } , & [p , ctx . accounts . notice_board . to_account_info () , ctx . accounts . owner . to_account_info ()]) ? ;",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . chest . to_account_info () , to : ctx . accounts . owner_token . to_account_info () , authority : ctx . accounts . chest_authority . to_account_info () }) , grant) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Open",
    "node_type": "struct",
    "fields": [
      {
        "name": "incubator",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "owner",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "hatch_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "notice_board",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "notify_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "chest",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "owner_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "chest_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]