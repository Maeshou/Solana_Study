[
  {
    "name": "dispatch",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Dispatch >",
      "n: u64"
    ],
    "attributes": [],
    "body": [
      "let mut program = ctx . accounts . route_default . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "program = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "let pack = Duo { a : ctx . accounts . a . clone () , b : ctx . accounts . b . clone () } ;",
      "let cx = CpiContext :: new_with_signer (program . clone () , pack . clone () , & [b\"seed-a\" , b\"seed-b\"]) ;",
      "let ix = Instruction { program_id : * cx . program . key , accounts : pack . metas () , data : n . to_le_bytes () . to_vec () , } ;",
      "invoke_signed (& ix , & pack . infos (& cx . program) , & [b\"seed-a\" , b\"seed-b\"]) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Dispatch",
    "node_type": "struct",
    "fields": [
      {
        "name": "a",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "b",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "route_default",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Duo",
    "node_type": "struct",
    "fields": [
      {
        "name": "a",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "b",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]