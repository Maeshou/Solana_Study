[
  {
    "name": "fuse",
    "inputs": [
      "ctx: Context < Fuse >",
      "total: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . conf ;"
      },
      {
        "id": 2,
        "label": "s . iter += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut program = ctx . accounts . default_prog . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { program = ctx . remaining_accounts [0] . clone () ; s . alt += 1 ; }"
      },
      {
        "id": 5,
        "label": "program = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 6,
        "label": "s . alt += 1 ;"
      },
      {
        "id": 7,
        "label": "let br = FuseBridge { x : ctx . accounts . xq . to_account_info () , y : ctx . accounts . yq . to_account_info () } ;"
      },
      {
        "id": 8,
        "label": "let mut chunk = 1u64 ;"
      },
      {
        "id": 9,
        "label": "let mut left = total ;"
      },
      {
        "id": 10,
        "label": "while left > 0 { let take = if left > chunk { chunk } else { left } ; let cx = br . as_cpi (program . clone ()) ; br . fire (cx , take + s . iter) ? ; left -= take ; chunk = chunk . saturating_mul (2) ; }"
      },
      {
        "id": 11,
        "label": "let take = if left > chunk { chunk } else { left } ;"
      },
      {
        "id": 12,
        "label": "chunk"
      },
      {
        "id": 13,
        "label": "left"
      },
      {
        "id": 14,
        "label": "let cx = br . as_cpi (program . clone ()) ;"
      },
      {
        "id": 15,
        "label": "br . fire (cx , take + s . iter) ? ;"
      },
      {
        "id": 16,
        "label": "left -= take ;"
      },
      {
        "id": 17,
        "label": "chunk = chunk . saturating_mul (2) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: program"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: br"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: chunk"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: left"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: left"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: left"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chunk"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chunk"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: left"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: program"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: br"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: left"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chunk"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: chunk"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: take"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: left"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: chunk"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: chunk"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: left"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: chunk"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: left"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: cx"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 14,
        "label": "data_dep: program"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: br"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: cx"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: take"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: left"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: take"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: chunk"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: chunk"
      }
    ]
  }
]