[
  {
    "name": "snap",
    "inputs": [
      "ctx: Context < Snap >",
      "value: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let v = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "let mut board = ctx . accounts . board_prog . to_account_info () ;"
      },
      {
        "id": 3,
        "label": "if value & 1 == 1 { v . odd += 1 ; }"
      },
      {
        "id": 4,
        "label": "v . odd += 1 ;"
      },
      {
        "id": 5,
        "label": "for _ in 0 .. (value % 3 + 1) { v . total = v . total . wrapping_add (value) ; }"
      },
      {
        "id": 6,
        "label": "v . total = v . total . wrapping_add (value) ;"
      },
      {
        "id": 7,
        "label": "if ctx . remaining_accounts . len () > 0 { board = ctx . remaining_accounts [0] . clone () ; v . routes ^= value ; }"
      },
      {
        "id": 8,
        "label": "board = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 9,
        "label": "v . routes ^= value ;"
      },
      {
        "id": 10,
        "label": "let br = VoteBridge { wall : ctx . accounts . wall . to_account_info () , registrar : ctx . accounts . registrar . to_account_info () } ;"
      },
      {
        "id": 11,
        "label": "let cx = br . as_cpi (board . clone ()) ;"
      },
      {
        "id": 12,
        "label": "br . cast (cx , value . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: v"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: board"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: v"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: br"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: cx"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: br"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: br"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: cx"
      }
    ]
  }
]