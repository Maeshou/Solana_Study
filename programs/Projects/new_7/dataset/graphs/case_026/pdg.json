[
  {
    "name": "config",
    "inputs": [
      "ctx: Context < Config >",
      "cap: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . host = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "p . cap = cap ;"
      },
      {
        "id": 4,
        "label": "p . games = 0 ;"
      },
      {
        "id": 5,
        "label": "p . paid = 0 ;"
      },
      {
        "id": 6,
        "label": "p . acc = 0 ;"
      },
      {
        "id": 7,
        "label": "let mut warm = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while warm < 6 { p . acc = p . acc . saturating_add (((cap % 11) as u32) + (warm as u32)) ; warm = warm . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "p . acc = p . acc . saturating_add (((cap % 11) as u32) + (warm as u32)) ;"
      },
      {
        "id": 10,
        "label": "warm = warm . saturating_add (1) ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: warm"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: warm"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: warm"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: warm"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: warm"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: warm"
      }
    ]
  },
  {
    "name": "record_and_pay",
    "inputs": [
      "ctx: Context < RecordAndPay >",
      "place: u8",
      "label: String"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 14,
        "label": "require ! (p . host == ctx . accounts . host . key () , Errs :: Host) ;"
      },
      {
        "id": 15,
        "label": "if place == 1 { let b = label . as_bytes () ; let mut i = 0usize ; let mut bonus = 0u64 ; while i < b . len () { bonus = bonus . saturating_add ((b [i] as u64) % 13 + 1) ; if i % 4 == 0 { p . acc = p . acc . saturating_add (1) ; } i += 1 ; } p . paid = p . paid . saturating_add (bonus) ; } else { let mut cool = 0u8 ; while cool < 8 { if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; } if cool % 3 == 0 { p . games = p . games . saturating_add (1) ; } cool = cool . saturating_add (1) ; } }"
      },
      {
        "id": 16,
        "label": "let b = label . as_bytes () ;"
      },
      {
        "id": 17,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 18,
        "label": "let mut bonus = 0u64 ;"
      },
      {
        "id": 19,
        "label": "while i < b . len () { bonus = bonus . saturating_add ((b [i] as u64) % 13 + 1) ; if i % 4 == 0 { p . acc = p . acc . saturating_add (1) ; } i += 1 ; }"
      },
      {
        "id": 20,
        "label": "bonus = bonus . saturating_add ((b [i] as u64) % 13 + 1) ;"
      },
      {
        "id": 21,
        "label": "if i % 4 == 0 { p . acc = p . acc . saturating_add (1) ; }"
      },
      {
        "id": 22,
        "label": "p . acc = p . acc . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "i += 1 ;"
      },
      {
        "id": 24,
        "label": "p . paid = p . paid . saturating_add (bonus) ;"
      },
      {
        "id": 25,
        "label": "let mut cool = 0u8 ;"
      },
      {
        "id": 26,
        "label": "while cool < 8 { if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; } if cool % 3 == 0 { p . games = p . games . saturating_add (1) ; } cool = cool . saturating_add (1) ; }"
      },
      {
        "id": 27,
        "label": "if p . acc > 0 { p . acc = p . acc . saturating_sub (1) ; }"
      },
      {
        "id": 28,
        "label": "p . acc = p . acc . saturating_sub (1) ;"
      },
      {
        "id": 29,
        "label": "if cool % 3 == 0 { p . games = p . games . saturating_add (1) ; }"
      },
      {
        "id": 30,
        "label": "p . games = p . games . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "cool = cool . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "let mut award = (p . cap / 10) . saturating_mul ((4 - (place as u64) . min (3))) ;"
      },
      {
        "id": 33,
        "label": "let mut add = 0u64 ;"
      },
      {
        "id": 34,
        "label": "let mut s = 0u8 ;"
      },
      {
        "id": 35,
        "label": "while s < 5 { add = add . saturating_add (((p . acc % 9) as u64) + (s as u64)) ; s = s . saturating_add (1) ; }"
      },
      {
        "id": 36,
        "label": "add = add . saturating_add (((p . acc % 9) as u64) + (s as u64)) ;"
      },
      {
        "id": 37,
        "label": "s = s . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "award = award . saturating_add (add) ;"
      },
      {
        "id": 39,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . fund . key () , ctx . accounts . winner_ata . key () , ctx . accounts . host . key () , & [] , award ,) ? ;"
      },
      {
        "id": 40,
        "label": "invoke (& ix , & [ctx . accounts . fund . to_account_info () , ctx . accounts . winner_ata . to_account_info () , ctx . accounts . host . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: b"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: i"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: bonus"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: i"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: bonus"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: bonus"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: bonus"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: bonus"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: bonus"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: cool"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: cool"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: cool"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: cool"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: cool"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: cool"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 30,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: cool"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: cool"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: award"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: add"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: s"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: add"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: add"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: add"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: add"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 38,
        "label": "data_dep: award"
      },
      {
        "from": 32,
        "to": 38,
        "label": "data_dep: award"
      },
      {
        "from": 33,
        "to": 38,
        "label": "data_dep: add"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: ix"
      },
      {
        "from": 32,
        "to": 39,
        "label": "data_dep: award"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: ix"
      }
    ]
  }
]