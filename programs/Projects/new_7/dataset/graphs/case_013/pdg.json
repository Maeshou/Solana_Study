[
  {
    "name": "start",
    "inputs": [
      "ctx: Context < Start >",
      "rate_per_hour: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . rental ;"
      },
      {
        "id": 2,
        "label": "r . lessor = ctx . accounts . lessor . key () ;"
      },
      {
        "id": 3,
        "label": "r . rate = rate_per_hour ;"
      },
      {
        "id": 4,
        "label": "r . hours = 0 ;"
      },
      {
        "id": 5,
        "label": "r . collected = 0 ;"
      },
      {
        "id": 6,
        "label": "r . buffer = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "report_and_pay",
    "inputs": [
      "ctx: Context < ReportAndPay >",
      "used: u32",
      "memo: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let r = & mut ctx . accounts . rental ;"
      },
      {
        "id": 10,
        "label": "require ! (r . lessor == ctx . accounts . lessor . key () , Errs :: Lessor) ;"
      },
      {
        "id": 11,
        "label": "if used > 0 { let mut i = 0 ; while i < used { r . hours = r . hours . saturating_add (1) ; if i % 5 == 0 { r . buffer = r . buffer . saturating_add (1) ; } i = i . saturating_add (1) ; } if memo . len () > 4 { r . buffer = r . buffer . saturating_add (memo . len () as u32) ; } } else { let mut j = 0 ; while j < 3 { if r . buffer > 0 { r . buffer = r . buffer . saturating_sub (1) ; } j = j . saturating_add (1) ; } r . hours = r . hours . saturating_add (1) ; }"
      },
      {
        "id": 12,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 13,
        "label": "while i < used { r . hours = r . hours . saturating_add (1) ; if i % 5 == 0 { r . buffer = r . buffer . saturating_add (1) ; } i = i . saturating_add (1) ; }"
      },
      {
        "id": 14,
        "label": "r . hours = r . hours . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "if i % 5 == 0 { r . buffer = r . buffer . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "r . buffer = r . buffer . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "if memo . len () > 4 { r . buffer = r . buffer . saturating_add (memo . len () as u32) ; }"
      },
      {
        "id": 19,
        "label": "r . buffer = r . buffer . saturating_add (memo . len () as u32) ;"
      },
      {
        "id": 20,
        "label": "let mut j = 0 ;"
      },
      {
        "id": 21,
        "label": "while j < 3 { if r . buffer > 0 { r . buffer = r . buffer . saturating_sub (1) ; } j = j . saturating_add (1) ; }"
      },
      {
        "id": 22,
        "label": "if r . buffer > 0 { r . buffer = r . buffer . saturating_sub (1) ; }"
      },
      {
        "id": 23,
        "label": "r . buffer = r . buffer . saturating_sub (1) ;"
      },
      {
        "id": 24,
        "label": "j = j . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "r . hours = r . hours . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "let mut due = (r . hours as u64) . saturating_mul (r . rate) ;"
      },
      {
        "id": 27,
        "label": "if r . buffer as u64 > due / 2 { let mut addon = 0u64 ; let mut k = 0 ; while k < 4 { addon = addon . saturating_add ((k + 1) as u64) ; k = k . saturating_add (1) ; } due = due . saturating_add (addon) ; }"
      },
      {
        "id": 28,
        "label": "let mut addon = 0u64 ;"
      },
      {
        "id": 29,
        "label": "let mut k = 0 ;"
      },
      {
        "id": 30,
        "label": "while k < 4 { addon = addon . saturating_add ((k + 1) as u64) ; k = k . saturating_add (1) ; }"
      },
      {
        "id": 31,
        "label": "addon = addon . saturating_add ((k + 1) as u64) ;"
      },
      {
        "id": 32,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "due = due . saturating_add (addon) ;"
      },
      {
        "id": 34,
        "label": "r . collected = r . collected . saturating_add (due) ;"
      },
      {
        "id": 35,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . vault . key () , ctx . accounts . rentee_ata . key () , ctx . accounts . lessor . key () , & [] , due ,) ? ;"
      },
      {
        "id": 36,
        "label": "invoke (& ix , & [ctx . accounts . vault . to_account_info () , ctx . accounts . rentee_ata . to_account_info () , ctx . accounts . lessor . to_account_info () ,]) ? ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: i"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: j"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: j"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: j"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: due"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 27,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: due"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: due"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: due"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: addon"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: k"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: addon"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: addon"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: addon"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: addon"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: k"
      },
      {
        "from": 26,
        "to": 33,
        "label": "data_dep: due"
      },
      {
        "from": 26,
        "to": 33,
        "label": "data_dep: due"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: addon"
      },
      {
        "from": 9,
        "to": 34,
        "label": "data_dep: r"
      },
      {
        "from": 9,
        "to": 34,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: due"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: ix"
      },
      {
        "from": 26,
        "to": 35,
        "label": "data_dep: due"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: ix"
      }
    ]
  }
]