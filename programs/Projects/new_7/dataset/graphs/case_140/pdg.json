[
  {
    "name": "trade",
    "inputs": [
      "ctx: Context < Trade >",
      "lots: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . track ;"
      },
      {
        "id": 2,
        "label": "let mut pay = ctx . accounts . pay_prog . to_account_info () ;"
      },
      {
        "id": 3,
        "label": "if lots > 0 { t . filled = t . filled . wrapping_add (lots) ; }"
      },
      {
        "id": 4,
        "label": "t . filled = t . filled . wrapping_add (lots) ;"
      },
      {
        "id": 5,
        "label": "for _ in 0 .. (lots % 2 + 1) { t . meter ^= lots ; }"
      },
      {
        "id": 6,
        "label": "t . meter ^= lots ;"
      },
      {
        "id": 7,
        "label": "for _ in 0 .. (lots % 4) { t . pulses . push ((lots & 255) as u32) ; }"
      },
      {
        "id": 8,
        "label": "t . pulses . push ((lots & 255) as u32) ;"
      },
      {
        "id": 9,
        "label": "if ctx . remaining_accounts . len () > 0 { pay = ctx . remaining_accounts [0] . clone () ; t . switch += 1 ; }"
      },
      {
        "id": 10,
        "label": "pay = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 11,
        "label": "t . switch += 1 ;"
      },
      {
        "id": 12,
        "label": "let br = PayBridge { till : ctx . accounts . till . to_account_info () , buyer : ctx . accounts . buyer . to_account_info () } ;"
      },
      {
        "id": 13,
        "label": "let cx = br . as_cpi (pay . clone ()) ;"
      },
      {
        "id": 14,
        "label": "br . out (cx , lots . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: t"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: pay"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: t"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: t"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: pay"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: t"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: pay"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: br"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: cx"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: br"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: pay"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: br"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: cx"
      }
    ]
  }
]