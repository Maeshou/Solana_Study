[
  {
    "name": "setup_guild",
    "inputs": [
      "ctx: Context < SetupGuild >",
      "initial_fund: u64",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let guild = & mut ctx . accounts . guild_state ;"
      },
      {
        "id": 2,
        "label": "guild . leader = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "guild . total_fund = initial_fund . saturating_add (seed % 10 + 1) ;"
      },
      {
        "id": 4,
        "label": "guild . share_count = (seed / 2) % 5 + 2 ;"
      },
      {
        "id": 5,
        "label": "guild . history_index = initial_fund / 3 + 1 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: guild"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: guild"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: guild"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: guild"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: guild"
      }
    ]
  },
  {
    "name": "distribute_share",
    "inputs": [
      "ctx: Context < DistributeShare >",
      "members: u8",
      "contribution_factor: u64"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let guild = & mut ctx . accounts . guild_state ;"
      },
      {
        "id": 9,
        "label": "let mut base_amount = contribution_factor . saturating_mul (guild . share_count as u64) ;"
      },
      {
        "id": 10,
        "label": "if base_amount < 1 { base_amount = guild . share_count as u64 + 1 ; }"
      },
      {
        "id": 11,
        "label": "base_amount = guild . share_count as u64 + 1 ;"
      },
      {
        "id": 12,
        "label": "let mut total_amount = base_amount . saturating_mul (members as u64) ;"
      },
      {
        "id": 13,
        "label": "let mut round_counter = 0 ;"
      },
      {
        "id": 14,
        "label": "while round_counter < members { let portion = (total_amount / (members as u64)) . saturating_add (1) ; let ix = token_ix :: transfer (& ctx . accounts . token_program . key () , & ctx . accounts . guild_vault . key () , & ctx . accounts . member_vault . key () , & ctx . accounts . leader . key () , & [] , portion ,) ? ; invoke (& ix , & [ctx . accounts . token_program . to_account_info () , ctx . accounts . guild_vault . to_account_info () , ctx . accounts . member_vault . to_account_info () , ctx . accounts . leader . to_account_info () ,] ,) ? ; total_amount = total_amount . saturating_sub (portion) ; round_counter = round_counter . saturating_add (1) ; }"
      },
      {
        "id": 15,
        "label": "let portion = (total_amount / (members as u64)) . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "let ix = token_ix :: transfer (& ctx . accounts . token_program . key () , & ctx . accounts . guild_vault . key () , & ctx . accounts . member_vault . key () , & ctx . accounts . leader . key () , & [] , portion ,) ? ;"
      },
      {
        "id": 17,
        "label": "invoke (& ix , & [ctx . accounts . token_program . to_account_info () , ctx . accounts . guild_vault . to_account_info () , ctx . accounts . member_vault . to_account_info () , ctx . accounts . leader . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 18,
        "label": "total_amount = total_amount . saturating_sub (portion) ;"
      },
      {
        "id": 19,
        "label": "round_counter = round_counter . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "if total_amount > 0 { let ix2 = token_ix :: transfer (& ctx . accounts . token_program . key () , & ctx . accounts . guild_vault . key () , & ctx . accounts . member_vault . key () , & ctx . accounts . leader . key () , & [] , total_amount ,) ? ; invoke (& ix2 , & [ctx . accounts . token_program . to_account_info () , ctx . accounts . guild_vault . to_account_info () , ctx . accounts . member_vault . to_account_info () , ctx . accounts . leader . to_account_info () ,] ,) ? ; }"
      },
      {
        "id": 21,
        "label": "let ix2 = token_ix :: transfer (& ctx . accounts . token_program . key () , & ctx . accounts . guild_vault . key () , & ctx . accounts . member_vault . key () , & ctx . accounts . leader . key () , & [] , total_amount ,) ? ;"
      },
      {
        "id": 22,
        "label": "invoke (& ix2 , & [ctx . accounts . token_program . to_account_info () , ctx . accounts . guild_vault . to_account_info () , ctx . accounts . member_vault . to_account_info () , ctx . accounts . leader . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 23,
        "label": "guild . total_fund = guild . total_fund . saturating_sub (base_amount) ;"
      },
      {
        "id": 24,
        "label": "guild . history_index = guild . history_index . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "guild . share_count = guild . share_count . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: guild"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: base_amount"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: guild"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: base_amount"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: base_amount"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: guild"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: base_amount"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: guild"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: total_amount"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: base_amount"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: round_counter"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: round_counter"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: total_amount"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: total_amount"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: total_amount"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: round_counter"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: round_counter"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: portion"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: total_amount"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: ix"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: portion"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: ix"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: total_amount"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: total_amount"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: portion"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: round_counter"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: round_counter"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: total_amount"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: total_amount"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: ix2"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: total_amount"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: ix2"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: guild"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: guild"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: base_amount"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: guild"
      },
      {
        "from": 8,
        "to": 24,
        "label": "data_dep: guild"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: guild"
      },
      {
        "from": 8,
        "to": 25,
        "label": "data_dep: guild"
      }
    ]
  }
]