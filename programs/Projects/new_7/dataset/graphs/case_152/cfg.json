[
  {
    "name": "publish",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = Revoke { source : ctx . accounts . creator_token . to_account_info () , authority : ctx . accounts . creator_wallet . to_account_info () , } ;"
      },
      {
        "id": 2,
        "label": "token :: revoke (CpiContext :: new (ctx . accounts . token_program . to_account_info () , r)) ? ;"
      },
      {
        "id": 3,
        "label": "Loop Start"
      },
      {
        "id": 4,
        "label": "ctx . accounts . stats . meter = ctx . accounts . stats . meter . wrapping_add (1) ;"
      },
      {
        "id": 5,
        "label": "Loop End"
      },
      {
        "id": 6,
        "label": "let mut pubp = ctx . accounts . publish_program . to_account_info () ;"
      },
      {
        "id": 7,
        "label": "if statement"
      },
      {
        "id": 8,
        "label": "predicate"
      },
      {
        "id": 9,
        "label": "ctx . remaining_accounts . len () > 0"
      },
      {
        "id": 10,
        "label": "True body"
      },
      {
        "id": 11,
        "label": "pubp = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 12,
        "label": "ctx . accounts . stats . paths += 1 ;"
      },
      {
        "id": 13,
        "label": "False body"
      },
      {
        "id": 14,
        "label": "No-op"
      },
      {
        "id": 15,
        "label": "merge"
      },
      {
        "id": 16,
        "label": "let pb = PublishBridge { shelf : ctx . accounts . gallery_shelf . to_account_info () , author : ctx . accounts . creator_wallet . to_account_info () } ;"
      },
      {
        "id": 17,
        "label": "pb . push (pb . as_cpi (pubp . clone ()) , content . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 18,
        "label": "if statement"
      },
      {
        "id": 19,
        "label": "predicate"
      },
      {
        "id": 20,
        "label": "content % 2 == 0"
      },
      {
        "id": 21,
        "label": "True body"
      },
      {
        "id": 22,
        "label": "ctx . accounts . stats . evens += 1 ;"
      },
      {
        "id": 23,
        "label": "False body"
      },
      {
        "id": 24,
        "label": "No-op"
      },
      {
        "id": 25,
        "label": "merge"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 3,
        "to": 5,
        "label": "for"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "predicate"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 7,
        "to": 10,
        "label": "true"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 7,
        "to": 13,
        "label": "false"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "predicate"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 18,
        "to": 21,
        "label": "true"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 18,
        "to": 23,
        "label": "false"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 22,
        "to": 25,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      }
    ]
  }
]