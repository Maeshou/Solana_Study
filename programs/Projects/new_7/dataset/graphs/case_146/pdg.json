[
  {
    "name": "claim",
    "inputs": [
      "ctx: Context < Claim >",
      "badge_code: u64",
      "prize_amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if badge_code % 3 == 0 { ctx . accounts . meta . bumped += 2 ; }"
      },
      {
        "id": 2,
        "label": "ctx . accounts . meta . bumped += 2 ;"
      },
      {
        "id": 3,
        "label": "for _ in 0 .. (badge_code % 2 + 1) { ctx . accounts . meta . trace ^= badge_code ; }"
      },
      {
        "id": 4,
        "label": "ctx . accounts . meta . trace ^= badge_code ;"
      },
      {
        "id": 5,
        "label": "let mut notify_prog = ctx . accounts . notify_program . to_account_info () ;"
      },
      {
        "id": 6,
        "label": "if ctx . remaining_accounts . len () > 0 { notify_prog = ctx . remaining_accounts [0] . clone () ; ctx . accounts . meta . paths += 1 ; }"
      },
      {
        "id": 7,
        "label": "notify_prog = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 8,
        "label": "ctx . accounts . meta . paths += 1 ;"
      },
      {
        "id": 9,
        "label": "let nb = NoticeBridge { wall : ctx . accounts . notice_board . to_account_info () , actor : ctx . accounts . recipient_wallet . to_account_info () , } ;"
      },
      {
        "id": 10,
        "label": "let cx = nb . as_cpi (notify_prog . clone ()) ;"
      },
      {
        "id": 11,
        "label": "nb . post (cx , badge_code . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 12,
        "label": "ctx . accounts . meta . total = ctx . accounts . meta . total . wrapping_add (prize_amount) ;"
      },
      {
        "id": 13,
        "label": "let t_accs = Transfer { from : ctx . accounts . treasury_token . to_account_info () , to : ctx . accounts . recipient_token . to_account_info () , authority : ctx . accounts . treasury_authority . to_account_info () , } ;"
      },
      {
        "id": 14,
        "label": "let t_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , t_accs) ;"
      },
      {
        "id": 15,
        "label": "token :: transfer (t_ctx , prize_amount) ? ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: notify_prog"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: notify_prog"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: notify_prog"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: nb"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: cx"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: nb"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: notify_prog"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: nb"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: cx"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: t_accs"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: t_ctx"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: t_accs"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: t_ctx"
      }
    ]
  }
]