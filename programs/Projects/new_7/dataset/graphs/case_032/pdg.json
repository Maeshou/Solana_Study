[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "min: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "p . min = min ;"
      },
      {
        "id": 4,
        "label": "p . flag = true ;"
      },
      {
        "id": 5,
        "label": "p . ticks = 0 ;"
      },
      {
        "id": 6,
        "label": "p . sum = 0 ;"
      },
      {
        "id": 7,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while i < 5 { if i % 2 == 0 { p . ticks = p . ticks . saturating_add (2) ; } else { if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; } } i = i . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "if i % 2 == 0 { p . ticks = p . ticks . saturating_add (2) ; } else { if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; } }"
      },
      {
        "id": 10,
        "label": "p . ticks = p . ticks . saturating_add (2) ;"
      },
      {
        "id": 11,
        "label": "if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; }"
      },
      {
        "id": 12,
        "label": "p . ticks = p . ticks . saturating_sub (1) ;"
      },
      {
        "id": 13,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "settle_with_param",
    "inputs": [
      "ctx: Context < Settle >",
      "external_program: Pubkey",
      "stake: u64",
      "rounds: u8",
      "tag: String"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 17,
        "label": "require ! (p . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 18,
        "label": "require ! (stake >= p . min , Errs :: TooSmall) ;"
      },
      {
        "id": 19,
        "label": "require ! (p . flag , Errs :: Inactive) ;"
      },
      {
        "id": 20,
        "label": "let mut weight : u64 = 10 ;"
      },
      {
        "id": 21,
        "label": "let mut r = 0u8 ;"
      },
      {
        "id": 22,
        "label": "while r < rounds { weight = weight . saturating_add ((r as u64) % 4 + 1) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 23,
        "label": "weight = weight . saturating_add ((r as u64) % 4 + 1) ;"
      },
      {
        "id": 24,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "if tag . len () > 0 { let b = tag . as_bytes () ; let mut s = 0usize ; let mut loc = 0u64 ; while s < b . len () { loc = loc . saturating_add ((b [s] as u64) % 9 + 1) ; if s % 3 == 0 { p . sum = p . sum . saturating_add (1) ; } s += 1 ; } weight = weight . saturating_add (loc % 5) ; }"
      },
      {
        "id": 26,
        "label": "let b = tag . as_bytes () ;"
      },
      {
        "id": 27,
        "label": "let mut s = 0usize ;"
      },
      {
        "id": 28,
        "label": "let mut loc = 0u64 ;"
      },
      {
        "id": 29,
        "label": "while s < b . len () { loc = loc . saturating_add ((b [s] as u64) % 9 + 1) ; if s % 3 == 0 { p . sum = p . sum . saturating_add (1) ; } s += 1 ; }"
      },
      {
        "id": 30,
        "label": "loc = loc . saturating_add ((b [s] as u64) % 9 + 1) ;"
      },
      {
        "id": 31,
        "label": "if s % 3 == 0 { p . sum = p . sum . saturating_add (1) ; }"
      },
      {
        "id": 32,
        "label": "p . sum = p . sum . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "s += 1 ;"
      },
      {
        "id": 34,
        "label": "weight = weight . saturating_add (loc % 5) ;"
      },
      {
        "id": 35,
        "label": "let gross = stake . saturating_mul (weight) ;"
      },
      {
        "id": 36,
        "label": "let mut net = 0u64 ;"
      },
      {
        "id": 37,
        "label": "let mut fee = gross / 100 ;"
      },
      {
        "id": 38,
        "label": "if gross > fee { net = gross - fee ; let mut add = 0u64 ; let mut i = 0u8 ; while i < 4 { add = add . saturating_add ((i as u64) + ((p . ticks % 7) as u64)) ; i = i . saturating_add (1) ; } net = net . saturating_add (add) ; } else { let mut cool = 0u8 ; while cool < 6 { if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; } cool = cool . saturating_add (1) ; } net = 0 ; }"
      },
      {
        "id": 39,
        "label": "net = gross - fee ;"
      },
      {
        "id": 40,
        "label": "let mut add = 0u64 ;"
      },
      {
        "id": 41,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 42,
        "label": "while i < 4 { add = add . saturating_add ((i as u64) + ((p . ticks % 7) as u64)) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 43,
        "label": "add = add . saturating_add ((i as u64) + ((p . ticks % 7) as u64)) ;"
      },
      {
        "id": 44,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 45,
        "label": "net = net . saturating_add (add) ;"
      },
      {
        "id": 46,
        "label": "let mut cool = 0u8 ;"
      },
      {
        "id": 47,
        "label": "while cool < 6 { if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; } cool = cool . saturating_add (1) ; }"
      },
      {
        "id": 48,
        "label": "if p . ticks > 0 { p . ticks = p . ticks . saturating_sub (1) ; }"
      },
      {
        "id": 49,
        "label": "p . ticks = p . ticks . saturating_sub (1) ;"
      },
      {
        "id": 50,
        "label": "cool = cool . saturating_add (1) ;"
      },
      {
        "id": 51,
        "label": "net = 0 ;"
      },
      {
        "id": 52,
        "label": "let ix = spl_token :: instruction :: transfer (external_program , ctx . accounts . treasury . key () , ctx . accounts . recipient_ata . key () , ctx . accounts . owner . key () , & [] , net ,) ? ;"
      },
      {
        "id": 53,
        "label": "invoke (& ix , & [ctx . accounts . treasury . to_account_info () , ctx . accounts . recipient_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,]) ? ;"
      },
      {
        "id": 54,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: p"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: r"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: r"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: p"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: b"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: s"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: loc"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: loc"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: loc"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: loc"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: loc"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 27,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 34,
        "label": "data_dep: loc"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: gross"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: net"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: fee"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: gross"
      },
      {
        "from": 35,
        "to": 38,
        "label": "data_dep: gross"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: fee"
      },
      {
        "from": 36,
        "to": 38,
        "label": "data_dep: net"
      },
      {
        "from": 35,
        "to": 38,
        "label": "data_dep: gross"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: fee"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 36,
        "to": 38,
        "label": "data_dep: net"
      },
      {
        "from": 36,
        "to": 38,
        "label": "data_dep: net"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 36,
        "to": 38,
        "label": "data_dep: net"
      },
      {
        "from": 36,
        "to": 39,
        "label": "data_dep: net"
      },
      {
        "from": 35,
        "to": 39,
        "label": "data_dep: gross"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: fee"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: add"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: i"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: add"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: add"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: p"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: add"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: add"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: i"
      },
      {
        "from": 16,
        "to": 43,
        "label": "data_dep: p"
      },
      {
        "from": 41,
        "to": 44,
        "label": "data_dep: i"
      },
      {
        "from": 41,
        "to": 44,
        "label": "data_dep: i"
      },
      {
        "from": 36,
        "to": 45,
        "label": "data_dep: net"
      },
      {
        "from": 36,
        "to": 45,
        "label": "data_dep: net"
      },
      {
        "from": 40,
        "to": 45,
        "label": "data_dep: add"
      },
      {
        "from": 46,
        "to": 46,
        "label": "def: cool"
      },
      {
        "from": 46,
        "to": 47,
        "label": "data_dep: cool"
      },
      {
        "from": 16,
        "to": 47,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 47,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 47,
        "label": "data_dep: p"
      },
      {
        "from": 46,
        "to": 47,
        "label": "data_dep: cool"
      },
      {
        "from": 46,
        "to": 47,
        "label": "data_dep: cool"
      },
      {
        "from": 16,
        "to": 48,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 48,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 48,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 49,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 49,
        "label": "data_dep: p"
      },
      {
        "from": 46,
        "to": 50,
        "label": "data_dep: cool"
      },
      {
        "from": 46,
        "to": 50,
        "label": "data_dep: cool"
      },
      {
        "from": 36,
        "to": 51,
        "label": "data_dep: net"
      },
      {
        "from": 52,
        "to": 52,
        "label": "def: ix"
      },
      {
        "from": 36,
        "to": 52,
        "label": "data_dep: net"
      },
      {
        "from": 52,
        "to": 53,
        "label": "data_dep: ix"
      }
    ]
  }
]