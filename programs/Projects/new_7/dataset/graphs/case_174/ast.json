[
  {
    "name": "note",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Note >",
      "value: u64",
      "pay: u64"
    ],
    "attributes": [],
    "body": [
      "let mut d = value . to_le_bytes () . to_vec () ;",
      "d . insert (0 , 8) ;",
      "invoke (& Instruction { program_id : FIXED_MARK_ID , accounts : [AccountMeta :: new (ctx . accounts . mark_slot . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] . into () , data : d , } , & [ctx . accounts . mark_hint . to_account_info () , ctx . accounts . mark_slot . to_account_info () , ctx . accounts . user . to_account_info ()]) ? ;",
      "let mut prog = ctx . accounts . push_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "prog = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "invoke (& Instruction { program_id : * prog . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . stream . key () , false) , AccountMeta :: new_readonly (ctx . accounts . user . key () , false) ,] , data : pay . to_le_bytes () . to_vec () , } , & [prog , ctx . accounts . stream . to_account_info () , ctx . accounts . user . to_account_info ()]) ? ;",
      "token :: transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . reserve . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . reserve_authority . to_account_info () }) , pay) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Note",
    "node_type": "struct",
    "fields": [
      {
        "name": "mark_slot",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "mark_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "stream",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "push_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "reserve",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "reserve_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]