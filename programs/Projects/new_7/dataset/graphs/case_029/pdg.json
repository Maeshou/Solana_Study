[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "floor: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cfg = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 2,
        "label": "cfg . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "cfg . floor = floor ;"
      },
      {
        "id": 4,
        "label": "cfg . counter = 0 ;"
      },
      {
        "id": 5,
        "label": "cfg . buffer = 0 ;"
      },
      {
        "id": 6,
        "label": "cfg . score = 0 ;"
      },
      {
        "id": 7,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while i < 8 { if i % 2 == 0 { cfg . buffer = cfg . buffer . saturating_add (2) ; cfg . score = cfg . score . saturating_add (1) ; } else { if cfg . buffer > 0 { cfg . buffer = cfg . buffer . saturating_sub (1) ; } cfg . score = cfg . score . saturating_add (2) ; } i = i . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "if i % 2 == 0 { cfg . buffer = cfg . buffer . saturating_add (2) ; cfg . score = cfg . score . saturating_add (1) ; } else { if cfg . buffer > 0 { cfg . buffer = cfg . buffer . saturating_sub (1) ; } cfg . score = cfg . score . saturating_add (2) ; }"
      },
      {
        "id": 10,
        "label": "cfg . buffer = cfg . buffer . saturating_add (2) ;"
      },
      {
        "id": 11,
        "label": "cfg . score = cfg . score . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "if cfg . buffer > 0 { cfg . buffer = cfg . buffer . saturating_sub (1) ; }"
      },
      {
        "id": 13,
        "label": "cfg . buffer = cfg . buffer . saturating_sub (1) ;"
      },
      {
        "id": 14,
        "label": "cfg . score = cfg . score . saturating_add (2) ;"
      },
      {
        "id": 15,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cfg"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: cfg"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: cfg"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: cfg"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "proxy_like_transfer",
    "inputs": [
      "ctx: Context < ProxyLike >",
      "target_program: Pubkey",
      "raw: Vec < u8 >",
      "base: u64",
      "label: String"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let cfg = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 19,
        "label": "require ! (cfg . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 20,
        "label": "let b = label . as_bytes () ;"
      },
      {
        "id": 21,
        "label": "let mut pos = 0usize ;"
      },
      {
        "id": 22,
        "label": "let mut wave : u64 = 0 ;"
      },
      {
        "id": 23,
        "label": "while pos < b . len () { wave = wave . saturating_add ((b [pos] as u64) % 13 + 1) ; if pos % 3 == 0 { cfg . counter = cfg . counter . saturating_add (1) ; } else { cfg . buffer = cfg . buffer . saturating_add (1) ; } pos += 1 ; }"
      },
      {
        "id": 24,
        "label": "wave = wave . saturating_add ((b [pos] as u64) % 13 + 1) ;"
      },
      {
        "id": 25,
        "label": "if pos % 3 == 0 { cfg . counter = cfg . counter . saturating_add (1) ; } else { cfg . buffer = cfg . buffer . saturating_add (1) ; }"
      },
      {
        "id": 26,
        "label": "cfg . counter = cfg . counter . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "cfg . buffer = cfg . buffer . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "pos += 1 ;"
      },
      {
        "id": 29,
        "label": "cfg . score = cfg . score . saturating_add ((wave % 100) as u32) ;"
      },
      {
        "id": 30,
        "label": "let mut amt = base ;"
      },
      {
        "id": 31,
        "label": "let mut step = 0u8 ;"
      },
      {
        "id": 32,
        "label": "while step < 6 { let bump = ((cfg . buffer % 9) as u64) + ((cfg . counter % 7) as u64) ; amt = amt . saturating_add (bump) ; if amt > cfg . floor . saturating_mul (10) { amt = amt . saturating_sub (step as u64) ; } step = step . saturating_add (1) ; }"
      },
      {
        "id": 33,
        "label": "let bump = ((cfg . buffer % 9) as u64) + ((cfg . counter % 7) as u64) ;"
      },
      {
        "id": 34,
        "label": "amt = amt . saturating_add (bump) ;"
      },
      {
        "id": 35,
        "label": "if amt > cfg . floor . saturating_mul (10) { amt = amt . saturating_sub (step as u64) ; }"
      },
      {
        "id": 36,
        "label": "amt = amt . saturating_sub (step as u64) ;"
      },
      {
        "id": 37,
        "label": "step = step . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "let mut metas = Vec :: new () ;"
      },
      {
        "id": 39,
        "label": "for a in ctx . remaining_accounts . iter () { metas . push (AccountMeta { pubkey : a . key () , is_signer : a . is_signer , is_writable : a . is_writable , }) ; }"
      },
      {
        "id": 40,
        "label": "metas . push (AccountMeta { pubkey : a . key () , is_signer : a . is_signer , is_writable : a . is_writable , }) ;"
      },
      {
        "id": 41,
        "label": "let ix = Instruction { program_id : target_program , accounts : metas , data : raw , } ;"
      },
      {
        "id": 42,
        "label": "invoke (& ix , ctx . remaining_accounts) ? ;"
      },
      {
        "id": 43,
        "label": "let mut cool = 0u8 ;"
      },
      {
        "id": 44,
        "label": "while cool < 5 { if cfg . score > 0 { cfg . score = cfg . score . saturating_sub (1) ; } if cool % 2 == 0 && cfg . floor > 0 { cfg . floor = cfg . floor . saturating_sub (1) ; } cool = cool . saturating_add (1) ; }"
      },
      {
        "id": 45,
        "label": "if cfg . score > 0 { cfg . score = cfg . score . saturating_sub (1) ; }"
      },
      {
        "id": 46,
        "label": "cfg . score = cfg . score . saturating_sub (1) ;"
      },
      {
        "id": 47,
        "label": "if cool % 2 == 0 && cfg . floor > 0 { cfg . floor = cfg . floor . saturating_sub (1) ; }"
      },
      {
        "id": 48,
        "label": "cfg . floor = cfg . floor . saturating_sub (1) ;"
      },
      {
        "id": 49,
        "label": "cool = cool . saturating_add (1) ;"
      },
      {
        "id": 50,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: cfg"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: b"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: pos"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: pos"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: pos"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: cfg"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: pos"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: cfg"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: pos"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: cfg"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: amt"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: step"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: cfg"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: cfg"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: amt"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: step"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: step"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: step"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: bump"
      },
      {
        "from": 18,
        "to": 33,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 33,
        "label": "data_dep: cfg"
      },
      {
        "from": 30,
        "to": 34,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 34,
        "label": "data_dep: amt"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: bump"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: amt"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: cfg"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: amt"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: step"
      },
      {
        "from": 30,
        "to": 36,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 36,
        "label": "data_dep: amt"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: step"
      },
      {
        "from": 31,
        "to": 37,
        "label": "data_dep: step"
      },
      {
        "from": 31,
        "to": 37,
        "label": "data_dep: step"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: metas"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: metas"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: metas"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: ix"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: metas"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: ix"
      },
      {
        "from": 43,
        "to": 43,
        "label": "def: cool"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: cfg"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: cool"
      },
      {
        "from": 43,
        "to": 44,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 45,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 45,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 45,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 46,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 46,
        "label": "data_dep: cfg"
      },
      {
        "from": 43,
        "to": 47,
        "label": "data_dep: cool"
      },
      {
        "from": 18,
        "to": 47,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 47,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 47,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 48,
        "label": "data_dep: cfg"
      },
      {
        "from": 18,
        "to": 48,
        "label": "data_dep: cfg"
      },
      {
        "from": 43,
        "to": 49,
        "label": "data_dep: cool"
      },
      {
        "from": 43,
        "to": 49,
        "label": "data_dep: cool"
      }
    ]
  }
]