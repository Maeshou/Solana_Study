[
  {
    "name": "ping",
    "inputs": [
      "ctx: Context < Ping >",
      "ticks: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . beacon ;"
      },
      {
        "id": 2,
        "label": "st . counter += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut program = ctx . accounts . emit_prog . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { st . path_a += ticks ; program = ctx . remaining_accounts [0] . clone () ; } else { st . path_b += ticks ; }"
      },
      {
        "id": 5,
        "label": "st . path_a += ticks ;"
      },
      {
        "id": 6,
        "label": "program = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 7,
        "label": "st . path_b += ticks ;"
      },
      {
        "id": 8,
        "label": "let init = (Clock :: get () ? . slot & 15) as u64 + 1 ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0u64 ;"
      },
      {
        "id": 10,
        "label": "let br = BeaconBridge { tower : ctx . accounts . tower_buf . to_account_info () , ether : ctx . accounts . ether_buf . to_account_info () } ;"
      },
      {
        "id": 11,
        "label": "while i < ticks { let freq = init + (i & 3) ; if (freq & 1) > 0 { let cx = br . as_cpi (program . clone ()) ; br . pulse (cx , freq + st . counter) ? ; } i += 1 ; }"
      },
      {
        "id": 12,
        "label": "let freq = init + (i & 3) ;"
      },
      {
        "id": 13,
        "label": "if (freq & 1) > 0 { let cx = br . as_cpi (program . clone ()) ; br . pulse (cx , freq + st . counter) ? ; }"
      },
      {
        "id": 14,
        "label": "let cx = br . as_cpi (program . clone ()) ;"
      },
      {
        "id": 15,
        "label": "br . pulse (cx , freq + st . counter) ? ;"
      },
      {
        "id": 16,
        "label": "i += 1 ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: init"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: br"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: init"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: program"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: br"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: freq"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: init"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: freq"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: program"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: br"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: freq"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: cx"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 14,
        "label": "data_dep: program"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: br"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: cx"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: freq"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: st"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: i"
      }
    ]
  }
]