[
  {
    "name": "setup",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Setup >",
      "id_a: Pubkey",
      "id_b: Pubkey"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "s . operator = ctx . accounts . operator . key () ;",
      "s . a = id_a ;",
      "s . b = id_b ;",
      "s . gauge = 0 ;",
      "s . balance = 0 ;",
      "let mut z = 0u8 ;",
      "while z < 6",
      "{",
      "s . gauge = s . gauge . saturating_add ((z as u32) + 1) ;",
      "z = z . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "pay",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Pay >",
      "base: u64",
      "hint: String"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "require ! (s . operator == ctx . accounts . operator . key () , Errs :: Op) ;",
      "let mut id = s . a ;",
      "if hint . len () > 8",
      "{",
      "id = s . b ;",
      "} else",
      "{",
      "let mut t = 0u8 ;",
      "while t < 4",
      "{",
      "if s . gauge > 0 { s . gauge = s . gauge . saturating_sub (1) ;",
      "} t = t . saturating_add (1) ;",
      "}",
      "}",
      "let mut w : u64 = 6 ;",
      "let b = hint . as_bytes () ;",
      "let mut i = 0usize ;",
      "while i < b . len ()",
      "{",
      "w = w . saturating_add ((b [i] as u64) % 9 + 1) ;",
      "i += 1 ;",
      "}",
      "let mut pay = base . saturating_mul (w) ;",
      "let mut damp = 0u64 ;",
      "let mut k = 0u8 ;",
      "while k < 5",
      "{",
      "damp = damp . saturating_add ((k as u64) + ((s . gauge % 7) as u64)) ;",
      "k = k . saturating_add (1) ;",
      "}",
      "pay = pay . saturating_add (damp) ;",
      "let ix = spl_token :: instruction :: transfer (id , ctx . accounts . vault . key () , ctx . accounts . worker_ata . key () , ctx . accounts . operator . key () , & [] , pay ,) ? ;",
      "invoke (& ix , & [ctx . accounts . vault . to_account_info () , ctx . accounts . worker_ata . to_account_info () , ctx . accounts . operator . to_account_info () ,]) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "State",
    "node_type": "struct",
    "fields": [
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "a",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "b",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "gauge",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "balance",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Setup",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (init , payer = operator , space = 8 + 32 + 32 + 32 + 4 + 8)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "operator",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pay",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "operator",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "worker_ata",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]