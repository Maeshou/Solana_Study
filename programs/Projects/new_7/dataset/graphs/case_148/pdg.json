[
  {
    "name": "pass",
    "inputs": [
      "ctx: Context < Pass >",
      "toll: u64",
      "stamp: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if stamp & 1 == 1 { ctx . accounts . road . flags ^= stamp ; }"
      },
      {
        "id": 2,
        "label": "ctx . accounts . road . flags ^= stamp ;"
      },
      {
        "id": 3,
        "label": "let mut logger = ctx . accounts . log_program . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { logger = ctx . remaining_accounts [0] . clone () ; ctx . accounts . road . routes += 1 ; }"
      },
      {
        "id": 5,
        "label": "logger = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . road . routes += 1 ;"
      },
      {
        "id": 7,
        "label": "let lb = TollLogBridge { book : ctx . accounts . log_book . to_account_info () , user : ctx . accounts . traveler_wallet . to_account_info () } ;"
      },
      {
        "id": 8,
        "label": "let cx = lb . as_cpi (logger . clone ()) ;"
      },
      {
        "id": 9,
        "label": "lb . write (cx , stamp . to_le_bytes () . to_vec ()) ? ;"
      },
      {
        "id": 10,
        "label": "let t = Transfer { from : ctx . accounts . traveler_token . to_account_info () , to : ctx . accounts . treasury_token . to_account_info () , authority : ctx . accounts . traveler_wallet . to_account_info () , } ;"
      },
      {
        "id": 11,
        "label": "let tctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , t) ;"
      },
      {
        "id": 12,
        "label": "token :: transfer (tctx , toll) ? ;"
      },
      {
        "id": 13,
        "label": "for _ in 0 .. (toll % 3) { ctx . accounts . road . hash = ctx . accounts . road . hash . rotate_left (5) ; }"
      },
      {
        "id": 14,
        "label": "ctx . accounts . road . hash = ctx . accounts . road . hash . rotate_left (5) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: logger"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: logger"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: logger"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: lb"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: cx"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: lb"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: logger"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: lb"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: cx"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: t"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: tctx"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: tctx"
      }
    ]
  }
]