[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . state ;"
      },
      {
        "id": 2,
        "label": "s . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "s . fee_bps = if fee_bps > 1500 { 1500 } else { fee_bps } ;"
      },
      {
        "id": 4,
        "label": "1500"
      },
      {
        "id": 5,
        "label": "fee_bps"
      },
      {
        "id": 6,
        "label": "s . round = 0 ;"
      },
      {
        "id": 7,
        "label": "s . last_note = 0 ;"
      },
      {
        "id": 8,
        "label": "s . total_emissions = 0 ;"
      },
      {
        "id": 9,
        "label": "let mut warm = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while warm < 4 { s . round = s . round . saturating_add ((warm as u32) + 1) ; s . last_note = s . last_note . saturating_add (3) ; warm = warm . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "s . round = s . round . saturating_add ((warm as u32) + 1) ;"
      },
      {
        "id": 12,
        "label": "s . last_note = s . last_note . saturating_add (3) ;"
      },
      {
        "id": 13,
        "label": "warm = warm . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: warm"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: warm"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: warm"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: warm"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: warm"
      }
    ]
  },
  {
    "name": "settle",
    "inputs": [
      "ctx: Context < Settle >",
      "base: u64",
      "depth: u8",
      "note: String"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let s = & mut ctx . accounts . state ;"
      },
      {
        "id": 17,
        "label": "require ! (s . admin == ctx . accounts . admin . key () , Errs :: BadAdmin) ;"
      },
      {
        "id": 18,
        "label": "let mut weight : u64 = 7 ;"
      },
      {
        "id": 19,
        "label": "let mut j = 0u8 ;"
      },
      {
        "id": 20,
        "label": "while j < depth { if j % 2 == 0 { weight = weight . saturating_add (2) ; } else { weight = weight . saturating_add (1) ; } if j < 3 { weight = weight . saturating_add ((note . len () as u64) % 3) ; } j = j . saturating_add (1) ; }"
      },
      {
        "id": 21,
        "label": "if j % 2 == 0 { weight = weight . saturating_add (2) ; } else { weight = weight . saturating_add (1) ; }"
      },
      {
        "id": 22,
        "label": "weight = weight . saturating_add (2) ;"
      },
      {
        "id": 23,
        "label": "weight = weight . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "if j < 3 { weight = weight . saturating_add ((note . len () as u64) % 3) ; }"
      },
      {
        "id": 25,
        "label": "weight = weight . saturating_add ((note . len () as u64) % 3) ;"
      },
      {
        "id": 26,
        "label": "j = j . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "if note . len () > 0 { s . last_note = note . len () as u32 ; let bytes = note . as_bytes () ; let mut walk = 0usize ; let mut rolling : u64 = 0 ; while walk < bytes . len () { let inc = (bytes [walk] as u64) % 11 ; rolling = rolling . saturating_add (inc) ; if walk % 2 == 0 { rolling = rolling . saturating_add (1) ; } walk += 1 ; } weight = weight . saturating_add (rolling % 5) ; }"
      },
      {
        "id": 28,
        "label": "s . last_note = note . len () as u32 ;"
      },
      {
        "id": 29,
        "label": "let bytes = note . as_bytes () ;"
      },
      {
        "id": 30,
        "label": "let mut walk = 0usize ;"
      },
      {
        "id": 31,
        "label": "let mut rolling : u64 = 0 ;"
      },
      {
        "id": 32,
        "label": "while walk < bytes . len () { let inc = (bytes [walk] as u64) % 11 ; rolling = rolling . saturating_add (inc) ; if walk % 2 == 0 { rolling = rolling . saturating_add (1) ; } walk += 1 ; }"
      },
      {
        "id": 33,
        "label": "let inc = (bytes [walk] as u64) % 11 ;"
      },
      {
        "id": 34,
        "label": "rolling = rolling . saturating_add (inc) ;"
      },
      {
        "id": 35,
        "label": "if walk % 2 == 0 { rolling = rolling . saturating_add (1) ; }"
      },
      {
        "id": 36,
        "label": "rolling = rolling . saturating_add (1) ;"
      },
      {
        "id": 37,
        "label": "walk += 1 ;"
      },
      {
        "id": 38,
        "label": "weight = weight . saturating_add (rolling % 5) ;"
      },
      {
        "id": 39,
        "label": "let gross = base . saturating_mul (weight) ;"
      },
      {
        "id": 40,
        "label": "let fee = gross . saturating_mul (s . fee_bps as u64) / 10_000 ;"
      },
      {
        "id": 41,
        "label": "let mut net = 0u64 ;"
      },
      {
        "id": 42,
        "label": "if gross > fee { net = gross - fee ; let mut partitions = [0u64 ; 3] ; let mut t = 0 ; while t < 3 { partitions [t] = (net / 3) . saturating_add ((t as u64) * 2) ; t += 1 ; } let mut regroup = 0u64 ; let mut u = 0 ; while u < partitions . len () { let mut hop = 0 ; let mut block = partitions [u] ; while hop < 4 { block = block . saturating_add ((hop + u) as u64) ; hop += 1 ; } regroup = regroup . saturating_add (block) ; u += 1 ; } s . round = s . round . saturating_add (2) ; let mut tick = 0 ; while tick < 5 { s . total_emissions = s . total_emissions . saturating_add ((regroup % 9) + (tick as u64)) ; tick += 1 ; } if s . last_note > 8 { net = regroup . saturating_add ((s . last_note as u64) / 2) ; } else { net = regroup ; } } else { let mut backoff_rounds = 0 ; while backoff_rounds < 4 { if s . fee_bps > 0 { s . fee_bps = s . fee_bps . saturating_sub (1) ; } if s . round > 0 { s . round = s . round . saturating_sub (1) ; } if s . last_note > 2 { s . last_note = s . last_note . saturating_sub (2) ; } backoff_rounds = backoff_rounds . saturating_add (1) ; } let mut cool = 0 ; while cool < depth { if s . total_emissions > 0 { s . total_emissions = s . total_emissions . saturating_sub (1) ; } cool = cool . saturating_add (1) ; } net = 0 ; }"
      },
      {
        "id": 43,
        "label": "net = gross - fee ;"
      },
      {
        "id": 44,
        "label": "let mut partitions = [0u64 ; 3] ;"
      },
      {
        "id": 45,
        "label": "let mut t = 0 ;"
      },
      {
        "id": 46,
        "label": "while t < 3 { partitions [t] = (net / 3) . saturating_add ((t as u64) * 2) ; t += 1 ; }"
      },
      {
        "id": 47,
        "label": "partitions [t] = (net / 3) . saturating_add ((t as u64) * 2) ;"
      },
      {
        "id": 48,
        "label": "t += 1 ;"
      },
      {
        "id": 49,
        "label": "let mut regroup = 0u64 ;"
      },
      {
        "id": 50,
        "label": "let mut u = 0 ;"
      },
      {
        "id": 51,
        "label": "while u < partitions . len () { let mut hop = 0 ; let mut block = partitions [u] ; while hop < 4 { block = block . saturating_add ((hop + u) as u64) ; hop += 1 ; } regroup = regroup . saturating_add (block) ; u += 1 ; }"
      },
      {
        "id": 52,
        "label": "let mut hop = 0 ;"
      },
      {
        "id": 53,
        "label": "let mut block = partitions [u] ;"
      },
      {
        "id": 54,
        "label": "while hop < 4 { block = block . saturating_add ((hop + u) as u64) ; hop += 1 ; }"
      },
      {
        "id": 55,
        "label": "block = block . saturating_add ((hop + u) as u64) ;"
      },
      {
        "id": 56,
        "label": "hop += 1 ;"
      },
      {
        "id": 57,
        "label": "regroup = regroup . saturating_add (block) ;"
      },
      {
        "id": 58,
        "label": "u += 1 ;"
      },
      {
        "id": 59,
        "label": "s . round = s . round . saturating_add (2) ;"
      },
      {
        "id": 60,
        "label": "let mut tick = 0 ;"
      },
      {
        "id": 61,
        "label": "while tick < 5 { s . total_emissions = s . total_emissions . saturating_add ((regroup % 9) + (tick as u64)) ; tick += 1 ; }"
      },
      {
        "id": 62,
        "label": "s . total_emissions = s . total_emissions . saturating_add ((regroup % 9) + (tick as u64)) ;"
      },
      {
        "id": 63,
        "label": "tick += 1 ;"
      },
      {
        "id": 64,
        "label": "if s . last_note > 8 { net = regroup . saturating_add ((s . last_note as u64) / 2) ; } else { net = regroup ; }"
      },
      {
        "id": 65,
        "label": "net = regroup . saturating_add ((s . last_note as u64) / 2) ;"
      },
      {
        "id": 66,
        "label": "net = regroup ;"
      },
      {
        "id": 67,
        "label": "let mut backoff_rounds = 0 ;"
      },
      {
        "id": 68,
        "label": "while backoff_rounds < 4 { if s . fee_bps > 0 { s . fee_bps = s . fee_bps . saturating_sub (1) ; } if s . round > 0 { s . round = s . round . saturating_sub (1) ; } if s . last_note > 2 { s . last_note = s . last_note . saturating_sub (2) ; } backoff_rounds = backoff_rounds . saturating_add (1) ; }"
      },
      {
        "id": 69,
        "label": "if s . fee_bps > 0 { s . fee_bps = s . fee_bps . saturating_sub (1) ; }"
      },
      {
        "id": 70,
        "label": "s . fee_bps = s . fee_bps . saturating_sub (1) ;"
      },
      {
        "id": 71,
        "label": "if s . round > 0 { s . round = s . round . saturating_sub (1) ; }"
      },
      {
        "id": 72,
        "label": "s . round = s . round . saturating_sub (1) ;"
      },
      {
        "id": 73,
        "label": "if s . last_note > 2 { s . last_note = s . last_note . saturating_sub (2) ; }"
      },
      {
        "id": 74,
        "label": "s . last_note = s . last_note . saturating_sub (2) ;"
      },
      {
        "id": 75,
        "label": "backoff_rounds = backoff_rounds . saturating_add (1) ;"
      },
      {
        "id": 76,
        "label": "let mut cool = 0 ;"
      },
      {
        "id": 77,
        "label": "while cool < depth { if s . total_emissions > 0 { s . total_emissions = s . total_emissions . saturating_sub (1) ; } cool = cool . saturating_add (1) ; }"
      },
      {
        "id": 78,
        "label": "if s . total_emissions > 0 { s . total_emissions = s . total_emissions . saturating_sub (1) ; }"
      },
      {
        "id": 79,
        "label": "s . total_emissions = s . total_emissions . saturating_sub (1) ;"
      },
      {
        "id": 80,
        "label": "cool = cool . saturating_add (1) ;"
      },
      {
        "id": 81,
        "label": "net = 0 ;"
      },
      {
        "id": 82,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . treasury . key () , ctx . accounts . member_ata . key () , ctx . accounts . admin . key () , & [] , net ,) ? ;"
      },
      {
        "id": 83,
        "label": "invoke (& ix , & [ctx . accounts . treasury . to_account_info () , ctx . accounts . member_ata . to_account_info () , ctx . accounts . admin . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 84,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: s"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: j"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: j"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: j"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: bytes"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: walk"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: walk"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: bytes"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: bytes"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: walk"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: walk"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: walk"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: inc"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: bytes"
      },
      {
        "from": 30,
        "to": 33,
        "label": "data_dep: walk"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: inc"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: walk"
      },
      {
        "from": 30,
        "to": 37,
        "label": "data_dep: walk"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: gross"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: fee"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: gross"
      },
      {
        "from": 16,
        "to": 40,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: net"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: gross"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: fee"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: net"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: gross"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: fee"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: net"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: net"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: net"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: net"
      },
      {
        "from": 41,
        "to": 43,
        "label": "data_dep: net"
      },
      {
        "from": 39,
        "to": 43,
        "label": "data_dep: gross"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: fee"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: partitions"
      },
      {
        "from": 45,
        "to": 45,
        "label": "def: t"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: t"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: partitions"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: t"
      },
      {
        "from": 41,
        "to": 46,
        "label": "data_dep: net"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: t"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: t"
      },
      {
        "from": 44,
        "to": 47,
        "label": "data_dep: partitions"
      },
      {
        "from": 45,
        "to": 47,
        "label": "data_dep: t"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: net"
      },
      {
        "from": 45,
        "to": 47,
        "label": "data_dep: t"
      },
      {
        "from": 45,
        "to": 48,
        "label": "data_dep: t"
      },
      {
        "from": 49,
        "to": 49,
        "label": "def: regroup"
      },
      {
        "from": 50,
        "to": 50,
        "label": "def: u"
      },
      {
        "from": 50,
        "to": 51,
        "label": "data_dep: u"
      },
      {
        "from": 44,
        "to": 51,
        "label": "data_dep: partitions"
      },
      {
        "from": 44,
        "to": 51,
        "label": "data_dep: partitions"
      },
      {
        "from": 50,
        "to": 51,
        "label": "data_dep: u"
      },
      {
        "from": 50,
        "to": 51,
        "label": "data_dep: u"
      },
      {
        "from": 49,
        "to": 51,
        "label": "data_dep: regroup"
      },
      {
        "from": 49,
        "to": 51,
        "label": "data_dep: regroup"
      },
      {
        "from": 50,
        "to": 51,
        "label": "data_dep: u"
      },
      {
        "from": 52,
        "to": 52,
        "label": "def: hop"
      },
      {
        "from": 53,
        "to": 53,
        "label": "def: block"
      },
      {
        "from": 44,
        "to": 53,
        "label": "data_dep: partitions"
      },
      {
        "from": 50,
        "to": 53,
        "label": "data_dep: u"
      },
      {
        "from": 52,
        "to": 54,
        "label": "data_dep: hop"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: block"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: block"
      },
      {
        "from": 52,
        "to": 54,
        "label": "data_dep: hop"
      },
      {
        "from": 50,
        "to": 54,
        "label": "data_dep: u"
      },
      {
        "from": 52,
        "to": 54,
        "label": "data_dep: hop"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: block"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: block"
      },
      {
        "from": 52,
        "to": 55,
        "label": "data_dep: hop"
      },
      {
        "from": 50,
        "to": 55,
        "label": "data_dep: u"
      },
      {
        "from": 52,
        "to": 56,
        "label": "data_dep: hop"
      },
      {
        "from": 49,
        "to": 57,
        "label": "data_dep: regroup"
      },
      {
        "from": 49,
        "to": 57,
        "label": "data_dep: regroup"
      },
      {
        "from": 53,
        "to": 57,
        "label": "data_dep: block"
      },
      {
        "from": 50,
        "to": 58,
        "label": "data_dep: u"
      },
      {
        "from": 16,
        "to": 59,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 59,
        "label": "data_dep: s"
      },
      {
        "from": 60,
        "to": 60,
        "label": "def: tick"
      },
      {
        "from": 60,
        "to": 61,
        "label": "data_dep: tick"
      },
      {
        "from": 16,
        "to": 61,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 61,
        "label": "data_dep: s"
      },
      {
        "from": 49,
        "to": 61,
        "label": "data_dep: regroup"
      },
      {
        "from": 60,
        "to": 61,
        "label": "data_dep: tick"
      },
      {
        "from": 60,
        "to": 61,
        "label": "data_dep: tick"
      },
      {
        "from": 16,
        "to": 62,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 62,
        "label": "data_dep: s"
      },
      {
        "from": 49,
        "to": 62,
        "label": "data_dep: regroup"
      },
      {
        "from": 60,
        "to": 62,
        "label": "data_dep: tick"
      },
      {
        "from": 60,
        "to": 63,
        "label": "data_dep: tick"
      },
      {
        "from": 16,
        "to": 64,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 64,
        "label": "data_dep: net"
      },
      {
        "from": 49,
        "to": 64,
        "label": "data_dep: regroup"
      },
      {
        "from": 16,
        "to": 64,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 64,
        "label": "data_dep: net"
      },
      {
        "from": 49,
        "to": 64,
        "label": "data_dep: regroup"
      },
      {
        "from": 41,
        "to": 65,
        "label": "data_dep: net"
      },
      {
        "from": 49,
        "to": 65,
        "label": "data_dep: regroup"
      },
      {
        "from": 16,
        "to": 65,
        "label": "data_dep: s"
      },
      {
        "from": 41,
        "to": 66,
        "label": "data_dep: net"
      },
      {
        "from": 49,
        "to": 66,
        "label": "data_dep: regroup"
      },
      {
        "from": 67,
        "to": 67,
        "label": "def: backoff_rounds"
      },
      {
        "from": 67,
        "to": 68,
        "label": "data_dep: backoff_rounds"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 68,
        "label": "data_dep: s"
      },
      {
        "from": 67,
        "to": 68,
        "label": "data_dep: backoff_rounds"
      },
      {
        "from": 67,
        "to": 68,
        "label": "data_dep: backoff_rounds"
      },
      {
        "from": 16,
        "to": 69,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 69,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 69,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 70,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 70,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 71,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 71,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 71,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 72,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 72,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 73,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 73,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 73,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 74,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 74,
        "label": "data_dep: s"
      },
      {
        "from": 67,
        "to": 75,
        "label": "data_dep: backoff_rounds"
      },
      {
        "from": 67,
        "to": 75,
        "label": "data_dep: backoff_rounds"
      },
      {
        "from": 76,
        "to": 76,
        "label": "def: cool"
      },
      {
        "from": 76,
        "to": 77,
        "label": "data_dep: cool"
      },
      {
        "from": 16,
        "to": 77,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 77,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 77,
        "label": "data_dep: s"
      },
      {
        "from": 76,
        "to": 77,
        "label": "data_dep: cool"
      },
      {
        "from": 76,
        "to": 77,
        "label": "data_dep: cool"
      },
      {
        "from": 16,
        "to": 78,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 78,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 78,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 79,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 79,
        "label": "data_dep: s"
      },
      {
        "from": 76,
        "to": 80,
        "label": "data_dep: cool"
      },
      {
        "from": 76,
        "to": 80,
        "label": "data_dep: cool"
      },
      {
        "from": 41,
        "to": 81,
        "label": "data_dep: net"
      },
      {
        "from": 82,
        "to": 82,
        "label": "def: ix"
      },
      {
        "from": 41,
        "to": 82,
        "label": "data_dep: net"
      },
      {
        "from": 82,
        "to": 83,
        "label": "data_dep: ix"
      }
    ]
  }
]