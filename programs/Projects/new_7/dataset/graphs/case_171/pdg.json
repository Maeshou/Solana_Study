[
  {
    "name": "dynamic_signal",
    "inputs": [
      "_ctx: CpiContext < '_ , '_ , '_ , 'info , DynSignalAccounts < 'info > >",
      "_payload: [u8 ; 16]"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "safe_transfer",
    "inputs": [
      "token_program: & Program < Token >",
      "from: & Account < TokenAccount >",
      "to: & Account < TokenAccount >",
      "auth: & AccountInfo",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 2,
        "label": "Entry"
      },
      {
        "id": 3,
        "label": "token :: transfer (CpiContext :: new (token_program . to_account_info () , Transfer { from : from . to_account_info () , to : to . to_account_info () , authority : auth . clone () , } ,) , amount ,)"
      }
    ],
    "edges": []
  },
  {
    "name": "signal_and_pay",
    "inputs": [
      "ctx: Context < SignalAndPay >",
      "seed: u64",
      "tip: u64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "if seed > 100 { ctx . accounts . sheet . high = ctx . accounts . sheet . high . saturating_add (1) ; }"
      },
      {
        "id": 6,
        "label": "ctx . accounts . sheet . high = ctx . accounts . sheet . high . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "if seed % 2 != 0 { ctx . accounts . sheet . odd = ctx . accounts . sheet . odd . wrapping_add (1) ; }"
      },
      {
        "id": 8,
        "label": "ctx . accounts . sheet . odd = ctx . accounts . sheet . odd . wrapping_add (1) ;"
      },
      {
        "id": 9,
        "label": "safe_transfer (& ctx . accounts . token_program , & ctx . accounts . treasury , & ctx . accounts . user_token , & ctx . accounts . treasury_authority , tip ,) ? ;"
      },
      {
        "id": 10,
        "label": "let mut program_ai = ctx . accounts . signal_program . to_account_info () ;"
      },
      {
        "id": 11,
        "label": "if ! ctx . remaining_accounts . is_empty () { program_ai = ctx . remaining_accounts [0] . clone () ; ctx . accounts . sheet . paths = ctx . accounts . sheet . paths . saturating_add (3) ; }"
      },
      {
        "id": 12,
        "label": "program_ai = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 13,
        "label": "ctx . accounts . sheet . paths = ctx . accounts . sheet . paths . saturating_add (3) ;"
      },
      {
        "id": 14,
        "label": "let mut payload = [0u8 ; 16] ;"
      },
      {
        "id": 15,
        "label": "payload [0 .. 8] . copy_from_slice (& seed . rotate_left (7) . to_le_bytes ()) ;"
      },
      {
        "id": 16,
        "label": "payload [8 .. 16] . copy_from_slice (& tip . rotate_right (5) . to_le_bytes ()) ;"
      },
      {
        "id": 17,
        "label": "let cpi_ctx = CpiContext :: new (program_ai , DynSignalAccounts { board : ctx . accounts . signal_board . to_account_info () , user : ctx . accounts . user . to_account_info () , } ,) ;"
      },
      {
        "id": 18,
        "label": "dynamic_signal (cpi_ctx , payload) ? ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: program_ai"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: program_ai"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: program_ai"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: payload"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: payload"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: payload"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: cpi_ctx"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: program_ai"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: payload"
      }
    ]
  }
]