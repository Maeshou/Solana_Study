[
  {
    "name": "slice",
    "inputs": [
      "ctx: Context < Slice >",
      "total: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . slice_state ;"
      },
      {
        "id": 2,
        "label": "st . invokes += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut program = ctx . accounts . default_prog . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { st . branch_a += total ; program = ctx . remaining_accounts [0] . clone () ; } else { st . branch_b += total ; }"
      },
      {
        "id": 5,
        "label": "st . branch_a += total ;"
      },
      {
        "id": 6,
        "label": "program = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 7,
        "label": "st . branch_b += total ;"
      },
      {
        "id": 8,
        "label": "let now_slot = Clock :: get () ? . slot ;"
      },
      {
        "id": 9,
        "label": "let step = ((now_slot & 7) + 3) as u64 ;"
      },
      {
        "id": 10,
        "label": "let mut rest = total ;"
      },
      {
        "id": 11,
        "label": "let br = TimeBridge { a : ctx . accounts . buf_a . to_account_info () , b : ctx . accounts . buf_b . to_account_info () } ;"
      },
      {
        "id": 12,
        "label": "let mut round = 0u64 ;"
      },
      {
        "id": 13,
        "label": "while rest > 0 { let size = if rest > step + round { step + round } else { rest } ; let cx = br . as_cpi (program . clone ()) ; br . kick (cx , size + st . invokes) ? ; rest -= size ; round += 1 ; }"
      },
      {
        "id": 14,
        "label": "let size = if rest > step + round { step + round } else { rest } ;"
      },
      {
        "id": 15,
        "label": "step + round"
      },
      {
        "id": 16,
        "label": "rest"
      },
      {
        "id": 17,
        "label": "let cx = br . as_cpi (program . clone ()) ;"
      },
      {
        "id": 18,
        "label": "br . kick (cx , size + st . invokes) ? ;"
      },
      {
        "id": 19,
        "label": "rest -= size ;"
      },
      {
        "id": 20,
        "label": "round += 1 ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: now_slot"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: step"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: now_slot"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: rest"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: br"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: round"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: rest"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: rest"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: round"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: round"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: rest"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: program"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: br"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: st"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: rest"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: round"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: size"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: rest"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: round"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: round"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: rest"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: step"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: round"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: rest"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: cx"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 17,
        "label": "data_dep: program"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: br"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: cx"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: size"
      },
      {
        "from": 1,
        "to": 18,
        "label": "data_dep: st"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: rest"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: size"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: round"
      }
    ]
  }
]