[
  {
    "name": "spread",
    "inputs": [
      "ctx: Context < Spread >",
      "sum: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . tally ;"
      },
      {
        "id": 2,
        "label": "st . cycles += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut program = ctx . accounts . router_prog . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { st . path_a += sum ; program = ctx . remaining_accounts [0] . clone () ; } else { st . path_b += sum ; }"
      },
      {
        "id": 5,
        "label": "st . path_a += sum ;"
      },
      {
        "id": 6,
        "label": "program = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 7,
        "label": "st . path_b += sum ;"
      },
      {
        "id": 8,
        "label": "let window = (st . cycles & 7) as u64 + 2 ;"
      },
      {
        "id": 9,
        "label": "let base = sum / window + 1 ;"
      },
      {
        "id": 10,
        "label": "let br = TallyBridge { a : ctx . accounts . a_meta . to_account_info () , b : ctx . accounts . b_meta . to_account_info () , c : ctx . accounts . c_meta . to_account_info () } ;"
      },
      {
        "id": 11,
        "label": "let mut i = 0u64 ;"
      },
      {
        "id": 12,
        "label": "while i < window { let amt = base + i ; let cx = br . as_cpi (program . clone ()) ; br . cast (cx , amt) ? ; i += 1 ; }"
      },
      {
        "id": 13,
        "label": "let amt = base + i ;"
      },
      {
        "id": 14,
        "label": "let cx = br . as_cpi (program . clone ()) ;"
      },
      {
        "id": 15,
        "label": "br . cast (cx , amt) ? ;"
      },
      {
        "id": 16,
        "label": "i += 1 ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: window"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: base"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: window"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: br"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: i"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: window"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: base"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: program"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: br"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: amt"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: base"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: cx"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 14,
        "label": "data_dep: program"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: br"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: cx"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: amt"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: i"
      }
    ]
  }
]