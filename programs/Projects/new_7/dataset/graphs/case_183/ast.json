[
  {
    "name": "run",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < DoForge >",
      "spark: u64",
      "bounty: u64"
    ],
    "attributes": [],
    "body": [
      "if spark % 2 != 0",
      "{",
      "ctx . accounts . state . odd = ctx . accounts . state . odd . saturating_add (1) ;",
      "}",
      "if spark > 1000",
      "{",
      "ctx . accounts . state . big = ctx . accounts . state . big . wrapping_add (1) ;",
      "}",
      "let ix_fixed = Instruction { program_id : COUNTER_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . counter_slot . key () , false) , AccountMeta :: new_readonly (ctx . accounts . player . key () , false) ,] , data : spark . to_le_bytes () . to_vec () , } ;",
      "invoke (& ix_fixed , & [ctx . accounts . counter_hint . to_account_info () , ctx . accounts . counter_slot . to_account_info () , ctx . accounts . player . to_account_info () ,]) ? ;",
      "let mut prg = ctx . accounts . signal_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "prg = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . state . routes = ctx . accounts . state . routes . saturating_add (2) ;",
      "}",
      "let ix_dyn = Instruction { program_id : * prg . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . signal_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . player . key () , false) ,] , data : bounty . wrapping_mul (3) . to_le_bytes () . to_vec () , } ;",
      "invoke (& ix_dyn , & [prg , ctx . accounts . signal_board . to_account_info () , ctx . accounts . player . to_account_info () ,]) ? ;",
      "ctx . accounts . pay_bounty (bounty)"
    ]
  },
  {
    "name": "DoForge",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , ForgeState >"
      },
      {
        "name": "counter_slot",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "counter_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "signal_board",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "signal_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "bounty_bank",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "player_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "bank_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ForgeState",
    "node_type": "struct",
    "fields": [
      {
        "name": "odd",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "big",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "routes",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]