[
  {
    "name": "ship",
    "inputs": [
      "ctx: Context < Ship >",
      "weight: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . cargo ;"
      },
      {
        "id": 2,
        "label": "st . trips += 1 ;"
      },
      {
        "id": 3,
        "label": "let mut program = ctx . accounts . route_prog . to_account_info () ;"
      },
      {
        "id": 4,
        "label": "if ctx . remaining_accounts . len () > 0 { st . route_a += weight ; program = ctx . remaining_accounts [0] . clone () ; } else { st . route_b += weight ; }"
      },
      {
        "id": 5,
        "label": "st . route_a += weight ;"
      },
      {
        "id": 6,
        "label": "program = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 7,
        "label": "st . route_b += weight ;"
      },
      {
        "id": 8,
        "label": "let header1 = st . trips . to_le_bytes () ;"
      },
      {
        "id": 9,
        "label": "let header2 = weight . to_le_bytes () ;"
      },
      {
        "id": 10,
        "label": "let mut data = Vec :: with_capacity (24) ;"
      },
      {
        "id": 11,
        "label": "data . extend_from_slice (& header1) ;"
      },
      {
        "id": 12,
        "label": "data . extend_from_slice (& header2) ;"
      },
      {
        "id": 13,
        "label": "data . extend_from_slice (& [12u8 , 34u8 , 56u8 , 78u8 , 0u8 , 0u8 , 0u8 , 0u8]) ;"
      },
      {
        "id": 14,
        "label": "let br = CargoBridge { dock : ctx . accounts . dock_buf . to_account_info () , bay : ctx . accounts . bay_buf . to_account_info () } ;"
      },
      {
        "id": 15,
        "label": "let cx = br . as_cpi (program . clone ()) ;"
      },
      {
        "id": 16,
        "label": "br . send (cx , data) ? ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: st"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: program"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: st"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: header1"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: header2"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: data"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: data"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: header1"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: data"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: header2"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: data"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: br"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: cx"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: br"
      },
      {
        "from": 3,
        "to": 15,
        "label": "data_dep: program"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: br"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: cx"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: data"
      }
    ]
  }
]