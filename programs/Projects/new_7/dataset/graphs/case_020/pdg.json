[
  {
    "name": "open",
    "inputs": [
      "ctx: Context < Open >",
      "ladder: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts . arena ;"
      },
      {
        "id": 2,
        "label": "a . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "a . ladder = ladder ;"
      },
      {
        "id": 4,
        "label": "a . matches = 0 ;"
      },
      {
        "id": 5,
        "label": "a . points = 0 ;"
      },
      {
        "id": 6,
        "label": "a . cycle = 0 ;"
      },
      {
        "id": 7,
        "label": "let mut j = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while j < 5 { a . points = a . points . saturating_add (((ladder as u32) % 7) + (j as u32)) ; a . cycle = a . cycle . saturating_add (1) ; j = j . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "a . points = a . points . saturating_add (((ladder as u32) % 7) + (j as u32)) ;"
      },
      {
        "id": 10,
        "label": "a . cycle = a . cycle . saturating_add (1) ;"
      },
      {
        "id": 11,
        "label": "j = j . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: a"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: j"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: j"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: j"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: j"
      }
    ]
  },
  {
    "name": "record_and_pay",
    "inputs": [
      "ctx: Context < RecordAndPay >",
      "rank: u8",
      "name: String"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let a = & mut ctx . accounts . arena ;"
      },
      {
        "id": 15,
        "label": "require ! (a . admin == ctx . accounts . admin . key () , Errs :: Admin) ;"
      },
      {
        "id": 16,
        "label": "if rank == 1 { let b = name . as_bytes () ; let mut i = 0usize ; let mut local = 0u32 ; while i < b . len () { local = local . saturating_add ((b [i] as u32) % 11 + 1) ; if i % 4 == 0 { local = local . saturating_add (2) ; } i += 1 ; } a . points = a . points . saturating_add (local) ; let mut h = 0u8 ; while h < a . ladder { a . points = a . points . saturating_add ((h % 3) as u32 + 1) ; h = h . saturating_add (1) ; } } else { let mut step = 0u8 ; while step < 6 { a . cycle = a . cycle . saturating_add (1) ; if a . points > 0 && step % 2 == 0 { a . points = a . points . saturating_sub (1) ; } step = step . saturating_add (1) ; } if name . len () < 5 { let mut pad = 0u8 ; while pad < 3 { a . points = a . points . saturating_add (1) ; pad = pad . saturating_add (1) ; } } }"
      },
      {
        "id": 17,
        "label": "let b = name . as_bytes () ;"
      },
      {
        "id": 18,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 19,
        "label": "let mut local = 0u32 ;"
      },
      {
        "id": 20,
        "label": "while i < b . len () { local = local . saturating_add ((b [i] as u32) % 11 + 1) ; if i % 4 == 0 { local = local . saturating_add (2) ; } i += 1 ; }"
      },
      {
        "id": 21,
        "label": "local = local . saturating_add ((b [i] as u32) % 11 + 1) ;"
      },
      {
        "id": 22,
        "label": "if i % 4 == 0 { local = local . saturating_add (2) ; }"
      },
      {
        "id": 23,
        "label": "local = local . saturating_add (2) ;"
      },
      {
        "id": 24,
        "label": "i += 1 ;"
      },
      {
        "id": 25,
        "label": "a . points = a . points . saturating_add (local) ;"
      },
      {
        "id": 26,
        "label": "let mut h = 0u8 ;"
      },
      {
        "id": 27,
        "label": "while h < a . ladder { a . points = a . points . saturating_add ((h % 3) as u32 + 1) ; h = h . saturating_add (1) ; }"
      },
      {
        "id": 28,
        "label": "a . points = a . points . saturating_add ((h % 3) as u32 + 1) ;"
      },
      {
        "id": 29,
        "label": "h = h . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "let mut step = 0u8 ;"
      },
      {
        "id": 31,
        "label": "while step < 6 { a . cycle = a . cycle . saturating_add (1) ; if a . points > 0 && step % 2 == 0 { a . points = a . points . saturating_sub (1) ; } step = step . saturating_add (1) ; }"
      },
      {
        "id": 32,
        "label": "a . cycle = a . cycle . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "if a . points > 0 && step % 2 == 0 { a . points = a . points . saturating_sub (1) ; }"
      },
      {
        "id": 34,
        "label": "a . points = a . points . saturating_sub (1) ;"
      },
      {
        "id": 35,
        "label": "step = step . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "if name . len () < 5 { let mut pad = 0u8 ; while pad < 3 { a . points = a . points . saturating_add (1) ; pad = pad . saturating_add (1) ; } }"
      },
      {
        "id": 37,
        "label": "let mut pad = 0u8 ;"
      },
      {
        "id": 38,
        "label": "while pad < 3 { a . points = a . points . saturating_add (1) ; pad = pad . saturating_add (1) ; }"
      },
      {
        "id": 39,
        "label": "a . points = a . points . saturating_add (1) ;"
      },
      {
        "id": 40,
        "label": "pad = pad . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "a . matches = a . matches . saturating_add (1) ;"
      },
      {
        "id": 42,
        "label": "let mut pay = ((a . points as u64) / 3) . saturating_add ((a . cycle as u64) % 10) ;"
      },
      {
        "id": 43,
        "label": "let mut bonus = 0u64 ;"
      },
      {
        "id": 44,
        "label": "let mut c = 0u8 ;"
      },
      {
        "id": 45,
        "label": "while c < 4 { bonus = bonus . saturating_add (((a . matches % 9) as u64) + (c as u64)) ; c = c . saturating_add (1) ; }"
      },
      {
        "id": 46,
        "label": "bonus = bonus . saturating_add (((a . matches % 9) as u64) + (c as u64)) ;"
      },
      {
        "id": 47,
        "label": "c = c . saturating_add (1) ;"
      },
      {
        "id": 48,
        "label": "pay = pay . saturating_add (bonus) ;"
      },
      {
        "id": 49,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . pool . key () , ctx . accounts . winner_ata . key () , ctx . accounts . admin . key () , & [] , pay ,) ? ;"
      },
      {
        "id": 50,
        "label": "invoke (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . winner_ata . to_account_info () , ctx . accounts . admin . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 51,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: b"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: i"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: local"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: local"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: local"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: local"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: i"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: local"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: local"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 19,
        "to": 25,
        "label": "data_dep: local"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: h"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: h"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: a"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: h"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: h"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: h"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: step"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 30,
        "to": 33,
        "label": "data_dep: step"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: step"
      },
      {
        "from": 30,
        "to": 35,
        "label": "data_dep: step"
      },
      {
        "from": 14,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: pad"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: pad"
      },
      {
        "from": 14,
        "to": 38,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 38,
        "label": "data_dep: a"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: pad"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: pad"
      },
      {
        "from": 14,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: pad"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: pad"
      },
      {
        "from": 14,
        "to": 41,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 41,
        "label": "data_dep: a"
      },
      {
        "from": 42,
        "to": 42,
        "label": "def: pay"
      },
      {
        "from": 14,
        "to": 42,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 42,
        "label": "data_dep: a"
      },
      {
        "from": 43,
        "to": 43,
        "label": "def: bonus"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: c"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: c"
      },
      {
        "from": 43,
        "to": 45,
        "label": "data_dep: bonus"
      },
      {
        "from": 43,
        "to": 45,
        "label": "data_dep: bonus"
      },
      {
        "from": 14,
        "to": 45,
        "label": "data_dep: a"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: c"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: c"
      },
      {
        "from": 44,
        "to": 45,
        "label": "data_dep: c"
      },
      {
        "from": 43,
        "to": 46,
        "label": "data_dep: bonus"
      },
      {
        "from": 43,
        "to": 46,
        "label": "data_dep: bonus"
      },
      {
        "from": 14,
        "to": 46,
        "label": "data_dep: a"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: c"
      },
      {
        "from": 44,
        "to": 47,
        "label": "data_dep: c"
      },
      {
        "from": 44,
        "to": 47,
        "label": "data_dep: c"
      },
      {
        "from": 42,
        "to": 48,
        "label": "data_dep: pay"
      },
      {
        "from": 42,
        "to": 48,
        "label": "data_dep: pay"
      },
      {
        "from": 43,
        "to": 48,
        "label": "data_dep: bonus"
      },
      {
        "from": 49,
        "to": 49,
        "label": "def: ix"
      },
      {
        "from": 42,
        "to": 49,
        "label": "data_dep: pay"
      },
      {
        "from": 49,
        "to": 50,
        "label": "data_dep: ix"
      }
    ]
  }
]