[
  {
    "name": "init",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Init >"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . cfg ;",
      "c . owner = ctx . accounts . owner . key () ;",
      "c . entries = Vec :: new () ;",
      "c . bump = 1 ;",
      "Ok (())"
    ]
  },
  {
    "name": "set",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Set >",
      "mint: Pubkey",
      "id: Pubkey"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . cfg ;",
      "require ! (c . owner == ctx . accounts . owner . key () , Errs :: Owner) ;",
      "c . entries . push ((mint , id)) ;",
      "Ok (())"
    ]
  },
  {
    "name": "pay",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Pay >",
      "base: u64"
    ],
    "attributes": [],
    "body": [
      "let c = & mut ctx . accounts . cfg ;",
      "require ! (c . owner == ctx . accounts . owner . key () , Errs :: Owner) ;",
      "let mut chosen = ctx . accounts . mint . key () ;",
      "let mut i = 0usize ;",
      "while i < c . entries . len ()",
      "{",
      "let pair = c . entries [i] ;",
      "if pair . 0 == ctx . accounts . mint . key ()",
      "{",
      "chosen = pair . 1 ;",
      "} i += 1 ;",
      "}",
      "let mut amt = base ;",
      "let mut k = 0u8 ;",
      "while k < 5",
      "{",
      "amt = amt . saturating_add ((k as u64) + ((c . entries . len () as u64) % 7)) ;",
      "k = k . saturating_add (1) ;",
      "}",
      "let ix = spl_token :: instruction :: transfer (chosen , ctx . accounts . pool . key () , ctx . accounts . user_ata . key () , ctx . accounts . owner . key () , & [] , amt ,) ? ;",
      "invoke (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . user_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,]) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Cfg",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "entries",
        "attribute": null,
        "field_type": "Vec < (Pubkey , Pubkey) >"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Init",
    "node_type": "struct",
    "fields": [
      {
        "name": "cfg",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + (32 + 32) * 8 + 1)]",
        "field_type": "Account < 'info , Cfg >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Set",
    "node_type": "struct",
    "fields": [
      {
        "name": "cfg",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Cfg >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pay",
    "node_type": "struct",
    "fields": [
      {
        "name": "cfg",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Cfg >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "mint",
        "attribute": null,
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "pool",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_ata",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]