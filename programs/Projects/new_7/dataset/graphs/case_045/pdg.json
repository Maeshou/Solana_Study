[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 2,
        "label": "c . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "c . entries = Vec :: new () ;"
      },
      {
        "id": 4,
        "label": "c . bump = 1 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "set",
    "inputs": [
      "ctx: Context < Set >",
      "mint: Pubkey",
      "id: Pubkey"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 8,
        "label": "require ! (c . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 9,
        "label": "c . entries . push ((mint , id)) ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: c"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "pay",
    "inputs": [
      "ctx: Context < Pay >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let c = & mut ctx . accounts . cfg ;"
      },
      {
        "id": 13,
        "label": "require ! (c . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 14,
        "label": "let mut chosen = ctx . accounts . mint . key () ;"
      },
      {
        "id": 15,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 16,
        "label": "while i < c . entries . len () { let pair = c . entries [i] ; if pair . 0 == ctx . accounts . mint . key () { chosen = pair . 1 ; } i += 1 ; }"
      },
      {
        "id": 17,
        "label": "let pair = c . entries [i] ;"
      },
      {
        "id": 18,
        "label": "if pair . 0 == ctx . accounts . mint . key () { chosen = pair . 1 ; }"
      },
      {
        "id": 19,
        "label": "chosen = pair . 1 ;"
      },
      {
        "id": 20,
        "label": "i += 1 ;"
      },
      {
        "id": 21,
        "label": "let mut amt = base ;"
      },
      {
        "id": 22,
        "label": "let mut k = 0u8 ;"
      },
      {
        "id": 23,
        "label": "while k < 5 { amt = amt . saturating_add ((k as u64) + ((c . entries . len () as u64) % 7)) ; k = k . saturating_add (1) ; }"
      },
      {
        "id": 24,
        "label": "amt = amt . saturating_add ((k as u64) + ((c . entries . len () as u64) % 7)) ;"
      },
      {
        "id": 25,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "let ix = spl_token :: instruction :: transfer (chosen , ctx . accounts . pool . key () , ctx . accounts . user_ata . key () , ctx . accounts . owner . key () , & [] , amt ,) ? ;"
      },
      {
        "id": 27,
        "label": "invoke (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . user_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,]) ? ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: c"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: chosen"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: i"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: chosen"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: pair"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: c"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: pair"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: chosen"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: pair"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: chosen"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: pair"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: i"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: amt"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: k"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: amt"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 12,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: amt"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 12,
        "to": 24,
        "label": "data_dep: c"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: k"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: k"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: ix"
      },
      {
        "from": 14,
        "to": 26,
        "label": "data_dep: chosen"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: amt"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: ix"
      }
    ]
  }
]