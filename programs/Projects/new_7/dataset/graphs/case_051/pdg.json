[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "id_a: Pubkey",
      "id_b: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . mx ;"
      },
      {
        "id": 2,
        "label": "m . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "m . a = id_a ;"
      },
      {
        "id": 4,
        "label": "m . b = id_b ;"
      },
      {
        "id": 5,
        "label": "m . threshold = 5000 ;"
      },
      {
        "id": 6,
        "label": "m . score = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "pay",
    "inputs": [
      "ctx: Context < Pay >",
      "base: u64",
      "text: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let m = & mut ctx . accounts . mx ;"
      },
      {
        "id": 10,
        "label": "require ! (m . admin == ctx . accounts . admin . key () , Errs :: Admin) ;"
      },
      {
        "id": 11,
        "label": "let b = text . as_bytes () ;"
      },
      {
        "id": 12,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 13,
        "label": "let mut pref : u64 = 0 ;"
      },
      {
        "id": 14,
        "label": "let mut suff : u64 = 0 ;"
      },
      {
        "id": 15,
        "label": "while i < b . len () { pref = pref . saturating_add (((b [i] as u64) % 23) + 1) ; i += 1 ; }"
      },
      {
        "id": 16,
        "label": "pref = pref . saturating_add (((b [i] as u64) % 23) + 1) ;"
      },
      {
        "id": 17,
        "label": "i += 1 ;"
      },
      {
        "id": 18,
        "label": "let mut j = b . len () ;"
      },
      {
        "id": 19,
        "label": "while j > 0 { j -= 1 ; suff = suff . saturating_add (((b [j] as u64) % 29) + 1) ; if j % 4 == 0 { m . score = m . score . saturating_add (1) ; } }"
      },
      {
        "id": 20,
        "label": "j -= 1 ;"
      },
      {
        "id": 21,
        "label": "suff = suff . saturating_add (((b [j] as u64) % 29) + 1) ;"
      },
      {
        "id": 22,
        "label": "if j % 4 == 0 { m . score = m . score . saturating_add (1) ; }"
      },
      {
        "id": 23,
        "label": "m . score = m . score . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "let mut mixed = pref . saturating_mul (3) . saturating_add (suff * 2) ;"
      },
      {
        "id": 25,
        "label": "let mut t = 0u8 ;"
      },
      {
        "id": 26,
        "label": "while t < 7 { mixed = mixed ^ (((m . score as u64) + (t as u64)) << (t % 5)) ; t = t . saturating_add (1) ; }"
      },
      {
        "id": 27,
        "label": "mixed = mixed ^ (((m . score as u64) + (t as u64)) << (t % 5)) ;"
      },
      {
        "id": 28,
        "label": "t = t . saturating_add (1) ;"
      },
      {
        "id": 29,
        "label": "let amt = base . saturating_add (mixed % 50_000) ;"
      },
      {
        "id": 30,
        "label": "let mut chosen = m . a ;"
      },
      {
        "id": 31,
        "label": "if mixed > m . threshold as u64 { chosen = m . b ; m . threshold = m . threshold . saturating_add (17) ; } else { if m . threshold > 10 { m . threshold = m . threshold . saturating_sub (9) ; } }"
      },
      {
        "id": 32,
        "label": "chosen = m . b ;"
      },
      {
        "id": 33,
        "label": "m . threshold = m . threshold . saturating_add (17) ;"
      },
      {
        "id": 34,
        "label": "if m . threshold > 10 { m . threshold = m . threshold . saturating_sub (9) ; }"
      },
      {
        "id": 35,
        "label": "m . threshold = m . threshold . saturating_sub (9) ;"
      },
      {
        "id": 36,
        "label": "let ix = spl_token :: instruction :: transfer (chosen , ctx . accounts . vault . key () , ctx . accounts . receiver_ata . key () , ctx . accounts . admin . key () , & [] , amt ,) ? ;"
      },
      {
        "id": 37,
        "label": "invoke (& ix , & [ctx . accounts . vault . to_account_info () , ctx . accounts . receiver_ata . to_account_info () , ctx . accounts . admin . to_account_info () ,]) ? ;"
      },
      {
        "id": 38,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: m"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: b"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: i"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: b"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: j"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: j"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: j"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: j"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: j"
      },
      {
        "from": 11,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: j"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: mixed"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: t"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: mixed"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: mixed"
      },
      {
        "from": 9,
        "to": 26,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: mixed"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: mixed"
      },
      {
        "from": 9,
        "to": 27,
        "label": "data_dep: m"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: t"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: t"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: amt"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: mixed"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: chosen"
      },
      {
        "from": 9,
        "to": 30,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: mixed"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: chosen"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 31,
        "label": "data_dep: m"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: chosen"
      },
      {
        "from": 9,
        "to": 32,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 33,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 33,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 9,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: ix"
      },
      {
        "from": 30,
        "to": 36,
        "label": "data_dep: chosen"
      },
      {
        "from": 29,
        "to": 36,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: ix"
      }
    ]
  }
]