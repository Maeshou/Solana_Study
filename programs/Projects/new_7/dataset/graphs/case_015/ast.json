[
  {
    "name": "init",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Init >",
      "floor: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . smithy ;",
      "s . manager = ctx . accounts . manager . key () ;",
      "s . floor = floor ;",
      "s . energy = 100 ;",
      "s . sessions = 0 ;",
      "s . total_bonus = 0 ;",
      "let mut wave = 0u8 ;",
      "while wave < 6",
      "{",
      "if wave % 2 == 0",
      "{",
      "s . energy = s . energy . saturating_add (3) ;",
      "} else",
      "{",
      "if s . energy > 1 { s . energy = s . energy . saturating_sub (1) ;",
      "} } s . sessions = s . sessions . saturating_add (1) ;",
      "wave = wave . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "craft_and_tip",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CraftAndTip >",
      "base: u64",
      "rounds: u8",
      "label: String"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . smithy ;",
      "require ! (s . manager == ctx . accounts . manager . key () , Errs :: BadManager) ;",
      "if s . energy > 10",
      "{",
      "let mut k = 0u8 ;",
      "while k < rounds",
      "{",
      "s . sessions = s . sessions . saturating_add (1) ;",
      "let mut local = 0u64 ;",
      "let chars = label . as_bytes () ;",
      "let mut take = 0usize ;",
      "while take < chars . len () && take < 6",
      "{",
      "local = local . saturating_add ((chars [take] as u64) % 13) ;",
      "take += 1 ;",
      "} if s . energy > 0",
      "{",
      "s . energy = s . energy . saturating_sub (1) ;",
      "} s . total_bonus = s . total_bonus . saturating_add (local % 17) ;",
      "k = k . saturating_add (1) ;",
      "} let mut extra_step = 0u8 ;",
      "while extra_step < 3",
      "{",
      "let lenb = label . len () as u64 ;",
      "let bump = (lenb % 5) . saturating_add (s . floor % 7) ;",
      "s . total_bonus = s . total_bonus . saturating_add (bump) ;",
      "extra_step = extra_step . saturating_add (1) ;",
      "} } else",
      "{",
      "let mut r = 0u8 ;",
      "while r < 8",
      "{",
      "s . energy = s . energy . saturating_add (2) ;",
      "if s . sessions > 0",
      "{",
      "s . sessions = s . sessions . saturating_sub (1) ;",
      "} if r % 2 == 0 && s . floor > 0",
      "{",
      "s . floor = s . floor . saturating_sub (1) ;",
      "} r = r . saturating_add (1) ;",
      "} let mut sum = 0u64 ;",
      "let b = label . as_bytes () ;",
      "let mut i = 0usize ;",
      "while i < b . len ()",
      "{",
      "sum = sum . saturating_add ((b [i] as u64) % 9) ;",
      "i += 1 ;",
      "} if sum > s . floor",
      "{",
      "s . floor = s . floor . saturating_add (sum % 11) ;",
      "}",
      "}",
      "let mut reward = base ;",
      "let mut adjust = 0u64 ;",
      "let mut pass = 0u8 ;",
      "while pass < 5",
      "{",
      "adjust = adjust . saturating_add (((s . sessions % 7) as u64) + ((s . energy % 5) as u64)) ;",
      "pass = pass . saturating_add (1) ;",
      "}",
      "if reward < s . floor",
      "{",
      "let mut acc = 0u64 ;",
      "let mut z = 0 ;",
      "while z < 3",
      "{",
      "acc = acc . saturating_add (s . floor / 3) ;",
      "z += 1 ;",
      "} reward = acc . saturating_add (adjust) ;",
      "} else",
      "{",
      "let mut gain = 0u64 ;",
      "let mut w = 0u8 ;",
      "while w < rounds",
      "{",
      "gain = gain . saturating_add (((w as u64) + 1) * 2) ;",
      "w = w . saturating_add (1) ;",
      "} reward = reward . saturating_add (gain) . saturating_add (adjust) ;",
      "}",
      "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . pool . key () , ctx . accounts . crafter_ata . key () , ctx . accounts . manager . key () , & [] , reward ,) ? ;",
      "invoke (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . crafter_ata . to_account_info () , ctx . accounts . manager . to_account_info () ,] ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "Smithy",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "floor",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "energy",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "sessions",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "total_bonus",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Init",
    "node_type": "struct",
    "fields": [
      {
        "name": "smithy",
        "attribute": "# [account (init , payer = manager , space = 8 + 32 + 8 + 4 + 4 + 8)]",
        "field_type": "Account < 'info , Smithy >"
      },
      {
        "name": "manager",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CraftAndTip",
    "node_type": "struct",
    "fields": [
      {
        "name": "smithy",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Smithy >"
      },
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "pool",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "crafter_ata",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "token_program",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "UncheckedAccount < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]