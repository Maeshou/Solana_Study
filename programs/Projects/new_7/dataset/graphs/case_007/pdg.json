[
  {
    "name": "spawn",
    "inputs": [
      "ctx: Context < Spawn >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "b . master = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "b . base = base ;"
      },
      {
        "id": 4,
        "label": "b . entries = 0 ;"
      },
      {
        "id": 5,
        "label": "b . denied = 0 ;"
      },
      {
        "id": 6,
        "label": "b . total = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "claim",
    "inputs": [
      "ctx: Context < Claim >",
      "weight: u8",
      "proof: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 10,
        "label": "require ! (b . master == ctx . accounts . master . key () , Errs :: Master) ;"
      },
      {
        "id": 11,
        "label": "if proof . len () > 8 { let mut sum = 0u64 ; let mut i = 0 ; while i < proof . as_bytes () . len () { sum = sum . saturating_add (proof . as_bytes () [i] as u64) ; i += 1 ; } b . total = b . total . saturating_add (sum % 100) ; b . entries = b . entries . saturating_add (1) ; } else { let mut p = 0 ; while p < 5 { if b . denied < 100 { b . denied = b . denied . saturating_add (1) ; } p = p . saturating_add (1) ; } }"
      },
      {
        "id": 12,
        "label": "let mut sum = 0u64 ;"
      },
      {
        "id": 13,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 14,
        "label": "while i < proof . as_bytes () . len () { sum = sum . saturating_add (proof . as_bytes () [i] as u64) ; i += 1 ; }"
      },
      {
        "id": 15,
        "label": "sum = sum . saturating_add (proof . as_bytes () [i] as u64) ;"
      },
      {
        "id": 16,
        "label": "i += 1 ;"
      },
      {
        "id": 17,
        "label": "b . total = b . total . saturating_add (sum % 100) ;"
      },
      {
        "id": 18,
        "label": "b . entries = b . entries . saturating_add (1) ;"
      },
      {
        "id": 19,
        "label": "let mut p = 0 ;"
      },
      {
        "id": 20,
        "label": "while p < 5 { if b . denied < 100 { b . denied = b . denied . saturating_add (1) ; } p = p . saturating_add (1) ; }"
      },
      {
        "id": 21,
        "label": "if b . denied < 100 { b . denied = b . denied . saturating_add (1) ; }"
      },
      {
        "id": 22,
        "label": "b . denied = b . denied . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "p = p . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "let mut amt = b . base . saturating_mul (weight as u64) ;"
      },
      {
        "id": 25,
        "label": "if amt > 0 { let mut lift = 0 ; while lift < weight { amt = amt . saturating_add (1) ; lift = lift . saturating_add (1) ; } }"
      },
      {
        "id": 26,
        "label": "let mut lift = 0 ;"
      },
      {
        "id": 27,
        "label": "while lift < weight { amt = amt . saturating_add (1) ; lift = lift . saturating_add (1) ; }"
      },
      {
        "id": 28,
        "label": "amt = amt . saturating_add (1) ;"
      },
      {
        "id": 29,
        "label": "lift = lift . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . treasury . key () , ctx . accounts . hunter_ata . key () , ctx . accounts . master . key () , & [] , amt ,) ? ;"
      },
      {
        "id": 31,
        "label": "invoke (& ix , & [ctx . accounts . treasury . to_account_info () , ctx . accounts . hunter_ata . to_account_info () , ctx . accounts . master . to_account_info () ,]) ? ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: sum"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: i"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: sum"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: sum"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: sum"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: i"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: sum"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: p"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: amt"
      },
      {
        "from": 9,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: amt"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: lift"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: lift"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: amt"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: lift"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: lift"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: amt"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: amt"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: lift"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: lift"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: ix"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: amt"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: ix"
      }
    ]
  }
]