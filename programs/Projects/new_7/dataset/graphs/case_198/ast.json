[
  {
    "name": "PostAccs",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "author",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "make_ctx",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < MakeCtx >",
      "tag: u64"
    ],
    "attributes": [],
    "body": [
      "let mut program_ai = ctx . accounts . router_program . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "program_ai = ctx . remaining_accounts [0] . clone () ;",
      "}",
      "let _planned = CpiContext :: new (program_ai , PostAccs { board : ctx . accounts . out_board . to_account_info () , author : ctx . accounts . user . to_account_info () , } ,) ;",
      "let st = & mut ctx . accounts . ctx_state ;",
      "st . counter = st . counter . wrapping_add (tag) ;",
      "Ok (())"
    ]
  },
  {
    "name": "MakeCtx",
    "node_type": "struct",
    "fields": [
      {
        "name": "ctx_state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , CtxState >"
      },
      {
        "name": "out_board",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "router_program",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CtxState",
    "node_type": "struct",
    "fields": [
      {
        "name": "counter",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]