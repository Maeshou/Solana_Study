[
  {
    "name": "craft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Craft >",
      "material_a: u64",
      "material_b: u64"
    ],
    "attributes": [],
    "body": [
      "let st = & mut ctx . accounts . bench ;",
      "st . attempts += 1 ;",
      "let mut program = ctx . accounts . recipe_program . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "program = ctx . remaining_accounts [0] . clone () ;",
      "st . route_custom += 1 ;",
      "} else",
      "{",
      "st . loss_rate = (st . loss_rate + (material_a & 3) + (material_b & 1)) . min (100) ;",
      "st . recipe_fail += 1 ;",
      "st . backup_recipes . push (((material_a ^ material_b) & 0xffff) as u16) ;",
      "}",
      "let br = CraftBridge { mat_a : ctx . accounts . material_a . to_account_info () , mat_b : ctx . accounts . material_b . to_account_info () } ;",
      "let quality = ((material_a | material_b) & 31) + st . attempts as u64 ;",
      "let mut data = Vec :: with_capacity (24) ;",
      "data . extend_from_slice (& st . attempts . to_le_bytes ()) ;",
      "data . extend_from_slice (& quality . to_le_bytes ()) ;",
      "data . extend_from_slice (& st . loss_rate . to_le_bytes ()) ;",
      "let cx = br . as_cpi (program . clone ()) ;",
      "br . invoke_recipe (cx , data) ? ;",
      "st . last_quality = quality ;",
      "Ok (())"
    ]
  },
  {
    "name": "Craft",
    "node_type": "struct",
    "fields": [
      {
        "name": "bench",
        "attribute": "# [account (init , payer = smith , space = 8 + 8 + 8 + 8 + 1 + 4 + (4 + 64 * 2))]",
        "field_type": "Account < 'info , BenchState >"
      },
      {
        "name": "smith",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "material_a",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "material_b",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "recipe_program",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BenchState",
    "node_type": "struct",
    "fields": [
      {
        "name": "attempts",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "route_custom",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "recipe_fail",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "last_quality",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "loss_rate",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "pad",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "backup_recipes",
        "attribute": null,
        "field_type": "Vec < u16 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CraftBridge",
    "node_type": "struct",
    "fields": [
      {
        "name": "mat_a",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "mat_b",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]