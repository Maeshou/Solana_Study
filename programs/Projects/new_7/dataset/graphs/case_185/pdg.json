[
  {
    "name": "exec",
    "inputs": [
      "ctx: Context < DoCraft >",
      "score: u64",
      "gift: u64"
    ],
    "nodes": [
      {
        "id": 1,
        "label": "Entry"
      },
      {
        "id": 2,
        "label": "if score > 80 { ctx . accounts . journal . gold = ctx . accounts . journal . gold . saturating_add (1) ; }"
      },
      {
        "id": 3,
        "label": "ctx . accounts . journal . gold = ctx . accounts . journal . gold . saturating_add (1) ;"
      },
      {
        "id": 4,
        "label": "let mut blob = score . to_le_bytes () . to_vec () ;"
      },
      {
        "id": 5,
        "label": "blob . extend_from_slice (& gift . to_le_bytes ()) ;"
      },
      {
        "id": 6,
        "label": "let ix_fixed = Instruction { program_id : FIXED_TALLY_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . gauge_cell . key () , false) , AccountMeta :: new_readonly (ctx . accounts . student . key () , false) ,] , data : blob , } ;"
      },
      {
        "id": 7,
        "label": "invoke (& ix_fixed , & [ctx . accounts . gauge_hint . to_account_info () , ctx . accounts . gauge_cell . to_account_info () , ctx . accounts . student . to_account_info () ,]) ? ;"
      },
      {
        "id": 8,
        "label": "let mut prg = ctx . accounts . signal_hint . to_account_info () ;"
      },
      {
        "id": 9,
        "label": "if ! ctx . remaining_accounts . is_empty () { prg = ctx . remaining_accounts [0] . clone () ; ctx . accounts . journal . paths = ctx . accounts . journal . paths . saturating_add (3) ; }"
      },
      {
        "id": 10,
        "label": "prg = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 11,
        "label": "ctx . accounts . journal . paths = ctx . accounts . journal . paths . saturating_add (3) ;"
      },
      {
        "id": 12,
        "label": "let ix_dyn = Instruction { program_id : * prg . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . signal_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . student . key () , false) ,] , data : gift . rotate_left (6) . to_le_bytes () . to_vec () , } ;"
      },
      {
        "id": 13,
        "label": "invoke (& ix_dyn , & [prg , ctx . accounts . signal_board . to_account_info () , ctx . accounts . student . to_account_info () ,]) ? ;"
      },
      {
        "id": 14,
        "label": "ctx . accounts . SPL_send (gift)"
      }
    ],
    "edges": [
      {
        "from": 4,
        "to": 4,
        "label": "def: blob"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: blob"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: ix_fixed"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: blob"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: ix_fixed"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: prg"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: prg"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: prg"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: ix_dyn"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: prg"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: ix_dyn"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: prg"
      }
    ]
  }
]