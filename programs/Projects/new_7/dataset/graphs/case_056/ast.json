[
  {
    "name": "setup",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Setup >",
      "base: u64"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "s . owner = ctx . accounts . owner . key () ;",
      "s . base = base ;",
      "s . sent = 0 ;",
      "s . episode = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "drop",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Drop >",
      "progress: u16",
      "repeat: u8"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . state ;",
      "let mut mult = s . base ;",
      "let mut t = 0 ;",
      "while t < repeat",
      "{",
      "mult = mult . saturating_add (1) ;",
      "t += 1 ;",
      "}",
      "let amt = (progress as u64) . saturating_mul (mult) ;",
      "if progress == 0",
      "{",
      "s . episode = s . episode . saturating_add (1) ;",
      "s . sent = s . sent . saturating_add (0) ;",
      "return Ok (()) ;",
      "}",
      "let ix = token_ix :: transfer (& ctx . accounts . any_program . key () , & ctx . accounts . reward_pool . key () , & ctx . accounts . player_vault . key () , & ctx . accounts . owner . key () , & [] , amt ,) ? ;",
      "invoke (& ix , & [ctx . accounts . any_program . to_account_info () , ctx . accounts . reward_pool . to_account_info () , ctx . accounts . player_vault . to_account_info () , ctx . accounts . owner . to_account_info () ,] ,) ? ;",
      "s . sent = s . sent . saturating_add (amt) ;",
      "let mut z = 0 ;",
      "while z < 2",
      "{",
      "s . episode = s . episode . saturating_add (1) ;",
      "z += 1 ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Setup",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 8 + 8)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Drop",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , State >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "reward_pool",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "player_vault",
        "attribute": "# [doc = \" CHECK:\"] # [account (mut)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "any_program",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "UncheckedAccount < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "State",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "base",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "sent",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "episode",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]