[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "ids: Vec < Pubkey >",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . gw ;"
      },
      {
        "id": 2,
        "label": "g . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "g . ids = ids ;"
      },
      {
        "id": 4,
        "label": "g . seed = seed ;"
      },
      {
        "id": 5,
        "label": "g . ptr = 0 ;"
      },
      {
        "id": 6,
        "label": "g . hist = [0 ; 8] ;"
      },
      {
        "id": 7,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while i < 12 { g . seed = g . seed . wrapping_mul (6364136223846793005) . wrapping_add (1442695040888963407) ; g . hist [(i % 8) as usize] = g . hist [(i % 8) as usize] . saturating_add ((g . seed as u32) & 0xF) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "g . seed = g . seed . wrapping_mul (6364136223846793005) . wrapping_add (1442695040888963407) ;"
      },
      {
        "id": 10,
        "label": "g . hist [(i % 8) as usize] = g . hist [(i % 8) as usize] . saturating_add ((g . seed as u32) & 0xF) ;"
      },
      {
        "id": 11,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "pay",
    "inputs": [
      "ctx: Context < Pay >",
      "base: u64",
      "label: String"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let g = & mut ctx . accounts . gw ;"
      },
      {
        "id": 15,
        "label": "require ! (g . admin == ctx . accounts . admin . key () , Errs :: Admin) ;"
      },
      {
        "id": 16,
        "label": "require ! (g . ids . len () > 0 , Errs :: Empty) ;"
      },
      {
        "id": 17,
        "label": "let mut steps = 0u8 ;"
      },
      {
        "id": 18,
        "label": "while steps < 5 { g . seed = g . seed . wrapping_mul (1664525) . wrapping_add (1013904223) ; let roll = (g . seed >> 27) as usize % g . ids . len () ; g . ptr = ((g . ptr as usize + roll) % g . ids . len ()) as u32 ; g . hist [(roll % 8) as usize] = g . hist [(roll % 8) as usize] . saturating_add (1) ; steps = steps . saturating_add (1) ; }"
      },
      {
        "id": 19,
        "label": "g . seed = g . seed . wrapping_mul (1664525) . wrapping_add (1013904223) ;"
      },
      {
        "id": 20,
        "label": "let roll = (g . seed >> 27) as usize % g . ids . len () ;"
      },
      {
        "id": 21,
        "label": "g . ptr = ((g . ptr as usize + roll) % g . ids . len ()) as u32 ;"
      },
      {
        "id": 22,
        "label": "g . hist [(roll % 8) as usize] = g . hist [(roll % 8) as usize] . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "steps = steps . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "let chosen = g . ids [(g . ptr as usize) % g . ids . len ()] ;"
      },
      {
        "id": 25,
        "label": "let b = label . as_bytes () ;"
      },
      {
        "id": 26,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 27,
        "label": "while i < b . len () { let bucket = (b [i] % 8) as usize ; g . hist [bucket] = g . hist [bucket] . saturating_add ((b [i] % 13) as u32) ; i += 1 ; }"
      },
      {
        "id": 28,
        "label": "let bucket = (b [i] % 8) as usize ;"
      },
      {
        "id": 29,
        "label": "g . hist [bucket] = g . hist [bucket] . saturating_add ((b [i] % 13) as u32) ;"
      },
      {
        "id": 30,
        "label": "i += 1 ;"
      },
      {
        "id": 31,
        "label": "let mut score = base ;"
      },
      {
        "id": 32,
        "label": "let mut k = 0usize ;"
      },
      {
        "id": 33,
        "label": "while k < g . hist . len () { score = score . saturating_add ((g . hist [k] as u64) * ((k as u64) + 1)) ; k += 1 ; }"
      },
      {
        "id": 34,
        "label": "score = score . saturating_add ((g . hist [k] as u64) * ((k as u64) + 1)) ;"
      },
      {
        "id": 35,
        "label": "k += 1 ;"
      },
      {
        "id": 36,
        "label": "let ix = spl_token :: instruction :: transfer (chosen , ctx . accounts . pool . key () , ctx . accounts . member_ata . key () , ctx . accounts . admin . key () , & [] , score ,) ? ;"
      },
      {
        "id": 37,
        "label": "invoke (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . member_ata . to_account_info () , ctx . accounts . admin . to_account_info () ,]) ? ;"
      },
      {
        "id": 38,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: g"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: steps"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: steps"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: steps"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: steps"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: roll"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: roll"
      },
      {
        "from": 14,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: roll"
      },
      {
        "from": 14,
        "to": 22,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: roll"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: steps"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: steps"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: chosen"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: b"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: i"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 14,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: bucket"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: i"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: g"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: bucket"
      },
      {
        "from": 14,
        "to": 29,
        "label": "data_dep: g"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: bucket"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: i"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: i"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: score"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: k"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: score"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: k"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: score"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: score"
      },
      {
        "from": 14,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: k"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: k"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: ix"
      },
      {
        "from": 24,
        "to": 36,
        "label": "data_dep: chosen"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: score"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: ix"
      }
    ]
  }
]