[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "cap_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . state ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . cap_bps = if cap_bps > 2000 { 2000 } else { cap_bps } ;"
      },
      {
        "id": 4,
        "label": "2000"
      },
      {
        "id": 5,
        "label": "cap_bps"
      },
      {
        "id": 6,
        "label": "s . season = 1 ;"
      },
      {
        "id": 7,
        "label": "s . activity = 0 ;"
      },
      {
        "id": 8,
        "label": "s . pool = 0 ;"
      },
      {
        "id": 9,
        "label": "let mut w = 0u8 ;"
      },
      {
        "id": 10,
        "label": "while w < 6 { if w % 2 == 0 { s . activity = s . activity . saturating_add (3) ; } else { if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; } } s . pool = s . pool . saturating_add ((w as u32) + 1) ; w = w . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "if w % 2 == 0 { s . activity = s . activity . saturating_add (3) ; } else { if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; } }"
      },
      {
        "id": 12,
        "label": "s . activity = s . activity . saturating_add (3) ;"
      },
      {
        "id": 13,
        "label": "if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; }"
      },
      {
        "id": 14,
        "label": "s . activity = s . activity . saturating_sub (1) ;"
      },
      {
        "id": 15,
        "label": "s . pool = s . pool . saturating_add ((w as u32) + 1) ;"
      },
      {
        "id": 16,
        "label": "w = w . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: w"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: w"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: w"
      }
    ]
  },
  {
    "name": "settle",
    "inputs": [
      "ctx: Context < Settle >",
      "base: u64",
      "tag: String",
      "rounds: u8"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let s = & mut ctx . accounts . state ;"
      },
      {
        "id": 20,
        "label": "require ! (s . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 21,
        "label": "let b = tag . as_bytes () ;"
      },
      {
        "id": 22,
        "label": "let mut pos = 0usize ;"
      },
      {
        "id": 23,
        "label": "let mut weight = 5u64 ;"
      },
      {
        "id": 24,
        "label": "while pos < b . len () { weight = weight . saturating_add ((b [pos] as u64) % 4 + 1) ; if pos % 3 == 0 { weight = weight . saturating_add (1) ; } pos += 1 ; }"
      },
      {
        "id": 25,
        "label": "weight = weight . saturating_add ((b [pos] as u64) % 4 + 1) ;"
      },
      {
        "id": 26,
        "label": "if pos % 3 == 0 { weight = weight . saturating_add (1) ; }"
      },
      {
        "id": 27,
        "label": "weight = weight . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "pos += 1 ;"
      },
      {
        "id": 29,
        "label": "let mut r = 0u8 ;"
      },
      {
        "id": 30,
        "label": "while r < rounds { s . activity = s . activity . saturating_add (((r % 5) + 1) as u32) ; weight = weight . saturating_add ((r as u64) % 3) ; r = r . saturating_add (1) ; }"
      },
      {
        "id": 31,
        "label": "s . activity = s . activity . saturating_add (((r % 5) + 1) as u32) ;"
      },
      {
        "id": 32,
        "label": "weight = weight . saturating_add ((r as u64) % 3) ;"
      },
      {
        "id": 33,
        "label": "r = r . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "let gross = base . saturating_mul (weight) ;"
      },
      {
        "id": 35,
        "label": "let fee = gross . saturating_mul (s . cap_bps as u64) / 10_000 ;"
      },
      {
        "id": 36,
        "label": "let mut pay = 0u64 ;"
      },
      {
        "id": 37,
        "label": "if gross > fee { pay = gross - fee ; let mut shards = [0u64 ; 3] ; let mut i = 0 ; while i < 3 { shards [i] = (pay / 3) . saturating_add ((i as u64) * 2) ; i += 1 ; } let mut recon = 0u64 ; let mut k = 0 ; while k < shards . len () { let mut b = shards [k] ; let mut hop = 0 ; while hop < 5 { b = b . saturating_add (((hop + k) % 7) as u64) ; hop += 1 ; } recon = recon . saturating_add (b) ; k += 1 ; } s . pool = s . pool . saturating_add ((recon % 97) as u32) ; s . season = s . season . saturating_add (1) ; pay = recon ; } else { let mut d = 0u8 ; while d < 7 { if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; } if s . pool > 0 && d % 2 == 0 { s . pool = s . pool . saturating_sub (1) ; } d = d . saturating_add (1) ; } pay = 0 ; }"
      },
      {
        "id": 38,
        "label": "pay = gross - fee ;"
      },
      {
        "id": 39,
        "label": "let mut shards = [0u64 ; 3] ;"
      },
      {
        "id": 40,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 41,
        "label": "while i < 3 { shards [i] = (pay / 3) . saturating_add ((i as u64) * 2) ; i += 1 ; }"
      },
      {
        "id": 42,
        "label": "shards [i] = (pay / 3) . saturating_add ((i as u64) * 2) ;"
      },
      {
        "id": 43,
        "label": "i += 1 ;"
      },
      {
        "id": 44,
        "label": "let mut recon = 0u64 ;"
      },
      {
        "id": 45,
        "label": "let mut k = 0 ;"
      },
      {
        "id": 46,
        "label": "while k < shards . len () { let mut b = shards [k] ; let mut hop = 0 ; while hop < 5 { b = b . saturating_add (((hop + k) % 7) as u64) ; hop += 1 ; } recon = recon . saturating_add (b) ; k += 1 ; }"
      },
      {
        "id": 47,
        "label": "let mut b = shards [k] ;"
      },
      {
        "id": 48,
        "label": "let mut hop = 0 ;"
      },
      {
        "id": 49,
        "label": "while hop < 5 { b = b . saturating_add (((hop + k) % 7) as u64) ; hop += 1 ; }"
      },
      {
        "id": 50,
        "label": "b = b . saturating_add (((hop + k) % 7) as u64) ;"
      },
      {
        "id": 51,
        "label": "hop += 1 ;"
      },
      {
        "id": 52,
        "label": "recon = recon . saturating_add (b) ;"
      },
      {
        "id": 53,
        "label": "k += 1 ;"
      },
      {
        "id": 54,
        "label": "s . pool = s . pool . saturating_add ((recon % 97) as u32) ;"
      },
      {
        "id": 55,
        "label": "s . season = s . season . saturating_add (1) ;"
      },
      {
        "id": 56,
        "label": "pay = recon ;"
      },
      {
        "id": 57,
        "label": "let mut d = 0u8 ;"
      },
      {
        "id": 58,
        "label": "while d < 7 { if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; } if s . pool > 0 && d % 2 == 0 { s . pool = s . pool . saturating_sub (1) ; } d = d . saturating_add (1) ; }"
      },
      {
        "id": 59,
        "label": "if s . activity > 0 { s . activity = s . activity . saturating_sub (1) ; }"
      },
      {
        "id": 60,
        "label": "s . activity = s . activity . saturating_sub (1) ;"
      },
      {
        "id": 61,
        "label": "if s . pool > 0 && d % 2 == 0 { s . pool = s . pool . saturating_sub (1) ; }"
      },
      {
        "id": 62,
        "label": "s . pool = s . pool . saturating_sub (1) ;"
      },
      {
        "id": 63,
        "label": "d = d . saturating_add (1) ;"
      },
      {
        "id": 64,
        "label": "pay = 0 ;"
      },
      {
        "id": 65,
        "label": "let ix = spl_token :: instruction :: transfer (ctx . accounts . token_program . key () , ctx . accounts . treasury . key () , ctx . accounts . member_ata . key () , ctx . accounts . owner . key () , & [] , pay ,) ? ;"
      },
      {
        "id": 66,
        "label": "invoke (& ix , & [ctx . accounts . treasury . to_account_info () , ctx . accounts . member_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 67,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: s"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: b"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: pos"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: weight"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: weight"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: weight"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: weight"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: pos"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: pos"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: weight"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: pos"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: r"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: weight"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: weight"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: weight"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: r"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: r"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: gross"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: weight"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: fee"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: gross"
      },
      {
        "from": 19,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: pay"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: gross"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: fee"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: pay"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: gross"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: fee"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: pay"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: pay"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: pay"
      },
      {
        "from": 36,
        "to": 38,
        "label": "data_dep: pay"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: gross"
      },
      {
        "from": 35,
        "to": 38,
        "label": "data_dep: fee"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: shards"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: i"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 39,
        "to": 41,
        "label": "data_dep: shards"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: pay"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 39,
        "to": 42,
        "label": "data_dep: shards"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: pay"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: i"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: i"
      },
      {
        "from": 44,
        "to": 44,
        "label": "def: recon"
      },
      {
        "from": 45,
        "to": 45,
        "label": "def: k"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: k"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: shards"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: shards"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 46,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 46,
        "label": "data_dep: b"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: k"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: recon"
      },
      {
        "from": 44,
        "to": 46,
        "label": "data_dep: recon"
      },
      {
        "from": 21,
        "to": 46,
        "label": "data_dep: b"
      },
      {
        "from": 45,
        "to": 46,
        "label": "data_dep: k"
      },
      {
        "from": 47,
        "to": 47,
        "label": "def: b"
      },
      {
        "from": 39,
        "to": 47,
        "label": "data_dep: shards"
      },
      {
        "from": 45,
        "to": 47,
        "label": "data_dep: k"
      },
      {
        "from": 48,
        "to": 48,
        "label": "def: hop"
      },
      {
        "from": 48,
        "to": 49,
        "label": "data_dep: hop"
      },
      {
        "from": 47,
        "to": 49,
        "label": "data_dep: b"
      },
      {
        "from": 47,
        "to": 49,
        "label": "data_dep: b"
      },
      {
        "from": 48,
        "to": 49,
        "label": "data_dep: hop"
      },
      {
        "from": 45,
        "to": 49,
        "label": "data_dep: k"
      },
      {
        "from": 48,
        "to": 49,
        "label": "data_dep: hop"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: b"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: b"
      },
      {
        "from": 48,
        "to": 50,
        "label": "data_dep: hop"
      },
      {
        "from": 45,
        "to": 50,
        "label": "data_dep: k"
      },
      {
        "from": 48,
        "to": 51,
        "label": "data_dep: hop"
      },
      {
        "from": 44,
        "to": 52,
        "label": "data_dep: recon"
      },
      {
        "from": 44,
        "to": 52,
        "label": "data_dep: recon"
      },
      {
        "from": 47,
        "to": 52,
        "label": "data_dep: b"
      },
      {
        "from": 45,
        "to": 53,
        "label": "data_dep: k"
      },
      {
        "from": 19,
        "to": 54,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 54,
        "label": "data_dep: s"
      },
      {
        "from": 44,
        "to": 54,
        "label": "data_dep: recon"
      },
      {
        "from": 19,
        "to": 55,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 55,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 56,
        "label": "data_dep: pay"
      },
      {
        "from": 44,
        "to": 56,
        "label": "data_dep: recon"
      },
      {
        "from": 57,
        "to": 57,
        "label": "def: d"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: d"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: d"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 58,
        "label": "data_dep: s"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: d"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: d"
      },
      {
        "from": 19,
        "to": 59,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 59,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 59,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 60,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 60,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 61,
        "label": "data_dep: s"
      },
      {
        "from": 57,
        "to": 61,
        "label": "data_dep: d"
      },
      {
        "from": 19,
        "to": 61,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 61,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 62,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 62,
        "label": "data_dep: s"
      },
      {
        "from": 57,
        "to": 63,
        "label": "data_dep: d"
      },
      {
        "from": 57,
        "to": 63,
        "label": "data_dep: d"
      },
      {
        "from": 36,
        "to": 64,
        "label": "data_dep: pay"
      },
      {
        "from": 65,
        "to": 65,
        "label": "def: ix"
      },
      {
        "from": 36,
        "to": 65,
        "label": "data_dep: pay"
      },
      {
        "from": 65,
        "to": 66,
        "label": "data_dep: ix"
      }
    ]
  }
]