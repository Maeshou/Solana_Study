[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < Init >",
      "floor: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . sys ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . floor = floor ;"
      },
      {
        "id": 4,
        "label": "s . a = 1 ;"
      },
      {
        "id": 5,
        "label": "s . b = 1 ;"
      },
      {
        "id": 6,
        "label": "s . use_count = 0 ;"
      },
      {
        "id": 7,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 8,
        "label": "while i < 7 { let next = s . a . saturating_add (s . b) ; s . a = s . b ; s . b = next . max (1) ; s . use_count = s . use_count . saturating_add (1) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 9,
        "label": "let next = s . a . saturating_add (s . b) ;"
      },
      {
        "id": 10,
        "label": "s . a = s . b ;"
      },
      {
        "id": 11,
        "label": "s . b = next . max (1) ;"
      },
      {
        "id": 12,
        "label": "s . use_count = s . use_count . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: next"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: next"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "pay",
    "inputs": [
      "ctx: Context < Pay >",
      "external_id: Pubkey",
      "base: u64",
      "tag: String"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let s = & mut ctx . accounts . sys ;"
      },
      {
        "id": 17,
        "label": "require ! (s . owner == ctx . accounts . owner . key () , Errs :: Owner) ;"
      },
      {
        "id": 18,
        "label": "let bytes = tag . as_bytes () ;"
      },
      {
        "id": 19,
        "label": "let n = bytes . len () as f64 ;"
      },
      {
        "id": 20,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 21,
        "label": "let mut acc : u64 = 0 ;"
      },
      {
        "id": 22,
        "label": "while i < bytes . len () { let x = i as f64 ; let win = 0.5 - 0.5 * (2.0 * std :: f64 :: consts :: PI * x / (n . max (1.0))) . cos () ; let piece = ((bytes [i] as u64) % 19 + 1) as f64 * win ; acc = acc . saturating_add (piece as u64) ; i += 1 ; }"
      },
      {
        "id": 23,
        "label": "let x = i as f64 ;"
      },
      {
        "id": 24,
        "label": "let win = 0.5 - 0.5 * (2.0 * std :: f64 :: consts :: PI * x / (n . max (1.0))) . cos () ;"
      },
      {
        "id": 25,
        "label": "let piece = ((bytes [i] as u64) % 19 + 1) as f64 * win ;"
      },
      {
        "id": 26,
        "label": "acc = acc . saturating_add (piece as u64) ;"
      },
      {
        "id": 27,
        "label": "i += 1 ;"
      },
      {
        "id": 28,
        "label": "let mut k = 0u8 ;"
      },
      {
        "id": 29,
        "label": "let mut bump = 0u64 ;"
      },
      {
        "id": 30,
        "label": "while k < 6 { bump = bump . saturating_add (((s . a ^ s . b) as u64) % 97 + (k as u64)) ; let next = s . a . saturating_add (s . b) ; s . a = s . b ; s . b = next . max (1) ; k = k . saturating_add (1) ; }"
      },
      {
        "id": 31,
        "label": "bump = bump . saturating_add (((s . a ^ s . b) as u64) % 97 + (k as u64)) ;"
      },
      {
        "id": 32,
        "label": "let next = s . a . saturating_add (s . b) ;"
      },
      {
        "id": 33,
        "label": "s . a = s . b ;"
      },
      {
        "id": 34,
        "label": "s . b = next . max (1) ;"
      },
      {
        "id": 35,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "let mut amt = base . saturating_add (acc) . saturating_add (bump) ;"
      },
      {
        "id": 37,
        "label": "if amt < s . floor { let mut t = 1u64 ; let mut step = 0u8 ; while step < 5 { if t % 2 == 1 { amt = amt . saturating_add (base / (t . max (1))) ; } else { if amt > 0 { amt = amt . saturating_sub ((t / 2) . max (1)) ; } } t = t . saturating_add (1) ; step = step . saturating_add (1) ; } } else { let mut rep = 0u8 ; while rep < 4 { amt = amt . saturating_add ((rep as u64) + ((s . use_count % 7) as u64)) ; rep = rep . saturating_add (1) ; } }"
      },
      {
        "id": 38,
        "label": "let mut t = 1u64 ;"
      },
      {
        "id": 39,
        "label": "let mut step = 0u8 ;"
      },
      {
        "id": 40,
        "label": "while step < 5 { if t % 2 == 1 { amt = amt . saturating_add (base / (t . max (1))) ; } else { if amt > 0 { amt = amt . saturating_sub ((t / 2) . max (1)) ; } } t = t . saturating_add (1) ; step = step . saturating_add (1) ; }"
      },
      {
        "id": 41,
        "label": "if t % 2 == 1 { amt = amt . saturating_add (base / (t . max (1))) ; } else { if amt > 0 { amt = amt . saturating_sub ((t / 2) . max (1)) ; } }"
      },
      {
        "id": 42,
        "label": "amt = amt . saturating_add (base / (t . max (1))) ;"
      },
      {
        "id": 43,
        "label": "if amt > 0 { amt = amt . saturating_sub ((t / 2) . max (1)) ; }"
      },
      {
        "id": 44,
        "label": "amt = amt . saturating_sub ((t / 2) . max (1)) ;"
      },
      {
        "id": 45,
        "label": "t = t . saturating_add (1) ;"
      },
      {
        "id": 46,
        "label": "step = step . saturating_add (1) ;"
      },
      {
        "id": 47,
        "label": "let mut rep = 0u8 ;"
      },
      {
        "id": 48,
        "label": "while rep < 4 { amt = amt . saturating_add ((rep as u64) + ((s . use_count % 7) as u64)) ; rep = rep . saturating_add (1) ; }"
      },
      {
        "id": 49,
        "label": "amt = amt . saturating_add ((rep as u64) + ((s . use_count % 7) as u64)) ;"
      },
      {
        "id": 50,
        "label": "rep = rep . saturating_add (1) ;"
      },
      {
        "id": 51,
        "label": "let ix = spl_token :: instruction :: transfer (external_id , ctx . accounts . treasury . key () , ctx . accounts . recipient_ata . key () , ctx . accounts . owner . key () , & [] , amt ,) ? ;"
      },
      {
        "id": 52,
        "label": "invoke (& ix , & [ctx . accounts . treasury . to_account_info () , ctx . accounts . recipient_ata . to_account_info () , ctx . accounts . owner . to_account_info () ,]) ? ;"
      },
      {
        "id": 53,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: s"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: bytes"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: n"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: bytes"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: i"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: i"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: bytes"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: i"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: n"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: bytes"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: i"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: i"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: x"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: win"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: x"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: n"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: piece"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: bytes"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: i"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: win"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: piece"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: k"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: bump"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: bump"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: bump"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 30,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: bump"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: bump"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: next"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: next"
      },
      {
        "from": 28,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 28,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: amt"
      },
      {
        "from": 29,
        "to": 36,
        "label": "data_dep: bump"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: amt"
      },
      {
        "from": 16,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: t"
      },
      {
        "from": 39,
        "to": 39,
        "label": "def: step"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: step"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 40,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 40,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 40,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 40,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 40,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: step"
      },
      {
        "from": 39,
        "to": 40,
        "label": "data_dep: step"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 42,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 43,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 43,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 43,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 43,
        "label": "data_dep: t"
      },
      {
        "from": 36,
        "to": 44,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 44,
        "label": "data_dep: amt"
      },
      {
        "from": 38,
        "to": 44,
        "label": "data_dep: t"
      },
      {
        "from": 38,
        "to": 45,
        "label": "data_dep: t"
      },
      {
        "from": 38,
        "to": 45,
        "label": "data_dep: t"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: step"
      },
      {
        "from": 39,
        "to": 46,
        "label": "data_dep: step"
      },
      {
        "from": 47,
        "to": 47,
        "label": "def: rep"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: rep"
      },
      {
        "from": 36,
        "to": 48,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 48,
        "label": "data_dep: amt"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: rep"
      },
      {
        "from": 16,
        "to": 48,
        "label": "data_dep: s"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: rep"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: rep"
      },
      {
        "from": 36,
        "to": 49,
        "label": "data_dep: amt"
      },
      {
        "from": 36,
        "to": 49,
        "label": "data_dep: amt"
      },
      {
        "from": 47,
        "to": 49,
        "label": "data_dep: rep"
      },
      {
        "from": 16,
        "to": 49,
        "label": "data_dep: s"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: rep"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: rep"
      },
      {
        "from": 51,
        "to": 51,
        "label": "def: ix"
      },
      {
        "from": 36,
        "to": 51,
        "label": "data_dep: amt"
      },
      {
        "from": 51,
        "to": 52,
        "label": "data_dep: ix"
      }
    ]
  }
]