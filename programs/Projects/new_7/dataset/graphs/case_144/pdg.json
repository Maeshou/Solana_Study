[
  {
    "name": "settle_and_notify",
    "inputs": [
      "ctx: Context < SettleAndNotify >",
      "amount: u64",
      "note_code: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . vault_token_account . to_account_info () , to : ctx . accounts . winner_token_account . to_account_info () , authority : ctx . accounts . vault_authority . to_account_info () , } ;"
      },
      {
        "id": 2,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;"
      },
      {
        "id": 3,
        "label": "token :: transfer (cpi_ctx , amount) ? ;"
      },
      {
        "id": 4,
        "label": "let mut router = ctx . accounts . notify_program . to_account_info () ;"
      },
      {
        "id": 5,
        "label": "if ctx . remaining_accounts . len () > 0 { router = ctx . remaining_accounts [0] . clone () ; ctx . accounts . settlement_meta . switched += 1 ; }"
      },
      {
        "id": 6,
        "label": "router = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . settlement_meta . switched += 1 ;"
      },
      {
        "id": 8,
        "label": "let br = NotifyBridge { board : ctx . accounts . notice_board . to_account_info () , actor : ctx . accounts . winner_wallet . to_account_info () , } ;"
      },
      {
        "id": 9,
        "label": "let payload = note_code . to_le_bytes () . to_vec () ;"
      },
      {
        "id": 10,
        "label": "let cx = br . as_cpi (router . clone ()) ;"
      },
      {
        "id": 11,
        "label": "br . post (cx , payload) ? ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cpi_accounts"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: cpi_ctx"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: router"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: router"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: router"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: br"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: payload"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: cx"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: br"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: router"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: br"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: cx"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: payload"
      }
    ]
  }
]