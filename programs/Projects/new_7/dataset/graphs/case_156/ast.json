[
  {
    "name": "ex_a",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ExA >",
      "n: u64"
    ],
    "attributes": [],
    "body": [
      "if n % 2 == 0",
      "{",
      "ctx . accounts . state . evens += 1 ;",
      "}",
      "if n > 10",
      "{",
      "if n % 3 == 0",
      "{",
      "ctx . accounts . state . marks += 1 ;",
      "}",
      "}",
      "let mut prg = ctx . accounts . router . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "prg = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . state . switch += 1 ;",
      "}",
      "DynBridge { a : ctx . accounts . acc_a . to_account_info () , b : ctx . accounts . acc_b . to_account_info () , } . send (CpiContext :: new (prg . clone () , DynBridge { a : ctx . accounts . acc_a . to_account_info () , b : ctx . accounts . acc_b . to_account_info () , }) , n . to_le_bytes () . to_vec () , true ,) ? ;",
      "for _ in 0 .. (n % 3 + 1)",
      "{",
      "ctx . accounts . state . tick = ctx . accounts . state . tick . wrapping_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "ex_b",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ExB >",
      "seed: u64"
    ],
    "attributes": [],
    "body": [
      "for _ in 0 .. (seed % 4)",
      "{",
      "ctx . accounts . buf . mix ^= Clock :: get () ? . slot ;",
      "}",
      "if seed > 0",
      "{",
      "if seed & 1 == 1",
      "{",
      "ctx . accounts . buf . odds += 1 ;",
      "}",
      "}",
      "let mut prg = ctx . accounts . exec_prog . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "prg = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . buf . paths += 1 ;",
      "}",
      "DynBridge { a : ctx . accounts . sheet . to_account_info () , b : ctx . accounts . user . to_account_info () , } . send (CpiContext :: new (prg . clone () , DynBridge { a : ctx . accounts . sheet . to_account_info () , b : ctx . accounts . user . to_account_info () , }) , (seed ^ 0xA5A5) . to_le_bytes () . to_vec () , false ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "ex_c",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ExC >",
      "tag: u64"
    ],
    "attributes": [],
    "body": [
      "if tag >= 5",
      "{",
      "if tag <= 100",
      "{",
      "ctx . accounts . log . range += 1 ;",
      "}",
      "}",
      "let mut prg = ctx . accounts . notifier . to_account_info () ;",
      "if ctx . remaining_accounts . len () > 0",
      "{",
      "prg = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . log . routes += 1 ;",
      "}",
      "DynBridge { a : ctx . accounts . page . to_account_info () , b : ctx . accounts . actor . to_account_info () , } . send (CpiContext :: new (prg . clone () , DynBridge { a : ctx . accounts . page . to_account_info () , b : ctx . accounts . actor . to_account_info () , }) , tag . to_le_bytes () . to_vec () , true ,) ? ;",
      "if tag % 2 == 0",
      "{",
      "ctx . accounts . log . evens += 1 ;",
      "}",
      "for _ in 0 .. (tag % 2 + 1)",
      "{",
      "ctx . accounts . log . bump = ctx . accounts . log . bump . wrapping_add (2) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "DynBridge",
    "node_type": "struct",
    "fields": [
      {
        "name": "a",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "b",
        "attribute": null,
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ExA",
    "node_type": "struct",
    "fields": [
      {
        "name": "state",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , S1 >"
      },
      {
        "name": "acc_a",
        "attribute": "# [doc = \" CHECK: 任意\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "acc_b",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "router",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ExB",
    "node_type": "struct",
    "fields": [
      {
        "name": "buf",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , S2 >"
      },
      {
        "name": "sheet",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "exec_prog",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ExC",
    "node_type": "struct",
    "fields": [
      {
        "name": "log",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , S3 >"
      },
      {
        "name": "page",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "actor",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "notifier",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "S1",
    "node_type": "struct",
    "fields": [
      {
        "name": "evens",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "marks",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "switch",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "tick",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "S2",
    "node_type": "struct",
    "fields": [
      {
        "name": "mix",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "odds",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "paths",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "S3",
    "node_type": "struct",
    "fields": [
      {
        "name": "range",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "routes",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "evens",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]