[
  {
    "name": "step",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Patrol >",
      "turn: u64",
      "credit: u64"
    ],
    "attributes": [],
    "body": [
      "if turn % 3 != 0",
      "{",
      "ctx . accounts . snap . missed = ctx . accounts . snap . missed . saturating_add (1) ;",
      "}",
      "let ix_fixed = Instruction { program_id : FIXED_SYNC_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . sync_cell . key () , false) , AccountMeta :: new_readonly (ctx . accounts . agent . key () , false) ,] , data : turn . to_le_bytes () . to_vec () , } ;",
      "invoke (& ix_fixed , & [ctx . accounts . sync_hint . to_account_info () , ctx . accounts . sync_cell . to_account_info () , ctx . accounts . agent . to_account_info () ,]) ? ;",
      "let mut r = ctx . accounts . router_hint . to_account_info () ;",
      "if ! ctx . remaining_accounts . is_empty ()",
      "{",
      "r = ctx . remaining_accounts [0] . clone () ;",
      "ctx . accounts . snap . paths = ctx . accounts . snap . paths . wrapping_add (2) ;",
      "}",
      "let ix_dyn = Instruction { program_id : * r . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . router_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . agent . key () , false) ,] , data : credit . wrapping_add (77) . to_le_bytes () . to_vec () , } ;",
      "invoke (& ix_dyn , & [r , ctx . accounts . router_board . to_account_info () , ctx . accounts . agent . to_account_info () ,]) ? ;",
      "ctx . accounts . tip_agent (credit)"
    ]
  },
  {
    "name": "Patrol",
    "node_type": "struct",
    "fields": [
      {
        "name": "snap",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , PatrolSnap >"
      },
      {
        "name": "sync_cell",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "agent",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "sync_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "router_board",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "router_hint",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "reserve",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "agent_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "reserve_authority",
        "attribute": "# [doc = \" CHECK:\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PatrolSnap",
    "node_type": "struct",
    "fields": [
      {
        "name": "missed",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "paths",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]