[
  {
    "name": "step",
    "inputs": [
      "ctx: Context < Patrol >",
      "turn: u64",
      "credit: u64"
    ],
    "nodes": [
      {
        "id": 1,
        "label": "Entry"
      },
      {
        "id": 2,
        "label": "if turn % 3 != 0 { ctx . accounts . snap . missed = ctx . accounts . snap . missed . saturating_add (1) ; }"
      },
      {
        "id": 3,
        "label": "ctx . accounts . snap . missed = ctx . accounts . snap . missed . saturating_add (1) ;"
      },
      {
        "id": 4,
        "label": "let ix_fixed = Instruction { program_id : FIXED_SYNC_ID , accounts : vec ! [AccountMeta :: new (ctx . accounts . sync_cell . key () , false) , AccountMeta :: new_readonly (ctx . accounts . agent . key () , false) ,] , data : turn . to_le_bytes () . to_vec () , } ;"
      },
      {
        "id": 5,
        "label": "invoke (& ix_fixed , & [ctx . accounts . sync_hint . to_account_info () , ctx . accounts . sync_cell . to_account_info () , ctx . accounts . agent . to_account_info () ,]) ? ;"
      },
      {
        "id": 6,
        "label": "let mut r = ctx . accounts . router_hint . to_account_info () ;"
      },
      {
        "id": 7,
        "label": "if ! ctx . remaining_accounts . is_empty () { r = ctx . remaining_accounts [0] . clone () ; ctx . accounts . snap . paths = ctx . accounts . snap . paths . wrapping_add (2) ; }"
      },
      {
        "id": 8,
        "label": "r = ctx . remaining_accounts [0] . clone () ;"
      },
      {
        "id": 9,
        "label": "ctx . accounts . snap . paths = ctx . accounts . snap . paths . wrapping_add (2) ;"
      },
      {
        "id": 10,
        "label": "let ix_dyn = Instruction { program_id : * r . key , accounts : vec ! [AccountMeta :: new (ctx . accounts . router_board . key () , false) , AccountMeta :: new_readonly (ctx . accounts . agent . key () , false) ,] , data : credit . wrapping_add (77) . to_le_bytes () . to_vec () , } ;"
      },
      {
        "id": 11,
        "label": "invoke (& ix_dyn , & [r , ctx . accounts . router_board . to_account_info () , ctx . accounts . agent . to_account_info () ,]) ? ;"
      },
      {
        "id": 12,
        "label": "ctx . accounts . tip_agent (credit)"
      }
    ],
    "edges": [
      {
        "from": 4,
        "to": 4,
        "label": "def: ix_fixed"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: ix_fixed"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: r"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: r"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: ix_dyn"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: ix_dyn"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: r"
      }
    ]
  }
]