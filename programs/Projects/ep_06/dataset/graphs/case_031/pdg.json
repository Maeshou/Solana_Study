[
  {
    "name": "execute_verifydid",
    "inputs": [
      "ctx: Context < VerifyDIDContext >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut did = DIDAccount :: try_from (& ctx . accounts . account_a . to_account_info ()) ? ;"
      },
      {
        "id": 2,
        "label": "did . registered = true ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: did"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: did"
      }
    ]
  }
]