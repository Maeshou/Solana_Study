[
  {
    "name": "add_to_whitelist",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyWhitelist >",
      "new_member: Pubkey"
    ],
    "attributes": [
      "# [doc = \" 新しいユーザーをホワイトリストに追加するが、\"]",
      "# [doc = \" whitelist_account.owner と ctx.accounts.user.key() の一致検証がない\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . whitelist_account ;",
      "record_add (acct , new_member) ;",
      "Ok (())"
    ]
  },
  {
    "name": "remove_from_whitelist",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyWhitelist >",
      "member: Pubkey"
    ],
    "attributes": [
      "# [doc = \" ユーザーをホワイトリストから削除するが、\"]",
      "# [doc = \" whitelist_account.owner と ctx.accounts.user.key() の一致検証がない\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . whitelist_account ;",
      "record_remove (acct , member) ;",
      "Ok (())"
    ]
  },
  {
    "name": "record_add",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "acct: & mut WhitelistAccount",
      "member: Pubkey"
    ],
    "attributes": [
      "# [doc = \" ホワイトリストに追加し、カウンタを更新するヘルパー関数\"]"
    ],
    "body": [
      "if ! acct . members . contains (& member)",
      "{",
      "acct . members . push (member) ;",
      "acct . add_count = acct . add_count . saturating_add (1) ;",
      "}"
    ]
  },
  {
    "name": "record_remove",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "acct: & mut WhitelistAccount",
      "member: Pubkey"
    ],
    "attributes": [
      "# [doc = \" ホワイトリストから削除し、カウンタを更新するヘルパー関数\"]"
    ],
    "body": [
      "if let Some (pos) = acct . members . iter () . position (| & m | m == member)",
      "{",
      "acct . members . remove (pos) ;",
      "acct . remove_count = acct . remove_count . saturating_add (1) ;",
      "}"
    ]
  },
  {
    "name": "ModifyWhitelist",
    "node_type": "struct",
    "fields": [
      {
        "name": "whitelist_account",
        "attribute": "# [account (mut)] # [doc = \" 本来は #[account(has_one = owner)] を指定して所有者照合を行うべき\"]",
        "field_type": "Account < 'info , WhitelistAccount >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" 操作をリクエストするユーザー（署名者）\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "WhitelistAccount",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": "# [doc = \" 本来このホワイトリストを管理するべきユーザーの Pubkey\"]",
        "field_type": "Pubkey"
      },
      {
        "name": "members",
        "attribute": "# [doc = \" ホワイトリストに登録されたユーザーの Pubkey リスト\"]",
        "field_type": "Vec < Pubkey >"
      },
      {
        "name": "add_count",
        "attribute": "# [doc = \" 追加操作の累計回数\"]",
        "field_type": "u64"
      },
      {
        "name": "remove_count",
        "attribute": "# [doc = \" 削除操作の累計回数\"]",
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]