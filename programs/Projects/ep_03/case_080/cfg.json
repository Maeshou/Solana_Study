[
  {
    "name": "send_mail",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mailbox = & mut ctx . accounts . mailbox ;"
      },
      {
        "id": 2,
        "label": "add_message (mailbox , message_id , content)"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "call"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      }
    ]
  },
  {
    "name": "delete_mail",
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let mailbox = & mut ctx . accounts . mailbox ;"
      },
      {
        "id": 6,
        "label": "remove_message (mailbox , message_id)"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "call"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "add_message",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "mailbox . message_ids . push (message_id) ;"
      },
      {
        "id": 10,
        "label": "mailbox . contents . push (content) ;"
      },
      {
        "id": 11,
        "label": "mailbox . unread_count = mailbox . unread_count . checked_add (1) . unwrap () ;"
      },
      {
        "id": 12,
        "label": "mailbox . total_received = mailbox . total_received . checked_add (1) . unwrap () ;"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "remove_message",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "let Some (pos) = mailbox . message_ids . iter () . position (| & id | id == message_id)"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "mailbox . message_ids . remove (pos) ;"
      },
      {
        "id": 19,
        "label": "mailbox . contents . remove (pos) ;"
      },
      {
        "id": 20,
        "label": "mailbox . delete_count = mailbox . delete_count . checked_add (1) . unwrap () ;"
      },
      {
        "id": 21,
        "label": "if statement"
      },
      {
        "id": 22,
        "label": "predicate"
      },
      {
        "id": 23,
        "label": "mailbox . unread_ids . iter () . any (| & id | id == message_id)"
      },
      {
        "id": 24,
        "label": "True body"
      },
      {
        "id": 25,
        "label": "mailbox . unread_count = mailbox . unread_count . checked_sub (1) . unwrap () ;"
      },
      {
        "id": 26,
        "label": "mailbox . unread_ids . retain (| & id | id != message_id) ;"
      },
      {
        "id": 27,
        "label": "False body"
      },
      {
        "id": 28,
        "label": "No-op"
      },
      {
        "id": 29,
        "label": "merge"
      },
      {
        "id": 30,
        "label": "False body"
      },
      {
        "id": 31,
        "label": "No-op"
      },
      {
        "id": 32,
        "label": "merge"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "predicate"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 21,
        "to": 24,
        "label": "true"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 21,
        "to": 27,
        "label": "false"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 26,
        "to": 29,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 14,
        "to": 30,
        "label": "false"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 29,
        "to": 32,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      }
    ]
  }
]