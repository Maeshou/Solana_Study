[
  {
    "name": "block_user",
    "inputs": [
      "ctx: Context < ModifyBlocklist >",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let blk = & mut ctx . accounts . blocklist_account ;"
      },
      {
        "id": 2,
        "label": "record_block (blk , target) ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: blk"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: blk"
      }
    ]
  },
  {
    "name": "unblock_user",
    "inputs": [
      "ctx: Context < ModifyBlocklist >",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let blk = & mut ctx . accounts . blocklist_account ;"
      },
      {
        "id": 6,
        "label": "record_unblock (blk , target) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: blk"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: blk"
      }
    ]
  },
  {
    "name": "record_block",
    "inputs": [
      "blk: & mut BlocklistAccount",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "if ! blk . blocked . contains (& target) { blk . blocked . push (target) ; blk . block_count = blk . block_count . saturating_add (1) ; }"
      },
      {
        "id": 10,
        "label": "blk . blocked . push (target) ;"
      },
      {
        "id": 11,
        "label": "blk . block_count = blk . block_count . saturating_add (1) ;"
      }
    ],
    "edges": []
  },
  {
    "name": "record_unblock",
    "inputs": [
      "blk: & mut BlocklistAccount",
      "target: Pubkey"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "if let Some (pos) = blk . blocked . iter () . position (| & pk | pk == target) { blk . blocked . remove (pos) ; blk . unblock_count = blk . unblock_count . saturating_add (1) ; }"
      },
      {
        "id": 14,
        "label": "blk . blocked . remove (pos) ;"
      },
      {
        "id": 15,
        "label": "blk . unblock_count = blk . unblock_count . saturating_add (1) ;"
      }
    ],
    "edges": []
  }
]