[
  {
    "name": "list_nft",
    "inputs": [
      "ctx: Context < ListNft >",
      "sale_id: u32",
      "price: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . list_nft_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "let mut header = [0u8 ; 12] ;"
      },
      {
        "id": 4,
        "label": "header [.. 4] . copy_from_slice (& sale_id . to_be_bytes ()) ;"
      },
      {
        "id": 5,
        "label": "header [4 .. 12] . copy_from_slice (& price . to_be_bytes ()) ;"
      },
      {
        "id": 6,
        "label": "let seller_bytes = ctx . accounts . seller . key () . to_bytes () ;"
      },
      {
        "id": 7,
        "label": "let mut record = Vec :: with_capacity (44) ;"
      },
      {
        "id": 8,
        "label": "record . extend_from_slice (& header) ;"
      },
      {
        "id": 9,
        "label": "record . extend_from_slice (& seller_bytes) ;"
      },
      {
        "id": 10,
        "label": "if data . len () < record . len () { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 11,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 12,
        "label": "data [.. record . len ()] . copy_from_slice (& record) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Sale {} listed at {} lamports by {}\" , sale_id , price , ctx . accounts . seller . key ()) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: header"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: header"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: header"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: seller_bytes"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: record"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: record"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: header"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: record"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: seller_bytes"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: data"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: record"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: data"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: record"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: record"
      }
    ]
  }
]