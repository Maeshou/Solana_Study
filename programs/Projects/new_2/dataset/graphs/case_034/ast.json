[
  {
    "name": "burn_nft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < BurnNft >"
    ],
    "attributes": [
      "# [doc = \" NFT メタデータアカウントに記録された総発行数を 1 減算する  \"]",
      "# [doc = \" （owner チェックをまったく行っていないため、  \"]",
      "# [doc = \"  攻撃者が任意のアカウントを渡して他人の NFT を不正にバーンできます）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . metadata . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "if data . len () < 8",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let current_supply = u64 :: from_le_bytes (data [.. 8] . try_into () . unwrap ()) ;",
      "let new_supply = current_supply . checked_sub (1) . unwrap_or (0) ;",
      "for chunk in data . chunks_mut (8) . take (1)",
      "{",
      "chunk . copy_from_slice (& new_supply . to_le_bytes ()) ;",
      "}",
      "msg ! (\"Burned NFT: metadata={} by {} → supply {}→{}\" , acct . key () , ctx . accounts . user . key () , current_supply , new_supply) ;",
      "Ok (())"
    ]
  },
  {
    "name": "BurnNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "metadata",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" 呼び出し元ユーザーの署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]