[
  {
    "name": "update_profile",
    "inputs": [
      "ctx: Context < UpdateProfile >",
      "new_name: String",
      "new_avatar: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let now = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 2,
        "label": "let profile = PlayerProfile { username : new_name , avatar_uri : new_avatar , updated_at : now , } ;"
      },
      {
        "id": 3,
        "label": "let json = to_vec (& profile) . map_err (| _ | ErrorCode :: SerializationFailed) ? ;"
      },
      {
        "id": 4,
        "label": "let fee : u64 = 10 ;"
      },
      {
        "id": 5,
        "label": "let payer = & mut ctx . accounts . user . to_account_info () ;"
      },
      {
        "id": 6,
        "label": "let vault = & mut ctx . accounts . fee_vault . to_account_info () ;"
      },
      {
        "id": 7,
        "label": "* * payer . lamports . borrow_mut () = payer . lamports () . saturating_sub (fee) ;"
      },
      {
        "id": 8,
        "label": "* * vault . lamports . borrow_mut () = vault . lamports () . saturating_add (fee) ;"
      },
      {
        "id": 9,
        "label": "let buf = & mut ctx . accounts . profile_account . data . borrow_mut () ;"
      },
      {
        "id": 10,
        "label": "if buf . len () < json . len () { return err ! (ErrorCode :: AccountTooSmall) ; }"
      },
      {
        "id": 11,
        "label": "return err ! (ErrorCode :: AccountTooSmall) ;"
      },
      {
        "id": 12,
        "label": "buf [.. json . len ()] . copy_from_slice (& json) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Profile {} updated by {} at {}\" , ctx . accounts . profile_account . key () , ctx . accounts . user . key () , now) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: now"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: profile"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: now"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: json"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: profile"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: payer"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: vault"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: payer"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: payer"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: buf"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: buf"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: json"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: buf"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: json"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: json"
      }
    ]
  }
]