[
  {
    "name": "toggle_listing_active",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ToggleListingActive >"
    ],
    "attributes": [
      "# [doc = \" マーケットプレイス出品を一時停止／再開する  \"]",
      "# [doc = \" （`listing_account` の owner チェックを行っていないため、\"]",
      "# [doc = \"  攻撃者が任意のアカウントを指定して、\"]",
      "# [doc = \"  他人の出品を停止または再開させてしまう脆弱性があります）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . listing_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "if let Some (flag_byte) = data . first_mut ()",
      "{",
      "* flag_byte ^= 1 ;",
      "} else",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let now_slot = Clock :: get () ? . slot ;",
      "let slot_bytes = now_slot . to_le_bytes () ;",
      "if data . len () >= 1 + slot_bytes . len ()",
      "{",
      "let tail = & mut data [data . len () - slot_bytes . len () ..] ;",
      "tail . copy_from_slice (& slot_bytes) ;",
      "}",
      "msg ! (\"Listing {} active flag toggled, new flag={} (updated at slot {})\" , acct . key () , data . first () . unwrap () , now_slot) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ToggleListingActive",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を行っていない生の AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "operator",
        "attribute": "# [doc = \" 操作実行者が署名していることのみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]