[
  {
    "name": "level_up",
    "inputs": [
      "ctx: Context < LevelUp >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . nft_meta . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "if data . len () < 2 { return err ! (ErrorCode :: InsufficientData) ; }"
      },
      {
        "id": 4,
        "label": "return err ! (ErrorCode :: InsufficientData) ;"
      },
      {
        "id": 5,
        "label": "let mut iter = data . iter_mut () ;"
      },
      {
        "id": 6,
        "label": "let lo_byte = iter . next () . unwrap () ;"
      },
      {
        "id": 7,
        "label": "let hi_byte = iter . next () . unwrap () ;"
      },
      {
        "id": 8,
        "label": "let mut level = u16 :: from_le_bytes ([* lo_byte , * hi_byte]) ;"
      },
      {
        "id": 9,
        "label": "level = level . saturating_add (1) ;"
      },
      {
        "id": 10,
        "label": "let [new_lo , new_hi] = level . to_le_bytes () ;"
      },
      {
        "id": 11,
        "label": "* lo_byte = new_lo ;"
      },
      {
        "id": 12,
        "label": "* hi_byte = new_hi ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Leveled up NFT {} â†’ new level {}\" , acct . key () , level) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: data"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: iter"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: lo_byte"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: iter"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: hi_byte"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: iter"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: level"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: lo_byte"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: hi_byte"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: level"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: level"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: level"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: lo_byte"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: hi_byte"
      }
    ]
  }
]