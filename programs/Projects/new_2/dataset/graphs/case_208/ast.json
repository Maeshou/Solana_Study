[
  {
    "name": "register_event",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RegisterEvent >",
      "name: String",
      "timestamp: u64"
    ],
    "attributes": [],
    "body": [
      "let em = & mut ctx . accounts . manager ;",
      "em . events . push ((name . clone () , timestamp)) ;",
      "em . reg_count = em . reg_count . saturating_add (1) ;",
      "let mut log = ctx . accounts . backup_log . data . borrow_mut () ;",
      "log . extend_from_slice (name . as_bytes ()) ;",
      "log . extend_from_slice (& timestamp . to_le_bytes ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "RegisterEvent",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager",
        "attribute": "# [account (mut , has_one = manager)]",
        "field_type": "Account < 'info , EventManager >"
      },
      {
        "name": "manager_signer",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "backup_log",
        "attribute": "# [doc = \" CHECK: バックアップログ、所有者検証なし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EventManager",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "events",
        "attribute": null,
        "field_type": "Vec < (String , u64) >"
      },
      {
        "name": "reg_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]