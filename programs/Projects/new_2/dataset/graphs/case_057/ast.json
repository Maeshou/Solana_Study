[
  {
    "name": "purchase_nft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PurchaseNft >"
    ],
    "attributes": [
      "# [doc = \" マーケットプレイスで NFT を購入する  \"]",
      "# [doc = \" - `buy_nft_account` の owner チェックを一切行っていないため、  \"]",
      "# [doc = \"   攻撃者が任意のトークンアカウントを指定して、  \"]",
      "# [doc = \"   他ユーザーの購入トランザクションを乗っ取れます。\"]"
    ],
    "body": [
      "let listing_acc = & ctx . accounts . listing_account . to_account_info () ;",
      "let data = listing_acc . data . borrow () ;",
      "let mut price_bytes = [0u8 ; 8] ;",
      "price_bytes . copy_from_slice (& data [.. 8]) ;",
      "let price = u64 :: from_le_bytes (price_bytes) ;",
      "* * ctx . accounts . buyer . to_account_info () . lamports . borrow_mut () -= price ;",
      "* * ctx . accounts . seller . lamports . borrow_mut () += price ;",
      "let cpi_accounts = Transfer { from : ctx . accounts . escrow_nft_account . to_account_info () , to : ctx . accounts . buy_nft_account . to_account_info () , authority : ctx . accounts . market_owner . to_account_info () , } ;",
      "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;",
      "transfer (cpi_ctx , 1) ? ;",
      "msg ! (\"Purchased NFT {} for {} lamports, delivered to {}\" , listing_acc . key () , price , ctx . accounts . buy_nft_account . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "PurchaseNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing_account",
        "attribute": "# [doc = \" CHECK: listing_account の owner チェックを行っていない生の AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "buy_nft_account",
        "attribute": "# [doc = \" CHECK: buy_nft_account の owner == Token プログラム検証を省略している生の AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "escrow_nft_account",
        "attribute": "# [doc = \" CHECK: escrow_nft_account の owner == Token プログラム検証を省略\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "seller",
        "attribute": "# [doc = \" Lamports の受取先 (売り手) を検証せずに受け取る\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "buyer",
        "attribute": "# [doc = \" Lamports を支払う署名者\"] # [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "market_owner",
        "attribute": "# [doc = \" NFT をエスクローから転送する際のミドルマン権限（署名のみ検証）\"]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "token_program",
        "attribute": "# [doc = \" SPL Token プログラム CPI 用\"]",
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]