[
  {
    "name": "extend_timelock",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . timelock_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let mut data = acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "if statement"
      },
      {
        "id": 4,
        "label": "predicate"
      },
      {
        "id": 5,
        "label": "data . len () < 8"
      },
      {
        "id": 6,
        "label": "True body"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 8,
        "label": "False body"
      },
      {
        "id": 9,
        "label": "No-op"
      },
      {
        "id": 10,
        "label": "merge"
      },
      {
        "id": 11,
        "label": "let mut buf = [0u8 ; 8] ;"
      },
      {
        "id": 12,
        "label": "buf . copy_from_slice (& data [0 .. 8]) ;"
      },
      {
        "id": 13,
        "label": "let current_ts = u64 :: from_le_bytes (buf) ;"
      },
      {
        "id": 14,
        "label": "let new_ts = current_ts . checked_add (extra_secs) . ok_or (ErrorCode :: TimeOverflow) ? ;"
      },
      {
        "id": 15,
        "label": "data [0 .. 8] . copy_from_slice (& new_ts . to_le_bytes ()) ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Timelock extended to {}\" , new_ts) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "predicate"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 3,
        "to": 6,
        "label": "true"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 3,
        "to": 8,
        "label": "false"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 7,
        "to": 10,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  }
]