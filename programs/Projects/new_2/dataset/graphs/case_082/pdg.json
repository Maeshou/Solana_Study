[
  {
    "name": "claim_mission_reward",
    "inputs": [
      "ctx: Context < ClaimMissionReward >",
      "mission_id: u8",
      "reward_amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acc_info = & mut ctx . accounts . mission_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acc_info . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "if data . len () < 9 { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 4,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 5,
        "label": "let flag = data [0] ;"
      },
      {
        "id": 6,
        "label": "let bit = 1u8 . checked_shl ((mission_id % 8) as u32) . unwrap_or (0) ;"
      },
      {
        "id": 7,
        "label": "if flag & bit != 0 { return err ! (ErrorCode :: AlreadyClaimed) ; }"
      },
      {
        "id": 8,
        "label": "return err ! (ErrorCode :: AlreadyClaimed) ;"
      },
      {
        "id": 9,
        "label": "data [0] = flag | bit ;"
      },
      {
        "id": 10,
        "label": "let now = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 11,
        "label": "data [1 .. 9] . copy_from_slice (& now . to_le_bytes ()) ;"
      },
      {
        "id": 12,
        "label": "* * ctx . accounts . reward_pool . to_account_info () . lamports . borrow_mut () -= reward_amount ;"
      },
      {
        "id": 13,
        "label": "* * ctx . accounts . user . to_account_info () . lamports . borrow_mut () += reward_amount ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Mission {} reward {} lamports claimed by {} at {}\" , mission_id , reward_amount , ctx . accounts . user . key () , now) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acc_info"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acc_info"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: data"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: flag"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: bit"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: flag"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: bit"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: data"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: flag"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: bit"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: now"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: data"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: now"
      }
    ]
  }
]