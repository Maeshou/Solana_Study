[
  {
    "name": "full_add",
    "inputs": [
      "ctx: Context < FullAddCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let vault_info = ctx . accounts . safeguard . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let original = * * vault_info . try_borrow_lamports () ? ;"
      },
      {
        "id": 3,
        "label": "let result = original + amount ;"
      },
      {
        "id": 4,
        "label": "* * vault_info . try_borrow_mut_lamports () ? = result ;"
      },
      {
        "id": 5,
        "label": "msg ! (\"full_add: {} â†’ {}\" , original , result) ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: vault_info"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: original"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: vault_info"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: result"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: original"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: vault_info"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: result"
      }
    ]
  },
  {
    "name": "only_sign",
    "inputs": [
      "ctx: Context < OnlySignCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let OnlySignCtx { raw_account , signer : _ , .. } = & ctx . accounts ;"
      },
      {
        "id": 9,
        "label": "let before = * * raw_account . try_borrow_lamports () ? ;"
      },
      {
        "id": 10,
        "label": "* * raw_account . try_borrow_mut_lamports () ? = before + amount ;"
      },
      {
        "id": 11,
        "label": "msg ! (\"only_sign: {}\" , before + amount) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: before"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: before"
      }
    ]
  },
  {
    "name": "manual_test",
    "inputs": [
      "ctx: Context < ManualTestCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let vault = & ctx . accounts . vault_account ;"
      },
      {
        "id": 15,
        "label": "let caller = & ctx . accounts . user_key ;"
      },
      {
        "id": 16,
        "label": "if vault . owner == caller . key () { let info = vault . to_account_info () ; let prev = * * info . try_borrow_lamports () ? ; * * info . try_borrow_mut_lamports () ? = prev + amount ; msg ! (\"manual_test applied: {}\" , prev + amount) ; }"
      },
      {
        "id": 17,
        "label": "let info = vault . to_account_info () ;"
      },
      {
        "id": 18,
        "label": "let prev = * * info . try_borrow_lamports () ? ;"
      },
      {
        "id": 19,
        "label": "* * info . try_borrow_mut_lamports () ? = prev + amount ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"manual_test applied: {}\" , prev + amount) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: vault"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: caller"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: vault"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: caller"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: vault"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: info"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: vault"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: prev"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: info"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: info"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: prev"
      }
    ]
  },
  {
    "name": "bulk",
    "inputs": [
      "ctx: Context < BulkCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "for acc in ctx . remaining_accounts . iter () { let before = acc . lamports () ; * * acc . try_borrow_mut_lamports () ? = before + amount ; }"
      },
      {
        "id": 24,
        "label": "let before = acc . lamports () ;"
      },
      {
        "id": 25,
        "label": "* * acc . try_borrow_mut_lamports () ? = before + amount ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"bulk complete\") ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 24,
        "label": "def: before"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: before"
      }
    ]
  }
]