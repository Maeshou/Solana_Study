[
  {
    "name": "burn_nft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < BurnNft >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let cpi = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Burn { mint : ctx . accounts . mint . to_account_info () , from : ctx . accounts . from . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ,) ;",
      "anchor_spl :: token :: burn (cpi , amount) ? ;",
      "ctx . accounts . audit_log . data . borrow_mut () . push (amount as u8) ;",
      "Ok (())"
    ]
  },
  {
    "name": "BurnNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "from",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "mint",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , anchor_spl :: token :: Mint >"
      },
      {
        "name": "audit_log",
        "attribute": "# [doc = \" CHECK: 監査ログ、所有者検証なし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]