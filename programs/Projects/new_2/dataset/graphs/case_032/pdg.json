[
  {
    "name": "place_bid_raw",
    "inputs": [
      "ctx: Context < PlaceBidRaw >",
      "reserve_price: u64",
      "bid_amount: u64",
      "bid_count: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . auction_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "let ts = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 4,
        "label": "let mut buf = Vec :: new () ;"
      },
      {
        "id": 5,
        "label": "buf . extend_from_slice (& reserve_price . to_le_bytes ()) ;"
      },
      {
        "id": 6,
        "label": "buf . extend_from_slice (& bid_amount . to_le_bytes ()) ;"
      },
      {
        "id": 7,
        "label": "buf . extend_from_slice (& ctx . accounts . bidder . key () . to_bytes ()) ;"
      },
      {
        "id": 8,
        "label": "buf . extend_from_slice (& bid_count . to_le_bytes ()) ;"
      },
      {
        "id": 9,
        "label": "buf . extend_from_slice (& ts . to_le_bytes ()) ;"
      },
      {
        "id": 10,
        "label": "if data . len () < buf . len () { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 11,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 12,
        "label": "data [.. buf . len ()] . copy_from_slice (& buf) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Auction raw updated: reserve={}, bid={} by={} (count={}, ts={})\" , reserve_price , bid_amount , ctx . accounts . bidder . key () , bid_count , ts) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: ts"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: buf"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: buf"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: ts"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: buf"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 12,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 12,
        "label": "data_dep: buf"
      }
    ]
  }
]