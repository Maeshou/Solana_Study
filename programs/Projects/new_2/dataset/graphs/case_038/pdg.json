[
  {
    "name": "ordered_deposit",
    "inputs": [
      "ctx: Context < OrderedDeposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let ai = ctx . accounts . secured_vault . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let before = ai . lamports () ;"
      },
      {
        "id": 3,
        "label": "* * ai . try_borrow_mut_lamports () ? = before + amount ;"
      },
      {
        "id": 4,
        "label": "msg ! (\"ordered_deposit: {}→{}\" , before , before + amount) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: ai"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: before"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: ai"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: ai"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: before"
      }
    ]
  },
  {
    "name": "iterated_deposit",
    "inputs": [
      "ctx: Context < IteratedDeposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let raw = & ctx . accounts . unchecked_vault ;"
      },
      {
        "id": 8,
        "label": "let mut count = 0 ;"
      },
      {
        "id": 9,
        "label": "while count < 2 { * * raw . try_borrow_mut_lamports () ? += amount ; count += 1 ; }"
      },
      {
        "id": 10,
        "label": "* * raw . try_borrow_mut_lamports () ? += amount ;"
      },
      {
        "id": 11,
        "label": "count += 1 ;"
      },
      {
        "id": 12,
        "label": "msg ! (\"iterated_deposit 完了\") ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: raw"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: count"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: count"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: raw"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: count"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: raw"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: count"
      }
    ]
  },
  {
    "name": "matched_deposit",
    "inputs": [
      "ctx: Context < MatchedDeposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let vault = & ctx . accounts . vault_data ;"
      },
      {
        "id": 16,
        "label": "let caller = ctx . accounts . caller . key () ;"
      },
      {
        "id": 17,
        "label": "match vault . owner . cmp (& caller) { Ordering :: Equal => { let ai = vault . to_account_info () ; let prev = ai . lamports () ; * * ai . try_borrow_mut_lamports () ? = prev + amount ; msg ! (\"matched_deposit 適用: {}\" , prev + amount) ; } _ => msg ! (\"matched_deposit: 権限なし\") , }"
      },
      {
        "id": 18,
        "label": "let ai = vault . to_account_info () ;"
      },
      {
        "id": 19,
        "label": "let prev = ai . lamports () ;"
      },
      {
        "id": 20,
        "label": "* * ai . try_borrow_mut_lamports () ? = prev + amount ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"matched_deposit 適用: {}\" , prev + amount) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: vault"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: caller"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: vault"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: caller"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: vault"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: ai"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: vault"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: prev"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: ai"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: ai"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: prev"
      }
    ]
  },
  {
    "name": "batch_deposit",
    "inputs": [
      "ctx: Context < BatchDeposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 23,
        "label": "Entry"
      },
      {
        "id": 24,
        "label": "for acct in ctx . remaining_accounts . iter () { let before = acct . lamports () ; * * acct . try_borrow_mut_lamports () ? = before + amount ; }"
      },
      {
        "id": 25,
        "label": "let before = acct . lamports () ;"
      },
      {
        "id": 26,
        "label": "* * acct . try_borrow_mut_lamports () ? = before + amount ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"batch_deposit 完了\") ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: before"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: before"
      }
    ]
  }
]