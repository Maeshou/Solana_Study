[
  {
    "name": "unlock_achievement",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UnlockAchievement >",
      "achievement_id: u8"
    ],
    "attributes": [
      "# [doc = \" プレイヤーのアチーブメントアカウントに新しいアチーブメントを追加する  \"]",
      "# [doc = \" （owner チェックを行っていないため、任意のアカウントで他人の実績を解放できます）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . achievement_acc . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "const MAX_ACH : usize = 16 ;",
      "let required = 1 + MAX_ACH ;",
      "if data . len () < required",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let current = data [0] as usize ;",
      "if current < MAX_ACH",
      "{",
      "let idx = 1 + current ;",
      "if idx < required",
      "{",
      "data [idx] = achievement_id ;",
      "data [0] = data [0] . saturating_add (1) ;",
      "msg ! (\"Achievement",
      "{",
      "} unlocked for {} (total: {})\" , achievement_id , ctx . accounts . player . key () , data [0]) ;",
      "} else",
      "{",
      "return err ! (ErrorCode :: IndexOutOfBounds) ;",
      "} } else",
      "{",
      "return err ! (ErrorCode :: ListFull) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "UnlockAchievement",
    "node_type": "struct",
    "fields": [
      {
        "name": "achievement_acc",
        "attribute": "# [doc = \" CHECK: owner == program_id チェックを省略している危険な AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player",
        "attribute": "# [doc = \" 実績を解放するプレイヤーの署名のみを検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]