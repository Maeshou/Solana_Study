[
  {
    "name": "unlock_achievement",
    "inputs": [
      "ctx: Context < UnlockAchievement >",
      "achievement_id: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . achievement_acc . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "const MAX_ACH : usize = 16 ;"
      },
      {
        "id": 4,
        "label": "let required = 1 + MAX_ACH ;"
      },
      {
        "id": 5,
        "label": "if data . len () < required { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 6,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 7,
        "label": "let current = data [0] as usize ;"
      },
      {
        "id": 8,
        "label": "if current < MAX_ACH { let idx = 1 + current ; if idx < required { data [idx] = achievement_id ; data [0] = data [0] . saturating_add (1) ; msg ! (\"Achievement {} unlocked for {} (total: {})\" , achievement_id , ctx . accounts . player . key () , data [0]) ; } else { return err ! (ErrorCode :: IndexOutOfBounds) ; } } else { return err ! (ErrorCode :: ListFull) ; }"
      },
      {
        "id": 9,
        "label": "let idx = 1 + current ;"
      },
      {
        "id": 10,
        "label": "if idx < required { data [idx] = achievement_id ; data [0] = data [0] . saturating_add (1) ; msg ! (\"Achievement {} unlocked for {} (total: {})\" , achievement_id , ctx . accounts . player . key () , data [0]) ; } else { return err ! (ErrorCode :: IndexOutOfBounds) ; }"
      },
      {
        "id": 11,
        "label": "data [idx] = achievement_id ;"
      },
      {
        "id": 12,
        "label": "data [0] = data [0] . saturating_add (1) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Achievement {} unlocked for {} (total: {})\" , achievement_id , ctx . accounts . player . key () , data [0]) ;"
      },
      {
        "id": 14,
        "label": "return err ! (ErrorCode :: IndexOutOfBounds) ;"
      },
      {
        "id": 15,
        "label": "return err ! (ErrorCode :: ListFull) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: required"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: required"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: current"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: data"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: current"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: current"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: required"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: data"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: idx"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: current"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: idx"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: required"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: data"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: idx"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: data"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: idx"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: data"
      }
    ]
  }
]