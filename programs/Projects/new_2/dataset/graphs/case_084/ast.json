[
  {
    "name": "add_friend",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyFriendList >",
      "new_friend: Pubkey"
    ],
    "attributes": [
      "# [doc = \" フレンドを追加する  \"]",
      "# [doc = \" (`friend_list_account` の owner チェックを省略しているため、  \"]",
      "# [doc = \"  攻撃者が他人のフレンドリストを指定し、勝手に友達登録できます)\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . friend_list_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "const MAX_FRIENDS : usize = 32 ;",
      "let required = 1 + 32 * MAX_FRIENDS ;",
      "if data . len () < required",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let (cnt , list) = data . split_at_mut (1) ;",
      "let current = cnt [0] as usize ;",
      "if current >= MAX_FRIENDS",
      "{",
      "return err ! (ErrorCode :: ListFull) ;",
      "}",
      "let offset = current * 32 ;",
      "list [offset .. offset + 32] . copy_from_slice (& new_friend . to_bytes ()) ;",
      "cnt [0] = (current + 1) as u8 ;",
      "msg ! (\"Added friend {} to list {} (total {})\" , new_friend , acct . key () , current + 1) ;",
      "Ok (())"
    ]
  },
  {
    "name": "record_gift",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyGiftHistory >",
      "recipient: Pubkey",
      "item: Pubkey"
    ],
    "attributes": [
      "# [doc = \" ギフト履歴にエントリを追加する  \"]",
      "# [doc = \" (`gift_history_account` の owner チェックを省略しているため、  \"]",
      "# [doc = \"  攻撃者が他人の履歴を指定し、任意の贈与記録を追加できます)\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . gift_history_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "if data . len () < 72",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let start = data . len () - 72 ;",
      "let now = Clock :: get () ? . unix_timestamp as u64 ;",
      "data [start .. start + 32] . copy_from_slice (recipient . as_ref ()) ;",
      "data [start + 32 .. start + 64] . copy_from_slice (item . as_ref ()) ;",
      "data [start + 64 .. start + 72] . copy_from_slice (& now . to_le_bytes ()) ;",
      "msg ! (\"Recorded gift of item {} to {} in history {} at {}\" , item , recipient , acct . key () , now) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ModifyFriendList",
    "node_type": "struct",
    "fields": [
      {
        "name": "friend_list_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を全く行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ModifyGiftHistory",
    "node_type": "struct",
    "fields": [
      {
        "name": "gift_history_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を全く行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]