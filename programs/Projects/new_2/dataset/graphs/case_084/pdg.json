[
  {
    "name": "add_friend",
    "inputs": [
      "ctx: Context < ModifyFriendList >",
      "new_friend: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . friend_list_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "const MAX_FRIENDS : usize = 32 ;"
      },
      {
        "id": 4,
        "label": "let required = 1 + 32 * MAX_FRIENDS ;"
      },
      {
        "id": 5,
        "label": "if data . len () < required { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 6,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 7,
        "label": "let (cnt , list) = data . split_at_mut (1) ;"
      },
      {
        "id": 8,
        "label": "let current = cnt [0] as usize ;"
      },
      {
        "id": 9,
        "label": "if current >= MAX_FRIENDS { return err ! (ErrorCode :: ListFull) ; }"
      },
      {
        "id": 10,
        "label": "return err ! (ErrorCode :: ListFull) ;"
      },
      {
        "id": 11,
        "label": "let offset = current * 32 ;"
      },
      {
        "id": 12,
        "label": "list [offset .. offset + 32] . copy_from_slice (& new_friend . to_bytes ()) ;"
      },
      {
        "id": 13,
        "label": "cnt [0] = (current + 1) as u8 ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Added friend {} to list {} (total {})\" , new_friend , acct . key () , current + 1) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: required"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: required"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: data"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: current"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: current"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: offset"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: current"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: offset"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: offset"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: current"
      }
    ]
  },
  {
    "name": "record_gift",
    "inputs": [
      "ctx: Context < ModifyGiftHistory >",
      "recipient: Pubkey",
      "item: Pubkey"
    ],
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let acct = & mut ctx . accounts . gift_history_account . to_account_info () ;"
      },
      {
        "id": 18,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 19,
        "label": "if data . len () < 72 { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 20,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 21,
        "label": "let start = data . len () - 72 ;"
      },
      {
        "id": 22,
        "label": "let now = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 23,
        "label": "data [start .. start + 32] . copy_from_slice (recipient . as_ref ()) ;"
      },
      {
        "id": 24,
        "label": "data [start + 32 .. start + 64] . copy_from_slice (item . as_ref ()) ;"
      },
      {
        "id": 25,
        "label": "data [start + 64 .. start + 72] . copy_from_slice (& now . to_le_bytes ()) ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"Recorded gift of item {} to {} in history {} at {}\" , item , recipient , acct . key () , now) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 17,
        "label": "def: acct"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: data"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: acct"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: data"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: start"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: data"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: now"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: data"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: start"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: start"
      },
      {
        "from": 18,
        "to": 24,
        "label": "data_dep: data"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: start"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: start"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: data"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: start"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: start"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: now"
      }
    ]
  }
]