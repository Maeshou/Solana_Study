[
  {
    "name": "submit_score",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SubmitScore >",
      "score: u32"
    ],
    "attributes": [
      "# [doc = \" プレイヤーのスコアをグローバルリーダーボードに追加する  \"]",
      "# [doc = \" （`leaderboard_account` の owner チェックを一切行っていないため、\"]",
      "# [doc = \"  攻撃者が任意のアカウントを指定して他人のリーダーボードを改竄できます）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . leaderboard_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "let mut entry = Vec :: with_capacity (36) ;",
      "entry . extend_from_slice (ctx . accounts . player . key () . as_ref ()) ;",
      "entry . extend_from_slice (& score . to_le_bytes ()) ;",
      "data . extend_from_slice (& entry) ;",
      "msg ! (\"Player {} submitted score {} to leaderboard {}\" , ctx . accounts . player . key () , score , acct . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "SubmitScore",
    "node_type": "struct",
    "fields": [
      {
        "name": "leaderboard_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない生の AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player",
        "attribute": "# [doc = \" スコアを送信するプレイヤーの署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]