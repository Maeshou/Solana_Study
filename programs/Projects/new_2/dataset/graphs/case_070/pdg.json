[
  {
    "name": "cast_vote",
    "inputs": [
      "ctx: Context < CastVote >",
      "proposal_id: u64",
      "support: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let power_acc = & ctx . accounts . vote_power_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let weight = * * power_acc . lamports . borrow () ;"
      },
      {
        "id": 3,
        "label": "let data = & mut ctx . accounts . proposal_account . data . borrow_mut () ;"
      },
      {
        "id": 4,
        "label": "if data . len () < 24 { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 5,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 6,
        "label": "let (id_slice , rest) = data . split_at_mut (8) ;"
      },
      {
        "id": 7,
        "label": "let (support_slice , against_slice) = rest . split_at_mut (8) ;"
      },
      {
        "id": 8,
        "label": "let stored_id = u64 :: from_le_bytes (id_slice . try_into () . unwrap ()) ;"
      },
      {
        "id": 9,
        "label": "if stored_id != proposal_id { return err ! (ErrorCode :: InvalidProposal) ; }"
      },
      {
        "id": 10,
        "label": "return err ! (ErrorCode :: InvalidProposal) ;"
      },
      {
        "id": 11,
        "label": "if support { let mut total = u64 :: from_le_bytes (support_slice . try_into () . unwrap ()) ; total = total . saturating_add (weight) ; support_slice . copy_from_slice (& total . to_le_bytes ()) ; } else { let mut total = u64 :: from_le_bytes (against_slice . try_into () . unwrap ()) ; total = total . saturating_add (weight) ; against_slice . copy_from_slice (& total . to_le_bytes ()) ; }"
      },
      {
        "id": 12,
        "label": "let mut total = u64 :: from_le_bytes (support_slice . try_into () . unwrap ()) ;"
      },
      {
        "id": 13,
        "label": "total = total . saturating_add (weight) ;"
      },
      {
        "id": 14,
        "label": "support_slice . copy_from_slice (& total . to_le_bytes ()) ;"
      },
      {
        "id": 15,
        "label": "let mut total = u64 :: from_le_bytes (against_slice . try_into () . unwrap ()) ;"
      },
      {
        "id": 16,
        "label": "total = total . saturating_add (weight) ;"
      },
      {
        "id": 17,
        "label": "against_slice . copy_from_slice (& total . to_le_bytes ()) ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Voted on proposal {}: support={} weight={} by {}\" , proposal_id , support , weight , ctx . accounts . voter . key ()) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: power_acc"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: weight"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: power_acc"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: data"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: data"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: data"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: stored_id"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: stored_id"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: weight"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: weight"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: total"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: total"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: total"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: weight"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: total"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: total"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: total"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: total"
      },
      {
        "from": 2,
        "to": 16,
        "label": "data_dep: weight"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: total"
      }
    ]
  }
]