[
  {
    "name": "extend_slots",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ExtendSlots >",
      "extra_slots: u8"
    ],
    "attributes": [
      "# [doc = \" NFT用の追加装備スロットを付与する  \"]",
      "# [doc = \" (`slot_account` の owner チェックを一切行っていないため、  \"]",
      "# [doc = \"  攻撃者が他人のアカウントを指定して無制限スロットを付与できます)\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . slot_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "if data . len () < 2",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let current = data [0] ;",
      "let max = data [1] ;",
      "let new_count = current . saturating_add (extra_slots) ;",
      "data [0] = new_count ;",
      "msg ! (\"Slots extended on {}: {} → {} (max {})\" , acct . key () , current , new_count , max) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ExtendSlots",
    "node_type": "struct",
    "fields": [
      {
        "name": "slot_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を全く行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "operator",
        "attribute": "# [doc = \" 操作実行者の署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]