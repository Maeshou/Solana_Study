[
  {
    "name": "accumulate",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx79 >"
    ],
    "attributes": [],
    "body": [
      "for (& k , & v) in ctx . accounts . fees_map . fees . iter ()",
      "{",
      "ctx . accounts . accumulator . total = ctx . accounts . accumulator . total . saturating_add (v) ;",
      "}",
      "ctx . accounts . accumulator . rounds += 1 ;",
      "ctx . accounts . log_acc . data . borrow_mut () . extend_from_slice (& ctx . accounts . accumulator . total . to_le_bytes ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx79",
    "node_type": "struct",
    "fields": [
      {
        "name": "fees_map",
        "attribute": "# [account (mut , has_one = admin)]",
        "field_type": "Account < 'info , FeesMap >"
      },
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "log_acc",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "accumulator",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Accumulator >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FeesMap",
    "node_type": "struct",
    "fields": [
      {
        "name": "admin",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "fees",
        "attribute": null,
        "field_type": "std :: collections :: BTreeMap < u64 , u64 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Accumulator",
    "node_type": "struct",
    "fields": [
      {
        "name": "total",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "rounds",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]