[
  {
    "name": "submit_vote",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SubmitVote >",
      "vote_option: u8"
    ],
    "attributes": [
      "# [doc = \" 提案に投票を追加するインストラクション\"]"
    ],
    "body": [
      "let mut proposal = Proposal :: try_from_slice (& ctx . accounts . proposal_account . data . borrow ()) ? ;",
      "proposal . votes . push (vote_option) ;",
      "proposal . serialize (& mut & mut ctx . accounts . proposal_account . data . borrow_mut () [..]) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "SubmitVote",
    "node_type": "struct",
    "fields": [
      {
        "name": "proposal_account",
        "attribute": "# [doc = \" CHECK: オーナーチェック（owner == program_id）を行っていない\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "voter",
        "attribute": "# [doc = \" 投票者が署名していることのみを検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Proposal",
    "node_type": "struct",
    "fields": [
      {
        "name": "title",
        "attribute": null,
        "field_type": "String"
      },
      {
        "name": "votes",
        "attribute": null,
        "field_type": "Vec < u8 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]