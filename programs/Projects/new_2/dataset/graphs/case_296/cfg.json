[
  {
    "name": "adjust_price",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let raw = & mut ctx . accounts . inventory_info . try_borrow_mut_data () ? ;"
      },
      {
        "id": 2,
        "label": "if statement"
      },
      {
        "id": 3,
        "label": "predicate"
      },
      {
        "id": 4,
        "label": "raw . len () >= 2"
      },
      {
        "id": 5,
        "label": "True body"
      },
      {
        "id": 6,
        "label": "let mut p = u16 :: from_le_bytes ([raw [0] , raw [1]]) ;"
      },
      {
        "id": 7,
        "label": "let calc = (p as u32) * (mul as u32) ;"
      },
      {
        "id": 8,
        "label": "p = (calc as i32 + off as i32) . max (0) as u16 ;"
      },
      {
        "id": 9,
        "label": "let b = p . to_le_bytes () ;"
      },
      {
        "id": 10,
        "label": "raw [0] = b [0] ;"
      },
      {
        "id": 11,
        "label": "raw [1] = b [1] ;"
      },
      {
        "id": 12,
        "label": "False body"
      },
      {
        "id": 13,
        "label": "No-op"
      },
      {
        "id": 14,
        "label": "merge"
      },
      {
        "id": 15,
        "label": "msg ! (\"管理者 {} が価格調整 (×{} +{})\" , ctx . accounts . manager . key () , mul , off) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "predicate"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 2,
        "to": 5,
        "label": "true"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 2,
        "to": 12,
        "label": "false"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      }
    ]
  },
  {
    "name": "restore_price",
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let raw = & mut ctx . accounts . inventory_info . try_borrow_mut_data () ? ;"
      },
      {
        "id": 19,
        "label": "if statement"
      },
      {
        "id": 20,
        "label": "predicate"
      },
      {
        "id": 21,
        "label": "raw . len () >= 2"
      },
      {
        "id": 22,
        "label": "True body"
      },
      {
        "id": 23,
        "label": "raw [0] = 0x10 ;"
      },
      {
        "id": 24,
        "label": "raw [1] = 0x00 ;"
      },
      {
        "id": 25,
        "label": "False body"
      },
      {
        "id": 26,
        "label": "No-op"
      },
      {
        "id": 27,
        "label": "merge"
      },
      {
        "id": 28,
        "label": "msg ! (\"管理者 {} が価格復元\" , ctx . accounts . manager . key ()) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "predicate"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "true"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 19,
        "to": 25,
        "label": "false"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 24,
        "to": 27,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      }
    ]
  }
]