[
  {
    "name": "rotate_queue",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx3 >",
      "steps: u8"
    ],
    "attributes": [],
    "body": [
      "let mut aux = ctx . accounts . aux_buf . data . borrow_mut () ;",
      "aux . rotate_left ((steps as usize) . min (aux . len ())) ;",
      "let queue = & mut ctx . accounts . task_queue . items ;",
      "queue . rotate_right ((steps as usize) % queue . len ()) ;",
      "ctx . accounts . task_queue . rotate_count = ctx . accounts . task_queue . rotate_count . saturating_add (1) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx3",
    "node_type": "struct",
    "fields": [
      {
        "name": "aux_buf",
        "attribute": "# [doc = \" CHECK: 補助バッファ、所有者検証なし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "task_queue",
        "attribute": "# [account (mut , has_one = manager)]",
        "field_type": "Account < 'info , TaskQueue >"
      },
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "TaskQueue",
    "node_type": "struct",
    "fields": [
      {
        "name": "manager",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "items",
        "attribute": null,
        "field_type": "Vec < u8 >"
      },
      {
        "name": "rotate_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]