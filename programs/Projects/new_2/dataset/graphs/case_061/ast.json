[
  {
    "name": "alpha_increment",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < AlphaCtx >",
      "delta: u64"
    ],
    "attributes": [
      "# [doc = \" モードα：has_one + signer で検証済みVaultをインクリメント\"]"
    ],
    "body": [
      "let acct = ctx . accounts . secure_vault . to_account_info () ;",
      "let before = acct . lamports () ;",
      "* * acct . try_borrow_mut_lamports () ? = before + delta ;",
      "msg ! (\"alpha_increment: {}→{}\" , before , before + delta) ;",
      "Ok (())"
    ]
  },
  {
    "name": "beta_chain",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < BetaCtx >",
      "delta: u64"
    ],
    "attributes": [
      "# [doc = \" モードβ：署名のみチェック、chain で複数アカウントをまとめて操作（ownerチェックなし）\"]"
    ],
    "body": [
      "iter :: once (& ctx . accounts . raw_one) . chain (iter :: once (& ctx . accounts . raw_two)) . for_each (| info | { let _ = info . try_borrow_mut_lamports () . map (| mut lam | * lam += delta) ; }) ;",
      "msg ! (\"beta_chain completed\") ;",
      "Ok (())"
    ]
  },
  {
    "name": "gamma_guard",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < GammaCtx >",
      "delta: u64"
    ],
    "attributes": [
      "# [doc = \" モードγ：手動オーナーチェック → early returnスタイル\"]"
    ],
    "body": [
      "let vault = & ctx . accounts . vault ;",
      "if vault . owner != ctx . accounts . user . key ()",
      "{",
      "msg ! (\"gamma_guard: unauthorized\") ;",
      "return Ok (())",
      "}",
      "let info = vault . to_account_info () ;",
      "let bal = info . lamports () ;",
      "* * info . try_borrow_mut_lamports () ? = bal + delta ;",
      "msg ! (\"gamma_guard applied: {}\" , bal + delta) ;",
      "Ok (())"
    ]
  },
  {
    "name": "delta_share",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < DeltaCtx >",
      "base: u64"
    ],
    "attributes": [
      "# [doc = \" モードδ：remaining_accounts に渡されたそれぞれに1.5倍（四捨五入）で分配\"]"
    ],
    "body": [
      "let bonus = ((base as f64) * 1.5) . round () as u64 ;",
      "for acct in & ctx . remaining_accounts",
      "{",
      "* * acct . try_borrow_mut_lamports () ? += bonus ;",
      "}",
      "msg ! (\"delta_share: +{} each\" , bonus) ;",
      "Ok (())"
    ]
  },
  {
    "name": "AlphaCtx",
    "node_type": "struct",
    "fields": [
      {
        "name": "secure_vault",
        "attribute": "# [account (mut , has_one = authority)]",
        "field_type": "Account < 'info , Vault >"
      },
      {
        "name": "authority",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BetaCtx",
    "node_type": "struct",
    "fields": [
      {
        "name": "raw_one",
        "attribute": "# [doc = \" CHECK: raw AccountInfo は owner チェックなし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "raw_two",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "signer",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "GammaCtx",
    "node_type": "struct",
    "fields": [
      {
        "name": "vault",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Vault >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "DeltaCtx",
    "node_type": "struct",
    "fields": [
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Vault",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]