[
  {
    "name": "withdraw_protected",
    "inputs": [
      "ctx: Context < ProtectedCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let vault_info = ctx . accounts . vault_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let initial = * * vault_info . try_borrow_lamports () ? ;"
      },
      {
        "id": 3,
        "label": "* * vault_info . try_borrow_mut_lamports () ? = initial . saturating_sub (amount) ;"
      },
      {
        "id": 4,
        "label": "msg ! (\"withdraw_protected: {}â†’{}\" , initial , initial - amount) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: vault_info"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: initial"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: vault_info"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: vault_info"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: initial"
      }
    ]
  },
  {
    "name": "withdraw_assert",
    "inputs": [
      "ctx: Context < AssertCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let vault_data = & ctx . accounts . vault_data ;"
      },
      {
        "id": 8,
        "label": "assert_eq ! (vault_data . owner , ctx . accounts . user . key ()) ;"
      },
      {
        "id": 9,
        "label": "let info = vault_data . to_account_info () ;"
      },
      {
        "id": 10,
        "label": "let before = * * info . try_borrow_lamports () ? ;"
      },
      {
        "id": 11,
        "label": "* * info . try_borrow_mut_lamports () ? = before . saturating_sub (amount) ;"
      },
      {
        "id": 12,
        "label": "msg ! (\"withdraw_assert: {}\" , before - amount) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: vault_data"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: info"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: vault_data"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: before"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: info"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: info"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: before"
      }
    ]
  },
  {
    "name": "withdraw_signonly",
    "inputs": [
      "ctx: Context < SignedCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let raw = & ctx . accounts . raw_vault ;"
      },
      {
        "id": 16,
        "label": "let current = * * raw . try_borrow_lamports () ? ;"
      },
      {
        "id": 17,
        "label": "* * raw . try_borrow_mut_lamports () ? = current . saturating_sub (amount) ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"withdraw_signonly: {}\" , current - amount) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: raw"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: current"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: raw"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: raw"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: current"
      }
    ]
  },
  {
    "name": "withdraw_generic",
    "inputs": [
      "ctx: Context < GenericCtx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "for acct in ctx . remaining_accounts . iter () { let bal = acct . lamports () ; * * acct . try_borrow_mut_lamports () ? = bal . saturating_sub (amount) ; }"
      },
      {
        "id": 22,
        "label": "let bal = acct . lamports () ;"
      },
      {
        "id": 23,
        "label": "* * acct . try_borrow_mut_lamports () ? = bal . saturating_sub (amount) ;"
      },
      {
        "id": 24,
        "label": "msg ! (\"withdraw_generic completed\") ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: bal"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: bal"
      }
    ]
  }
]