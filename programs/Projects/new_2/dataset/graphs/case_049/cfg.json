[
  {
    "name": "list_for_auction",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . nft_token_account . to_account_info () , to : ctx . accounts . escrow_nft_account . to_account_info () , authority : ctx . accounts . seller . to_account_info () , } ;"
      },
      {
        "id": 2,
        "label": "transfer (CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) , 1 ,) ? ;"
      },
      {
        "id": 3,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 4,
        "label": "let expiry = now . checked_add (duration_secs) . ok_or (ErrorCode :: TimestampOverflow) ? ;"
      },
      {
        "id": 5,
        "label": "let mut buf = Vec :: with_capacity (32 + 8 + 8) ;"
      },
      {
        "id": 6,
        "label": "buf . extend_from_slice (& ctx . accounts . seller . key () . to_bytes ()) ;"
      },
      {
        "id": 7,
        "label": "buf . extend_from_slice (& min_bid . to_le_bytes ()) ;"
      },
      {
        "id": 8,
        "label": "buf . extend_from_slice (& expiry . to_le_bytes ()) ;"
      },
      {
        "id": 9,
        "label": "let data = & mut ctx . accounts . auction_account . data . borrow_mut () ;"
      },
      {
        "id": 10,
        "label": "if statement"
      },
      {
        "id": 11,
        "label": "predicate"
      },
      {
        "id": 12,
        "label": "data . len () < buf . len ()"
      },
      {
        "id": 13,
        "label": "True body"
      },
      {
        "id": 14,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 15,
        "label": "False body"
      },
      {
        "id": 16,
        "label": "No-op"
      },
      {
        "id": 17,
        "label": "merge"
      },
      {
        "id": 18,
        "label": "data [.. buf . len ()] . copy_from_slice (& buf) ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Auction listing: escrow={} by {} (min_bid={}, expires_at={})\" , ctx . accounts . escrow_nft_account . key () , ctx . accounts . seller . key () , min_bid , expiry) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "predicate"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 10,
        "to": 13,
        "label": "true"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 10,
        "to": 15,
        "label": "false"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  }
]