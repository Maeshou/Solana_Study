[
  {
    "name": "emergency_withdraw",
    "inputs": [
      "ctx: Context < EmergencyWithdraw >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let pool = & mut ctx . accounts . pool_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let dest = & mut ctx . accounts . destination . to_account_info () ;"
      },
      {
        "id": 3,
        "label": "let pool_balance = * * pool . lamports . borrow () ;"
      },
      {
        "id": 4,
        "label": "if pool_balance < amount { return err ! (ErrorCode :: InsufficientFunds) ; }"
      },
      {
        "id": 5,
        "label": "return err ! (ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 6,
        "label": "* * pool . lamports . borrow_mut () -= amount ;"
      },
      {
        "id": 7,
        "label": "* * dest . lamports . borrow_mut () += amount ;"
      },
      {
        "id": 8,
        "label": "msg ! (\"Emergency withdrew {} lamports from pool {} to {}\" , amount , pool . key () , dest . key ()) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: pool"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: dest"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: pool_balance"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: pool"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: pool_balance"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: pool"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: dest"
      }
    ]
  }
]