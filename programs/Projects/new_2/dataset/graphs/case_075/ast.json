[
  {
    "name": "emergency_withdraw",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < EmergencyWithdraw >",
      "amount: u64"
    ],
    "attributes": [
      "# [doc = \" 緊急時にプールアカウントから指定アカウントへ lamports を引き出す  \"]",
      "# [doc = \" （`pool_account` の owner チェックを一切行っていないため、  \"]",
      "# [doc = \"  攻撃者が他人の資産プールを指定して好き勝手に引き出せる脆弱性があります）\"]"
    ],
    "body": [
      "let pool = & mut ctx . accounts . pool_account . to_account_info () ;",
      "let dest = & mut ctx . accounts . destination . to_account_info () ;",
      "let pool_balance = * * pool . lamports . borrow () ;",
      "if pool_balance < amount",
      "{",
      "return err ! (ErrorCode :: InsufficientFunds) ;",
      "}",
      "* * pool . lamports . borrow_mut () -= amount ;",
      "* * dest . lamports . borrow_mut () += amount ;",
      "msg ! (\"Emergency withdrew {} lamports from pool {} to {}\" , amount , pool . key () , dest . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "EmergencyWithdraw",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "destination",
        "attribute": "# [doc = \" lamports を受け取るアカウント（owner チェックなし）\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "authority",
        "attribute": "# [doc = \" 緊急引き出しを実行する権限があると仮定した署名者\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]