[
  {
    "name": "redeem_code",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Redeem >",
      "code: String"
    ],
    "attributes": [],
    "body": [
      "let sys = & mut ctx . accounts . sys ;",
      "if let Some (count) = sys . codes . get_mut (& code)",
      "{",
      "* count = count . saturating_sub (1) ;",
      "sys . history . push_back ((ctx . accounts . user . key () , code . clone ())) ;",
      "if sys . history . len () > 50",
      "{",
      "sys . history . pop_front () ;",
      "}",
      "}",
      "ctx . accounts . history_acc . data . borrow_mut () . extend_from_slice (code . as_bytes ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Redeem",
    "node_type": "struct",
    "fields": [
      {
        "name": "sys",
        "attribute": "# [account (mut , has_one = owner)]",
        "field_type": "Account < 'info , ReferralDataExt >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "history_acc",
        "attribute": "# [doc = \" CHECK: 履歴アカウント、所有者検証なし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ReferralDataExt",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "codes",
        "attribute": null,
        "field_type": "std :: collections :: HashMap < String , u8 >"
      },
      {
        "name": "history",
        "attribute": null,
        "field_type": "VecDeque < (Pubkey , String) >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]