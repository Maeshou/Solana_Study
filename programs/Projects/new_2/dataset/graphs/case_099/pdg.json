[
  {
    "name": "renew_subscription",
    "inputs": [
      "ctx: Context < RenewSubscription >",
      "payment: u64",
      "term_secs: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let data = & mut ctx . accounts . sub_account . data . borrow_mut () ;"
      },
      {
        "id": 2,
        "label": "if data . len () < std :: mem :: size_of :: < Subscription > () { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 3,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 4,
        "label": "let sub : & mut Subscription = bytemuck :: from_bytes_mut (& mut data [.. std :: mem :: size_of :: < Subscription > ()]) ;"
      },
      {
        "id": 5,
        "label": "let vault = & mut ctx . accounts . fee_vault . to_account_info () ;"
      },
      {
        "id": 6,
        "label": "if * * ctx . accounts . payer . to_account_info () . lamports . borrow () < payment { return err ! (ErrorCode :: InsufficientFunds) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 8,
        "label": "* * ctx . accounts . payer . to_account_info () . lamports . borrow_mut () -= payment ;"
      },
      {
        "id": 9,
        "label": "* * vault . lamports . borrow_mut () += payment ;"
      },
      {
        "id": 10,
        "label": "sub . until = sub . until . wrapping_add (term_secs) ;"
      },
      {
        "id": 11,
        "label": "msg ! (\"Subscription {} renewed for {}s, new expiry {}\" , ctx . accounts . sub_account . key () , term_secs , sub . until) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: data"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: data"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: vault"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: vault"
      }
    ]
  }
]