[
  {
    "name": "ListingData",
    "node_type": "struct",
    "fields": [
      {
        "name": "price",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "seller",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "expires",
        "attribute": null,
        "field_type": "i64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "create_listing",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CreateListing >",
      "price: u64",
      "duration_secs: i64"
    ],
    "attributes": [
      "# [doc = \" 新規出品を作成する  \"]",
      "# [doc = \" （`listing_account` の Owner チェックを一切行っていないため、\"]",
      "# [doc = \"  攻撃者が任意アカウントを渡して他人のNFTを無断で出品できます）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . listing_account . to_account_info () ;",
      "let mut data = acct . data . borrow_mut () ;",
      "let listing = ListingData { price , seller : ctx . accounts . seller . key () , expires : Clock :: get () ? . unix_timestamp + duration_secs , } ;",
      "let buf = serialize (& listing) . map_err (| _ | ErrorCode :: SerializationError) ? ;",
      "if data . len () < buf . len ()",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "data [.. buf . len ()] . copy_from_slice (& buf) ;",
      "msg ! (\"Created listing {} → price={}, expires={} by {}\" , acct . key () , price , listing . expires , listing . seller) ;",
      "Ok (())"
    ]
  },
  {
    "name": "update_listing",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdateListing >",
      "new_price: Option < u64 >",
      "extend_secs: Option < i64 >"
    ],
    "attributes": [
      "# [doc = \" 出品を更新する  \"]",
      "# [doc = \" （Owner チェックなし、bincode で読み込み→更新→再書き込み）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . listing_account . to_account_info () ;",
      "let mut data = acct . data . borrow_mut () ;",
      "let mut listing : ListingData = deserialize (& data [..]) . map_err (| _ | ErrorCode :: DeserializationError) ? ;",
      "if let Some (p) = new_price",
      "{",
      "listing . price = p ;",
      "}",
      "if let Some (s) = extend_secs",
      "{",
      "listing . expires = listing . expires . saturating_add (s) ;",
      "}",
      "let buf = serialize (& listing) . map_err (| _ | ErrorCode :: SerializationError) ? ;",
      "if data . len () < buf . len ()",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "data [.. buf . len ()] . copy_from_slice (& buf) ;",
      "msg ! (\"Updated listing {} → price={}, expires={}\" , acct . key () , listing . price , listing . expires) ;",
      "Ok (())"
    ]
  },
  {
    "name": "cancel_listing",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CancelListing >"
    ],
    "attributes": [
      "# [doc = \" 出品をキャンセルしてデータを消去する  \"]",
      "# [doc = \" （Owner チェックなしのままバッファ全体をゼロクリア）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . listing_account . to_account_info () ;",
      "let mut data = acct . data . borrow_mut () ;",
      "data . fill (0) ;",
      "msg ! (\"Canceled listing {}\" , acct . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "CreateListing",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない生の AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "seller",
        "attribute": "# [doc = \" 出品者の署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "clock",
        "attribute": "# [doc = \" 期限計算用\"]",
        "field_type": "Sysvar < 'info , Clock >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UpdateListing",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を省略\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CancelListing",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を行わない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]