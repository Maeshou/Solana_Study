[
  {
    "name": "create_listing",
    "inputs": [
      "ctx: Context < CreateListing >",
      "price: u64",
      "duration_secs: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . listing_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let mut data = acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "let listing = ListingData { price , seller : ctx . accounts . seller . key () , expires : Clock :: get () ? . unix_timestamp + duration_secs , } ;"
      },
      {
        "id": 4,
        "label": "let buf = serialize (& listing) . map_err (| _ | ErrorCode :: SerializationError) ? ;"
      },
      {
        "id": 5,
        "label": "if data . len () < buf . len () { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 6,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 7,
        "label": "data [.. buf . len ()] . copy_from_slice (& buf) ;"
      },
      {
        "id": 8,
        "label": "msg ! (\"Created listing {} → price={}, expires={} by {}\" , acct . key () , price , listing . expires , listing . seller) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: listing"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: buf"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: listing"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: buf"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: buf"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: buf"
      }
    ]
  },
  {
    "name": "update_listing",
    "inputs": [
      "ctx: Context < UpdateListing >",
      "new_price: Option < u64 >",
      "extend_secs: Option < i64 >"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let acct = & mut ctx . accounts . listing_account . to_account_info () ;"
      },
      {
        "id": 12,
        "label": "let mut data = acct . data . borrow_mut () ;"
      },
      {
        "id": 13,
        "label": "let mut listing : ListingData = deserialize (& data [..]) . map_err (| _ | ErrorCode :: DeserializationError) ? ;"
      },
      {
        "id": 14,
        "label": "if let Some (p) = new_price { listing . price = p ; }"
      },
      {
        "id": 15,
        "label": "listing . price = p ;"
      },
      {
        "id": 16,
        "label": "if let Some (s) = extend_secs { listing . expires = listing . expires . saturating_add (s) ; }"
      },
      {
        "id": 17,
        "label": "listing . expires = listing . expires . saturating_add (s) ;"
      },
      {
        "id": 18,
        "label": "let buf = serialize (& listing) . map_err (| _ | ErrorCode :: SerializationError) ? ;"
      },
      {
        "id": 19,
        "label": "if data . len () < buf . len () { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 20,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 21,
        "label": "data [.. buf . len ()] . copy_from_slice (& buf) ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"Updated listing {} → price={}, expires={}\" , acct . key () , listing . price , listing . expires) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: acct"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: data"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: acct"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: data"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: buf"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: data"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: buf"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: data"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: buf"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: buf"
      }
    ]
  },
  {
    "name": "cancel_listing",
    "inputs": [
      "ctx: Context < CancelListing >"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let acct = & mut ctx . accounts . listing_account . to_account_info () ;"
      },
      {
        "id": 26,
        "label": "let mut data = acct . data . borrow_mut () ;"
      },
      {
        "id": 27,
        "label": "data . fill (0) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"Canceled listing {}\" , acct . key ()) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: acct"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: data"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: acct"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: data"
      }
    ]
  }
]