[
  {
    "name": "equip_skin",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < EquipSkin >",
      "new_skin: Pubkey"
    ],
    "attributes": [
      "# [doc = \" キャラクターにスキンを装備する  \"]",
      "# [doc = \" （`equipment_account` の owner チェックを一切行っていないため、  \"]",
      "# [doc = \"  攻撃者が他人の装備アカウントを指定し、自分のスキンを装備できます）\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . equipment_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "const MIN_LEN : usize = 32 + 4 ;",
      "if data . len () < MIN_LEN",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "data . chunks_mut (32) . next () . map (| slot | slot . copy_from_slice (new_skin . as_ref ())) ;",
      "msg ! (\"Equipped skin {} on account {}\" , new_skin , acct . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "EquipSkin",
    "node_type": "struct",
    "fields": [
      {
        "name": "equipment_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" 呼び出し元ユーザーの署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]