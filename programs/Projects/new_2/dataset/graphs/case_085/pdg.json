[
  {
    "name": "claim_daily_challenge",
    "inputs": [
      "ctx: Context < ClaimDailyChallenge >",
      "reward_amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let prog_acc = & mut ctx . accounts . challenge_progress_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut prog_acc . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "if data . len () < 16 { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 4,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 5,
        "label": "let (ts_slice , streak_slice) = data . split_at_mut (8) ;"
      },
      {
        "id": 6,
        "label": "let now = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 7,
        "label": "let last = u64 :: from_le_bytes (ts_slice . try_into () . unwrap ()) ;"
      },
      {
        "id": 8,
        "label": "if now < last . saturating_add (86400) { return err ! (ErrorCode :: TooSoon) ; }"
      },
      {
        "id": 9,
        "label": "return err ! (ErrorCode :: TooSoon) ;"
      },
      {
        "id": 10,
        "label": "let new_streak = 1 ;"
      },
      {
        "id": 11,
        "label": "ts_slice . copy_from_slice (& now . to_le_bytes ()) ;"
      },
      {
        "id": 12,
        "label": "streak_slice . copy_from_slice (& new_streak . to_le_bytes ()) ;"
      },
      {
        "id": 13,
        "label": "* * ctx . accounts . reward_pool . to_account_info () . lamports . borrow_mut () = ctx . accounts . reward_pool . to_account_info () . lamports () . saturating_sub (reward_amount) ;"
      },
      {
        "id": 14,
        "label": "* * ctx . accounts . user . to_account_info () . lamports . borrow_mut () += reward_amount ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Daily challenge claimed: streak={} reward={} by {}\" , new_streak , reward_amount , ctx . accounts . user . key ()) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: prog_acc"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: prog_acc"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: data"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: data"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: now"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: last"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: now"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: last"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: new_streak"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: now"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: new_streak"
      }
    ]
  }
]