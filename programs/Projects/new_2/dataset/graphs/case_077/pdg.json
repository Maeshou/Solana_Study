[
  {
    "name": "draw_nft",
    "inputs": [
      "ctx: Context < DrawNft >",
      "user_seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let pool_info = & ctx . accounts . gacha_pool_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let pool_data = & pool_info . data . borrow () ;"
      },
      {
        "id": 3,
        "label": "if pool_data . len () < 8 { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 4,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 5,
        "label": "let n = u64 :: from_le_bytes (pool_data [0 .. 8] . try_into () . unwrap ()) as usize ;"
      },
      {
        "id": 6,
        "label": "let keys_start = 8 ;"
      },
      {
        "id": 7,
        "label": "let keys_end = 8 + 32 * n ;"
      },
      {
        "id": 8,
        "label": "let rar_start = keys_end ;"
      },
      {
        "id": 9,
        "label": "let rar_end = rar_start + n ;"
      },
      {
        "id": 10,
        "label": "if pool_data . len () < rar_end { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 11,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 12,
        "label": "let key_bytes = & pool_data [keys_start .. keys_end] ;"
      },
      {
        "id": 13,
        "label": "let rarity = & pool_data [rar_start .. rar_end] ;"
      },
      {
        "id": 14,
        "label": "let slot = Clock :: get () ? . slot as u64 ;"
      },
      {
        "id": 15,
        "label": "let idx = ((user_seed ^ slot) as usize) % n ;"
      },
      {
        "id": 16,
        "label": "let chosen_key = Pubkey :: new (& key_bytes [idx * 32 .. idx * 32 + 32]) ;"
      },
      {
        "id": 17,
        "label": "let chosen_rarity = rarity [idx] ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Gacha draw: user_seed={} slot={} idx={} rarity={}\" , user_seed , slot , idx , chosen_rarity) ;"
      },
      {
        "id": 19,
        "label": "Ok (chosen_key)"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: pool_info"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: pool_data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: pool_info"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: pool_data"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: n"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: pool_data"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: keys_start"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: keys_end"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: n"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: rar_start"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: keys_end"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: rar_end"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: rar_start"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: n"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: pool_data"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: rar_end"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: key_bytes"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: pool_data"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: keys_start"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: keys_end"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: rarity"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: pool_data"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: rar_start"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: rar_end"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: slot"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: idx"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: slot"
      },
      {
        "from": 5,
        "to": 15,
        "label": "data_dep: n"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: chosen_key"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: key_bytes"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: idx"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: idx"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: chosen_rarity"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: rarity"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: idx"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: chosen_key"
      }
    ]
  }
]