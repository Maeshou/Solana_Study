[
  {
    "name": "approve_transaction",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ApproveTransaction >",
      "tx_index: u8",
      "approver: Pubkey"
    ],
    "attributes": [
      "# [doc = \" マルチシグ承認を行う  \"]",
      "# [doc = \" (`multisig_account` の owner チェックをまったく行っていないため、  \"]",
      "# [doc = \"  攻撃者が他人のマルチシグアカウントを指定して、  \"]",
      "# [doc = \"  単独でトランザクションを承認できてしまう脆弱性があります)\"]"
    ],
    "body": [
      "let acct = & mut ctx . accounts . multisig_account . to_account_info () ;",
      "let data = & mut acct . data . borrow_mut () ;",
      "let n = data [0] as usize ;",
      "let list_start = 1 ;",
      "let list_end = list_start + 32 * n ;",
      "if data . len () < list_end + 2 * (tx_index as usize + 1)",
      "{",
      "return err ! (ErrorCode :: DataTooShort) ;",
      "}",
      "let mut idx = None ;",
      "for i in 0 .. n",
      "{",
      "let off = list_start + i * 32 ;",
      "let pk = Pubkey :: new (& data [off .. off + 32]) ;",
      "if pk == approver",
      "{",
      "idx = Some (i) ;",
      "break ;",
      "}",
      "}",
      "let approver_idx = idx . ok_or (ErrorCode :: InvalidApprover) ? ;",
      "let mask_off = list_end + 2 * (tx_index as usize) ;",
      "let mask_bytes = & mut data [mask_off .. mask_off + 2] ;",
      "let mut mask = u16 :: from_le_bytes ([mask_bytes [0] , mask_bytes [1]]) ;",
      "mask |= 1 << approver_idx ;",
      "mask_bytes . copy_from_slice (& mask . to_le_bytes ()) ;",
      "msg ! (\"Approver {} (idx {}) approved tx {} on multisig {} (mask=0x{:04x})\" , approver , approver_idx , tx_index , acct . key () , mask ,) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ApproveTransaction",
    "node_type": "struct",
    "fields": [
      {
        "name": "multisig_account",
        "attribute": "# [doc = \" CHECK: owner == program_id の検証を一切行っていない AccountInfo\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "authority",
        "attribute": "# [doc = \" 呼び出し元の署名のみ検証\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]