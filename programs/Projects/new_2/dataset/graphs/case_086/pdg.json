[
  {
    "name": "approve_transaction",
    "inputs": [
      "ctx: Context < ApproveTransaction >",
      "tx_index: u8",
      "approver: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . multisig_account . to_account_info () ;"
      },
      {
        "id": 2,
        "label": "let data = & mut acct . data . borrow_mut () ;"
      },
      {
        "id": 3,
        "label": "let n = data [0] as usize ;"
      },
      {
        "id": 4,
        "label": "let list_start = 1 ;"
      },
      {
        "id": 5,
        "label": "let list_end = list_start + 32 * n ;"
      },
      {
        "id": 6,
        "label": "if data . len () < list_end + 2 * (tx_index as usize + 1) { return err ! (ErrorCode :: DataTooShort) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: DataTooShort) ;"
      },
      {
        "id": 8,
        "label": "let mut idx = None ;"
      },
      {
        "id": 9,
        "label": "for i in 0 .. n { let off = list_start + i * 32 ; let pk = Pubkey :: new (& data [off .. off + 32]) ; if pk == approver { idx = Some (i) ; break ; } }"
      },
      {
        "id": 10,
        "label": "let off = list_start + i * 32 ;"
      },
      {
        "id": 11,
        "label": "let pk = Pubkey :: new (& data [off .. off + 32]) ;"
      },
      {
        "id": 12,
        "label": "if pk == approver { idx = Some (i) ; break ; }"
      },
      {
        "id": 13,
        "label": "idx = Some (i) ;"
      },
      {
        "id": 14,
        "label": "break ;"
      },
      {
        "id": 15,
        "label": "let approver_idx = idx . ok_or (ErrorCode :: InvalidApprover) ? ;"
      },
      {
        "id": 16,
        "label": "let mask_off = list_end + 2 * (tx_index as usize) ;"
      },
      {
        "id": 17,
        "label": "let mask_bytes = & mut data [mask_off .. mask_off + 2] ;"
      },
      {
        "id": 18,
        "label": "let mut mask = u16 :: from_le_bytes ([mask_bytes [0] , mask_bytes [1]]) ;"
      },
      {
        "id": 19,
        "label": "mask |= 1 << approver_idx ;"
      },
      {
        "id": 20,
        "label": "mask_bytes . copy_from_slice (& mask . to_le_bytes ()) ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"Approver {} (idx {}) approved tx {} on multisig {} (mask=0x{:04x})\" , approver , approver_idx , tx_index , acct . key () , mask ,) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: acct"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: n"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: data"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: list_start"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: list_end"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: list_start"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: n"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: data"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list_end"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: idx"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: n"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: list_start"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: data"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: idx"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: off"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: list_start"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: pk"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: data"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: off"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: off"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: pk"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: idx"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: idx"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: approver_idx"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: idx"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: mask_off"
      },
      {
        "from": 5,
        "to": 16,
        "label": "data_dep: list_end"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: mask_bytes"
      },
      {
        "from": 2,
        "to": 17,
        "label": "data_dep: data"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: mask_off"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: mask_off"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: mask"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: mask_bytes"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: mask_bytes"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: mask"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: approver_idx"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: mask_bytes"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: mask"
      }
    ]
  }
]