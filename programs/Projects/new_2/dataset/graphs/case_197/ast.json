[
  {
    "name": "set_param",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SetParam >",
      "key: String",
      "value: u64"
    ],
    "attributes": [],
    "body": [
      "let gov = & mut ctx . accounts . gov ;",
      "gov . params . insert (key . clone () , value) ;",
      "gov . change_count = gov . change_count . saturating_add (1) ;",
      "ctx . accounts . event_log . data . borrow_mut () . extend_from_slice (key . as_bytes ()) ;",
      "ctx . accounts . event_log . data . borrow_mut () . extend_from_slice (& value . to_le_bytes ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "SetParam",
    "node_type": "struct",
    "fields": [
      {
        "name": "gov",
        "attribute": "# [account (mut , has_one = chair)]",
        "field_type": "Account < 'info , GovernanceData >"
      },
      {
        "name": "chair",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "event_log",
        "attribute": "# [doc = \" CHECK: イベントログ、所有者検証なし\"] # [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "GovernanceData",
    "node_type": "struct",
    "fields": [
      {
        "name": "chair",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "params",
        "attribute": null,
        "field_type": "std :: collections :: HashMap < String , u64 >"
      },
      {
        "name": "change_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]