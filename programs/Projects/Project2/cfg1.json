[
  {
    "name": "admin_instruction",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let account_data = ctx . accounts . admin_config . try_borrow_data () ? ;"
      },
      {
        "id": 2,
        "label": "let mut account_data_slice : & [u8] = & account_data ;"
      },
      {
        "id": 3,
        "label": "let account_state = AdminConfig :: try_deserialize (& mut account_data_slice) ? ;"
      },
      {
        "id": 4,
        "label": "if (account_state . admin != ctx . accounts . admin . key ())"
      },
      {
        "id": 5,
        "label": "then"
      },
      {
        "id": 6,
        "label": "handle_invalid_admin ()"
      },
      {
        "id": 7,
        "label": "return Err (ProgramError :: InvalidArgument . into ()) ;"
      },
      {
        "id": 8,
        "label": "else"
      },
      {
        "id": 9,
        "label": "process_valid_admin ()"
      },
      {
        "id": 10,
        "label": "merge"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "true"
      },
      {
        "from": 5,
        "to": 6,
        "label": "call"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 4,
        "to": 8,
        "label": "false"
      },
      {
        "from": 8,
        "to": 9,
        "label": "call"
      },
      {
        "from": 7,
        "to": 10,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "call"
      }
    ]
  },
  {
    "name": "handle_invalid_admin",
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "msg ! (\"Admin check failed: invalid admin key detected. Executing fallback routine.\") ;"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_valid_admin",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "msg ! (\"Admin check succeeded: proceeding with valid admin operations.\") ;"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  }
]