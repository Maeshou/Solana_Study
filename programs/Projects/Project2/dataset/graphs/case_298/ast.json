[
  {
    "name": "record_volume",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RecordVol >",
      "volume: u64"
    ],
    "attributes": [],
    "body": [
      "let df = & mut ctx . accounts . fee ;",
      "df . buffer [df . index as usize] = volume ;",
      "df . index = (df . index + 1) % (df . buffer . len () as u8) ;",
      "df . count = df . count . saturating_add (1) . min (df . buffer . len () as u64) ;",
      "let sum : u128 = df . buffer . iter () . take (df . count as usize) . map (| & v | v as u128) . sum () ;",
      "df . current_fee = ((sum / df . count as u128) as u64) / df . divisor ;",
      "Ok (())"
    ]
  },
  {
    "name": "RecordVol",
    "node_type": "struct",
    "fields": [
      {
        "name": "fee",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , FeeData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FeeData",
    "node_type": "struct",
    "fields": [
      {
        "name": "buffer",
        "attribute": null,
        "field_type": "[u64 ; 10]"
      },
      {
        "name": "index",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "divisor",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "current_fee",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]