[
  {
    "name": "process",
    "inputs": [
      "ctx: Context < Process >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let account_owner = * ctx . accounts . dynamic_account . owner ;"
      },
      {
        "id": 2,
        "label": "if account_owner != crate :: ID && account_owner != some_other_program :: ID { return err ! (MyError :: InvalidOwner) ; }"
      },
      {
        "id": 3,
        "label": "return err ! (MyError :: InvalidOwner) ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: account_owner"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: account_owner"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: account_owner"
      }
    ]
  }
]