[
  {
    "name": "ReviewScheduler",
    "node_type": "struct",
    "fields": [
      {
        "name": "",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "",
        "attribute": null,
        "field_type": "Vec < (Vec < u8 > , i64) >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "initialize",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "attributes": [
      "# [doc = \" 初期化：内部 Vec は空、bump のみ設定\"]"
    ],
    "body": [
      "let b = * ctx . bumps . get (\"scheduler\") . unwrap () ;",
      "ctx . accounts . scheduler . 0 = b ;",
      "Ok (())"
    ]
  },
  {
    "name": "schedule_review",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "doc_hash: Vec < u8 >",
      "due_ts: i64"
    ],
    "attributes": [
      "# [doc = \" レビュー予定登録：件数制限チェック＋(doc_hash, due_ts) 追加\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . scheduler . 1 ;",
      "if list . len () >= MAX_DOCS",
      "{",
      "return err ! (ErrorCode :: MaxDocumentsReached) ;",
      "}",
      "list . push ((doc_hash , due_ts)) ;",
      "Ok (())"
    ]
  },
  {
    "name": "mark_reviewed",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "doc_hash: Vec < u8 >"
    ],
    "attributes": [
      "# [doc = \" レビュー完了マーク：該当ドキュメントを一括除去\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . scheduler . 1 ;",
      "list . retain (| (hash , _) | { if * hash == doc_hash { false } else { true } }) ;",
      "Ok (())"
    ]
  },
  {
    "name": "purge_past",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "attributes": [
      "# [doc = \" 期限超過分を一括削除\"]"
    ],
    "body": [
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "let list = & mut ctx . accounts . scheduler . 1 ;",
      "list . retain (| & (_ , due) | { if due >= now { true } else { false } }) ;",
      "Ok (())"
    ]
  },
  {
    "name": "count_upcoming",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "attributes": [
      "# [doc = \" 今後のレビュー数をログ出力\"]"
    ],
    "body": [
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "let mut cnt = 0u64 ;",
      "for & (_ , due) in ctx . accounts . scheduler . 1 . iter ()",
      "{",
      "if due > now",
      "{",
      "cnt = cnt . wrapping_add (1) ;",
      "}",
      "}",
      "msg ! (\"Upcoming reviews: {}\" , cnt) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Initialize",
    "node_type": "struct",
    "fields": [
      {
        "name": "scheduler",
        "attribute": "# [account (init_zeroed , payer = authority , seeds = [b\"scheduler\" , authority . key () . as_ref ()] , bump , space = 8 + 1 + 4 + 10 * (4 + 32 + 8))]",
        "field_type": "Account < 'info , ReviewScheduler >"
      },
      {
        "name": "authority",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "clock",
        "attribute": null,
        "field_type": "Sysvar < 'info , Clock >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Modify",
    "node_type": "struct",
    "fields": [
      {
        "name": "scheduler",
        "attribute": "# [account (mut , seeds = [b\"scheduler\" , authority . key () . as_ref ()] , bump = scheduler . 0 ,)]",
        "field_type": "Account < 'info , ReviewScheduler >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "clock",
        "attribute": null,
        "field_type": "Sysvar < 'info , Clock >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]