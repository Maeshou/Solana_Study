[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = * ctx . bumps . get (\"scheduler\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . scheduler . 0 = b ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "schedule_review",
    "inputs": [
      "ctx: Context < Modify >",
      "doc_hash: Vec < u8 >",
      "due_ts: i64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . scheduler . 1 ;"
      },
      {
        "id": 6,
        "label": "if list . len () >= MAX_DOCS { return err ! (ErrorCode :: MaxDocumentsReached) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: MaxDocumentsReached) ;"
      },
      {
        "id": 8,
        "label": "list . push ((doc_hash , due_ts)) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "mark_reviewed",
    "inputs": [
      "ctx: Context < Modify >",
      "doc_hash: Vec < u8 >"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let list = & mut ctx . accounts . scheduler . 1 ;"
      },
      {
        "id": 12,
        "label": "list . retain (| (hash , _) | { if * hash == doc_hash { false } else { true } }) ;"
      },
      {
        "id": 13,
        "label": "if * hash == doc_hash { false } else { true }"
      },
      {
        "id": 14,
        "label": "false"
      },
      {
        "id": 15,
        "label": "true"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: list"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "purge_past",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 19,
        "label": "let list = & mut ctx . accounts . scheduler . 1 ;"
      },
      {
        "id": 20,
        "label": "list . retain (| & (_ , due) | { if due >= now { true } else { false } }) ;"
      },
      {
        "id": 21,
        "label": "if due >= now { true } else { false }"
      },
      {
        "id": 22,
        "label": "true"
      },
      {
        "id": 23,
        "label": "false"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: now"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: list"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: list"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: now"
      },
      {
        "from": 18,
        "to": 21,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "count_upcoming",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 25,
        "label": "Entry"
      },
      {
        "id": 26,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 27,
        "label": "let mut cnt = 0u64 ;"
      },
      {
        "id": 28,
        "label": "for & (_ , due) in ctx . accounts . scheduler . 1 . iter () { if due > now { cnt = cnt . wrapping_add (1) ; } }"
      },
      {
        "id": 29,
        "label": "if due > now { cnt = cnt . wrapping_add (1) ; }"
      },
      {
        "id": 30,
        "label": "cnt = cnt . wrapping_add (1) ;"
      },
      {
        "id": 31,
        "label": "msg ! (\"Upcoming reviews: {}\" , cnt) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 26,
        "to": 26,
        "label": "def: now"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: cnt"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: now"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: cnt"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: cnt"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: now"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: cnt"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: cnt"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: cnt"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: cnt"
      }
    ]
  }
]