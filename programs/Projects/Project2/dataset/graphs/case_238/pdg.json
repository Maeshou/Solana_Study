[
  {
    "name": "harvest",
    "inputs": [
      "ctx: Context < Harvest >",
      "node_id: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let rh = & mut ctx . accounts . res ;"
      },
      {
        "id": 2,
        "label": "rh . counts . insert (node_id , rh . counts . get (& node_id) . copied () . unwrap_or (0) + 1) ;"
      },
      {
        "id": 3,
        "label": "if rh . counts . len () > 10 { let smallest = * rh . counts . keys () . min () . unwrap () ; rh . counts . remove (& smallest) ; }"
      },
      {
        "id": 4,
        "label": "let smallest = * rh . counts . keys () . min () . unwrap () ;"
      },
      {
        "id": 5,
        "label": "rh . counts . remove (& smallest) ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: rh"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: rh"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: rh"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: rh"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: rh"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: rh"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: smallest"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: rh"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: rh"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: smallest"
      }
    ]
  }
]