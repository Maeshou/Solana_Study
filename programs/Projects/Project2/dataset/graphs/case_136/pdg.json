[
  {
    "name": "add_book",
    "inputs": [
      "ctx: Context < AddBook >",
      "title: String",
      "copies: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if title . len () > 64 { return Err (ErrorCode :: TitleTooLong . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: TitleTooLong . into ()) ;"
      },
      {
        "id": 3,
        "label": "if copies == 0 { return Err (ErrorCode :: InvalidCopies . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: InvalidCopies . into ()) ;"
      },
      {
        "id": 5,
        "label": "let book = & mut ctx . accounts . book ;"
      },
      {
        "id": 6,
        "label": "book . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "book . title = title ;"
      },
      {
        "id": 8,
        "label": "book . available = copies ;"
      },
      {
        "id": 9,
        "label": "book . borrowers = Vec :: new () ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: book"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: book"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: book"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: book"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: book"
      }
    ]
  },
  {
    "name": "borrow_book",
    "inputs": [
      "ctx: Context < ModifyBook >"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let book = & mut ctx . accounts . book ;"
      },
      {
        "id": 13,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 14,
        "label": "if book . owner == user { return Err (ErrorCode :: CannotBorrowOwn . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ErrorCode :: CannotBorrowOwn . into ()) ;"
      },
      {
        "id": 16,
        "label": "if book . available == 0 { return Err (ErrorCode :: NoCopiesLeft . into ()) ; }"
      },
      {
        "id": 17,
        "label": "return Err (ErrorCode :: NoCopiesLeft . into ()) ;"
      },
      {
        "id": 18,
        "label": "for & b in book . borrowers . iter () { if b == user { return Err (ErrorCode :: AlreadyBorrowed . into ()) ; } }"
      },
      {
        "id": 19,
        "label": "if b == user { return Err (ErrorCode :: AlreadyBorrowed . into ()) ; }"
      },
      {
        "id": 20,
        "label": "return Err (ErrorCode :: AlreadyBorrowed . into ()) ;"
      },
      {
        "id": 21,
        "label": "book . available = book . available . checked_sub (1) . ok_or (ErrorCode :: Underflow) ? ;"
      },
      {
        "id": 22,
        "label": "book . borrowers . push (user) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: book"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: user"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: book"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: user"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: book"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: book"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: user"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: user"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: book"
      },
      {
        "from": 12,
        "to": 21,
        "label": "data_dep: book"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: book"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: user"
      }
    ]
  },
  {
    "name": "return_book",
    "inputs": [
      "ctx: Context < ModifyBook >"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let book = & mut ctx . accounts . book ;"
      },
      {
        "id": 26,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 27,
        "label": "let mut idx : Option < usize > = None ;"
      },
      {
        "id": 28,
        "label": "if book . owner == user { return Err (ErrorCode :: CannotReturnOwn . into ()) ; }"
      },
      {
        "id": 29,
        "label": "return Err (ErrorCode :: CannotReturnOwn . into ()) ;"
      },
      {
        "id": 30,
        "label": "for (i , & b) in book . borrowers . iter () . enumerate () { if b == user { idx = Some (i) ; break ; } }"
      },
      {
        "id": 31,
        "label": "if b == user { idx = Some (i) ; break ; }"
      },
      {
        "id": 32,
        "label": "idx = Some (i) ;"
      },
      {
        "id": 33,
        "label": "break ;"
      },
      {
        "id": 34,
        "label": "if let Some (i) = idx { book . borrowers . remove (i) ; book . available = book . available . checked_add (1) . ok_or (ErrorCode :: Overflow) ? ; Ok (()) } else { Err (ErrorCode :: NotBorrowed . into ()) }"
      },
      {
        "id": 35,
        "label": "book . borrowers . remove (i) ;"
      },
      {
        "id": 36,
        "label": "book . available = book . available . checked_add (1) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      },
      {
        "id": 38,
        "label": "Err (ErrorCode :: NotBorrowed . into ())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: book"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: user"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: book"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: user"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: book"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: user"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: user"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: book"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: book"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: book"
      },
      {
        "from": 25,
        "to": 35,
        "label": "data_dep: book"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: book"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: book"
      }
    ]
  }
]