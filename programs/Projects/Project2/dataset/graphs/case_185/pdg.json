[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let bump = * ctx . bumps . get (\"tracker\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . tracker . 0 = bump ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: bump"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: bump"
      }
    ]
  },
  {
    "name": "add_shipment",
    "inputs": [
      "ctx: Context < Modify >",
      "shipment_id: u64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 6,
        "label": "if list . len () >= MAX_SHIPMENTS { return err ! (ErrorCode :: MaxShipmentsReached) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: MaxShipmentsReached) ;"
      },
      {
        "id": 8,
        "label": "list . push ((shipment_id , 0)) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "mark_in_transit",
    "inputs": [
      "ctx: Context < Modify >",
      "shipment_id: u64"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 12,
        "label": "let mut found = false ;"
      },
      {
        "id": 13,
        "label": "for entry in list . iter_mut () { if entry . 0 == shipment_id { entry . 1 = 1 ; found = true ; } }"
      },
      {
        "id": 14,
        "label": "if entry . 0 == shipment_id { entry . 1 = 1 ; found = true ; }"
      },
      {
        "id": 15,
        "label": "entry . 1 = 1 ;"
      },
      {
        "id": 16,
        "label": "found = true ;"
      },
      {
        "id": 17,
        "label": "if ! found { return err ! (ErrorCode :: ShipmentNotFound) ; }"
      },
      {
        "id": 18,
        "label": "return err ! (ErrorCode :: ShipmentNotFound) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: list"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: found"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: list"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "mark_delivered",
    "inputs": [
      "ctx: Context < Modify >",
      "shipment_id: u64"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 22,
        "label": "let mut found = false ;"
      },
      {
        "id": 23,
        "label": "for entry in list . iter_mut () { if entry . 0 == shipment_id { entry . 1 = 2 ; found = true ; } }"
      },
      {
        "id": 24,
        "label": "if entry . 0 == shipment_id { entry . 1 = 2 ; found = true ; }"
      },
      {
        "id": 25,
        "label": "entry . 1 = 2 ;"
      },
      {
        "id": 26,
        "label": "found = true ;"
      },
      {
        "id": 27,
        "label": "if ! found { return err ! (ErrorCode :: ShipmentNotFound) ; }"
      },
      {
        "id": 28,
        "label": "return err ! (ErrorCode :: ShipmentNotFound) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: list"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: found"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: list"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "purge_delivered",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 30,
        "label": "Entry"
      },
      {
        "id": 31,
        "label": "ctx . accounts . tracker . 1 . retain (| & (_ , status) | status != 2) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "count_pending",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 33,
        "label": "Entry"
      },
      {
        "id": 34,
        "label": "let list = & ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 35,
        "label": "let mut cnt = 0u64 ;"
      },
      {
        "id": 36,
        "label": "for & (_ , status) in list . iter () { if status == 0 { cnt = cnt . wrapping_add (1) ; } }"
      },
      {
        "id": 37,
        "label": "if status == 0 { cnt = cnt . wrapping_add (1) ; }"
      },
      {
        "id": 38,
        "label": "cnt = cnt . wrapping_add (1) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Pending shipments: {}\" , cnt) ;"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 34,
        "to": 34,
        "label": "def: list"
      },
      {
        "from": 35,
        "to": 35,
        "label": "def: cnt"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: list"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: cnt"
      },
      {
        "from": 35,
        "to": 36,
        "label": "data_dep: cnt"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: cnt"
      },
      {
        "from": 35,
        "to": 37,
        "label": "data_dep: cnt"
      },
      {
        "from": 35,
        "to": 38,
        "label": "data_dep: cnt"
      },
      {
        "from": 35,
        "to": 38,
        "label": "data_dep: cnt"
      }
    ]
  }
]