[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let bump = * ctx . bumps . get (\"manager\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . manager . 0 = bump ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: bump"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: bump"
      }
    ]
  },
  {
    "name": "schedule",
    "inputs": [
      "ctx: Context < Modify >",
      "unlock_ts: i64",
      "message: String"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . manager . 1 ;"
      },
      {
        "id": 6,
        "label": "list . push ((unlock_ts , message)) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "send_due",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let list = & mut ctx . accounts . manager . 1 ;"
      },
      {
        "id": 10,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 11,
        "label": "for & (ts , ref msg) in list . iter () { if ts < now { msg ! (\"Notification at {}: {}\" , ts , msg) ; } }"
      },
      {
        "id": 12,
        "label": "if ts < now { msg ! (\"Notification at {}: {}\" , ts , msg) ; }"
      },
      {
        "id": 13,
        "label": "msg ! (\"Notification at {}: {}\" , ts , msg) ;"
      },
      {
        "id": 14,
        "label": "list . retain (| & (ts , _) | ts > now) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: list"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: now"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: list"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: now"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: now"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: list"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "clear_all",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "ctx . accounts . manager . 1 . clear () ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]