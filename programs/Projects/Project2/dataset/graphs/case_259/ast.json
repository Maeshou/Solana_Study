[
  {
    "name": "enqueue",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Enq >",
      "player: Pubkey"
    ],
    "attributes": [],
    "body": [
      "let q = & mut ctx . accounts . queue ;",
      "let next = (q . tail + 1) % q . capacity ;",
      "if next != q . head",
      "{",
      "q . buffer [q . tail as usize] = Some (player) ;",
      "q . tail = next ;",
      "q . length = q . length . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "dequeue",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Enq >"
    ],
    "attributes": [],
    "body": [
      "let q = & mut ctx . accounts . queue ;",
      "if q . length > 0",
      "{",
      "let res = q . buffer [q . head as usize] . take () ;",
      "q . head = (q . head + 1) % q . capacity ;",
      "q . length = q . length . saturating_sub (1) ;",
      "Ok (res) } else",
      "{",
      "Ok (None)",
      "}"
    ]
  },
  {
    "name": "Enq",
    "node_type": "struct",
    "fields": [
      {
        "name": "queue",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , MatchQueueData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "MatchQueueData",
    "node_type": "struct",
    "fields": [
      {
        "name": "buffer",
        "attribute": null,
        "field_type": "[Option < Pubkey > ; 16]"
      },
      {
        "name": "head",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "tail",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "length",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "capacity",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]