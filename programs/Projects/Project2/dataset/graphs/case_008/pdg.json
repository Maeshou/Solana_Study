[
  {
    "name": "create_collection",
    "inputs": [
      "ctx: Context < CreateCollection >",
      "name: String",
      "symbol: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let collection = & mut ctx . accounts . collection ;"
      },
      {
        "id": 2,
        "label": "collection . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "collection . name = name ;"
      },
      {
        "id": 4,
        "label": "collection . symbol = symbol ;"
      },
      {
        "id": 5,
        "label": "collection . total_minted = 0 ;"
      },
      {
        "id": 6,
        "label": "collection . bump = * ctx . bumps . get (\"collection\") . unwrap () ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: collection"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: collection"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: collection"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: collection"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: collection"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: collection"
      }
    ]
  },
  {
    "name": "mint_nft",
    "inputs": [
      "ctx: Context < MintNft >",
      "uri: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let collection = & mut ctx . accounts . collection ;"
      },
      {
        "id": 10,
        "label": "let nft_metadata = & mut ctx . accounts . nft_metadata ;"
      },
      {
        "id": 11,
        "label": "nft_metadata . collection = collection . key () ;"
      },
      {
        "id": 12,
        "label": "nft_metadata . owner = ctx . accounts . recipient . key () ;"
      },
      {
        "id": 13,
        "label": "nft_metadata . uri = uri ;"
      },
      {
        "id": 14,
        "label": "nft_metadata . token_id = collection . total_minted ;"
      },
      {
        "id": 15,
        "label": "nft_metadata . bump = * ctx . bumps . get (\"nft_metadata\") . unwrap () ;"
      },
      {
        "id": 16,
        "label": "collection . total_minted += 1 ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: collection"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: nft_metadata"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: nft_metadata"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: collection"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: nft_metadata"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: nft_metadata"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: nft_metadata"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: collection"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: nft_metadata"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: collection"
      }
    ]
  }
]