[
  {
    "name": "create_thread",
    "inputs": [
      "ctx: Context < CreateThread >",
      "title: String",
      "body: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let thread = & mut ctx . accounts . thread ;"
      },
      {
        "id": 2,
        "label": "require ! (ctx . accounts . author . key () == ctx . accounts . authority . key () , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 3,
        "label": "require ! (title . len () <= 64 , ErrorCode :: TitleTooLong) ;"
      },
      {
        "id": 4,
        "label": "require ! (body . len () <= 256 , ErrorCode :: BodyTooLong) ;"
      },
      {
        "id": 5,
        "label": "thread . owner = ctx . accounts . authority . key () ;"
      },
      {
        "id": 6,
        "label": "thread . title = title ;"
      },
      {
        "id": 7,
        "label": "thread . body = body ;"
      },
      {
        "id": 8,
        "label": "thread . created_at = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 9,
        "label": "thread . replies = Vec :: new () ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: thread"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: thread"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: thread"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: thread"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: thread"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: thread"
      }
    ]
  },
  {
    "name": "post_reply",
    "inputs": [
      "ctx: Context < PostReply >",
      "content: String"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let thread = & mut ctx . accounts . thread ;"
      },
      {
        "id": 13,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 14,
        "label": "require ! (content . len () <= 200 , ErrorCode :: ContentTooLong) ;"
      },
      {
        "id": 15,
        "label": "require ! (thread . replies . len () < MAX_REPLIES , ErrorCode :: RepliesFull) ;"
      },
      {
        "id": 16,
        "label": "thread . replies . push (ReplyItem { replier : ctx . accounts . user . key () , content , replied_at : now , }) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: thread"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: now"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: thread"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "delete_reply",
    "inputs": [
      "ctx: Context < DeleteReply >",
      "index: u32"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let thread = & mut ctx . accounts . thread ;"
      },
      {
        "id": 20,
        "label": "let idx = index as usize ;"
      },
      {
        "id": 21,
        "label": "require ! (idx < thread . replies . len () , ErrorCode :: IndexOutOfBounds) ;"
      },
      {
        "id": 22,
        "label": "require ! (thread . replies [idx] . replier == ctx . accounts . user . key () , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 23,
        "label": "thread . replies . remove (idx) ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: thread"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: idx"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: thread"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: idx"
      }
    ]
  }
]