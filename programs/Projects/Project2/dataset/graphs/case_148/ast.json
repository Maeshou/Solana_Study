[
  {
    "name": "init_flags",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitFlags >"
    ],
    "attributes": [
      "# [doc = \" 機能フラグ設定アカウントを作成\"]"
    ],
    "body": [
      "let flags = & mut ctx . accounts . flags ;",
      "flags . owner = ctx . accounts . user . key () ;",
      "flags . flags . clear () ;",
      "Ok (())"
    ]
  },
  {
    "name": "enable_flag",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyFlags >",
      "feature: String"
    ],
    "attributes": [
      "# [doc = \" 指定したフラグを有効化\"]"
    ],
    "body": [
      "let flags = & mut ctx . accounts . flags ;",
      "require ! (flags . owner == ctx . accounts . user . key () , ErrorCode :: Forbidden) ;",
      "require ! (feature . len () <= 32 , ErrorCode :: NameTooLong) ;",
      "for f in flags . flags . iter ()",
      "{",
      "if f == & feature",
      "{",
      "return Ok (()) ;",
      "}",
      "}",
      "flags . flags . push (feature) ;",
      "Ok (())"
    ]
  },
  {
    "name": "disable_flag",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyFlags >",
      "feature: String"
    ],
    "attributes": [
      "# [doc = \" 指定したフラグを無効化\"]"
    ],
    "body": [
      "let flags = & mut ctx . accounts . flags ;",
      "require ! (flags . owner == ctx . accounts . user . key () , ErrorCode :: Forbidden) ;",
      "let mut idx : Option < usize > = None ;",
      "for (i , f) in flags . flags . iter () . enumerate ()",
      "{",
      "if f == & feature",
      "{",
      "idx = Some (i) ;",
      "break ;",
      "}",
      "}",
      "let i = idx . ok_or (ErrorCode :: NotFound) ? ;",
      "flags . flags . remove (i) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitFlags",
    "node_type": "struct",
    "fields": [
      {
        "name": "flags",
        "attribute": "# [account (init , payer = user , space = 8 + 32 + 4 + (10 * (4 + 32)))]",
        "field_type": "Account < 'info , FeatureFlags >"
      },
      {
        "name": "user",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ModifyFlags",
    "node_type": "struct",
    "fields": [
      {
        "name": "flags",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , FeatureFlags >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FeatureFlags",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": "# [doc = \" 管理者としての所有者\"]",
        "field_type": "Pubkey"
      },
      {
        "name": "flags",
        "attribute": "# [doc = \" 有効化された機能フラグのリスト\"]",
        "field_type": "Vec < String >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]