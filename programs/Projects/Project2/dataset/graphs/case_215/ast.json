[
  {
    "name": "update",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdateEnergy >",
      "amount: u64",
      "slot: u64"
    ],
    "attributes": [],
    "body": [
      "let e = & mut ctx . accounts . energy ;",
      "let regain = slot . saturating_sub (e . last_slot) / e . interval ;",
      "if regain > 0",
      "{",
      "e . current = (e . current + regain) . min (e . max) ;",
      "e . last_slot = slot ;",
      "e . penalty = 0 ;",
      "} else",
      "{",
      "e . penalty = e . penalty . saturating_add (amount) ;",
      "e . penalty_count = e . penalty_count . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "UpdateEnergy",
    "node_type": "struct",
    "fields": [
      {
        "name": "energy",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , EnergyExtraData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EnergyExtraData",
    "node_type": "struct",
    "fields": [
      {
        "name": "max",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "current",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "interval",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "last_slot",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "penalty",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "penalty_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]