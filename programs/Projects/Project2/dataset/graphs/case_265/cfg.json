[
  {
    "name": "register",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let sr = & mut ctx . accounts . registry ;"
      },
      {
        "id": 2,
        "label": "let inner = sr . map . entry (a) . or_insert_with (BTreeMap :: new) ;"
      },
      {
        "id": 3,
        "label": "inner . insert (b , bonus) ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "query_bonus",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let sr = & ctx . accounts . registry ;"
      },
      {
        "id": 7,
        "label": "let bonus = sr . map . get (& a) . and_then (| m | m . get (& b)) . copied () . unwrap_or (0) ;"
      },
      {
        "id": 8,
        "label": "Ok (Bonus { bonus })"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  }
]