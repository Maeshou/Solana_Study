[
  {
    "name": "register",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Register >",
      "a: u64",
      "b: u64",
      "bonus: u64"
    ],
    "attributes": [],
    "body": [
      "let sr = & mut ctx . accounts . registry ;",
      "let inner = sr . map . entry (a) . or_insert_with (BTreeMap :: new) ;",
      "inner . insert (b , bonus) ;",
      "Ok (())"
    ]
  },
  {
    "name": "query_bonus",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Query >",
      "a: u64",
      "b: u64"
    ],
    "attributes": [],
    "body": [
      "let sr = & ctx . accounts . registry ;",
      "let bonus = sr . map . get (& a) . and_then (| m | m . get (& b)) . copied () . unwrap_or (0) ;",
      "Ok (Bonus { bonus })"
    ]
  },
  {
    "name": "Register",
    "node_type": "struct",
    "fields": [
      {
        "name": "registry",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , SynergyData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Query",
    "node_type": "struct",
    "fields": [
      {
        "name": "registry",
        "attribute": null,
        "field_type": "Account < 'info , SynergyData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Bonus",
    "node_type": "struct",
    "fields": [
      {
        "name": "bonus",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "SynergyData",
    "node_type": "struct",
    "fields": [
      {
        "name": "map",
        "attribute": null,
        "field_type": "BTreeMap < u64 , BTreeMap < u64 , u64 > >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]