[
  {
    "name": "create_job_posting",
    "inputs": [
      "ctx: Context < CreateJobPosting >",
      "title: String",
      "description: String",
      "budget: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let job_posting = & mut ctx . accounts . job_posting ;"
      },
      {
        "id": 2,
        "label": "job_posting . client = ctx . accounts . client . key () ;"
      },
      {
        "id": 3,
        "label": "job_posting . title = title ;"
      },
      {
        "id": 4,
        "label": "job_posting . description = description ;"
      },
      {
        "id": 5,
        "label": "job_posting . budget = budget ;"
      },
      {
        "id": 6,
        "label": "job_posting . is_open = true ;"
      },
      {
        "id": 7,
        "label": "job_posting . freelancer = None ;"
      },
      {
        "id": 8,
        "label": "job_posting . created_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 9,
        "label": "job_posting . bump = * ctx . bumps . get (\"job_posting\") . unwrap () ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: job_posting"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: job_posting"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: job_posting"
      }
    ]
  },
  {
    "name": "submit_proposal",
    "inputs": [
      "ctx: Context < SubmitProposal >",
      "bid_amount: u64",
      "proposal_text: String"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let job_posting = & ctx . accounts . job_posting ;"
      },
      {
        "id": 13,
        "label": "let proposal = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 14,
        "label": "require ! (job_posting . is_open , FreelancerError :: JobNotOpen) ;"
      },
      {
        "id": 15,
        "label": "proposal . job_posting = job_posting . key () ;"
      },
      {
        "id": 16,
        "label": "proposal . freelancer = ctx . accounts . freelancer . key () ;"
      },
      {
        "id": 17,
        "label": "proposal . bid_amount = bid_amount ;"
      },
      {
        "id": 18,
        "label": "proposal . proposal_text = proposal_text ;"
      },
      {
        "id": 19,
        "label": "proposal . status = ProposalStatus :: Pending ;"
      },
      {
        "id": 20,
        "label": "proposal . submitted_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 21,
        "label": "proposal . bump = * ctx . bumps . get (\"proposal\") . unwrap () ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: job_posting"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: proposal"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: proposal"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: job_posting"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: proposal"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: proposal"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: proposal"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: proposal"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: proposal"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: proposal"
      }
    ]
  },
  {
    "name": "accept_proposal",
    "inputs": [
      "ctx: Context < AcceptProposal >"
    ],
    "nodes": [
      {
        "id": 23,
        "label": "Entry"
      },
      {
        "id": 24,
        "label": "let job_posting = & mut ctx . accounts . job_posting ;"
      },
      {
        "id": 25,
        "label": "let proposal = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 26,
        "label": "require ! (job_posting . is_open , FreelancerError :: JobNotOpen) ;"
      },
      {
        "id": 27,
        "label": "require ! (matches ! (proposal . status , ProposalStatus :: Pending) , FreelancerError :: ProposalNotPending) ;"
      },
      {
        "id": 28,
        "label": "proposal . status = ProposalStatus :: Accepted ;"
      },
      {
        "id": 29,
        "label": "job_posting . freelancer = Some (proposal . freelancer) ;"
      },
      {
        "id": 30,
        "label": "job_posting . is_open = false ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 24,
        "label": "def: job_posting"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: proposal"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: proposal"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: job_posting"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: proposal"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: job_posting"
      }
    ]
  },
  {
    "name": "complete_job",
    "inputs": [
      "ctx: Context < CompleteJob >"
    ],
    "nodes": [
      {
        "id": 32,
        "label": "Entry"
      },
      {
        "id": 33,
        "label": "let job_posting = & mut ctx . accounts . job_posting ;"
      },
      {
        "id": 34,
        "label": "let proposal = & ctx . accounts . proposal ;"
      },
      {
        "id": 35,
        "label": "require ! (! job_posting . is_open , FreelancerError :: JobStillOpen) ;"
      },
      {
        "id": 36,
        "label": "require ! (matches ! (proposal . status , ProposalStatus :: Accepted) , FreelancerError :: ProposalNotAccepted) ;"
      },
      {
        "id": 37,
        "label": "* * ctx . accounts . client . lamports . borrow_mut () -= proposal . bid_amount ;"
      },
      {
        "id": 38,
        "label": "* * ctx . accounts . freelancer . lamports . borrow_mut () += proposal . bid_amount ;"
      },
      {
        "id": 39,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 33,
        "to": 33,
        "label": "def: job_posting"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: proposal"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: proposal"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: proposal"
      }
    ]
  }
]