[
  {
    "name": "create_list",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CreateList >"
    ],
    "attributes": [
      "# [doc = \" イベント出欠リストを作成：主催者のみ操作可能\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . list ;",
      "list . organizer = ctx . accounts . organizer . key () ;",
      "list . attendees . clear () ;",
      "Ok (())"
    ]
  },
  {
    "name": "check_in",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CheckIn >"
    ],
    "attributes": [
      "# [doc = \" データレス「チケット」アカウントの存在・署名でチェックインを許可\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . list ;",
      "list . attendees . push (ctx . accounts . ticket . key ()) ;",
      "Ok (())"
    ]
  },
  {
    "name": "AttendanceList",
    "node_type": "struct",
    "fields": [
      {
        "name": "organizer",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "attendees",
        "attribute": null,
        "field_type": "Vec < Pubkey >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CreateList",
    "node_type": "struct",
    "fields": [
      {
        "name": "list",
        "attribute": "# [doc = \" AttendanceList を初期化\"] # [account (init , payer = organizer , space = 8 + 32 + 4 + 32 * 100)]",
        "field_type": "Account < 'info , AttendanceList >"
      },
      {
        "name": "organizer",
        "attribute": "# [doc = \" イベント主催者（署名必須）\"] # [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CheckIn",
    "node_type": "struct",
    "fields": [
      {
        "name": "list",
        "attribute": "# [doc = \" 既存の出欠リスト（主催者のみチェックイン受付）\"] # [account (mut , has_one = organizer)]",
        "field_type": "Account < 'info , AttendanceList >"
      },
      {
        "name": "ticket",
        "attribute": "# [doc = \" 有効な“チケット”として振る舞うデータレスアカウント  \"] # [doc = \" - SystemProgram 所有 (`owner = System::id()`)、  \"] # [doc = \" - かつそのキーの署名が必要 (`signer`)  \"] # [account (signer , constraint = ticket . to_account_info () . owner == & System :: id ())]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "organizer",
        "attribute": "# [doc = \" リスト所有者の署名でのみチェックインを許可\"] # [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]