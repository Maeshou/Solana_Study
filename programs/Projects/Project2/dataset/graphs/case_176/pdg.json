[
  {
    "name": "initialize_attendance",
    "inputs": [
      "ctx: Context < InitializeAttendance >",
      "threshold: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let atd = & mut ctx . accounts . attendance ;"
      },
      {
        "id": 2,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "* atd = Attendance { bump : * ctx . bumps . get (\"attendance\") . unwrap () , threshold , last_update_ts : now , .. Default :: default () } ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: atd"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: atd"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "check_in",
    "inputs": [
      "ctx: Context < ModifyAttendance >"
    ],
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let atd = & mut ctx . accounts . attendance ;"
      },
      {
        "id": 7,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 8,
        "label": "if ! atd . closed { atd . attendees . push (ctx . accounts . user . key ()) ; if atd . attendees . len () as u8 >= atd . threshold { atd . closed = true ; } }"
      },
      {
        "id": 9,
        "label": "atd . attendees . push (ctx . accounts . user . key ()) ;"
      },
      {
        "id": 10,
        "label": "if atd . attendees . len () as u8 >= atd . threshold { atd . closed = true ; }"
      },
      {
        "id": 11,
        "label": "atd . closed = true ;"
      },
      {
        "id": 12,
        "label": "atd . last_update_ts = now ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 6,
        "label": "def: atd"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: now"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: atd"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: atd"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "reopen",
    "inputs": [
      "ctx: Context < ModifyAttendance >"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let atd = & mut ctx . accounts . attendance ;"
      },
      {
        "id": 16,
        "label": "atd . closed = false ;"
      },
      {
        "id": 17,
        "label": "atd . last_update_ts = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: atd"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: atd"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: atd"
      }
    ]
  }
]