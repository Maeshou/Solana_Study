[
  {
    "name": "create_goal",
    "inputs": [
      "ctx: Context < CreateGoal >",
      "target: u64",
      "description: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if target == 0 { return Err (ErrorCode :: InvalidTarget . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: InvalidTarget . into ()) ;"
      },
      {
        "id": 3,
        "label": "if description . len () > 128 { return Err (ErrorCode :: DescriptionTooLong . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: DescriptionTooLong . into ()) ;"
      },
      {
        "id": 5,
        "label": "let goal = & mut ctx . accounts . goal ;"
      },
      {
        "id": 6,
        "label": "goal . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "goal . target = target ;"
      },
      {
        "id": 8,
        "label": "goal . saved = 0 ;"
      },
      {
        "id": 9,
        "label": "goal . description = description ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: goal"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: goal"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: goal"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: goal"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: goal"
      }
    ]
  },
  {
    "name": "add_savings",
    "inputs": [
      "ctx: Context < AddSavings >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "if amount == 0 { return Err (ErrorCode :: InvalidAmount . into ()) ; }"
      },
      {
        "id": 13,
        "label": "return Err (ErrorCode :: InvalidAmount . into ()) ;"
      },
      {
        "id": 14,
        "label": "let goal = & mut ctx . accounts . goal ;"
      },
      {
        "id": 15,
        "label": "if goal . owner != ctx . accounts . user . key () { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 16,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 17,
        "label": "let new_saved = goal . saved . checked_add (amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 18,
        "label": "if new_saved > goal . target { return Err (ErrorCode :: TargetExceeded . into ()) ; }"
      },
      {
        "id": 19,
        "label": "return Err (ErrorCode :: TargetExceeded . into ()) ;"
      },
      {
        "id": 20,
        "label": "goal . saved = new_saved ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: goal"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: goal"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: new_saved"
      },
      {
        "from": 14,
        "to": 17,
        "label": "data_dep: goal"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: new_saved"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: goal"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: goal"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: new_saved"
      }
    ]
  }
]