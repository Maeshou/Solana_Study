[
  {
    "name": "initialize_profile",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitializeProfile >",
      "bump: u8",
      "username: String"
    ],
    "attributes": [
      "# [doc = \" プロフィール初期化：username を受け取り、PDA を生成\"]"
    ],
    "body": [
      "if username . chars () . count () > 32",
      "{",
      "return Err (ErrorCode :: UsernameTooLong . into ()) ;",
      "}",
      "let profile = & mut ctx . accounts . profile ;",
      "profile . owner = ctx . accounts . user . key () ;",
      "profile . bump = bump ;",
      "profile . username = username ;",
      "Ok (())"
    ]
  },
  {
    "name": "update_username",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdateUsername >",
      "new_username: String"
    ],
    "attributes": [
      "# [doc = \" ユーザー名更新：オーナー署名＆has_one で検証\"]"
    ],
    "body": [
      "if new_username . chars () . count () > 32",
      "{",
      "return Err (ErrorCode :: UsernameTooLong . into ()) ;",
      "}",
      "let profile = & mut ctx . accounts . profile ;",
      "profile . username = new_username ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitializeProfile",
    "node_type": "struct",
    "fields": [
      {
        "name": "profile",
        "attribute": "# [doc = \" PDA で生成する Profile\"] # [account (init , payer = user , space = 8 + 32 + 1 + 4 + 32 , seeds = [b\"profile\" , user . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Profile >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" トランザクション送信者（オーナー）\"] # [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UpdateUsername",
    "node_type": "struct",
    "fields": [
      {
        "name": "profile",
        "attribute": "# [doc = \" 既存の Profile（オーナー & PDA 検証 + has_one）\"] # [account (mut , seeds = [b\"profile\" , profile . owner . as_ref ()] , bump = profile . bump , has_one = owner)]",
        "field_type": "Account < 'info , Profile >"
      },
      {
        "name": "owner",
        "attribute": "# [doc = \" Profile 所有者（署名必須）\"] # [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Profile",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "username",
        "attribute": null,
        "field_type": "String"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]