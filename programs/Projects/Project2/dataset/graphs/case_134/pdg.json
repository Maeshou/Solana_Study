[
  {
    "name": "create_skill",
    "inputs": [
      "ctx: Context < CreateSkill >",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if name . len () > 64 { return Err (ErrorCode :: NameTooLong . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: NameTooLong . into ()) ;"
      },
      {
        "id": 3,
        "label": "let skill = & mut ctx . accounts . skill ;"
      },
      {
        "id": 4,
        "label": "skill . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 5,
        "label": "skill . name = name ;"
      },
      {
        "id": 6,
        "label": "skill . count = 0 ;"
      },
      {
        "id": 7,
        "label": "skill . endorsers = Vec :: new () ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: skill"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: skill"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: skill"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: skill"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: skill"
      }
    ]
  },
  {
    "name": "endorse_skill",
    "inputs": [
      "ctx: Context < ModifySkill >"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let skill = & mut ctx . accounts . skill ;"
      },
      {
        "id": 11,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 12,
        "label": "if skill . owner == user { return Err (ErrorCode :: CannotEndorseOwn . into ()) ; }"
      },
      {
        "id": 13,
        "label": "return Err (ErrorCode :: CannotEndorseOwn . into ()) ;"
      },
      {
        "id": 14,
        "label": "if skill . endorsers . len () >= MAX_ENDORSERS { return Err (ErrorCode :: TooManyEndorsers . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ErrorCode :: TooManyEndorsers . into ()) ;"
      },
      {
        "id": 16,
        "label": "for & e in skill . endorsers . iter () { if e == user { return Err (ErrorCode :: AlreadyEndorsed . into ()) ; } }"
      },
      {
        "id": 17,
        "label": "if e == user { return Err (ErrorCode :: AlreadyEndorsed . into ()) ; }"
      },
      {
        "id": 18,
        "label": "return Err (ErrorCode :: AlreadyEndorsed . into ()) ;"
      },
      {
        "id": 19,
        "label": "skill . endorsers . push (user) ;"
      },
      {
        "id": 20,
        "label": "skill . count = skill . count . checked_add (1) . unwrap () ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: skill"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: user"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: skill"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: user"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: skill"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: skill"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: user"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: user"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: skill"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: user"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: skill"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: skill"
      }
    ]
  },
  {
    "name": "remove_endorse",
    "inputs": [
      "ctx: Context < ModifySkill >"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let skill = & mut ctx . accounts . skill ;"
      },
      {
        "id": 24,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 25,
        "label": "let mut idx : Option < usize > = None ;"
      },
      {
        "id": 26,
        "label": "for (i , & e) in skill . endorsers . iter () . enumerate () { if e == user { idx = Some (i) ; break ; } }"
      },
      {
        "id": 27,
        "label": "if e == user { idx = Some (i) ; break ; }"
      },
      {
        "id": 28,
        "label": "idx = Some (i) ;"
      },
      {
        "id": 29,
        "label": "break ;"
      },
      {
        "id": 30,
        "label": "if let Some (i) = idx { skill . endorsers . remove (i) ; skill . count = skill . count . checked_sub (1) . unwrap () ; Ok (()) } else { Err (ErrorCode :: NotEndorsed . into ()) }"
      },
      {
        "id": 31,
        "label": "skill . endorsers . remove (i) ;"
      },
      {
        "id": 32,
        "label": "skill . count = skill . count . checked_sub (1) . unwrap () ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      },
      {
        "id": 34,
        "label": "Err (ErrorCode :: NotEndorsed . into ())"
      }
    ],
    "edges": [
      {
        "from": 23,
        "to": 23,
        "label": "def: skill"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: user"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: skill"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: user"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: user"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: skill"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: skill"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: skill"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: skill"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: skill"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: skill"
      }
    ]
  }
]