[
  {
    "name": "init",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let rec = & mut ctx . accounts . rec ;"
      },
      {
        "id": 2,
        "label": "rec . end_time = end_unix ;"
      },
      {
        "id": 3,
        "label": "rec . value = 0 ;"
      },
      {
        "id": 4,
        "label": "emit ! (TimeInitialized { end_unix }) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "timed_update",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let clock = Clock :: get () ? ;"
      },
      {
        "id": 8,
        "label": "require ! (clock . unix_timestamp < ctx . accounts . rec . end_time , ErrorCode :: Expired) ;"
      },
      {
        "id": 9,
        "label": "let rec = & mut ctx . accounts . rec ;"
      },
      {
        "id": 10,
        "label": "rec . value = val ;"
      },
      {
        "id": 11,
        "label": "emit ! (TimeUpdated { by : ctx . accounts . user . key () , val }) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "snapshot",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let rec = & ctx . accounts . rec ;"
      },
      {
        "id": 15,
        "label": "Ok (Snapshot { value : rec . value , end_time : rec . end_time , })"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  }
]