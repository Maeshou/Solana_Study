[
  {
    "name": "forge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Forge >",
      "material_id: u64",
      "required: u32"
    ],
    "attributes": [],
    "body": [
      "let inv = & mut ctx . accounts . inventory ;",
      "if let Some (& qty) = inv . materials . get (& material_id)",
      "{",
      "if qty >= required",
      "{",
      "inv . materials . insert (material_id , qty - required) ;",
      "let count = inv . items . entry (material_id) . or_insert (0) ;",
      "* count = count . saturating_add (1) ;",
      "inv . forge_count = inv . forge_count . saturating_add (1) ;",
      "} else",
      "{",
      "inv . failure_count = inv . failure_count . saturating_add (1) ;",
      "let loss = required / 2 ;",
      "let new_qty = qty . saturating_sub (loss) ;",
      "inv . materials . insert (material_id , new_qty) ;",
      "inv . fail_history . entry (material_id) . and_modify (| c | * c += 1) . or_insert (1) ;",
      "}",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Forge",
    "node_type": "struct",
    "fields": [
      {
        "name": "inventory",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , ForgeData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ForgeData",
    "node_type": "struct",
    "fields": [
      {
        "name": "materials",
        "attribute": null,
        "field_type": "BTreeMap < u64 , u32 >"
      },
      {
        "name": "items",
        "attribute": null,
        "field_type": "BTreeMap < u64 , u32 >"
      },
      {
        "name": "forge_count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "failure_count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "fail_history",
        "attribute": null,
        "field_type": "BTreeMap < u64 , u64 >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]