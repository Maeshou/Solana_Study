[
  {
    "name": "forge",
    "inputs": [
      "ctx: Context < Forge >",
      "material_id: u64",
      "required: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let inv = & mut ctx . accounts . inventory ;"
      },
      {
        "id": 2,
        "label": "if let Some (& qty) = inv . materials . get (& material_id) { if qty >= required { inv . materials . insert (material_id , qty - required) ; let count = inv . items . entry (material_id) . or_insert (0) ; * count = count . saturating_add (1) ; inv . forge_count = inv . forge_count . saturating_add (1) ; } else { inv . failure_count = inv . failure_count . saturating_add (1) ; let loss = required / 2 ; let new_qty = qty . saturating_sub (loss) ; inv . materials . insert (material_id , new_qty) ; inv . fail_history . entry (material_id) . and_modify (| c | * c += 1) . or_insert (1) ; } }"
      },
      {
        "id": 3,
        "label": "if qty >= required { inv . materials . insert (material_id , qty - required) ; let count = inv . items . entry (material_id) . or_insert (0) ; * count = count . saturating_add (1) ; inv . forge_count = inv . forge_count . saturating_add (1) ; } else { inv . failure_count = inv . failure_count . saturating_add (1) ; let loss = required / 2 ; let new_qty = qty . saturating_sub (loss) ; inv . materials . insert (material_id , new_qty) ; inv . fail_history . entry (material_id) . and_modify (| c | * c += 1) . or_insert (1) ; }"
      },
      {
        "id": 4,
        "label": "inv . materials . insert (material_id , qty - required) ;"
      },
      {
        "id": 5,
        "label": "let count = inv . items . entry (material_id) . or_insert (0) ;"
      },
      {
        "id": 6,
        "label": "* count = count . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "inv . forge_count = inv . forge_count . saturating_add (1) ;"
      },
      {
        "id": 8,
        "label": "inv . failure_count = inv . failure_count . saturating_add (1) ;"
      },
      {
        "id": 9,
        "label": "let loss = required / 2 ;"
      },
      {
        "id": 10,
        "label": "let new_qty = qty . saturating_sub (loss) ;"
      },
      {
        "id": 11,
        "label": "inv . materials . insert (material_id , new_qty) ;"
      },
      {
        "id": 12,
        "label": "inv . fail_history . entry (material_id) . and_modify (| c | * c += 1) . or_insert (1) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: inv"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: count"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: inv"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: count"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: count"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: inv"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: inv"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: loss"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: new_qty"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: loss"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: inv"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: new_qty"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: inv"
      }
    ]
  }
]