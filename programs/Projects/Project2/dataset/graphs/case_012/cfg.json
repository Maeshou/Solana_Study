[
  {
    "name": "create_course",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let course = & mut ctx . accounts . course ;"
      },
      {
        "id": 2,
        "label": "course . instructor = ctx . accounts . instructor . key () ;"
      },
      {
        "id": 3,
        "label": "course . title = title ;"
      },
      {
        "id": 4,
        "label": "course . description = description ;"
      },
      {
        "id": 5,
        "label": "course . price = price ;"
      },
      {
        "id": 6,
        "label": "course . student_count = 0 ;"
      },
      {
        "id": 7,
        "label": "course . is_published = false ;"
      },
      {
        "id": 8,
        "label": "course . bump = * ctx . bumps . get (\"course\") . unwrap () ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      }
    ]
  },
  {
    "name": "publish_course",
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let course = & mut ctx . accounts . course ;"
      },
      {
        "id": 12,
        "label": "course . is_published = true ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "enroll_student",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let course = & mut ctx . accounts . course ;"
      },
      {
        "id": 16,
        "label": "let enrollment = & mut ctx . accounts . enrollment ;"
      },
      {
        "id": 17,
        "label": "require ! (course . is_published , EducationError :: CourseNotPublished) ;"
      },
      {
        "id": 18,
        "label": "enrollment . course = course . key () ;"
      },
      {
        "id": 19,
        "label": "enrollment . student = ctx . accounts . student . key () ;"
      },
      {
        "id": 20,
        "label": "enrollment . enrolled_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 21,
        "label": "enrollment . progress = 0 ;"
      },
      {
        "id": 22,
        "label": "enrollment . completed = false ;"
      },
      {
        "id": 23,
        "label": "enrollment . bump = * ctx . bumps . get (\"enrollment\") . unwrap () ;"
      },
      {
        "id": 24,
        "label": "course . student_count += 1 ;"
      },
      {
        "id": 25,
        "label": "* * ctx . accounts . student . lamports . borrow_mut () -= course . price ;"
      },
      {
        "id": 26,
        "label": "* * ctx . accounts . instructor . lamports . borrow_mut () += course . price ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_progress",
    "nodes": [
      {
        "id": 28,
        "label": "Entry"
      },
      {
        "id": 29,
        "label": "let enrollment = & mut ctx . accounts . enrollment ;"
      },
      {
        "id": 30,
        "label": "require ! (progress <= 100 , EducationError :: InvalidProgress) ;"
      },
      {
        "id": 31,
        "label": "enrollment . progress = progress ;"
      },
      {
        "id": 32,
        "label": "if statement"
      },
      {
        "id": 33,
        "label": "predicate"
      },
      {
        "id": 34,
        "label": "progress == 100"
      },
      {
        "id": 35,
        "label": "True body"
      },
      {
        "id": 36,
        "label": "enrollment . completed = true ;"
      },
      {
        "id": 37,
        "label": "False body"
      },
      {
        "id": 38,
        "label": "No-op"
      },
      {
        "id": 39,
        "label": "merge"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "predicate"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 32,
        "to": 35,
        "label": "true"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 32,
        "to": 37,
        "label": "false"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 36,
        "to": 39,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      }
    ]
  }
]