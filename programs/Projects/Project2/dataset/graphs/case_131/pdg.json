[
  {
    "name": "initialize_logger",
    "inputs": [
      "ctx: Context < InitializeLogger >",
      "mint: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let logger = & mut ctx . accounts . logger ;"
      },
      {
        "id": 2,
        "label": "logger . owner = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "logger . mint = mint ;"
      },
      {
        "id": 4,
        "label": "logger . last_amount = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: logger"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: logger"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: logger"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: logger"
      }
    ]
  },
  {
    "name": "record_amount",
    "inputs": [
      "ctx: Context < RecordAmount >"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let logger = & mut ctx . accounts . logger ;"
      },
      {
        "id": 8,
        "label": "let token_acc = & ctx . accounts . token_account ;"
      },
      {
        "id": 9,
        "label": "logger . last_amount = token_acc . amount ;"
      },
      {
        "id": 10,
        "label": "msg ! (\"Recorded {} tokens for mint {}\" , logger . last_amount , logger . mint) ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: logger"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: token_acc"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: logger"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: token_acc"
      }
    ]
  }
]