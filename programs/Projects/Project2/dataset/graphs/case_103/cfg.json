[
  {
    "name": "initialize",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let acct = & mut ctx . accounts . bank_account ;"
      },
      {
        "id": 2,
        "label": "acct . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "acct . balance = 0 ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "deposit",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let acct_info = ctx . accounts . bank_account . to_account_info () ;"
      },
      {
        "id": 7,
        "label": "let auth_info = ctx . accounts . authority . to_account_info () ;"
      },
      {
        "id": 8,
        "label": "let auth_lamports = * * auth_info . lamports . borrow () ;"
      },
      {
        "id": 9,
        "label": "require ! (auth_lamports >= amount , ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 10,
        "label": "* * auth_info . try_borrow_mut_lamports () ? -= amount ;"
      },
      {
        "id": 11,
        "label": "* * acct_info . try_borrow_mut_lamports () ? -= 0 ;"
      },
      {
        "id": 12,
        "label": "* * acct_info . try_borrow_mut_lamports () ? += amount ;"
      },
      {
        "id": 13,
        "label": "let acct = & mut ctx . accounts . bank_account ;"
      },
      {
        "id": 14,
        "label": "acct . balance = acct . balance . checked_add (amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  },
  {
    "name": "withdraw",
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let acct = & mut ctx . accounts . bank_account ;"
      },
      {
        "id": 18,
        "label": "let acct_info = ctx . accounts . bank_account . to_account_info () ;"
      },
      {
        "id": 19,
        "label": "let auth_info = ctx . accounts . authority . to_account_info () ;"
      },
      {
        "id": 20,
        "label": "require ! (acct . balance >= amount , ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 21,
        "label": "let pda_lamports = * * acct_info . lamports . borrow () ;"
      },
      {
        "id": 22,
        "label": "require ! (pda_lamports >= amount , ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 23,
        "label": "* * acct_info . try_borrow_mut_lamports () ? -= amount ;"
      },
      {
        "id": 24,
        "label": "* * auth_info . try_borrow_mut_lamports () ? += amount ;"
      },
      {
        "id": 25,
        "label": "acct . balance = acct . balance . checked_sub (amount) . ok_or (ErrorCode :: Underflow) ? ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      }
    ]
  }
]