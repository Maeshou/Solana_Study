[
  {
    "name": "init",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let rec = & mut ctx . accounts . record ;"
      },
      {
        "id": 2,
        "label": "rec . value = initial ;"
      },
      {
        "id": 3,
        "label": "rec . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 4,
        "label": "rec . writer = ctx . accounts . writer . key () ;"
      },
      {
        "id": 5,
        "label": "rec . history = vec ! [initial] ;"
      },
      {
        "id": 6,
        "label": "emit ! (RecordCreated { by : rec . manager , value : initial }) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "append_and_close",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let rec = & mut ctx . accounts . record ;"
      },
      {
        "id": 10,
        "label": "require_keys_eq ! (rec . writer , ctx . accounts . writer . key ()) ;"
      },
      {
        "id": 11,
        "label": "let new_val = rec . value . checked_add (extra) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 12,
        "label": "rec . value = new_val ;"
      },
      {
        "id": 13,
        "label": "rec . history . push (new_val) ;"
      },
      {
        "id": 14,
        "label": "emit ! (Appended { by : rec . writer , value : new_val }) ;"
      },
      {
        "id": 15,
        "label": "let record_ai = ctx . accounts . record . to_account_info () ;"
      },
      {
        "id": 16,
        "label": "let manager_ai = ctx . accounts . manager_lamports . to_account_info () ;"
      },
      {
        "id": 17,
        "label": "* * manager_ai . lamports . borrow_mut () += * * record_ai . lamports . borrow () ;"
      },
      {
        "id": 18,
        "label": "* * record_ai . lamports . borrow_mut () = 0 ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      }
    ]
  }
]