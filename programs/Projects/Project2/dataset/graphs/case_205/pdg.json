[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < InitEnergy >",
      "max_energy: u64",
      "refill_interval: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let e = & mut ctx . accounts . energy ;"
      },
      {
        "id": 2,
        "label": "e . max = max_energy ;"
      },
      {
        "id": 3,
        "label": "e . current = max_energy ;"
      },
      {
        "id": 4,
        "label": "e . interval = refill_interval ;"
      },
      {
        "id": 5,
        "label": "e . last_used_slot = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: e"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: e"
      }
    ]
  },
  {
    "name": "spend",
    "inputs": [
      "ctx: Context < ModifyEnergy >",
      "amount: u64",
      "current_slot: u64"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let e = & mut ctx . accounts . energy ;"
      },
      {
        "id": 9,
        "label": "let passed = current_slot . saturating_sub (e . last_used_slot) ;"
      },
      {
        "id": 10,
        "label": "let regain = passed / e . interval ;"
      },
      {
        "id": 11,
        "label": "e . current = (e . current + regain) . min (e . max) ;"
      },
      {
        "id": 12,
        "label": "if amount <= e . current { e . current -= amount ; e . last_used_slot = current_slot ; }"
      },
      {
        "id": 13,
        "label": "e . current -= amount ;"
      },
      {
        "id": 14,
        "label": "e . last_used_slot = current_slot ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: e"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: passed"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: e"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: regain"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: passed"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: e"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: regain"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: e"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: e"
      }
    ]
  }
]