[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = * ctx . bumps . get (\"board\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . board . 0 = b ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "add_task",
    "inputs": [
      "ctx: Context < Modify >",
      "task_id: u64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . board . 1 ;"
      },
      {
        "id": 6,
        "label": "if list . len () >= MAX_TASKS { return err ! (ErrorCode :: MaxTasksReached) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: MaxTasksReached) ;"
      },
      {
        "id": 8,
        "label": "list . push ((task_id , Pubkey :: default ())) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "assign_task",
    "inputs": [
      "ctx: Context < Modify >",
      "task_id: u64",
      "assignee: Pubkey"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let list = & mut ctx . accounts . board . 1 ;"
      },
      {
        "id": 12,
        "label": "let mut found = false ;"
      },
      {
        "id": 13,
        "label": "for entry in list . iter_mut () { if entry . 0 == task_id { entry . 1 = assignee ; found = true ; } }"
      },
      {
        "id": 14,
        "label": "if entry . 0 == task_id { entry . 1 = assignee ; found = true ; }"
      },
      {
        "id": 15,
        "label": "entry . 1 = assignee ;"
      },
      {
        "id": 16,
        "label": "found = true ;"
      },
      {
        "id": 17,
        "label": "if found == false { return err ! (ErrorCode :: TaskNotFound) ; }"
      },
      {
        "id": 18,
        "label": "return err ! (ErrorCode :: TaskNotFound) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: list"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: found"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: list"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "remove_task",
    "inputs": [
      "ctx: Context < Modify >",
      "task_id: u64"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let list = & mut ctx . accounts . board . 1 ;"
      },
      {
        "id": 22,
        "label": "list . retain (| & (id , _) | { if id == task_id { false } else { true } }) ;"
      },
      {
        "id": 23,
        "label": "if id == task_id { false } else { true }"
      },
      {
        "id": 24,
        "label": "false"
      },
      {
        "id": 25,
        "label": "true"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: list"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "count_tasks",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 27,
        "label": "Entry"
      },
      {
        "id": 28,
        "label": "let cnt = ctx . accounts . board . 1 . len () as u64 ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"Total tasks: {}\" , cnt) ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 28,
        "label": "def: cnt"
      }
    ]
  }
]