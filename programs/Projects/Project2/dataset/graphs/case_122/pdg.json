[
  {
    "name": "create_event",
    "inputs": [
      "ctx: Context < CreateEvent >",
      "timestamp: i64",
      "location: String",
      "details: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if location . len () > 64 { return Err (ErrorCode :: LocationTooLong . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: LocationTooLong . into ()) ;"
      },
      {
        "id": 3,
        "label": "if details . len () > 256 { return Err (ErrorCode :: DetailsTooLong . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: DetailsTooLong . into ()) ;"
      },
      {
        "id": 5,
        "label": "let ev = & mut ctx . accounts . event ;"
      },
      {
        "id": 6,
        "label": "ev . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "ev . timestamp = timestamp ;"
      },
      {
        "id": 8,
        "label": "ev . location = location ;"
      },
      {
        "id": 9,
        "label": "ev . details = details ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: ev"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: ev"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: ev"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: ev"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: ev"
      }
    ]
  },
  {
    "name": "update_event",
    "inputs": [
      "ctx: Context < UpdateEvent >",
      "new_timestamp: i64",
      "new_location: String",
      "new_details: String"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "if new_location . len () > 64 { return Err (ErrorCode :: LocationTooLong . into ()) ; }"
      },
      {
        "id": 13,
        "label": "return Err (ErrorCode :: LocationTooLong . into ()) ;"
      },
      {
        "id": 14,
        "label": "if new_details . len () > 256 { return Err (ErrorCode :: DetailsTooLong . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ErrorCode :: DetailsTooLong . into ()) ;"
      },
      {
        "id": 16,
        "label": "let ev = & mut ctx . accounts . event ;"
      },
      {
        "id": 17,
        "label": "if ev . owner != ctx . accounts . user . key () { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 18,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 19,
        "label": "ev . timestamp = new_timestamp ;"
      },
      {
        "id": 20,
        "label": "ev . location = new_location ;"
      },
      {
        "id": 21,
        "label": "ev . details = new_details ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: ev"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: ev"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: ev"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: ev"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: ev"
      }
    ]
  }
]