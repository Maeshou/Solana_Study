[
  {
    "name": "fight",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let stats = & mut ctx . accounts . stats ;"
      },
      {
        "id": 2,
        "label": "if statement"
      },
      {
        "id": 3,
        "label": "predicate"
      },
      {
        "id": 4,
        "label": "attack > defense"
      },
      {
        "id": 5,
        "label": "True body"
      },
      {
        "id": 6,
        "label": "stats . wins = stats . wins . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "stats . experience = stats . experience . saturating_add (attack - defense) ;"
      },
      {
        "id": 8,
        "label": "stats . stamina = stats . stamina . saturating_sub (5) ;"
      },
      {
        "id": 9,
        "label": "stats . bonus_points = stats . bonus_points . saturating_add (10) ;"
      },
      {
        "id": 10,
        "label": "False body"
      },
      {
        "id": 11,
        "label": "stats . losses = stats . losses . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "let penalty = defense . saturating_sub (attack) ;"
      },
      {
        "id": 13,
        "label": "stats . stamina = stats . stamina . saturating_sub (3) ;"
      },
      {
        "id": 14,
        "label": "stats . penalty_count = stats . penalty_count . saturating_add (penalty) ;"
      },
      {
        "id": 15,
        "label": "stats . recover_map . insert (stats . player , penalty) ;"
      },
      {
        "id": 16,
        "label": "merge"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "predicate"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 2,
        "to": 5,
        "label": "true"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 2,
        "to": 10,
        "label": "false"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 9,
        "to": 16,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  }
]