[
  {
    "name": "init_escrow",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let esc = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 2,
        "label": "esc . depositor = ctx . accounts . depositor . key () ;"
      },
      {
        "id": 3,
        "label": "esc . amount = amount ;"
      },
      {
        "id": 4,
        "label": "esc . is_ready = false ;"
      },
      {
        "id": 5,
        "label": "emit ! (EscrowCreated { depositor : esc . depositor , amount }) ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "deposit",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let esc = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 9,
        "label": "let ix = anchor_lang :: solana_program :: system_instruction :: transfer (& ctx . accounts . depositor . key () , & ctx . accounts . escrow_acc . key () , esc . amount ,) ;"
      },
      {
        "id": 10,
        "label": "anchor_lang :: solana_program :: program :: invoke (& ix , & [ctx . accounts . depositor . to_account_info () , ctx . accounts . escrow_acc . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 11,
        "label": "esc . is_ready = true ;"
      },
      {
        "id": 12,
        "label": "emit ! (Deposited { by : esc . depositor , amount : esc . amount }) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "release",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let esc = & ctx . accounts . escrow ;"
      },
      {
        "id": 16,
        "label": "require ! (esc . is_ready , ErrorCode :: NotReady) ;"
      },
      {
        "id": 17,
        "label": "* * ctx . accounts . recipient . lamports . borrow_mut () += esc . amount ;"
      },
      {
        "id": 18,
        "label": "* * ctx . accounts . escrow_acc . lamports . borrow_mut () -= esc . amount ;"
      },
      {
        "id": 19,
        "label": "emit ! (Released { to : ctx . accounts . recipient . key () , amount : esc . amount }) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  },
  {
    "name": "refund",
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let esc = & ctx . accounts . escrow ;"
      },
      {
        "id": 23,
        "label": "require ! (! esc . is_ready , ErrorCode :: AlreadyDeposited) ;"
      },
      {
        "id": 24,
        "label": "* * ctx . accounts . depositor . lamports . borrow_mut () += esc . amount ;"
      },
      {
        "id": 25,
        "label": "* * ctx . accounts . escrow_acc . lamports . borrow_mut () -= esc . amount ;"
      },
      {
        "id": 26,
        "label": "emit ! (Refunded { to : esc . depositor , amount : esc . amount }) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      }
    ]
  }
]