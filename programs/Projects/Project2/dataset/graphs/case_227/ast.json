[
  {
    "name": "place_bid",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < PlaceBid >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let a = & mut ctx . accounts . auction ;",
      "let bidder = ctx . accounts . user . key () ;",
      "if amount > a . highest_bid",
      "{",
      "if let Some (prev) = a . highest_bidder",
      "{",
      "a . refund_map . insert (prev , a . highest_bid) ;",
      "} a . highest_bid = amount ;",
      "a . highest_bidder = Some (bidder) ;",
      "a . bid_count = a . bid_count . saturating_add (1) ;",
      "} else",
      "{",
      "a . reject_map . entry (bidder) . and_modify (| c | * c += 1) . or_insert (1) ;",
      "a . reject_count = a . reject_count . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "PlaceBid",
    "node_type": "struct",
    "fields": [
      {
        "name": "auction",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , AuctionData >"
      },
      {
        "name": "user",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "AuctionData",
    "node_type": "struct",
    "fields": [
      {
        "name": "highest_bid",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "highest_bidder",
        "attribute": null,
        "field_type": "Option < Pubkey >"
      },
      {
        "name": "bid_count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "refund_map",
        "attribute": null,
        "field_type": "BTreeMap < Pubkey , u64 >"
      },
      {
        "name": "reject_map",
        "attribute": null,
        "field_type": "BTreeMap < Pubkey , u64 >"
      },
      {
        "name": "reject_count",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]