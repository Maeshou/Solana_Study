[
  {
    "name": "record_access",
    "inputs": [
      "ctx: Context < Record >",
      "info: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let rec = & mut ctx . accounts . log ;"
      },
      {
        "id": 2,
        "label": "let clock = Clock :: get () ? ;"
      },
      {
        "id": 3,
        "label": "rec . entries . push (AccessEntry { user : ctx . accounts . user . key () , timestamp : clock . unix_timestamp , note : info . clone () , }) ;"
      },
      {
        "id": 4,
        "label": "emit ! (AccessRecorded { user : ctx . accounts . user . key () , timestamp : clock . unix_timestamp , note : info , }) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: rec"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: clock"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: rec"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: clock"
      }
    ]
  }
]