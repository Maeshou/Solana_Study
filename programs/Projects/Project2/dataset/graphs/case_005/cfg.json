[
  {
    "name": "create_pool",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "pool . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "pool . reward_rate = reward_rate ;"
      },
      {
        "id": 4,
        "label": "pool . total_staked = 0 ;"
      },
      {
        "id": 5,
        "label": "pool . bump = * ctx . bumps . get (\"pool\") . unwrap () ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "stake",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 9,
        "label": "let user_stake = & mut ctx . accounts . user_stake ;"
      },
      {
        "id": 10,
        "label": "pool . total_staked += amount ;"
      },
      {
        "id": 11,
        "label": "user_stake . amount += amount ;"
      },
      {
        "id": 12,
        "label": "user_stake . last_update = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "withdraw",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 16,
        "label": "let user_stake = & mut ctx . accounts . user_stake ;"
      },
      {
        "id": 17,
        "label": "require ! (user_stake . amount >= amount , StakingError :: InsufficientStake) ;"
      },
      {
        "id": 18,
        "label": "pool . total_staked -= amount ;"
      },
      {
        "id": 19,
        "label": "user_stake . amount -= amount ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  }
]