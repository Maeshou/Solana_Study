[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "pool . fee_basis = fee_bps ;"
      },
      {
        "id": 3,
        "label": "pool . total_staked = 0 ;"
      },
      {
        "id": 4,
        "label": "emit ! (PoolCreated { fee_bps }) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: pool"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: pool"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: pool"
      }
    ]
  },
  {
    "name": "stake",
    "inputs": [
      "ctx: Context < Stake >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let cpi = CpiContext :: new (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . user_token . to_account_info () , to : ctx . accounts . pool_token . to_account_info () , authority : ctx . accounts . user . to_account_info () , } ,) ;"
      },
      {
        "id": 8,
        "label": "anchor_spl :: token :: transfer (cpi , amount) ? ;"
      },
      {
        "id": 9,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 10,
        "label": "pool . total_staked = pool . total_staked . checked_add (amount) . unwrap () ;"
      },
      {
        "id": 11,
        "label": "emit ! (Staked { user : ctx . accounts . user . key () , amount }) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: cpi"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: cpi"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: pool"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: pool"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: pool"
      }
    ]
  },
  {
    "name": "unstake",
    "inputs": [
      "ctx: Context < Stake >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let pool = & mut ctx . accounts . pool ;"
      },
      {
        "id": 15,
        "label": "require ! (pool . total_staked >= amount , ErrorCode :: Insufficient) ;"
      },
      {
        "id": 16,
        "label": "let fee = amount * pool . fee_basis as u64 / 10_000 ;"
      },
      {
        "id": 17,
        "label": "let net = amount . checked_sub (fee) . unwrap () ;"
      },
      {
        "id": 18,
        "label": "* * ctx . accounts . user_token . to_account_info () . lamports . borrow_mut () += net ;"
      },
      {
        "id": 19,
        "label": "pool . total_staked = pool . total_staked . checked_sub (amount) . unwrap () ;"
      },
      {
        "id": 20,
        "label": "emit ! (Unstaked { user : ctx . accounts . user . key () , amount : net }) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: pool"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: fee"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: pool"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: net"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: fee"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: net"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: pool"
      },
      {
        "from": 14,
        "to": 19,
        "label": "data_dep: pool"
      }
    ]
  }
]