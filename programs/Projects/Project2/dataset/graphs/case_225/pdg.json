[
  {
    "name": "enter",
    "inputs": [
      "ctx: Context < EnterDungeon >",
      "health: u64",
      "threshold: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . dungeon ;"
      },
      {
        "id": 2,
        "label": "if health >= threshold { d . clear_count = d . clear_count . saturating_add (1) ; let loot = threshold / 10 ; d . loot_map . insert (ctx . accounts . player . key () , loot) ; } else { d . fail_count = d . fail_count . saturating_add (1) ; d . locked = true ; d . penalty_map . entry (ctx . accounts . player . key ()) . and_modify (| c | * c += threshold - health) . or_insert (threshold - health) ; }"
      },
      {
        "id": 3,
        "label": "d . clear_count = d . clear_count . saturating_add (1) ;"
      },
      {
        "id": 4,
        "label": "let loot = threshold / 10 ;"
      },
      {
        "id": 5,
        "label": "d . loot_map . insert (ctx . accounts . player . key () , loot) ;"
      },
      {
        "id": 6,
        "label": "d . fail_count = d . fail_count . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "d . locked = true ;"
      },
      {
        "id": 8,
        "label": "d . penalty_map . entry (ctx . accounts . player . key ()) . and_modify (| c | * c += threshold - health) . or_insert (threshold - health) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: loot"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: loot"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: d"
      }
    ]
  }
]