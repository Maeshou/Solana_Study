[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = * ctx . bumps . get (\"manager\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . manager . 0 = b ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "add_category",
    "inputs": [
      "ctx: Context < Modify >",
      "category_id: u8"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . manager . 1 ;"
      },
      {
        "id": 6,
        "label": "if list . len () >= MAX_CATEGORIES { return err ! (ErrorCode :: MaxCategoriesReached) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: MaxCategoriesReached) ;"
      },
      {
        "id": 8,
        "label": "list . push ((category_id , 0)) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "record_expense",
    "inputs": [
      "ctx: Context < Modify >",
      "category_id: u8",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let list = & mut ctx . accounts . manager . 1 ;"
      },
      {
        "id": 12,
        "label": "let mut found = false ;"
      },
      {
        "id": 13,
        "label": "for entry in list . iter_mut () { if entry . 0 == category_id { entry . 1 = entry . 1 . wrapping_add (amount) ; found = true ; } }"
      },
      {
        "id": 14,
        "label": "if entry . 0 == category_id { entry . 1 = entry . 1 . wrapping_add (amount) ; found = true ; }"
      },
      {
        "id": 15,
        "label": "entry . 1 = entry . 1 . wrapping_add (amount) ;"
      },
      {
        "id": 16,
        "label": "found = true ;"
      },
      {
        "id": 17,
        "label": "if ! found { return err ! (ErrorCode :: CategoryNotFound) ; }"
      },
      {
        "id": 18,
        "label": "return err ! (ErrorCode :: CategoryNotFound) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: list"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: found"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: list"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "purge_category",
    "inputs": [
      "ctx: Context < Modify >",
      "category_id: u8"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let list = & mut ctx . accounts . manager . 1 ;"
      },
      {
        "id": 22,
        "label": "list . retain (| & (cid , _) | { if cid == category_id { false } else { true } }) ;"
      },
      {
        "id": 23,
        "label": "if cid == category_id { false } else { true }"
      },
      {
        "id": 24,
        "label": "false"
      },
      {
        "id": 25,
        "label": "true"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: list"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "total_spent",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 27,
        "label": "Entry"
      },
      {
        "id": 28,
        "label": "let list = & ctx . accounts . manager . 1 ;"
      },
      {
        "id": 29,
        "label": "let mut sum = 0u64 ;"
      },
      {
        "id": 30,
        "label": "for & (_ , spent) in list . iter () { sum = sum . wrapping_add (spent) ; }"
      },
      {
        "id": 31,
        "label": "sum = sum . wrapping_add (spent) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Total spent: {}\" , sum) ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 28,
        "label": "def: list"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: sum"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: list"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: sum"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: sum"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: sum"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: sum"
      }
    ]
  }
]