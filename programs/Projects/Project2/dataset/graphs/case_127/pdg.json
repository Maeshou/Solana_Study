[
  {
    "name": "create_subscription",
    "inputs": [
      "ctx: Context < CreateSubscription >",
      "period_days: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if period_days == 0 { return Err (ErrorCode :: InvalidPeriod . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: InvalidPeriod . into ()) ;"
      },
      {
        "id": 3,
        "label": "let sub = & mut ctx . accounts . subscription ;"
      },
      {
        "id": 4,
        "label": "sub . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 5,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 6,
        "label": "sub . expiry = now + (period_days as i64) * 86_400 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: sub"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: sub"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: now"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: sub"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "renew_subscription",
    "inputs": [
      "ctx: Context < ModifySubscription >",
      "period_days: u32"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "if period_days == 0 { return Err (ErrorCode :: InvalidPeriod . into ()) ; }"
      },
      {
        "id": 10,
        "label": "return Err (ErrorCode :: InvalidPeriod . into ()) ;"
      },
      {
        "id": 11,
        "label": "let sub = & mut ctx . accounts . subscription ;"
      },
      {
        "id": 12,
        "label": "if sub . owner != ctx . accounts . user . key () { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 13,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 14,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 15,
        "label": "sub . expiry = now + (period_days as i64) * 86_400 ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: sub"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: sub"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: now"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: sub"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: now"
      }
    ]
  }
]