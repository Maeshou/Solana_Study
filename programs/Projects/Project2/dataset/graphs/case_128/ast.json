[
  {
    "name": "initialize_logger",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitializeLogger >"
    ],
    "attributes": [
      "# [doc = \" ロガーアカウントを初期化：所有者と初回ログをセット\"]"
    ],
    "body": [
      "let logger = & mut ctx . accounts . logger ;",
      "logger . owner = ctx . accounts . authority . key () ;",
      "logger . access_count = 0 ;",
      "logger . last_access_ts = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "use_premium",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UsePremium >"
    ],
    "attributes": [
      "# [doc = \" プレミアム機能利用：  \"]",
      "# [doc = \" - `ticket`（データレス・SystemProgram所有・署名あり）で権限チェック  \"]",
      "# [doc = \" - 利用回数をカウント＋最終アクセス時刻を記録  \"]",
      "# [doc = \" - ここに実際のプレミアムロジックを実装\"]"
    ],
    "body": [
      "let logger = & mut ctx . accounts . logger ;",
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "logger . access_count = logger . access_count . wrapping_add (1) ;",
      "logger . last_access_ts = now ;",
      "msg ! (\"✨ Premium feature used by {}, total uses: {}\" , ctx . accounts . authority . key () , logger . access_count) ;",
      "Ok (())"
    ]
  },
  {
    "name": "PremiumLogger",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "access_count",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "last_access_ts",
        "attribute": null,
        "field_type": "i64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitializeLogger",
    "node_type": "struct",
    "fields": [
      {
        "name": "logger",
        "attribute": "# [doc = \" 新規ロガーアカウント（ランダムキーで init、PDA は使わない）\"] # [account (init , payer = authority , space = 8 + 32 + 8 + 8)]",
        "field_type": "Account < 'info , PremiumLogger >"
      },
      {
        "name": "authority",
        "attribute": "# [doc = \" ロガー所有者（署名必須）\"] # [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UsePremium",
    "node_type": "struct",
    "fields": [
      {
        "name": "logger",
        "attribute": "# [doc = \" 既存のロガー。has_one で owner フィールドと一致する signer を強制\"] # [account (mut , has_one = authority)]",
        "field_type": "Account < 'info , PremiumLogger >"
      },
      {
        "name": "ticket",
        "attribute": "# [doc = \" データレス「プレミアムチケット」アカウント  \"] # [doc = \" - System Program 所有  \"] # [doc = \" - かつそのキーの署名あり  \"] # [account (constraint = ticket . to_account_info () . owner == & System :: id () , signer)]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "authority",
        "attribute": "# [doc = \" プレミアム権限を持つユーザー（logger.owner）  \"] # [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "clock",
        "attribute": "# [doc = \" 時刻取得用\"]",
        "field_type": "Sysvar < 'info , Clock >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]