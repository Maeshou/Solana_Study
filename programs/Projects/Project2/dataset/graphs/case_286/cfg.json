[
  {
    "name": "claim",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . daily ;"
      },
      {
        "id": 2,
        "label": "if statement"
      },
      {
        "id": 3,
        "label": "predicate"
      },
      {
        "id": 4,
        "label": "slot > d . last_slot"
      },
      {
        "id": 5,
        "label": "True body"
      },
      {
        "id": 6,
        "label": "d . last_slot = slot ;"
      },
      {
        "id": 7,
        "label": "let idx = (d . count % d . rewards . len () as u64) as usize ;"
      },
      {
        "id": 8,
        "label": "d . count = d . count . saturating_add (1) ;"
      },
      {
        "id": 9,
        "label": "Ok (d . rewards [idx])"
      },
      {
        "id": 10,
        "label": "False body"
      },
      {
        "id": 11,
        "label": "Ok (0)"
      },
      {
        "id": 12,
        "label": "merge"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "predicate"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 2,
        "to": 5,
        "label": "true"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 2,
        "to": 10,
        "label": "false"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 9,
        "to": 12,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  }
]