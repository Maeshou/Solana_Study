[
  {
    "name": "modify_art",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyArt >",
      "nft_id: u64",
      "desc: String"
    ],
    "attributes": [],
    "body": [
      "let hist = & mut ctx . accounts . history ;",
      "hist . log . entry (nft_id) . and_modify (| v | { v [hist . index as usize] = desc . clone () ; }) . or_insert_with (| | vec ! [desc . clone () ; hist . capacity as usize]) ;",
      "hist . index = (hist . index + 1) % hist . capacity ;",
      "Ok (())"
    ]
  },
  {
    "name": "ModifyArt",
    "node_type": "struct",
    "fields": [
      {
        "name": "history",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , ArtHistory >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ArtHistory",
    "node_type": "struct",
    "fields": [
      {
        "name": "log",
        "attribute": null,
        "field_type": "std :: collections :: BTreeMap < u64 , Vec < String > >"
      },
      {
        "name": "capacity",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "index",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]