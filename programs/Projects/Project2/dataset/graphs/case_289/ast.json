[
  {
    "name": "craft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Craft >",
      "recipe: String"
    ],
    "attributes": [],
    "body": [
      "let cr = & mut ctx . accounts . data ;",
      "if let Some (reqs) = cr . recipes . get (& recipe)",
      "{",
      "let mut possible = true ;",
      "for (comp , & cnt) in reqs . iter ()",
      "{",
      "if cr . inventory . get (comp) . copied () . unwrap_or (0) < cnt { possible = false ;",
      "break ;",
      "} } if possible",
      "{",
      "for (comp , & cnt) in reqs . iter () { let stock = cr . inventory . get_mut (comp) . unwrap () ;",
      "* stock = stock . saturating_sub (cnt) ;",
      "} * cr . crafted . entry (recipe . clone ()) . or_insert (0) += 1 ;",
      "} else",
      "{",
      "cr . failed_attempts . saturating_add (1) ;",
      "}",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Craft",
    "node_type": "struct",
    "fields": [
      {
        "name": "data",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , CraftData >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CraftData",
    "node_type": "struct",
    "fields": [
      {
        "name": "recipes",
        "attribute": null,
        "field_type": "BTreeMap < String , BTreeMap < String , u64 > >"
      },
      {
        "name": "inventory",
        "attribute": null,
        "field_type": "BTreeMap < String , u64 >"
      },
      {
        "name": "crafted",
        "attribute": null,
        "field_type": "BTreeMap < String , u64 >"
      },
      {
        "name": "failed_attempts",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]