[
  {
    "name": "list_nft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ListNft >",
      "price: u64"
    ],
    "attributes": [],
    "body": [
      "require ! (ctx . accounts . nft_token_account . owner == & token :: ID , ErrorCode :: InvalidNftTokenOwner) ;",
      "require ! (ctx . accounts . nft_mint . owner == & token :: ID , ErrorCode :: InvalidMintOwner) ;",
      "let listing_info = ctx . accounts . listing . to_account_info () ;",
      "require ! (listing_info . owner == ctx . program_id , ErrorCode :: InvalidListingOwner) ;",
      "let listing = & mut ctx . accounts . listing ;",
      "listing . seller = ctx . accounts . seller . key () ;",
      "listing . nft_mint = ctx . accounts . nft_mint . key () ;",
      "listing . price = price ;",
      "listing . is_active = true ;",
      "Ok (())"
    ]
  },
  {
    "name": "buy_nft",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < BuyNft >"
    ],
    "attributes": [],
    "body": [
      "require ! (ctx . accounts . listing . to_account_info () . owner == ctx . program_id , ErrorCode :: InvalidListingOwner) ;",
      "require ! (ctx . accounts . seller_nft_account . owner == & token :: ID , ErrorCode :: InvalidSellerNftOwner) ;",
      "require ! (ctx . accounts . buyer_nft_account . owner == & token :: ID , ErrorCode :: InvalidBuyerNftOwner) ;",
      "let listing = & mut ctx . accounts . listing ;",
      "require ! (listing . is_active , ErrorCode :: ListingNotActive) ;",
      "let transfer_instruction = Transfer { from : ctx . accounts . seller_nft_account . to_account_info () , to : ctx . accounts . buyer_nft_account . to_account_info () , authority : ctx . accounts . seller . to_account_info () , } ;",
      "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , transfer_instruction ,) ;",
      "token :: transfer (cpi_ctx , 1) ? ;",
      "listing . is_active = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "ListNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing",
        "attribute": "# [account (init , payer = seller , space = 8 + 32 + 32 + 8 + 1 , constraint = listing . to_account_info () . owner == program_id)]",
        "field_type": "Account < 'info , NftListing >"
      },
      {
        "name": "nft_token_account",
        "attribute": "# [account (constraint = nft_token_account . owner == & token :: ID)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "nft_mint",
        "attribute": "# [account (constraint = nft_mint . owner == & token :: ID)]",
        "field_type": "Account < 'info , Mint >"
      },
      {
        "name": "seller",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BuyNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "listing",
        "attribute": "# [account (mut , constraint = listing . to_account_info () . owner == program_id)]",
        "field_type": "Account < 'info , NftListing >"
      },
      {
        "name": "seller_nft_account",
        "attribute": "# [account (mut , constraint = seller_nft_account . owner == & token :: ID)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "buyer_nft_account",
        "attribute": "# [account (mut , constraint = buyer_nft_account . owner == & token :: ID)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "seller",
        "attribute": "# [doc = \" CHECK: 売り手のアカウント（owner checkは不要）\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "buyer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "NftListing",
    "node_type": "struct",
    "fields": [
      {
        "name": "seller",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "nft_mint",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "price",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "is_active",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]