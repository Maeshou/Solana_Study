[
  {
    "name": "create_cart",
    "inputs": [
      "ctx: Context < CreateCart >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cart = & mut ctx . accounts . cart ;"
      },
      {
        "id": 2,
        "label": "cart . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "cart . items = Vec :: new () ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cart"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: cart"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: cart"
      }
    ]
  },
  {
    "name": "add_item",
    "inputs": [
      "ctx: Context < ModifyCart >",
      "item: Pubkey"
    ],
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let cart = & mut ctx . accounts . cart ;"
      },
      {
        "id": 7,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 8,
        "label": "if cart . owner != user { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 9,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 10,
        "label": "if cart . items . len () >= MAX_ITEMS { return Err (ErrorCode :: CartFull . into ()) ; }"
      },
      {
        "id": 11,
        "label": "return Err (ErrorCode :: CartFull . into ()) ;"
      },
      {
        "id": 12,
        "label": "for entry in cart . items . iter () { if entry . item == item { return Err (ErrorCode :: ItemAlreadyInCart . into ()) ; } }"
      },
      {
        "id": 13,
        "label": "if entry . item == item { return Err (ErrorCode :: ItemAlreadyInCart . into ()) ; }"
      },
      {
        "id": 14,
        "label": "return Err (ErrorCode :: ItemAlreadyInCart . into ()) ;"
      },
      {
        "id": 15,
        "label": "cart . items . push (CartItem { item , quantity : 1 }) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 6,
        "label": "def: cart"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: user"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: cart"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: user"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: cart"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: cart"
      },
      {
        "from": 6,
        "to": 15,
        "label": "data_dep: cart"
      }
    ]
  },
  {
    "name": "remove_item",
    "inputs": [
      "ctx: Context < ModifyCart >",
      "item: Pubkey"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let cart = & mut ctx . accounts . cart ;"
      },
      {
        "id": 19,
        "label": "let user = ctx . accounts . user . key () ;"
      },
      {
        "id": 20,
        "label": "if cart . owner != user { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 22,
        "label": "let mut index_to_remove : Option < usize > = None ;"
      },
      {
        "id": 23,
        "label": "for (i , entry) in cart . items . iter () . enumerate () { if entry . item == item { index_to_remove = Some (i) ; break ; } }"
      },
      {
        "id": 24,
        "label": "if entry . item == item { index_to_remove = Some (i) ; break ; }"
      },
      {
        "id": 25,
        "label": "index_to_remove = Some (i) ;"
      },
      {
        "id": 26,
        "label": "break ;"
      },
      {
        "id": 27,
        "label": "if let Some (i) = index_to_remove { cart . items . remove (i) ; Ok (()) } else { Err (ErrorCode :: ItemNotFound . into ()) }"
      },
      {
        "id": 28,
        "label": "cart . items . remove (i) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      },
      {
        "id": 30,
        "label": "Err (ErrorCode :: ItemNotFound . into ())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: cart"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: user"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: cart"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: user"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: cart"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: cart"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: cart"
      }
    ]
  }
]