[
  {
    "name": "init",
    "inputs": [
      "ctx: Context < InitMap >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let inv = & mut ctx . accounts . inv ;"
      },
      {
        "id": 2,
        "label": "inv . items = BTreeMap :: new () ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: inv"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: inv"
      }
    ]
  },
  {
    "name": "add_item",
    "inputs": [
      "ctx: Context < ModifyMap >",
      "token_id: u64",
      "qty: u32"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let inv = & mut ctx . accounts . inv ;"
      },
      {
        "id": 6,
        "label": "let e = inv . items . entry (token_id) . or_insert (0) ;"
      },
      {
        "id": 7,
        "label": "* e = e . saturating_add (qty) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: inv"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: e"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: inv"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: e"
      }
    ]
  },
  {
    "name": "use_item",
    "inputs": [
      "ctx: Context < ModifyMap >",
      "token_id: u64",
      "qty: u32"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let inv = & mut ctx . accounts . inv ;"
      },
      {
        "id": 11,
        "label": "if let Some (e) = inv . items . get_mut (& token_id) { * e = e . saturating_sub (qty) ; if * e == 0 { inv . items . remove (& token_id) ; } }"
      },
      {
        "id": 12,
        "label": "* e = e . saturating_sub (qty) ;"
      },
      {
        "id": 13,
        "label": "if * e == 0 { inv . items . remove (& token_id) ; }"
      },
      {
        "id": 14,
        "label": "inv . items . remove (& token_id) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: inv"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: inv"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: inv"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: inv"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: inv"
      }
    ]
  }
]