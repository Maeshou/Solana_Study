[
  {
    "name": "increment_with_limit",
    "inputs": [
      "ctx: Context < Ctx003 >",
      "max_count: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (ctx . accounts . authority . is_signer , CustomError :: Unauthorized) ;"
      },
      {
        "id": 2,
        "label": "let current = ctx . accounts . storage . data ;"
      },
      {
        "id": 3,
        "label": "require ! (current < max_count , CustomError :: LimitReached) ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . storage . data = current + 1 ;"
      },
      {
        "id": 5,
        "label": "msg ! (\"Count incremented: {} -> {} (Limit = {})\" , current , current + 1 , max_count) ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: current"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: current"
      }
    ]
  },
  {
    "name": "check_count",
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "msg ! (\"Current count: {}\" , ctx . accounts . storage . data) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]