[
  {
    "name": "initialize_vest",
    "inputs": [
      "ctx: Context < InitializeVest >",
      "total_amount: u64",
      "release_timestamp: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let vest = & mut ctx . accounts . vest ;"
      },
      {
        "id": 2,
        "label": "vest . beneficiary = ctx . accounts . beneficiary . key () ;"
      },
      {
        "id": 3,
        "label": "vest . total_amount = total_amount ;"
      },
      {
        "id": 4,
        "label": "vest . released_amount = 0 ;"
      },
      {
        "id": 5,
        "label": "vest . release_time = release_timestamp ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Vesting for {}: {} tokens at {}\" , vest . beneficiary , vest . total_amount , vest . release_time) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: vest"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: vest"
      }
    ]
  },
  {
    "name": "claim_vested",
    "inputs": [
      "ctx: Context < ClaimVest >"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "require ! (ctx . accounts . beneficiary . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 10,
        "label": "let clock = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 11,
        "label": "let vest = & mut ctx . accounts . vest ;"
      },
      {
        "id": 12,
        "label": "let remaining = vest . total_amount . checked_sub (vest . released_amount) . unwrap () ;"
      },
      {
        "id": 13,
        "label": "require ! (clock >= vest . release_time , ErrorCode :: NotYet) ;"
      },
      {
        "id": 14,
        "label": "vest . released_amount = vest . total_amount ;"
      },
      {
        "id": 15,
        "label": "* * ctx . accounts . vault . to_account_info () . try_borrow_mut_lamports () ? -= remaining ;"
      },
      {
        "id": 16,
        "label": "* * ctx . accounts . beneficiary . to_account_info () . try_borrow_mut_lamports () ? += remaining ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"{} claimed {} tokens\" , vest . beneficiary , remaining) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: clock"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: vest"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: remaining"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: vest"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: vest"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: vest"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: vest"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: remaining"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: remaining"
      }
    ]
  },
  {
    "name": "extend_vesting",
    "inputs": [
      "ctx: Context < ExtendVest >",
      "extra_secs: i64"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "require ! (ctx . accounts . manager . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 21,
        "label": "let vest = & mut ctx . accounts . vest ;"
      },
      {
        "id": 22,
        "label": "vest . release_time = vest . release_time . checked_add (extra_secs) . unwrap () ;"
      },
      {
        "id": 23,
        "label": "msg ! (\"Vesting for {} extended by {}s to {}\" , vest . beneficiary , extra_secs , vest . release_time) ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: vest"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: vest"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: vest"
      }
    ]
  }
]