[
  {
    "name": "save_mapped_value",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let auth = ctx . accounts . authority . key () ;"
      },
      {
        "id": 2,
        "label": "let store = & mut ctx . accounts . storage ;"
      },
      {
        "id": 3,
        "label": "let key1 = store . slot1 ;"
      },
      {
        "id": 4,
        "label": "let key2 = store . slot2 ;"
      },
      {
        "id": 5,
        "label": "let key3 = store . slot3 ;"
      },
      {
        "id": 6,
        "label": "let a = (auth == key1) as u8 ;"
      },
      {
        "id": 7,
        "label": "let b = (auth == key2) as u8 ;"
      },
      {
        "id": 8,
        "label": "let c = (auth == key3) as u8 ;"
      },
      {
        "id": 9,
        "label": "let targets = [& mut store . data0 , & mut store . data1 , & mut store . data2] ;"
      },
      {
        "id": 10,
        "label": "let idx = (a * 0) + (b * 1) + (c * 2) ;"
      },
      {
        "id": 11,
        "label": "let dest = targets . get (idx as usize) . unwrap_or (& mut store . data0) ;"
      },
      {
        "id": 12,
        "label": "* * dest = value ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "read",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let s = & ctx . accounts . storage ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Data0: {}\" , s . data0) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Data1: {}\" , s . data1) ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Data2: {}\" , s . data2) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      }
    ]
  }
]