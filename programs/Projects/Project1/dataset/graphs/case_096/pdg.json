[
  {
    "name": "init_allowance",
    "inputs": [
      "ctx: Context < InitAllowance >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (ctx . accounts . owner . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 2,
        "label": "let a = & mut ctx . accounts . allowance ;"
      },
      {
        "id": 3,
        "label": "a . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 4,
        "label": "a . delegate = ctx . accounts . delegate . key () ;"
      },
      {
        "id": 5,
        "label": "a . amount = amount ;"
      },
      {
        "id": 6,
        "label": "a . used = 0 ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Allowance: owner {} delegated {} lamports to {}\" , a . owner , a . amount , a . delegate) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: a"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: a"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: a"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: a"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: a"
      }
    ]
  },
  {
    "name": "redeem_allowance",
    "inputs": [
      "ctx: Context < RedeemAllowance >",
      "to: Pubkey",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "require ! (ctx . accounts . delegate . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 11,
        "label": "let a = & mut ctx . accounts . allowance ;"
      },
      {
        "id": 12,
        "label": "let remaining = a . amount . checked_sub (a . used) . unwrap () ;"
      },
      {
        "id": 13,
        "label": "require ! (amount <= remaining , ErrorCode :: InsufficientAllowance) ;"
      },
      {
        "id": 14,
        "label": "let vault = & ctx . accounts . vault . to_account_info () ;"
      },
      {
        "id": 15,
        "label": "* * vault . try_borrow_mut_lamports () ? = vault . lamports () . checked_sub (amount) . unwrap () ;"
      },
      {
        "id": 16,
        "label": "let recipient = & ctx . accounts . recipient . to_account_info () ;"
      },
      {
        "id": 17,
        "label": "* * recipient . try_borrow_mut_lamports () ? = recipient . lamports () . checked_add (amount) . unwrap () ;"
      },
      {
        "id": 18,
        "label": "a . used = a . used . checked_add (amount) . unwrap () ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"{} redeemed {} (used {}/{})\" , a . delegate , amount , a . used , a . amount) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: a"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: remaining"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: vault"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: vault"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: vault"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: recipient"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: recipient"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: recipient"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: a"
      }
    ]
  }
]