[
  {
    "name": "set_unlock_time",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (ctx . accounts . authority . is_signer , CustomError :: Unauthorized) ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . storage . data = unlock_unix_time ;"
      },
      {
        "id": 3,
        "label": "msg ! (\"Unlock time set to {}\" , unlock_unix_time) ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "perform_unlocked_action",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let current_time = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 7,
        "label": "let unlock_time = ctx . accounts . storage . data ;"
      },
      {
        "id": 8,
        "label": "require ! (current_time >= unlock_time , CustomError :: NotYetUnlocked) ;"
      },
      {
        "id": 9,
        "label": "msg ! (\"Action permitted. Current: {}, Unlock: {}\" , current_time , unlock_time) ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      }
    ]
  },
  {
    "name": "check_status",
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let current_time = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 13,
        "label": "let unlock_time = ctx . accounts . storage . data ;"
      },
      {
        "id": 14,
        "label": "let status = if current_time >= unlock_time { \"UNLOCKED\" } else { \"LOCKED\" } ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Status: {} | Now: {}, Unlock Time: {}\" , status , current_time , unlock_time) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      }
    ]
  }
]