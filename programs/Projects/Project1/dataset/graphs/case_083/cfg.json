[
  {
    "name": "initialize_plan",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let plan = & mut ctx . accounts . plan ;"
      },
      {
        "id": 2,
        "label": "plan . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "plan . price = price_per_period ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "subscribe",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let cost = ctx . accounts . plan . price . checked_mul (periods as u64) . unwrap () ;"
      },
      {
        "id": 7,
        "label": "require ! (ctx . accounts . payer . to_account_info () . lamports () >= cost , ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 8,
        "label": "* * ctx . accounts . payer . to_account_info () . try_borrow_mut_lamports () ? -= cost ;"
      },
      {
        "id": 9,
        "label": "* * ctx . accounts . plan . to_account_info () . try_borrow_mut_lamports () ? += cost ;"
      },
      {
        "id": 10,
        "label": "let sub = & mut ctx . accounts . subscription ;"
      },
      {
        "id": 11,
        "label": "sub . user = ctx . accounts . payer . key () ;"
      },
      {
        "id": 12,
        "label": "sub . periods = periods ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "view_subscription",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let sub = & ctx . accounts . subscription ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"User {} has {} period(s) remaining\" , sub . user , sub . periods) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_price",
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "require ! (ctx . accounts . admin . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 20,
        "label": "ctx . accounts . plan . price = new_price ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"Plan price updated to {}\" , new_price) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      }
    ]
  }
]