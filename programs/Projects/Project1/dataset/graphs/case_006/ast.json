[
  {
    "name": "scale_and_flag",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >",
      "multiplier: u64",
      "threshold: u64"
    ],
    "attributes": [],
    "body": [
      "require ! (ctx . accounts . authority . is_signer , CustomError :: Unauthorized) ;",
      "let result = ctx . accounts . storage . data . saturating_mul (multiplier) ;",
      "let flag = if result > threshold { 1 } else { 0 } ;",
      "ctx . accounts . storage . data = flag ;",
      "msg ! (\"Multiplied: {} * {} = {}, Threshold: {}, Flag set to: {}\" , ctx . accounts . storage . data , multiplier , result , threshold , flag) ;",
      "Ok (())"
    ]
  },
  {
    "name": "transform_data_pattern",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "attributes": [],
    "body": [
      "require ! (ctx . accounts . authority . is_signer , CustomError :: Unauthorized) ;",
      "let current = ctx . accounts . storage . data ;",
      "let updated = if current % 2 == 0 { current / 2 } else { current + 3 } ;",
      "ctx . accounts . storage . data = updated ;",
      "msg ! (\"Transformed {} to {}\" , current , updated) ;",
      "Ok (())"
    ]
  },
  {
    "name": "enforce_minimum",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >",
      "minimum: u64"
    ],
    "attributes": [],
    "body": [
      "require ! (ctx . accounts . authority . is_signer , CustomError :: Unauthorized) ;",
      "let current = ctx . accounts . storage . data ;",
      "if current < minimum",
      "{",
      "ctx . accounts . storage . data = minimum ;",
      "msg ! (\"Value",
      "{",
      "} was below minimum {}, adjusted.\" , current , minimum) ;",
      "} else",
      "{",
      "msg ! (\"Value {} meets minimum {}\" , current , minimum) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx003",
    "node_type": "struct",
    "fields": [
      {
        "name": "storage",
        "attribute": "# [account (mut , has_one = authority)]",
        "field_type": "Account < 'info , Storage003 >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Storage003",
    "node_type": "struct",
    "fields": [
      {
        "name": "authority",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "data",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]