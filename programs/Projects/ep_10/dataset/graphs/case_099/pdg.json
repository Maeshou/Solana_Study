[
  {
    "name": "exec_099",
    "inputs": [
      "ctx: Context < Case_099Ctx >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let (pda , bump) = Pubkey :: find_program_address (& [b\"shared_seed\"] , ctx . program_id) ;"
      },
      {
        "id": 2,
        "label": "let dest = ctx . accounts . user . to_account_info () ;"
      },
      {
        "id": 3,
        "label": "let before = * * dest . lamports . borrow () ;"
      },
      {
        "id": 4,
        "label": "* * dest . lamports . borrow_mut () = before . checked_add (amount) . unwrap () ;"
      },
      {
        "id": 5,
        "label": "let current = ctx . accounts . pool_state . count ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . pool_state . count = current + 1 ;"
      },
      {
        "id": 7,
        "label": "let sol = ctx . accounts . system_program . to_account_info () ;"
      },
      {
        "id": 8,
        "label": "invoke (& system_instruction :: transfer (& ctx . accounts . authority . key () , & ctx . accounts . user . key () , amount) , & [sol]) ? ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: dest"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: before"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: dest"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: dest"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: before"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: current"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: current"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: sol"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: sol"
      }
    ]
  }
]