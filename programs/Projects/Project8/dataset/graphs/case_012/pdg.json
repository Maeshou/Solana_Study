[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "cohort: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "p . cohort = cohort . rotate_left (2) . wrapping_add (37) ;"
      },
      {
        "id": 4,
        "label": "p . score = 1 ;"
      },
      {
        "id": 5,
        "label": "let mut k = 0u8 ;"
      },
      {
        "id": 6,
        "label": "let mut acc = p . cohort . rotate_right (1) . wrapping_add (19) ;"
      },
      {
        "id": 7,
        "label": "while k < 3 { acc = acc . rotate_left (1) . wrapping_mul (3) . wrapping_add (7) ; if acc % 5 > 0 { p . score = p . score . saturating_add (((acc % 17) as u32) + 1) ; } k = k . saturating_add (1) ; }"
      },
      {
        "id": 8,
        "label": "acc = acc . rotate_left (1) . wrapping_mul (3) . wrapping_add (7) ;"
      },
      {
        "id": 9,
        "label": "if acc % 5 > 0 { p . score = p . score . saturating_add (((acc % 17) as u32) + 1) ; }"
      },
      {
        "id": 10,
        "label": "p . score = p . score . saturating_add (((acc % 17) as u32) + 1) ;"
      },
      {
        "id": 11,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: k"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: acc"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: k"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: acc"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: acc"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: acc"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: k"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: k"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: acc"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: acc"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: acc"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: acc"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: k"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: k"
      }
    ]
  },
  {
    "name": "grant_payout",
    "inputs": [
      "ctx: Context < GrantPayout >",
      "lamports: u64",
      "tokens: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let bump = * ctx . bumps . get (\"pool\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 15,
        "label": "let seeds : & [& [u8]] = & [b\"pool\" , ctx . accounts . admin . key . as_ref () , & ctx . accounts . pool . cohort . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 16,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . pool . key () , & ctx . accounts . student . key () , lamports) ;"
      },
      {
        "id": 17,
        "label": "invoke_signed (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . student . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 18,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . pool_token . to_account_info () , to : ctx . accounts . student_token . to_account_info () , authority : ctx . accounts . pool . to_account_info () , } ;"
      },
      {
        "id": 19,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , & [seeds]) ;"
      },
      {
        "id": 20,
        "label": "let mut remain = tokens ;"
      },
      {
        "id": 21,
        "label": "let mut chunk = (tokens / 3) . max (1) ;"
      },
      {
        "id": 22,
        "label": "if chunk < 2 { chunk = chunk . saturating_add (2) ; }"
      },
      {
        "id": 23,
        "label": "chunk = chunk . saturating_add (2) ;"
      },
      {
        "id": 24,
        "label": "while remain > 0 { let next = if remain > chunk { chunk } else { remain } ; token :: transfer (cpi_ctx . clone () , next) ? ; remain = remain . saturating_sub (next) ; chunk = chunk . rotate_left (1) . wrapping_add (1) ; if chunk > remain && remain > 3 { chunk = remain - 1 ; } }"
      },
      {
        "id": 25,
        "label": "let next = if remain > chunk { chunk } else { remain } ;"
      },
      {
        "id": 26,
        "label": "chunk"
      },
      {
        "id": 27,
        "label": "remain"
      },
      {
        "id": 28,
        "label": "token :: transfer (cpi_ctx . clone () , next) ? ;"
      },
      {
        "id": 29,
        "label": "remain = remain . saturating_sub (next) ;"
      },
      {
        "id": 30,
        "label": "chunk = chunk . rotate_left (1) . wrapping_add (1) ;"
      },
      {
        "id": 31,
        "label": "if chunk > remain && remain > 3 { chunk = remain - 1 ; }"
      },
      {
        "id": 32,
        "label": "chunk = remain - 1 ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: bump"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: bump"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: ix"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: ix"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: cpi_accounts"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: cpi_ctx"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: remain"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: chunk"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 19,
        "to": 24,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: next"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: remain"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: next"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: remain"
      },
      {
        "from": 20,
        "to": 29,
        "label": "data_dep: remain"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: next"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: chunk"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: remain"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: remain"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: chunk"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: remain"
      }
    ]
  }
]