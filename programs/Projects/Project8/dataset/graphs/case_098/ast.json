[
  {
    "name": "init_defense_layout",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitDefenseLayout >",
      "size_hint: u32",
      "tier: TerritoryTier",
      "order_seed: u64"
    ],
    "attributes": [],
    "body": [
      "let layout = & mut ctx . accounts . defense_plan ;",
      "let now = Clock :: get () ? . unix_timestamp ;",
      "require ! (size_hint >= 100 , ErrorCode :: TooSmallHint) ;",
      "layout . created_at = now ;",
      "layout . tier = tier . clone () ;",
      "layout . estimated_size = size_hint ;",
      "let mut count = 3u32 ;",
      "if size_hint >= 2_000",
      "{",
      "count = 5 ;",
      "}",
      "if size_hint >= 5_000",
      "{",
      "count = 8 ;",
      "}",
      "layout . slot_count = count ;",
      "let start = (order_seed as usize) % (count as usize) ;",
      "let mut built : Vec < DefenseStructure > = Vec :: new () ;",
      "let mut hp_base = 900u32 ;",
      "let mut def_base = 120u32 ;",
      "let mut upkeep = 18u32 ;",
      "if matches_city (& tier)",
      "{",
      "hp_base = hp_base . saturating_add (400) ;",
      "def_base = def_base . saturating_add (60) ;",
      "upkeep = upkeep . saturating_add (10) ;",
      "}",
      "if matches_capital (& tier)",
      "{",
      "hp_base = hp_base . saturating_add (900) ;",
      "def_base = def_base . saturating_add (180) ;",
      "upkeep = upkeep . saturating_add (30) ;",
      "}",
      "let mut index = 0usize ;",
      "while index < count as usize",
      "{",
      "let idx = (start + index) % (count as usize) ;",
      "let mut kind = StructureType :: Watchtower ;",
      "if idx % 4 == 1",
      "{",
      "kind = StructureType :: BarricadeWall ;",
      "} if idx % 4 == 2",
      "{",
      "kind = StructureType :: MagicBarrier ;",
      "} if idx % 4 >= 3",
      "{",
      "kind = StructureType :: TrapField ;",
      "} let tweak = ((order_seed . rotate_left ((idx as u32) & 13)) as u32) % 37 ;",
      "let hp = hp_base . saturating_add (tweak * 10) ;",
      "let dp = def_base . saturating_add ((tweak % 9) * 10) ;",
      "let m = upkeep . saturating_add (tweak % 7) ;",
      "built . push (DefenseStructure",
      "{",
      "structure_id : idx as u32 , structure_type : kind , health_points : hp , defense_power : dp , maintenance_cost : m , last_upgrade : now , }) ;",
      "index = index . saturating_add (1) ;",
      "}",
      "layout . structures = built ;",
      "Ok (())"
    ]
  },
  {
    "name": "matches_city",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: & TerritoryTier"
    ],
    "attributes": [],
    "body": [
      "matches ! (t , TerritoryTier :: City)"
    ]
  },
  {
    "name": "matches_capital",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: & TerritoryTier"
    ],
    "attributes": [],
    "body": [
      "matches ! (t , TerritoryTier :: Capital)"
    ]
  },
  {
    "name": "InitDefenseLayout",
    "node_type": "struct",
    "fields": [
      {
        "name": "defense_plan",
        "attribute": "# [account (init , payer = planner , space = 8 + DefensePlan :: MAX_SPACE , seeds = [b\"defense-plan\" , planner . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , DefensePlan >"
      },
      {
        "name": "planner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "DefensePlan",
    "node_type": "struct",
    "fields": [
      {
        "name": "created_at",
        "attribute": null,
        "field_type": "i64"
      },
      {
        "name": "tier",
        "attribute": null,
        "field_type": "TerritoryTier"
      },
      {
        "name": "estimated_size",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "slot_count",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "structures",
        "attribute": null,
        "field_type": "Vec < DefenseStructure >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "DefenseStructure",
    "node_type": "struct",
    "fields": [
      {
        "name": "structure_id",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "structure_type",
        "attribute": null,
        "field_type": "StructureType"
      },
      {
        "name": "health_points",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "defense_power",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "maintenance_cost",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "last_upgrade",
        "attribute": null,
        "field_type": "i64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]