[
  {
    "name": "init_hub",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitHub >",
      "plan: u64"
    ],
    "attributes": [],
    "body": [
      "let h = & mut ctx . accounts . hub ;",
      "h . owner = ctx . accounts . owner . key () ;",
      "h . plan = plan . rotate_left (1) . wrapping_add (27) ;",
      "h . tick = 1 ;",
      "let mut i = 0u8 ;",
      "let mut r = h . plan . rotate_right (1) . wrapping_add (9) ;",
      "while i < 3",
      "{",
      "r = r . rotate_left (1) . wrapping_mul (2) . wrapping_add (5) ;",
      "if r & 1 > 0",
      "{",
      "h . tick = h . tick . saturating_add (((r % 17) as u32) + 2) ;",
      "} i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "collect",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Collect >",
      "price: u64",
      "cycles: u8"
    ],
    "attributes": [],
    "body": [
      "let bump = * ctx . bumps . get (\"hub\") . ok_or (error ! (E :: MissingBump)) ? ;",
      "let seeds : & [& [u8]] = & [b\"hub\" , ctx . accounts . owner . key . as_ref () , & ctx . accounts . hub . plan . to_le_bytes () , & [bump]] ;",
      "let mut i = 0u8 ;",
      "let mut amt = price . rotate_left (2) . wrapping_add (3) ;",
      "while i < cycles",
      "{",
      "let ix = system_instruction :: transfer (& ctx . accounts . hub . key () , & ctx . accounts . seller . key () , amt) ;",
      "invoke_signed (& ix , & [ctx . accounts . hub . to_account_info () , ctx . accounts . seller . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;",
      "amt = amt . rotate_right (1) . wrapping_mul (3) . wrapping_add (11) ;",
      "if amt % 3 > 0",
      "{",
      "amt = amt . wrapping_add (7) ;",
      "} i = i . saturating_add (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitHub",
    "node_type": "struct",
    "fields": [
      {
        "name": "hub",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 4 , seeds = [b\"hub\" , owner . key () . as_ref () , plan . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Hub >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "plan",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Collect",
    "node_type": "struct",
    "fields": [
      {
        "name": "hub",
        "attribute": "# [account (mut , seeds = [b\"hub\" , owner . key () . as_ref () , hub . plan . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Hub >"
      },
      {
        "name": "seller",
        "attribute": "# [account (mut)]",
        "field_type": "SystemAccount < 'info >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Hub",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "plan",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "tick",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]