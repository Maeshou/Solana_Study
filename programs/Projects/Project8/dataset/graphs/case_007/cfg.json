[
  {
    "name": "init_forge",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let f = & mut ctx . accounts . forge ;"
      },
      {
        "id": 2,
        "label": "f . master = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "f . rate = base . rotate_left (2) . wrapping_add (21) ;"
      },
      {
        "id": 4,
        "label": "f . tick = 0 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "drip",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let bump = * ctx . bumps . get (\"forge\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 8,
        "label": "let seeds : & [& [u8]] = & [b\"forge\" , ctx . accounts . master . key . as_ref () , & ctx . accounts . forge . rate . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 10,
        "label": "let mut acc = amount . rotate_left (1) ;"
      },
      {
        "id": 11,
        "label": "Loop Start"
      },
      {
        "id": 12,
        "label": "acc = acc . rotate_right (1) . wrapping_add (3) . wrapping_mul (2) ;"
      },
      {
        "id": 13,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "Loop End"
      },
      {
        "id": 15,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . forge_token . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . forge . to_account_info () , } ;"
      },
      {
        "id": 16,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , & [seeds]) ;"
      },
      {
        "id": 17,
        "label": "token :: transfer (cpi_ctx , acc) ? ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "while"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  }
]