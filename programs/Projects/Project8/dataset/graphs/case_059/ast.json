[
  {
    "name": "init_badge_forge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBadgeForge >",
      "seed: u64"
    ],
    "attributes": [],
    "body": [
      "let f = & mut ctx . accounts . forge ;",
      "f . owner = ctx . accounts . player . key () ;",
      "f . heat = seed . rotate_left (2) . wrapping_add (31) ;",
      "f . slots = 2 ;",
      "f . rank = 1 ;",
      "for v in [3u64 , 5 , 9 , 16]",
      "{",
      "f . heat = f . heat . wrapping_add (v . rotate_left (1) ^ f . heat) ;",
      "f . slots = f . slots . saturating_add (1) ;",
      "}",
      "for w in [7u64 , 11 , 18 , 29 , 47] . windows (2)",
      "{",
      "let g = w [0] . wrapping_add (w [1]) . rotate_right (1) ;",
      "if g > 14",
      "{",
      "f . rank = f . rank . saturating_add (1) ;",
      "} f . heat = f . heat . wrapping_add (g) ;",
      "}",
      "let mut t = 1u8 ;",
      "loop { f . heat = f . heat . wrapping_add ((t as u64 * 13) . rotate_left (1)) ; if t > 2 { break ; } t = t . saturating_add (1) ; }",
      "Ok (())"
    ]
  },
  {
    "name": "craft_badge",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CraftBadge >",
      "base: u64"
    ],
    "attributes": [],
    "body": [
      "let f = & mut ctx . accounts . forge ;",
      "for (i , v) in [4u64 , 6 , 10 , 15] . iter () . enumerate ()",
      "{",
      "let inc = v . rotate_left ((i + 1) as u32) ;",
      "if inc > 8",
      "{",
      "f . rank = f . rank . saturating_add (1) ;",
      "} f . heat = f . heat . wrapping_add (inc) ;",
      "}",
      "let seeds : & [& [u8]] = & [b\"forge\" , ctx . accounts . player . key . as_ref () , ctx . accounts . collection . key () . as_ref () , & [ctx . bumps [\"forge\"]] ,] ;",
      "let out = base . saturating_add ((f . heat % 73) + 5) ;",
      "let ix = system_instruction :: transfer (& ctx . accounts . forge . key () , & ctx . accounts . reward_vault . key () , out) ;",
      "invoke_signed (& ix , & [ctx . accounts . forge . to_account_info () , ctx . accounts . reward_vault . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitBadgeForge",
    "node_type": "struct",
    "fields": [
      {
        "name": "forge",
        "attribute": "# [account (init , payer = player , space = 8 + 32 + 8 + 2 + 1 , seeds = [b\"forge\" , player . key () . as_ref () , collection . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Forge >"
      },
      {
        "name": "player",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "collection",
        "attribute": "# [doc = \" CHECK: 参照のみ\"]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CraftBadge",
    "node_type": "struct",
    "fields": [
      {
        "name": "forge",
        "attribute": "# [account (mut , seeds = [b\"forge\" , player . key () . as_ref () , collection . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , Forge >"
      },
      {
        "name": "reward_vault",
        "attribute": "# [account (mut)]",
        "field_type": "SystemAccount < 'info >"
      },
      {
        "name": "player",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "collection",
        "attribute": "# [doc = \" CHECK\"]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Forge",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "heat",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "slots",
        "attribute": null,
        "field_type": "u16"
      },
      {
        "name": "rank",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]