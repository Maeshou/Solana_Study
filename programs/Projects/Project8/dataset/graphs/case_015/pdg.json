[
  {
    "name": "init_vault",
    "inputs": [
      "ctx: Context < InitVault >",
      "series: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let v = & mut ctx . accounts . vault ;"
      },
      {
        "id": 2,
        "label": "v . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "v . series = series . rotate_left (1) . wrapping_add (31) ;"
      },
      {
        "id": 4,
        "label": "v . meter = 3 ;"
      },
      {
        "id": 5,
        "label": "for _ in 0 .. 3 { v . meter = v . meter . saturating_add (((v . series % 23) as u32) + 1) ; }"
      },
      {
        "id": 6,
        "label": "v . meter = v . meter . saturating_add (((v . series % 23) as u32) + 1) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: v"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: v"
      }
    ]
  },
  {
    "name": "offset_and_release",
    "inputs": [
      "ctx: Context < OffsetAndRelease >",
      "burn_amount: u64",
      "reward: u64"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let bump = * ctx . bumps . get (\"vault\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 10,
        "label": "let seeds : & [& [u8]] = & [b\"vault\" , ctx . accounts . owner . key . as_ref () , & ctx . accounts . vault . series . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 11,
        "label": "let burn_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , anchor_spl :: token :: Burn { mint : ctx . accounts . credit_mint . to_account_info () , from : ctx . accounts . vault_token . to_account_info () , authority : ctx . accounts . vault . to_account_info () , } , & [seeds] ,) ;"
      },
      {
        "id": 12,
        "label": "token :: burn (burn_ctx , burn_amount) ? ;"
      },
      {
        "id": 13,
        "label": "let xfer_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , Transfer { from : ctx . accounts . vault_token . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . vault . to_account_info () , } , & [seeds] ,) ;"
      },
      {
        "id": 14,
        "label": "token :: transfer (xfer_ctx , reward) ? ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: bump"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: bump"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: burn_ctx"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: burn_ctx"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: xfer_ctx"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: xfer_ctx"
      }
    ]
  }
]