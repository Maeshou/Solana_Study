[
  {
    "name": "init_depot",
    "inputs": [
      "ctx: Context < InitDepot >",
      "batch: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . depot ;"
      },
      {
        "id": 2,
        "label": "d . supervisor = ctx . accounts . supervisor . key () ;"
      },
      {
        "id": 3,
        "label": "d . batch = batch . rotate_left (1) . wrapping_add (23) ;"
      },
      {
        "id": 4,
        "label": "d . turns = 1 ;"
      },
      {
        "id": 5,
        "label": "for i in 0u8 .. 6 { let salt = (d . batch ^ (i as u64 * 13)) . rotate_left (1) . wrapping_add (11) ; let probe = d . batch . rotate_left (1) . wrapping_mul (2) . wrapping_add (salt) ; d . turns = d . turns . saturating_add (((probe % 13) as u32) + 2) ; }"
      },
      {
        "id": 6,
        "label": "let salt = (d . batch ^ (i as u64 * 13)) . rotate_left (1) . wrapping_add (11) ;"
      },
      {
        "id": 7,
        "label": "let probe = d . batch . rotate_left (1) . wrapping_mul (2) . wrapping_add (salt) ;"
      },
      {
        "id": 8,
        "label": "d . turns = d . turns . saturating_add (((probe % 13) as u32) + 2) ;"
      },
      {
        "id": 9,
        "label": "require ! (d . turns > 3 , E :: Sanity) ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: d"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: salt"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: d"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: probe"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: d"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: salt"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: d"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: probe"
      }
    ]
  },
  {
    "name": "multi_dispatch",
    "inputs": [
      "ctx: Context < MultiDispatch >",
      "base_lamports: u64",
      "loop_count: u8"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let bump = * ctx . bumps . get (\"depot\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 13,
        "label": "let seeds : & [& [u8]] = & [b\"depot\" , ctx . accounts . supervisor . key . as_ref () , & ctx . accounts . depot . batch . to_le_bytes () , & [bump] ,] ;"
      },
      {
        "id": 14,
        "label": "let mut amounts : [u64 ; 8] = [0 ; 8] ;"
      },
      {
        "id": 15,
        "label": "let mut rolling = base_lamports . rotate_left (1) . wrapping_add (7) ;"
      },
      {
        "id": 16,
        "label": "for i in 0 .. amounts . len () { amounts [i] = (rolling % base_lamports . saturating_add (97)) . max (1) ; rolling = rolling . rotate_right (1) . wrapping_mul (3) . wrapping_add (9) ; }"
      },
      {
        "id": 17,
        "label": "amounts [i] = (rolling % base_lamports . saturating_add (97)) . max (1) ;"
      },
      {
        "id": 18,
        "label": "rolling = rolling . rotate_right (1) . wrapping_mul (3) . wrapping_add (9) ;"
      },
      {
        "id": 19,
        "label": "let mut idx : [usize ; 8] = [0 , 1 , 2 , 3 , 4 , 5 , 6 , 7] ;"
      },
      {
        "id": 20,
        "label": "let mut pos = idx . len () ;"
      },
      {
        "id": 21,
        "label": "loop { if pos == 0 { break ; } pos -= 1 ; let r = (rolling ^ (pos as u64 * 131)) . rotate_left (2) as usize ; let pick = r % (pos + 1) ; let tmp = idx [pos] ; idx [pos] = idx [pick] ; idx [pick] = tmp ; rolling = rolling . rotate_left (3) . wrapping_add (31) ; }"
      },
      {
        "id": 22,
        "label": "if pos == 0 { break ; }"
      },
      {
        "id": 23,
        "label": "break ;"
      },
      {
        "id": 24,
        "label": "pos -= 1 ;"
      },
      {
        "id": 25,
        "label": "let r = (rolling ^ (pos as u64 * 131)) . rotate_left (2) as usize ;"
      },
      {
        "id": 26,
        "label": "let pick = r % (pos + 1) ;"
      },
      {
        "id": 27,
        "label": "let tmp = idx [pos] ;"
      },
      {
        "id": 28,
        "label": "idx [pos] = idx [pick] ;"
      },
      {
        "id": 29,
        "label": "idx [pick] = tmp ;"
      },
      {
        "id": 30,
        "label": "rolling = rolling . rotate_left (3) . wrapping_add (31) ;"
      },
      {
        "id": 31,
        "label": "let mut sent = 0u64 ;"
      },
      {
        "id": 32,
        "label": "let mut rounds = 0u8 ;"
      },
      {
        "id": 33,
        "label": "for k in 0 .. idx . len () { if rounds >= loop_count { break ; } let a = amounts [idx [k]] ; let ix = system_instruction :: transfer (& ctx . accounts . depot . key () , & ctx . accounts . receiver . key () , a ,) ; invoke_signed (& ix , & [ctx . accounts . depot . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ; sent = sent . saturating_add (a) ; rounds = rounds . saturating_add (1) ; }"
      },
      {
        "id": 34,
        "label": "if rounds >= loop_count { break ; }"
      },
      {
        "id": 35,
        "label": "break ;"
      },
      {
        "id": 36,
        "label": "let a = amounts [idx [k]] ;"
      },
      {
        "id": 37,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . depot . key () , & ctx . accounts . receiver . key () , a ,) ;"
      },
      {
        "id": 38,
        "label": "invoke_signed (& ix , & [ctx . accounts . depot . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 39,
        "label": "sent = sent . saturating_add (a) ;"
      },
      {
        "id": 40,
        "label": "rounds = rounds . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "let mut cursor = 0usize ;"
      },
      {
        "id": 42,
        "label": "loop { if rounds >= loop_count { break ; } if cursor >= idx . len () { cursor = 0 ; } let a = amounts [idx [cursor]] . rotate_left (1) . wrapping_add (3) ; let ix = system_instruction :: transfer (& ctx . accounts . depot . key () , & ctx . accounts . receiver . key () , a ,) ; invoke_signed (& ix , & [ctx . accounts . depot . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ; sent = sent . saturating_add (a) ; rounds = rounds . saturating_add (1) ; cursor = cursor . saturating_add (1) ; }"
      },
      {
        "id": 43,
        "label": "if rounds >= loop_count { break ; }"
      },
      {
        "id": 44,
        "label": "break ;"
      },
      {
        "id": 45,
        "label": "if cursor >= idx . len () { cursor = 0 ; }"
      },
      {
        "id": 46,
        "label": "cursor = 0 ;"
      },
      {
        "id": 47,
        "label": "let a = amounts [idx [cursor]] . rotate_left (1) . wrapping_add (3) ;"
      },
      {
        "id": 48,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . depot . key () , & ctx . accounts . receiver . key () , a ,) ;"
      },
      {
        "id": 49,
        "label": "invoke_signed (& ix , & [ctx . accounts . depot . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 50,
        "label": "sent = sent . saturating_add (a) ;"
      },
      {
        "id": 51,
        "label": "rounds = rounds . saturating_add (1) ;"
      },
      {
        "id": 52,
        "label": "cursor = cursor . saturating_add (1) ;"
      },
      {
        "id": 53,
        "label": "let mut digest = 0u64 ;"
      },
      {
        "id": 54,
        "label": "for v in amounts { digest = digest . rotate_left (3) ^ v . wrapping_mul (131) ; digest = digest . wrapping_add (37) ; }"
      },
      {
        "id": 55,
        "label": "digest = digest . rotate_left (3) ^ v . wrapping_mul (131) ;"
      },
      {
        "id": 56,
        "label": "digest = digest . wrapping_add (37) ;"
      },
      {
        "id": 57,
        "label": "require ! (digest != 0 , E :: Digest) ;"
      },
      {
        "id": 58,
        "label": "require ! (sent > 0 , E :: SentZero) ;"
      },
      {
        "id": 59,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: bump"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: bump"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: rolling"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: rolling"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: pos"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: rolling"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: pos"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: rolling"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: pos"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: r"
      },
      {
        "from": 15,
        "to": 25,
        "label": "data_dep: rolling"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: pos"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: pick"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: r"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: pos"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: tmp"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: pos"
      },
      {
        "from": 20,
        "to": 28,
        "label": "data_dep: pos"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: pick"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: pick"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: tmp"
      },
      {
        "from": 15,
        "to": 30,
        "label": "data_dep: rolling"
      },
      {
        "from": 15,
        "to": 30,
        "label": "data_dep: rolling"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: sent"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: rounds"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: rounds"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: sent"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: sent"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: rounds"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: rounds"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: rounds"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: a"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: ix"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 37,
        "to": 38,
        "label": "data_dep: ix"
      },
      {
        "from": 31,
        "to": 39,
        "label": "data_dep: sent"
      },
      {
        "from": 31,
        "to": 39,
        "label": "data_dep: sent"
      },
      {
        "from": 36,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 40,
        "label": "data_dep: rounds"
      },
      {
        "from": 32,
        "to": 40,
        "label": "data_dep: rounds"
      },
      {
        "from": 41,
        "to": 41,
        "label": "def: cursor"
      },
      {
        "from": 32,
        "to": 42,
        "label": "data_dep: rounds"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: cursor"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: a"
      },
      {
        "from": 37,
        "to": 42,
        "label": "data_dep: ix"
      },
      {
        "from": 31,
        "to": 42,
        "label": "data_dep: sent"
      },
      {
        "from": 31,
        "to": 42,
        "label": "data_dep: sent"
      },
      {
        "from": 36,
        "to": 42,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 42,
        "label": "data_dep: rounds"
      },
      {
        "from": 32,
        "to": 42,
        "label": "data_dep: rounds"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 42,
        "label": "data_dep: cursor"
      },
      {
        "from": 32,
        "to": 43,
        "label": "data_dep: rounds"
      },
      {
        "from": 41,
        "to": 45,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 45,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 46,
        "label": "data_dep: cursor"
      },
      {
        "from": 47,
        "to": 47,
        "label": "def: a"
      },
      {
        "from": 41,
        "to": 47,
        "label": "data_dep: cursor"
      },
      {
        "from": 48,
        "to": 48,
        "label": "def: ix"
      },
      {
        "from": 47,
        "to": 48,
        "label": "data_dep: a"
      },
      {
        "from": 48,
        "to": 49,
        "label": "data_dep: ix"
      },
      {
        "from": 31,
        "to": 50,
        "label": "data_dep: sent"
      },
      {
        "from": 31,
        "to": 50,
        "label": "data_dep: sent"
      },
      {
        "from": 47,
        "to": 50,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 51,
        "label": "data_dep: rounds"
      },
      {
        "from": 32,
        "to": 51,
        "label": "data_dep: rounds"
      },
      {
        "from": 41,
        "to": 52,
        "label": "data_dep: cursor"
      },
      {
        "from": 41,
        "to": 52,
        "label": "data_dep: cursor"
      },
      {
        "from": 53,
        "to": 53,
        "label": "def: digest"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 56,
        "label": "data_dep: digest"
      },
      {
        "from": 53,
        "to": 56,
        "label": "data_dep: digest"
      }
    ]
  }
]