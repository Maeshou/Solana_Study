[
  {
    "name": "define_territory",
    "inputs": [
      "ctx: Context < DefineTerritory >",
      "coords: TerritoryCoordinates",
      "base_daily: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let atlas = & mut ctx . accounts . territory ;"
      },
      {
        "id": 2,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "let area = coords . area () ;"
      },
      {
        "id": 4,
        "label": "require ! (area >= 100 , ErrorCode :: TooSmall) ;"
      },
      {
        "id": 5,
        "label": "require ! (area <= 10_000 , ErrorCode :: TooLarge) ;"
      },
      {
        "id": 6,
        "label": "atlas . owner = ctx . accounts . guild_master . key () ;"
      },
      {
        "id": 7,
        "label": "atlas . coords = coords . clone () ;"
      },
      {
        "id": 8,
        "label": "atlas . created_at = now ;"
      },
      {
        "id": 9,
        "label": "atlas . size = area ;"
      },
      {
        "id": 10,
        "label": "atlas . tier = tier_from_area (area) ;"
      },
      {
        "id": 11,
        "label": "atlas . daily_baseline = blended_daily (coords . clone () , base_daily , & atlas . tier) ;"
      },
      {
        "id": 12,
        "label": "atlas . shuffle_seed = mix_seed (now , area) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: atlas"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: area"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: atlas"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: atlas"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: atlas"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: atlas"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: now"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: area"
      }
    ]
  },
  {
    "name": "tier_from_area",
    "inputs": [
      "area: u32"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let mut t = TerritoryTier :: Outpost ;"
      },
      {
        "id": 16,
        "label": "if area >= 2_000 { t = TerritoryTier :: City ; }"
      },
      {
        "id": 17,
        "label": "t = TerritoryTier :: City ;"
      },
      {
        "id": 18,
        "label": "if area >= 5_000 { t = TerritoryTier :: Capital ; }"
      },
      {
        "id": 19,
        "label": "t = TerritoryTier :: Capital ;"
      },
      {
        "id": 20,
        "label": "t"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: t"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "blended_daily",
    "inputs": [
      "coords: TerritoryCoordinates",
      "base: u32",
      "tier: & TerritoryTier"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let mut daily = base . max (10) ;"
      },
      {
        "id": 23,
        "label": "daily = daily . saturating_add (coord_bias (coords)) ;"
      },
      {
        "id": 24,
        "label": "daily = daily . saturating_add (tier_bias (tier)) ;"
      },
      {
        "id": 25,
        "label": "daily"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: daily"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: daily"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: daily"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: daily"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: daily"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: daily"
      }
    ]
  },
  {
    "name": "coord_bias",
    "inputs": [
      "c: TerritoryCoordinates"
    ],
    "nodes": [
      {
        "id": 26,
        "label": "Entry"
      },
      {
        "id": 27,
        "label": "let bias1 = (c . north_boundary as i64 - c . south_boundary as i64) . unsigned_abs () as u32 ;"
      },
      {
        "id": 28,
        "label": "let bias2 = (c . east_boundary as i64 - c . west_boundary as i64) . unsigned_abs () as u32 ;"
      },
      {
        "id": 29,
        "label": "(bias1 % 13) . saturating_add (bias2 % 7)"
      }
    ],
    "edges": [
      {
        "from": 27,
        "to": 27,
        "label": "def: bias1"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: bias2"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: bias1"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: bias2"
      }
    ]
  },
  {
    "name": "tier_bias",
    "inputs": [
      "t: & TerritoryTier"
    ],
    "nodes": [
      {
        "id": 30,
        "label": "Entry"
      },
      {
        "id": 31,
        "label": "let mut s = 0u32 ;"
      },
      {
        "id": 32,
        "label": "if matches ! (t , TerritoryTier :: Capital) { s = s . saturating_add (200) ; }"
      },
      {
        "id": 33,
        "label": "s = s . saturating_add (200) ;"
      },
      {
        "id": 34,
        "label": "if matches ! (t , TerritoryTier :: City) { s = s . saturating_add (90) ; }"
      },
      {
        "id": 35,
        "label": "s = s . saturating_add (90) ;"
      },
      {
        "id": 36,
        "label": "if matches ! (t , TerritoryTier :: Outpost) { s = s . saturating_add (30) ; }"
      },
      {
        "id": 37,
        "label": "s = s . saturating_add (30) ;"
      },
      {
        "id": 38,
        "label": "s"
      }
    ],
    "edges": [
      {
        "from": 31,
        "to": 31,
        "label": "def: s"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 31,
        "to": 38,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "mix_seed",
    "inputs": [
      "now: i64",
      "area: u32"
    ],
    "nodes": [
      {
        "id": 39,
        "label": "Entry"
      },
      {
        "id": 40,
        "label": "((now as u64) . rotate_left (11)) ^ ((area as u64) . rotate_left (3))"
      }
    ],
    "edges": []
  }
]