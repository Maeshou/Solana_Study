[
  {
    "name": "deposit",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . player . key () , & ctx . accounts . escrow . key () , amount ,) ;"
      },
      {
        "id": 2,
        "label": "invoke (& ix , & [ctx . accounts . player . to_account_info () , ctx . accounts . escrow . to_account_info () , ctx . accounts . system_program . to_account_info () ,] ,) ? ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . bank_state . total_locked = ctx . accounts . bank_state . total_locked . saturating_add (amount) ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "refund",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "require ! (ctx . accounts . operator . is_signer , BankError :: OperatorRequired) ;"
      },
      {
        "id": 7,
        "label": "let bal = * * ctx . accounts . escrow . to_account_info () . lamports . borrow () ;"
      },
      {
        "id": 8,
        "label": "require ! (bal >= amount , BankError :: InsufficientEscrow) ;"
      },
      {
        "id": 9,
        "label": "* * ctx . accounts . escrow . to_account_info () . try_borrow_mut_lamports () ? -= amount ;"
      },
      {
        "id": 10,
        "label": "* * ctx . accounts . recipient . to_account_info () . try_borrow_mut_lamports () ? += amount ;"
      },
      {
        "id": 11,
        "label": "ctx . accounts . bank_state . total_locked = ctx . accounts . bank_state . total_locked . saturating_sub (amount) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  }
]