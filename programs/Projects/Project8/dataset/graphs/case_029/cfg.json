[
  {
    "name": "init_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . leader = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "g . level = level . saturating_add (1) ;"
      },
      {
        "id": 4,
        "label": "g . exp = 0 ;"
      },
      {
        "id": 5,
        "label": "let mut trials = vec ! [5u64 , 9 , 13 , 27] ;"
      },
      {
        "id": 6,
        "label": "Loop Start"
      },
      {
        "id": 7,
        "label": "* t = (* t) . wrapping_mul (g . level) . rotate_left (1) ;"
      },
      {
        "id": 8,
        "label": "g . exp = g . exp . saturating_add ((* t % 21) as u64) ;"
      },
      {
        "id": 9,
        "label": "Loop End"
      },
      {
        "id": 10,
        "label": "if statement"
      },
      {
        "id": 11,
        "label": "predicate"
      },
      {
        "id": 12,
        "label": "g . exp > 100"
      },
      {
        "id": 13,
        "label": "True body"
      },
      {
        "id": 14,
        "label": "g . level = g . level . saturating_add ((g . exp % 7) as u64) ;"
      },
      {
        "id": 15,
        "label": "g . exp = g . exp . wrapping_sub (77) ;"
      },
      {
        "id": 16,
        "label": "False body"
      },
      {
        "id": 17,
        "label": "No-op"
      },
      {
        "id": 18,
        "label": "merge"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 6,
        "to": 9,
        "label": "for"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "predicate"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 10,
        "to": 13,
        "label": "true"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 10,
        "to": 16,
        "label": "false"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 15,
        "to": 18,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      }
    ]
  },
  {
    "name": "payout_member",
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . guild . key () , & ctx . accounts . member . key () , amount) ;"
      },
      {
        "id": 22,
        "label": "let bump = * ctx . bumps . get (\"guild\") . ok_or (error ! (GuildErr :: MissingBump)) ? ;"
      },
      {
        "id": 23,
        "label": "let seeds : & [& [u8]] = & [b\"guild\" , ctx . accounts . leader . key . as_ref () , & [bump] ,] ;"
      },
      {
        "id": 24,
        "label": "invoke_signed (& ix , & [ctx . accounts . guild . to_account_info () , ctx . accounts . member . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 25,
        "label": "emit ! (MemberPaid { member : ctx . accounts . member . key () , reward : amount }) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      }
    ]
  }
]