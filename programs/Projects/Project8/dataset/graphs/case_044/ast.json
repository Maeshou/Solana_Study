[
  {
    "name": "enchant_equipment",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < EnchantEquipment >",
      "scroll_id: u32"
    ],
    "attributes": [],
    "body": [
      "let equipment = & mut ctx . accounts . equipment_nft ;",
      "let inventory = & mut ctx . accounts . player_inventory ;",
      "require ! (equipment . enchant_level < 10 , GameError :: MaxEnchantLevelReached) ;",
      "let mut scroll_found = false ;",
      "let mut scroll_index = 0 ;",
      "for (index , item) in inventory . items . iter () . enumerate ()",
      "{",
      "if item . item_id == scroll_id",
      "{",
      "if item . quantity > 0 { scroll_found = true ;",
      "scroll_index = index ;",
      "} }",
      "}",
      "require ! (scroll_found , GameError :: ScrollNotFound) ;",
      "inventory . items [scroll_index] . quantity -= 1 ;",
      "let success_chance = 100 - (equipment . enchant_level * 8) ;",
      "let clock = Clock :: get () ? ;",
      "let random_value = (clock . slot % 100) as u8 ;",
      "if random_value < success_chance",
      "{",
      "equipment . enchant_level += 1 ;",
      "equipment . bonus_stats += 5 ;",
      "msg ! (\"Enchantment successful! New enchant level: +",
      "{",
      "}\" , equipment . enchant_level) ;",
      "} else",
      "{",
      "if equipment . enchant_level > 5 { equipment . enchant_level -= 1 ;",
      "equipment . bonus_stats -= 5 ;",
      "msg ! (\"Enchantment failed! Enchant level decreased to +",
      "{",
      "}.\" , equipment . enchant_level) ;",
      "} else",
      "{",
      "msg ! (\"Enchantment failed! No change in enchant level.\") ;",
      "}",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "EnchantEquipment",
    "node_type": "struct",
    "fields": [
      {
        "name": "equipment_nft",
        "attribute": "# [account (mut , seeds = [b\"equipment\" , owner . key () . as_ref () , equipment_nft . mint . as_ref ()] , bump = equipment_nft . bump)]",
        "field_type": "Account < 'info , EquipmentNft >"
      },
      {
        "name": "player_inventory",
        "attribute": "# [account (mut , seeds = [b\"inventory\" , owner . key () . as_ref ()] , bump = player_inventory . bump)]",
        "field_type": "Account < 'info , PlayerInventory >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EquipmentNft",
    "node_type": "struct",
    "fields": [
      {
        "name": "mint",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "enchant_level",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "bonus_stats",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PlayerInventory",
    "node_type": "struct",
    "fields": [
      {
        "name": "items",
        "attribute": null,
        "field_type": "Vec < InventoryItem >"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InventoryItem",
    "node_type": "struct",
    "fields": [
      {
        "name": "item_id",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "quantity",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]