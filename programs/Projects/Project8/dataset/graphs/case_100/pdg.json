[
  {
    "name": "define_territory",
    "inputs": [
      "ctx: Context < DefineTerritory >",
      "coords: TerritoryCoordinates",
      "base_daily: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let atlas = & mut ctx . accounts . territory ;"
      },
      {
        "id": 2,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "let area = coords . area () ;"
      },
      {
        "id": 4,
        "label": "require ! (area >= 100 , ErrorCode :: TooSmall) ;"
      },
      {
        "id": 5,
        "label": "require ! (area <= 10_000 , ErrorCode :: TooLarge) ;"
      },
      {
        "id": 6,
        "label": "atlas . owner = ctx . accounts . guild_master . key () ;"
      },
      {
        "id": 7,
        "label": "atlas . coords = coords . clone () ;"
      },
      {
        "id": 8,
        "label": "atlas . created_at = now ;"
      },
      {
        "id": 9,
        "label": "atlas . size = area ;"
      },
      {
        "id": 10,
        "label": "atlas . tier = TerritoryTier :: Outpost ;"
      },
      {
        "id": 11,
        "label": "if area >= 2_000 { atlas . tier = TerritoryTier :: City ; }"
      },
      {
        "id": 12,
        "label": "atlas . tier = TerritoryTier :: City ;"
      },
      {
        "id": 13,
        "label": "if area >= 5_000 { atlas . tier = TerritoryTier :: Capital ; }"
      },
      {
        "id": 14,
        "label": "atlas . tier = TerritoryTier :: Capital ;"
      },
      {
        "id": 15,
        "label": "let mut daily = base_daily . max (10) ;"
      },
      {
        "id": 16,
        "label": "let bias1 = (coords . north_boundary as i64 - coords . south_boundary as i64) . unsigned_abs () as u32 ;"
      },
      {
        "id": 17,
        "label": "let bias2 = (coords . east_boundary as i64 - coords . west_boundary as i64) . unsigned_abs () as u32 ;"
      },
      {
        "id": 18,
        "label": "daily = daily . saturating_add ((bias1 % 13) + (bias2 % 7)) ;"
      },
      {
        "id": 19,
        "label": "if matches_capital (& atlas . tier) { daily = daily . saturating_add (200) ; }"
      },
      {
        "id": 20,
        "label": "daily = daily . saturating_add (200) ;"
      },
      {
        "id": 21,
        "label": "if matches_city (& atlas . tier) { daily = daily . saturating_add (90) ; }"
      },
      {
        "id": 22,
        "label": "daily = daily . saturating_add (90) ;"
      },
      {
        "id": 23,
        "label": "if matches_outpost (& atlas . tier) { daily = daily . saturating_add (30) ; }"
      },
      {
        "id": 24,
        "label": "daily = daily . saturating_add (30) ;"
      },
      {
        "id": 25,
        "label": "atlas . daily_baseline = daily ;"
      },
      {
        "id": 26,
        "label": "let seed_mix = ((now as u64) . rotate_left (11)) ^ ((area as u64) . rotate_left (3)) ;"
      },
      {
        "id": 27,
        "label": "atlas . shuffle_seed = seed_mix ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: atlas"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: area"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: atlas"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: atlas"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: atlas"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: atlas"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: atlas"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: atlas"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: daily"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: bias1"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: bias2"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: daily"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: bias1"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: bias2"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: atlas"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: atlas"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 23,
        "label": "data_dep: atlas"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: daily"
      },
      {
        "from": 15,
        "to": 24,
        "label": "data_dep: daily"
      },
      {
        "from": 1,
        "to": 25,
        "label": "data_dep: atlas"
      },
      {
        "from": 15,
        "to": 25,
        "label": "data_dep: daily"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: seed_mix"
      },
      {
        "from": 2,
        "to": 26,
        "label": "data_dep: now"
      },
      {
        "from": 3,
        "to": 26,
        "label": "data_dep: area"
      },
      {
        "from": 1,
        "to": 27,
        "label": "data_dep: atlas"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: seed_mix"
      }
    ]
  },
  {
    "name": "matches_capital",
    "inputs": [
      "t: & TerritoryTier"
    ],
    "nodes": [
      {
        "id": 29,
        "label": "Entry"
      },
      {
        "id": 30,
        "label": "matches ! (t , TerritoryTier :: Capital)"
      }
    ],
    "edges": []
  },
  {
    "name": "matches_city",
    "inputs": [
      "t: & TerritoryTier"
    ],
    "nodes": [
      {
        "id": 31,
        "label": "Entry"
      },
      {
        "id": 32,
        "label": "matches ! (t , TerritoryTier :: City)"
      }
    ],
    "edges": []
  },
  {
    "name": "matches_outpost",
    "inputs": [
      "t: & TerritoryTier"
    ],
    "nodes": [
      {
        "id": 33,
        "label": "Entry"
      },
      {
        "id": 34,
        "label": "matches ! (t , TerritoryTier :: Outpost)"
      }
    ],
    "edges": []
  }
]