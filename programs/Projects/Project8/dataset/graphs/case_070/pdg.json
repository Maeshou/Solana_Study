[
  {
    "name": "create_instance",
    "inputs": [
      "ctx: Context < CreateInstance >",
      "difficulty: DungeonDifficulty",
      "party: Vec < PartyMember >",
      "entrance_fee: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 2,
        "label": "let size = party . len () ;"
      },
      {
        "id": 3,
        "label": "require ! (size >= 1 , DungeonError :: PartyTooSmall) ;"
      },
      {
        "id": 4,
        "label": "require ! (size <= 6 , DungeonError :: PartyTooLarge) ;"
      },
      {
        "id": 5,
        "label": "let mut rec_min : u32 = 1 ;"
      },
      {
        "id": 6,
        "label": "let mut rec_max : u32 = 10 ;"
      },
      {
        "id": 7,
        "label": "let mut time_limit : u32 = 1800 ;"
      },
      {
        "id": 8,
        "label": "let mut base_xp : u32 = 500 ;"
      },
      {
        "id": 9,
        "label": "let mut base_mobs : u32 = 15 ;"
      },
      {
        "id": 10,
        "label": "if is_intermediate (difficulty) { rec_min = 11 ; rec_max = 25 ; time_limit = 2700 ; base_xp = 1200 ; base_mobs = 25 ; }"
      },
      {
        "id": 11,
        "label": "rec_min = 11 ;"
      },
      {
        "id": 12,
        "label": "rec_max = 25 ;"
      },
      {
        "id": 13,
        "label": "time_limit = 2700 ;"
      },
      {
        "id": 14,
        "label": "base_xp = 1200 ;"
      },
      {
        "id": 15,
        "label": "base_mobs = 25 ;"
      },
      {
        "id": 16,
        "label": "if is_advanced (difficulty) { rec_min = 26 ; rec_max = 40 ; time_limit = 3600 ; base_xp = 2500 ; base_mobs = 35 ; }"
      },
      {
        "id": 17,
        "label": "rec_min = 26 ;"
      },
      {
        "id": 18,
        "label": "rec_max = 40 ;"
      },
      {
        "id": 19,
        "label": "time_limit = 3600 ;"
      },
      {
        "id": 20,
        "label": "base_xp = 2500 ;"
      },
      {
        "id": 21,
        "label": "base_mobs = 35 ;"
      },
      {
        "id": 22,
        "label": "if is_expert (difficulty) { rec_min = 41 ; rec_max = 60 ; time_limit = 4500 ; base_xp = 4000 ; base_mobs = 50 ; }"
      },
      {
        "id": 23,
        "label": "rec_min = 41 ;"
      },
      {
        "id": 24,
        "label": "rec_max = 60 ;"
      },
      {
        "id": 25,
        "label": "time_limit = 4500 ;"
      },
      {
        "id": 26,
        "label": "base_xp = 4000 ;"
      },
      {
        "id": 27,
        "label": "base_mobs = 50 ;"
      },
      {
        "id": 28,
        "label": "if is_legendary (difficulty) { rec_min = 61 ; rec_max = 100 ; time_limit = 5400 ; base_xp = 7500 ; base_mobs = 75 ; }"
      },
      {
        "id": 29,
        "label": "rec_min = 61 ;"
      },
      {
        "id": 30,
        "label": "rec_max = 100 ;"
      },
      {
        "id": 31,
        "label": "time_limit = 5400 ;"
      },
      {
        "id": 32,
        "label": "base_xp = 7500 ;"
      },
      {
        "id": 33,
        "label": "base_mobs = 75 ;"
      },
      {
        "id": 34,
        "label": "let header = & mut ctx . accounts . header ;"
      },
      {
        "id": 35,
        "label": "header . instance_creator = ctx . accounts . party_leader . key () ;"
      },
      {
        "id": 36,
        "label": "header . creation_time = now ;"
      },
      {
        "id": 37,
        "label": "header . difficulty_level = difficulty ;"
      },
      {
        "id": 38,
        "label": "header . party_members = party ;"
      },
      {
        "id": 39,
        "label": "header . entrance_fee = entrance_fee ;"
      },
      {
        "id": 40,
        "label": "header . recommended_level_range = (rec_min , rec_max) ;"
      },
      {
        "id": 41,
        "label": "header . completion_time_limit = time_limit ;"
      },
      {
        "id": 42,
        "label": "header . base_experience_reward = base_xp ;"
      },
      {
        "id": 43,
        "label": "header . base_monster_count = base_mobs ;"
      },
      {
        "id": 44,
        "label": "header . completion_status = CompletionStatus :: InProgress ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: now"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: size"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: header"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 36,
        "label": "data_dep: header"
      },
      {
        "from": 1,
        "to": 36,
        "label": "data_dep: now"
      },
      {
        "from": 34,
        "to": 37,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 38,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 39,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 40,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 41,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 42,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 43,
        "label": "data_dep: header"
      },
      {
        "from": 34,
        "to": 44,
        "label": "data_dep: header"
      }
    ]
  },
  {
    "name": "is_intermediate",
    "inputs": [
      "d: DungeonDifficulty"
    ],
    "nodes": [
      {
        "id": 46,
        "label": "Entry"
      },
      {
        "id": 47,
        "label": "if let DungeonDifficulty :: Intermediate = d { return true }"
      },
      {
        "id": 48,
        "label": "return true"
      },
      {
        "id": 49,
        "label": "false"
      }
    ],
    "edges": []
  },
  {
    "name": "is_advanced",
    "inputs": [
      "d: DungeonDifficulty"
    ],
    "nodes": [
      {
        "id": 50,
        "label": "Entry"
      },
      {
        "id": 51,
        "label": "if let DungeonDifficulty :: Advanced = d { return true }"
      },
      {
        "id": 52,
        "label": "return true"
      },
      {
        "id": 53,
        "label": "false"
      }
    ],
    "edges": []
  },
  {
    "name": "is_expert",
    "inputs": [
      "d: DungeonDifficulty"
    ],
    "nodes": [
      {
        "id": 54,
        "label": "Entry"
      },
      {
        "id": 55,
        "label": "if let DungeonDifficulty :: Expert = d { return true }"
      },
      {
        "id": 56,
        "label": "return true"
      },
      {
        "id": 57,
        "label": "false"
      }
    ],
    "edges": []
  },
  {
    "name": "is_legendary",
    "inputs": [
      "d: DungeonDifficulty"
    ],
    "nodes": [
      {
        "id": 58,
        "label": "Entry"
      },
      {
        "id": 59,
        "label": "if let DungeonDifficulty :: Legendary = d { return true }"
      },
      {
        "id": 60,
        "label": "return true"
      },
      {
        "id": 61,
        "label": "false"
      }
    ],
    "edges": []
  }
]