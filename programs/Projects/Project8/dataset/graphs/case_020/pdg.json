[
  {
    "name": "init_jar",
    "inputs": [
      "ctx: Context < InitJar >",
      "tag: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let j = & mut ctx . accounts . jar ;"
      },
      {
        "id": 2,
        "label": "j . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "j . tag = tag . rotate_left (1) . wrapping_add (21) ;"
      },
      {
        "id": 4,
        "label": "j . mix = j . tag . rotate_right (2) . wrapping_add (7) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: j"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: j"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: j"
      }
    ]
  },
  {
    "name": "tip_burst",
    "inputs": [
      "ctx: Context < TipBurst >",
      "base: u64",
      "count: u8"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let bump = * ctx . bumps . get (\"jar\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 8,
        "label": "let seeds : & [& [u8]] = & [b\"jar\" , ctx . accounts . owner . key . as_ref () , & ctx . accounts . jar . tag . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 9,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 10,
        "label": "let mut amt = base . rotate_left (1) . wrapping_add (5) ;"
      },
      {
        "id": 11,
        "label": "while i < count { let ix = system_instruction :: transfer (& ctx . accounts . jar . key () , & ctx . accounts . creator . key () , amt) ; invoke_signed (& ix , & [ctx . accounts . jar . to_account_info () , ctx . accounts . creator . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ; amt = amt . rotate_right (1) . wrapping_mul (2) . wrapping_add (3) ; if amt % 2 > 0 { amt = amt . wrapping_add (4) ; } i = i . saturating_add (1) ; }"
      },
      {
        "id": 12,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . jar . key () , & ctx . accounts . creator . key () , amt) ;"
      },
      {
        "id": 13,
        "label": "invoke_signed (& ix , & [ctx . accounts . jar . to_account_info () , ctx . accounts . creator . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 14,
        "label": "amt = amt . rotate_right (1) . wrapping_mul (2) . wrapping_add (3) ;"
      },
      {
        "id": 15,
        "label": "if amt % 2 > 0 { amt = amt . wrapping_add (4) ; }"
      },
      {
        "id": 16,
        "label": "amt = amt . wrapping_add (4) ;"
      },
      {
        "id": 17,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: bump"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: bump"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: i"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: amt"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: amt"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: i"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: ix"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: amt"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: ix"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: amt"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: amt"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: i"
      }
    ]
  }
]