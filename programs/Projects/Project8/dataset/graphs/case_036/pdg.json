[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "tier_seed: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . leader = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "g . tier = tier_seed . rotate_left (2) . wrapping_add (17) ;"
      },
      {
        "id": 4,
        "label": "g . power = 1 ;"
      },
      {
        "id": 5,
        "label": "let mut rolling = g . tier . rotate_right (1) . wrapping_add (9) ;"
      },
      {
        "id": 6,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 7,
        "label": "while i < 5 { rolling = rolling . rotate_left (1) . wrapping_mul (3) . wrapping_add (11 + i as u64) ; let gain = (rolling % 23) as u32 + 1 ; g . power = g . power . saturating_add (gain) ; i += 1 ; }"
      },
      {
        "id": 8,
        "label": "rolling = rolling . rotate_left (1) . wrapping_mul (3) . wrapping_add (11 + i as u64) ;"
      },
      {
        "id": 9,
        "label": "let gain = (rolling % 23) as u32 + 1 ;"
      },
      {
        "id": 10,
        "label": "g . power = g . power . saturating_add (gain) ;"
      },
      {
        "id": 11,
        "label": "i += 1 ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: g"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: rolling"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: i"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: rolling"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: rolling"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: rolling"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: rolling"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: rolling"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: gain"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: rolling"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: gain"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "pay_from_guild",
    "inputs": [
      "ctx: Context < PayFromGuild >",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let bump = * ctx . bumps . get (\"vault\") . ok_or (error ! (GuildErr :: MissingBump)) ? ;"
      },
      {
        "id": 15,
        "label": "let seeds : & [& [u8]] = & [b\"vault\" , ctx . accounts . leader . key . as_ref () , & ctx . accounts . guild . tier . to_le_bytes () , & [bump] ,] ;"
      },
      {
        "id": 16,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 17,
        "label": "let portion = (lamports % 97) as u32 + 3 ;"
      },
      {
        "id": 18,
        "label": "g . power = g . power . saturating_add (portion) ;"
      },
      {
        "id": 19,
        "label": "if g . power > 1_000_000 { let dec = (g . power % 997) + 13 ; g . power = g . power . saturating_sub (dec) ; }"
      },
      {
        "id": 20,
        "label": "let dec = (g . power % 997) + 13 ;"
      },
      {
        "id": 21,
        "label": "g . power = g . power . saturating_sub (dec) ;"
      },
      {
        "id": 22,
        "label": "let mut steps = 0u8 ;"
      },
      {
        "id": 23,
        "label": "while steps < 3 { g . power = g . power . saturating_add (((g . tier . rotate_left (steps as u32) % 29) as u32) + 2) ; steps += 1 ; }"
      },
      {
        "id": 24,
        "label": "g . power = g . power . saturating_add (((g . tier . rotate_left (steps as u32) % 29) as u32) + 2) ;"
      },
      {
        "id": 25,
        "label": "steps += 1 ;"
      },
      {
        "id": 26,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . vault . key () , & ctx . accounts . receiver . key () , lamports) ;"
      },
      {
        "id": 27,
        "label": "invoke_signed (& ix , & [ctx . accounts . vault . to_account_info () , ctx . accounts . receiver . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 28,
        "label": "emit ! (GuildPaid { to : ctx . accounts . receiver . key () , amount : lamports }) ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: bump"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: bump"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: g"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: portion"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: portion"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: dec"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: dec"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: steps"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: steps"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: steps"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: steps"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: steps"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: steps"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: ix"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: ix"
      }
    ]
  }
]