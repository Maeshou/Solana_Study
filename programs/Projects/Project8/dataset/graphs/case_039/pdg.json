[
  {
    "name": "craft_new_item",
    "inputs": [
      "ctx: Context < CraftNewItem >",
      "recipe_id: u32",
      "amount: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let inventory = & mut ctx . accounts . player_inventory ;"
      },
      {
        "id": 2,
        "label": "let recipe = & ctx . accounts . crafting_recipe ;"
      },
      {
        "id": 3,
        "label": "require ! (recipe . recipe_id == recipe_id , GameError :: InvalidRecipe) ;"
      },
      {
        "id": 4,
        "label": "let mut required_item_count = 0 ;"
      },
      {
        "id": 5,
        "label": "for required_item in recipe . required_items . iter () { let mut found = false ; for owned_item in inventory . items . iter () { if owned_item . item_id == required_item . item_id { if owned_item . quantity >= required_item . quantity * u64 :: from (amount) { found = true ; required_item_count += 1 ; } } } require ! (found , GameError :: InsufficientMaterials) ; }"
      },
      {
        "id": 6,
        "label": "let mut found = false ;"
      },
      {
        "id": 7,
        "label": "for owned_item in inventory . items . iter () { if owned_item . item_id == required_item . item_id { if owned_item . quantity >= required_item . quantity * u64 :: from (amount) { found = true ; required_item_count += 1 ; } } }"
      },
      {
        "id": 8,
        "label": "if owned_item . item_id == required_item . item_id { if owned_item . quantity >= required_item . quantity * u64 :: from (amount) { found = true ; required_item_count += 1 ; } }"
      },
      {
        "id": 9,
        "label": "if owned_item . quantity >= required_item . quantity * u64 :: from (amount) { found = true ; required_item_count += 1 ; }"
      },
      {
        "id": 10,
        "label": "found = true ;"
      },
      {
        "id": 11,
        "label": "required_item_count += 1 ;"
      },
      {
        "id": 12,
        "label": "require ! (found , GameError :: InsufficientMaterials) ;"
      },
      {
        "id": 13,
        "label": "if required_item_count == recipe . required_items . len () { for required_item in recipe . required_items . iter () { for owned_item in inventory . items . iter_mut () { if owned_item . item_id == required_item . item_id { owned_item . quantity -= required_item . quantity * u64 :: from (amount) ; } } } let mut item_added = false ; for owned_item in inventory . items . iter_mut () { if owned_item . item_id == recipe . result_item_id { owned_item . quantity += u64 :: from (recipe . result_item_quantity * amount) ; item_added = true ; } } if ! item_added { inventory . items . push (InventoryItem { item_id : recipe . result_item_id , quantity : u64 :: from (recipe . result_item_quantity * amount) , }) ; } msg ! (\"Successfully crafted item {}!\" , recipe . result_item_id) ; }"
      },
      {
        "id": 14,
        "label": "for required_item in recipe . required_items . iter () { for owned_item in inventory . items . iter_mut () { if owned_item . item_id == required_item . item_id { owned_item . quantity -= required_item . quantity * u64 :: from (amount) ; } } }"
      },
      {
        "id": 15,
        "label": "for owned_item in inventory . items . iter_mut () { if owned_item . item_id == required_item . item_id { owned_item . quantity -= required_item . quantity * u64 :: from (amount) ; } }"
      },
      {
        "id": 16,
        "label": "if owned_item . item_id == required_item . item_id { owned_item . quantity -= required_item . quantity * u64 :: from (amount) ; }"
      },
      {
        "id": 17,
        "label": "owned_item . quantity -= required_item . quantity * u64 :: from (amount) ;"
      },
      {
        "id": 18,
        "label": "let mut item_added = false ;"
      },
      {
        "id": 19,
        "label": "for owned_item in inventory . items . iter_mut () { if owned_item . item_id == recipe . result_item_id { owned_item . quantity += u64 :: from (recipe . result_item_quantity * amount) ; item_added = true ; } }"
      },
      {
        "id": 20,
        "label": "if owned_item . item_id == recipe . result_item_id { owned_item . quantity += u64 :: from (recipe . result_item_quantity * amount) ; item_added = true ; }"
      },
      {
        "id": 21,
        "label": "owned_item . quantity += u64 :: from (recipe . result_item_quantity * amount) ;"
      },
      {
        "id": 22,
        "label": "item_added = true ;"
      },
      {
        "id": 23,
        "label": "if ! item_added { inventory . items . push (InventoryItem { item_id : recipe . result_item_id , quantity : u64 :: from (recipe . result_item_quantity * amount) , }) ; }"
      },
      {
        "id": 24,
        "label": "inventory . items . push (InventoryItem { item_id : recipe . result_item_id , quantity : u64 :: from (recipe . result_item_quantity * amount) , }) ;"
      },
      {
        "id": 25,
        "label": "msg ! (\"Successfully crafted item {}!\" , recipe . result_item_id) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: inventory"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: recipe"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: required_item_count"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: inventory"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: found"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: inventory"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: found"
      },
      {
        "from": 4,
        "to": 7,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: found"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: found"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: found"
      },
      {
        "from": 4,
        "to": 11,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 4,
        "to": 13,
        "label": "data_dep: required_item_count"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: inventory"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: inventory"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: inventory"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 14,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: inventory"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: inventory"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: item_added"
      },
      {
        "from": 1,
        "to": 19,
        "label": "data_dep: inventory"
      },
      {
        "from": 2,
        "to": 19,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 19,
        "label": "data_dep: recipe"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: item_added"
      },
      {
        "from": 2,
        "to": 20,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 20,
        "label": "data_dep: recipe"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: item_added"
      },
      {
        "from": 2,
        "to": 21,
        "label": "data_dep: recipe"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: item_added"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: item_added"
      },
      {
        "from": 1,
        "to": 23,
        "label": "data_dep: inventory"
      },
      {
        "from": 2,
        "to": 23,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 23,
        "label": "data_dep: recipe"
      },
      {
        "from": 1,
        "to": 24,
        "label": "data_dep: inventory"
      },
      {
        "from": 2,
        "to": 24,
        "label": "data_dep: recipe"
      },
      {
        "from": 2,
        "to": 24,
        "label": "data_dep: recipe"
      }
    ]
  }
]