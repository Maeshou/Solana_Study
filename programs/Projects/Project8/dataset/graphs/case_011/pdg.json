[
  {
    "name": "init_bank",
    "inputs": [
      "ctx: Context < InitBank >",
      "season: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . bank ;"
      },
      {
        "id": 2,
        "label": "b . guardian = ctx . accounts . guardian . key () ;"
      },
      {
        "id": 3,
        "label": "b . season = season . rotate_left (2) . wrapping_add (12) ;"
      },
      {
        "id": 4,
        "label": "b . counter = 1 ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "pay_mixed",
    "inputs": [
      "ctx: Context < PayMixed >",
      "lamports: u64",
      "tokens: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let bump = * ctx . bumps . get (\"bank\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 8,
        "label": "let seeds : & [& [u8]] = & [b\"bank\" , ctx . accounts . guardian . key . as_ref () , & ctx . accounts . bank . season . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 9,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . bank . key () , & ctx . accounts . user . key () , lamports) ;"
      },
      {
        "id": 10,
        "label": "invoke_signed (& ix , & [ctx . accounts . bank . to_account_info () , ctx . accounts . user . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 11,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . bank_token . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . bank . to_account_info () , } ;"
      },
      {
        "id": 12,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , & [seeds]) ;"
      },
      {
        "id": 13,
        "label": "token :: transfer (cpi_ctx , tokens) ? ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: bump"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: bump"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: ix"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: ix"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: cpi_accounts"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: cpi_ctx"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: cpi_ctx"
      }
    ]
  }
]