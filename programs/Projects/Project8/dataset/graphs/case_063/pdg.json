[
  {
    "name": "open_escrow",
    "inputs": [
      "ctx: Context < OpenEscrow >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let e = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 2,
        "label": "e . merchant = ctx . accounts . merchant . key () ;"
      },
      {
        "id": 3,
        "label": "e . stable = base . rotate_right (1) . wrapping_add (25) ;"
      },
      {
        "id": 4,
        "label": "e . orders = 2 ;"
      },
      {
        "id": 5,
        "label": "e . grade = 1 ;"
      },
      {
        "id": 6,
        "label": "for (i , v) in [6u64 , 10 , 15 , 21] . iter () . enumerate () { e . stable = e . stable . wrapping_add (v . rotate_left ((i + 1) as u32)) ; }"
      },
      {
        "id": 7,
        "label": "e . stable = e . stable . wrapping_add (v . rotate_left ((i + 1) as u32)) ;"
      },
      {
        "id": 8,
        "label": "for ch in [5u64 , 9 , 14 , 22 , 35] . chunks (2) { let mut s = 0u64 ; for u in ch { s = s . wrapping_add (* u) ; } if s > 18 { e . orders = e . orders . saturating_add (1) ; } e . stable = e . stable . wrapping_add (s) ; }"
      },
      {
        "id": 9,
        "label": "let mut s = 0u64 ;"
      },
      {
        "id": 10,
        "label": "for u in ch { s = s . wrapping_add (* u) ; }"
      },
      {
        "id": 11,
        "label": "s = s . wrapping_add (* u) ;"
      },
      {
        "id": 12,
        "label": "if s > 18 { e . orders = e . orders . saturating_add (1) ; }"
      },
      {
        "id": 13,
        "label": "e . orders = e . orders . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "e . stable = e . stable . wrapping_add (s) ;"
      },
      {
        "id": 15,
        "label": "let mut x = 1u8 ;"
      },
      {
        "id": 16,
        "label": "loop { e . grade = e . grade . saturating_add (1) ; if x > 1 { break ; } e . stable = e . stable . wrapping_add ((x as u64 * 12) . rotate_left (1)) ; x = x . saturating_add (1) ; }"
      },
      {
        "id": 17,
        "label": "e . grade = e . grade . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "if x > 1 { break ; }"
      },
      {
        "id": 19,
        "label": "break ;"
      },
      {
        "id": 20,
        "label": "e . stable = e . stable . wrapping_add ((x as u64 * 12) . rotate_left (1)) ;"
      },
      {
        "id": 21,
        "label": "x = x . saturating_add (1) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: e"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: e"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: e"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: x"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: e"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: x"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: e"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: x"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: x"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: x"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: e"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: x"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: e"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: e"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: x"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: x"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: x"
      }
    ]
  },
  {
    "name": "withdraw",
    "inputs": [
      "ctx: Context < Withdraw >",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 23,
        "label": "Entry"
      },
      {
        "id": 24,
        "label": "let e = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 25,
        "label": "for v in [4u64 , 7 , 11] { if v > 6 { e . grade = e . grade . saturating_add (1) ; } e . stable = e . stable . wrapping_add (v . rotate_right (1)) ; }"
      },
      {
        "id": 26,
        "label": "if v > 6 { e . grade = e . grade . saturating_add (1) ; }"
      },
      {
        "id": 27,
        "label": "e . grade = e . grade . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "e . stable = e . stable . wrapping_add (v . rotate_right (1)) ;"
      },
      {
        "id": 29,
        "label": "let seeds : & [& [u8]] = & [b\"escrow\" , ctx . accounts . merchant . key . as_ref () , ctx . accounts . realm . key () . as_ref () , & [ctx . bumps [\"escrow\"]] ,] ;"
      },
      {
        "id": 30,
        "label": "let amt = base . saturating_add ((e . stable % 97) + 8) ;"
      },
      {
        "id": 31,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . escrow . key () , & ctx . accounts . payout . key () , amt) ;"
      },
      {
        "id": 32,
        "label": "invoke_signed (& ix , & [ctx . accounts . escrow . to_account_info () , ctx . accounts . payout . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 24,
        "label": "def: e"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: e"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: e"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: amt"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: e"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: ix"
      },
      {
        "from": 30,
        "to": 31,
        "label": "data_dep: amt"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: ix"
      }
    ]
  }
]