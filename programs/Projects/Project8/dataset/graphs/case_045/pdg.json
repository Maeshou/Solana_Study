[
  {
    "name": "claim_daily_quest_reward",
    "inputs": [
      "ctx: Context < ClaimDailyQuestReward >",
      "quest_id: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let quest_progress = & mut ctx . accounts . quest_progress ;"
      },
      {
        "id": 2,
        "label": "let player_inventory = & mut ctx . accounts . player_inventory ;"
      },
      {
        "id": 3,
        "label": "let mut target_quest_index = 1000 ;"
      },
      {
        "id": 4,
        "label": "for (index , quest) in quest_progress . daily_quests . iter () . enumerate () { if quest . quest_id == quest_id { target_quest_index = index ; } }"
      },
      {
        "id": 5,
        "label": "if quest . quest_id == quest_id { target_quest_index = index ; }"
      },
      {
        "id": 6,
        "label": "target_quest_index = index ;"
      },
      {
        "id": 7,
        "label": "require ! (target_quest_index != 1000 , GameError :: QuestNotFound) ;"
      },
      {
        "id": 8,
        "label": "let quest = & mut quest_progress . daily_quests [target_quest_index] ;"
      },
      {
        "id": 9,
        "label": "require ! (quest . progress >= quest . target_count , GameError :: QuestNotCompleted) ;"
      },
      {
        "id": 10,
        "label": "require ! (! quest . reward_claimed , GameError :: RewardAlreadyClaimed) ;"
      },
      {
        "id": 11,
        "label": "for reward in quest . rewards . iter () { let mut item_found = false ; for inventory_item in player_inventory . items . iter_mut () { if inventory_item . item_id == reward . item_id { inventory_item . quantity += reward . quantity ; item_found = true ; } } if ! item_found { player_inventory . items . push (InventoryItem { item_id : reward . item_id , quantity : reward . quantity , }) ; } }"
      },
      {
        "id": 12,
        "label": "let mut item_found = false ;"
      },
      {
        "id": 13,
        "label": "for inventory_item in player_inventory . items . iter_mut () { if inventory_item . item_id == reward . item_id { inventory_item . quantity += reward . quantity ; item_found = true ; } }"
      },
      {
        "id": 14,
        "label": "if inventory_item . item_id == reward . item_id { inventory_item . quantity += reward . quantity ; item_found = true ; }"
      },
      {
        "id": 15,
        "label": "inventory_item . quantity += reward . quantity ;"
      },
      {
        "id": 16,
        "label": "item_found = true ;"
      },
      {
        "id": 17,
        "label": "if ! item_found { player_inventory . items . push (InventoryItem { item_id : reward . item_id , quantity : reward . quantity , }) ; }"
      },
      {
        "id": 18,
        "label": "player_inventory . items . push (InventoryItem { item_id : reward . item_id , quantity : reward . quantity , }) ;"
      },
      {
        "id": 19,
        "label": "quest . reward_claimed = true ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Quest {} reward claimed successfully!\" , quest_id) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: quest_progress"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: player_inventory"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: target_quest_index"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: quest_progress"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: target_quest_index"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: target_quest_index"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: target_quest_index"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: quest"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: quest_progress"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: target_quest_index"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: quest"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: player_inventory"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: player_inventory"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: item_found"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player_inventory"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: item_found"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: item_found"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: item_found"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: item_found"
      },
      {
        "from": 2,
        "to": 17,
        "label": "data_dep: player_inventory"
      },
      {
        "from": 2,
        "to": 18,
        "label": "data_dep: player_inventory"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: quest"
      }
    ]
  }
]