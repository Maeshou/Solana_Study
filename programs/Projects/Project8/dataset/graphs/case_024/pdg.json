[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "era: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . stage ;"
      },
      {
        "id": 2,
        "label": "s . curator = ctx . accounts . curator . key () ;"
      },
      {
        "id": 3,
        "label": "s . era = era . rotate_left (3) . wrapping_add (17) ;"
      },
      {
        "id": 4,
        "label": "s . pitch = s . era . rotate_right (1) . wrapping_add (11) ;"
      },
      {
        "id": 5,
        "label": "let mut i = 0u8 ;"
      },
      {
        "id": 6,
        "label": "let mut tone = s . pitch ;"
      },
      {
        "id": 7,
        "label": "while i < 6 { tone = tone . rotate_left (1) . wrapping_add ((i as u64 * 7) + 5) ; s . pitch = s . pitch ^ tone ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 8,
        "label": "tone = tone . rotate_left (1) . wrapping_add ((i as u64 * 7) + 5) ;"
      },
      {
        "id": 9,
        "label": "s . pitch = s . pitch ^ tone ;"
      },
      {
        "id": 10,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 11,
        "label": "require ! (s . pitch != 0 , E :: Tone) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: i"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: tone"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: tone"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: tone"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: tone"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: tone"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: tone"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 6,
        "to": 9,
        "label": "data_dep: tone"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: i"
      }
    ]
  },
  {
    "name": "stream_and_tip",
    "inputs": [
      "ctx: Context < StreamAndTip >",
      "tokens: u64",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let bump = * ctx . bumps . get (\"stage\") . ok_or (error ! (E :: MissingBump)) ? ;"
      },
      {
        "id": 15,
        "label": "let seeds : & [& [u8]] = & [b\"stage\" , ctx . accounts . curator . key . as_ref () , & ctx . accounts . stage . era . to_le_bytes () , & [bump]] ;"
      },
      {
        "id": 16,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . stage_token . to_account_info () , to : ctx . accounts . artist_token . to_account_info () , authority : ctx . accounts . stage . to_account_info () , } ;"
      },
      {
        "id": 17,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , & [seeds]) ;"
      },
      {
        "id": 18,
        "label": "let mut left = tokens ;"
      },
      {
        "id": 19,
        "label": "let mut step = (tokens / 5) . max (1) ;"
      },
      {
        "id": 20,
        "label": "let mut rounds = 0u8 ;"
      },
      {
        "id": 21,
        "label": "let mut checksum = 0u64 ;"
      },
      {
        "id": 22,
        "label": "while left > 0 { let give = left . min (step) ; token :: transfer (cpi_ctx . clone () , give) ? ; left = left . saturating_sub (give) ; rounds = rounds . saturating_add (1) ; checksum = checksum . rotate_left (2) ^ give . wrapping_mul (97) ; if rounds & 1 > 0 { step = step . rotate_left (1) . wrapping_add (3) ; } else { step = step . rotate_right (1) . wrapping_add (2) ; } if step > left && left > 4 { step = left - 2 ; } }"
      },
      {
        "id": 23,
        "label": "let give = left . min (step) ;"
      },
      {
        "id": 24,
        "label": "token :: transfer (cpi_ctx . clone () , give) ? ;"
      },
      {
        "id": 25,
        "label": "left = left . saturating_sub (give) ;"
      },
      {
        "id": 26,
        "label": "rounds = rounds . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "checksum = checksum . rotate_left (2) ^ give . wrapping_mul (97) ;"
      },
      {
        "id": 28,
        "label": "if rounds & 1 > 0 { step = step . rotate_left (1) . wrapping_add (3) ; } else { step = step . rotate_right (1) . wrapping_add (2) ; }"
      },
      {
        "id": 29,
        "label": "step = step . rotate_left (1) . wrapping_add (3) ;"
      },
      {
        "id": 30,
        "label": "step = step . rotate_right (1) . wrapping_add (2) ;"
      },
      {
        "id": 31,
        "label": "if step > left && left > 4 { step = left - 2 ; }"
      },
      {
        "id": 32,
        "label": "step = left - 2 ;"
      },
      {
        "id": 33,
        "label": "require ! (checksum != 0 , E :: Checksum) ;"
      },
      {
        "id": 34,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . stage . key () , & ctx . accounts . artist_wallet . key () , lamports) ;"
      },
      {
        "id": 35,
        "label": "invoke_signed (& ix , & [ctx . accounts . stage . to_account_info () , ctx . accounts . artist_wallet . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 36,
        "label": "let tail = (checksum ^ lamports) . rotate_right (3) . wrapping_add (19) ;"
      },
      {
        "id": 37,
        "label": "require ! (tail % 5 > 0 , E :: Tail) ;"
      },
      {
        "id": 38,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: bump"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: bump"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: cpi_accounts"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: cpi_ctx"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: left"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: step"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: rounds"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: checksum"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: rounds"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: rounds"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: checksum"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: checksum"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: rounds"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: left"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: give"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: left"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: step"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: cpi_ctx"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: give"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: left"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: left"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: give"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: rounds"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: rounds"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: checksum"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: checksum"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: give"
      },
      {
        "from": 20,
        "to": 28,
        "label": "data_dep: rounds"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 29,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 29,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: step"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: left"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: left"
      },
      {
        "from": 19,
        "to": 31,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: left"
      },
      {
        "from": 19,
        "to": 32,
        "label": "data_dep: step"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: left"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: ix"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: ix"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: tail"
      },
      {
        "from": 21,
        "to": 36,
        "label": "data_dep: checksum"
      }
    ]
  }
]