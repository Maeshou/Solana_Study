[
  {
    "name": "init_pool",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . host = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "p . season = season . rotate_left (2) . wrapping_add (12) ;"
      },
      {
        "id": 4,
        "label": "p . stat = (p . season ^ 77) . rotate_right (1) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "pay_prize",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . pool . key () , & ctx . accounts . champion . key () , lamports) ;"
      },
      {
        "id": 8,
        "label": "let bump = * ctx . bumps . get (\"pool\") . ok_or (error ! (ArenaErr :: MissingBump)) ? ;"
      },
      {
        "id": 9,
        "label": "let seeds : & [& [u8]] = & [b\"pool\" , ctx . accounts . host . key . as_ref () , & ctx . accounts . pool . season . to_le_bytes () , & [bump] ,] ;"
      },
      {
        "id": 10,
        "label": "invoke_signed (& ix , & [ctx . accounts . pool . to_account_info () , ctx . accounts . champion . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 11,
        "label": "emit ! (PrizePaid { season : ctx . accounts . pool . season , to : ctx . accounts . champion . key () , amount : lamports }) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  }
]