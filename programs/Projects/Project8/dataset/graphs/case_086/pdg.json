[
  {
    "name": "init_watchers",
    "inputs": [
      "ctx: Context < InitWatchers >",
      "slots: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut list : Vec < WatcherInfo > = Vec :: new () ;"
      },
      {
        "id": 2,
        "label": "let mut i = 0u32 ;"
      },
      {
        "id": 3,
        "label": "let count = slots . max (20) ;"
      },
      {
        "id": 4,
        "label": "while i < count { list . push (WatcherInfo { watcher_pubkey : None , watch_start_time : 0 , notification_preferences : NotificationPreferences { bid_outbid_alert : false , auction_ending_alert : false , price_threshold_alert : false , threshold_amount : 0 , } , }) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 5,
        "label": "list . push (WatcherInfo { watcher_pubkey : None , watch_start_time : 0 , notification_preferences : NotificationPreferences { bid_outbid_alert : false , auction_ending_alert : false , price_threshold_alert : false , threshold_amount : 0 , } , }) ;"
      },
      {
        "id": 6,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . watchbook . watchers = list ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: i"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: count"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: count"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: i"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: i"
      }
    ]
  }
]