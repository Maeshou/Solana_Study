[
  {
    "name": "init_bank",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBank >",
      "series: u64"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . bank ;",
      "b . owner = ctx . accounts . owner . key () ;",
      "b . series = series . rotate_left (2) . wrapping_add (25) ;",
      "b . level = 1 ;",
      "for _ in 0 .. 3",
      "{",
      "b . level = b . level . saturating_add (((b . series % 19) as u32) + 1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "award",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Award >",
      "points: u64"
    ],
    "attributes": [],
    "body": [
      "let bump = * ctx . bumps . get (\"bank\") . ok_or (error ! (E :: MissingBump)) ? ;",
      "let seeds : & [& [u8]] = & [b\"bank\" , ctx . accounts . owner . key . as_ref () , & ctx . accounts . bank . series . to_le_bytes () , & [bump]] ;",
      "let cpi_accounts = Transfer { from : ctx . accounts . bank_token . to_account_info () , to : ctx . accounts . user_token . to_account_info () , authority : ctx . accounts . bank . to_account_info () , } ;",
      "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , & [seeds]) ;",
      "let mut rounds = 3u8 ;",
      "let mut step = (points / 3) . max (1) ;",
      "let mut left = points ;",
      "while rounds > 0",
      "{",
      "let give = left . min (step) ;",
      "token :: transfer (cpi_ctx . clone () , give) ? ;",
      "left = left . saturating_sub (give) ;",
      "step = step . rotate_left (1) . wrapping_add (1) ;",
      "if left > 0 && step > left",
      "{",
      "step = left ;",
      "} rounds = rounds . saturating_sub (1) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitBank",
    "node_type": "struct",
    "fields": [
      {
        "name": "bank",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 4 , seeds = [b\"bank\" , owner . key () . as_ref () , series . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , BankState >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "series",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Award",
    "node_type": "struct",
    "fields": [
      {
        "name": "bank",
        "attribute": "# [account (mut , seeds = [b\"bank\" , owner . key () . as_ref () , bank . series . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , BankState >"
      },
      {
        "name": "bank_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "user_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "token_program",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BankState",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "series",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "level",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]