[
  {
    "name": "initialize_store",
    "inputs": [
      "ctx: Context < InitializeStore >",
      "mint: Pubkey",
      "base: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . store ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . merchant . key () ;"
      },
      {
        "id": 3,
        "label": "s . mint = mint ;"
      },
      {
        "id": 4,
        "label": "s . bump_saved = * ctx . bumps . get (\"store\") . ok_or (error ! (StoreErr :: MissingBump)) ? ;"
      },
      {
        "id": 5,
        "label": "s . power = base . rotate_left (3) . wrapping_add (63) ;"
      },
      {
        "id": 6,
        "label": "s . rounds = 1 ;"
      },
      {
        "id": 7,
        "label": "for j in 1u8 .. 4u8 { let v = (s . power ^ (j as u64 * 19)) . rotate_left (1) ; s . power = s . power . wrapping_add (v) . wrapping_mul (2) . wrapping_add (11 + j as u64) ; s . rounds = s . rounds . saturating_add (((s . power % 23) as u32) + 3) ; }"
      },
      {
        "id": 8,
        "label": "let v = (s . power ^ (j as u64 * 19)) . rotate_left (1) ;"
      },
      {
        "id": 9,
        "label": "s . power = s . power . wrapping_add (v) . wrapping_mul (2) . wrapping_add (11 + j as u64) ;"
      },
      {
        "id": 10,
        "label": "s . rounds = s . rounds . saturating_add (((s . power % 23) as u32) + 3) ;"
      },
      {
        "id": 11,
        "label": "if (s . power & 1) > 0 { let extra = s . power . rotate_right (2) . wrapping_add (29) ; s . power = s . power . wrapping_add (extra) . wrapping_mul (2) ; s . rounds = s . rounds . saturating_add (((s . power % 29) as u32) + 4) ; }"
      },
      {
        "id": 12,
        "label": "let extra = s . power . rotate_right (2) . wrapping_add (29) ;"
      },
      {
        "id": 13,
        "label": "s . power = s . power . wrapping_add (extra) . wrapping_mul (2) ;"
      },
      {
        "id": 14,
        "label": "s . rounds = s . rounds . saturating_add (((s . power % 29) as u32) + 4) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: v"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: v"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: extra"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: s"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: extra"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "issue_coupon_payout",
    "inputs": [
      "ctx: Context < IssueCouponPayout >",
      "coupon_id: u64",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let s = & ctx . accounts . store ;"
      },
      {
        "id": 18,
        "label": "let from_key = ctx . accounts . store . key () ;"
      },
      {
        "id": 19,
        "label": "let ix = system_instruction :: transfer (& from_key , & ctx . accounts . beneficiary . key () , lamports) ;"
      },
      {
        "id": 20,
        "label": "let seeds : & [& [u8]] = & [b\"store\" , ctx . accounts . merchant . key . as_ref () , ctx . accounts . store . mint . as_ref () , & [s . bump_saved] ,] ;"
      },
      {
        "id": 21,
        "label": "invoke_signed (& ix , & [ctx . accounts . store . to_account_info () , ctx . accounts . beneficiary . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 22,
        "label": "emit ! (CouponPaid { coupon_id , to : ctx . accounts . beneficiary . key () , amount : lamports }) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 17,
        "label": "def: s"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: from_key"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: ix"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: from_key"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: ix"
      }
    ]
  }
]