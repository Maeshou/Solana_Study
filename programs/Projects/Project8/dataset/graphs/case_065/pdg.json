[
  {
    "name": "establish_guild_territory",
    "inputs": [
      "ctx: Context < EstablishTerritory >",
      "guild_name: String",
      "territory_coordinates: TerritoryCoordinates",
      "initial_defense_budget: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let guild_account = & mut ctx . accounts . guild_account ;"
      },
      {
        "id": 2,
        "label": "let current_time = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "guild_account . guild_master = ctx . accounts . guild_master . key () ;"
      },
      {
        "id": 4,
        "label": "guild_account . name = guild_name ;"
      },
      {
        "id": 5,
        "label": "guild_account . establishment_date = current_time ;"
      },
      {
        "id": 6,
        "label": "guild_account . member_count = 1 ;"
      },
      {
        "id": 7,
        "label": "guild_account . territory = territory_coordinates ;"
      },
      {
        "id": 8,
        "label": "guild_account . treasury_balance = initial_defense_budget ;"
      },
      {
        "id": 9,
        "label": "let territory_size = territory_coordinates . calculate_area () ;"
      },
      {
        "id": 10,
        "label": "require ! (territory_size >= 100 , GuildError :: TerritoryTooSmall) ;"
      },
      {
        "id": 11,
        "label": "require ! (territory_size <= 10000 , GuildError :: TerritoryTooLarge) ;"
      },
      {
        "id": 12,
        "label": "let mut defense_structures = Vec :: new () ;"
      },
      {
        "id": 13,
        "label": "let structure_count = match territory_size { size if size >= 5000 => { guild_account . max_member_capacity = 50 ; guild_account . daily_resource_generation = 1000 ; guild_account . territory_tier = TerritoryTier :: Capital ; for structure_id in 0 .. 8 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 4 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , 2 => StructureType :: MagicBarrier , _ => StructureType :: TrapField , } , health_points : 2000 , defense_power : 300 , maintenance_cost : 50 , last_upgrade : current_time , }) ; } 8 } , size if size >= 2000 => { guild_account . max_member_capacity = 30 ; guild_account . daily_resource_generation = 500 ; guild_account . territory_tier = TerritoryTier :: City ; for structure_id in 0 .. 5 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 3 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: MagicBarrier , } , health_points : 1500 , defense_power : 200 , maintenance_cost : 30 , last_upgrade : current_time , }) ; } 5 } , _ => { guild_account . max_member_capacity = 15 ; guild_account . daily_resource_generation = 200 ; guild_account . territory_tier = TerritoryTier :: Outpost ; for structure_id in 0 .. 3 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: TrapField , } , health_points : 1000 , defense_power : 150 , maintenance_cost : 20 , last_upgrade : current_time , }) ; } 3 } } ;"
      },
      {
        "id": 14,
        "label": "guild_account . max_member_capacity = 50 ;"
      },
      {
        "id": 15,
        "label": "guild_account . daily_resource_generation = 1000 ;"
      },
      {
        "id": 16,
        "label": "guild_account . territory_tier = TerritoryTier :: Capital ;"
      },
      {
        "id": 17,
        "label": "for structure_id in 0 .. 8 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 4 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , 2 => StructureType :: MagicBarrier , _ => StructureType :: TrapField , } , health_points : 2000 , defense_power : 300 , maintenance_cost : 50 , last_upgrade : current_time , }) ; }"
      },
      {
        "id": 18,
        "label": "defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 4 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , 2 => StructureType :: MagicBarrier , _ => StructureType :: TrapField , } , health_points : 2000 , defense_power : 300 , maintenance_cost : 50 , last_upgrade : current_time , }) ;"
      },
      {
        "id": 19,
        "label": "8"
      },
      {
        "id": 20,
        "label": "guild_account . max_member_capacity = 30 ;"
      },
      {
        "id": 21,
        "label": "guild_account . daily_resource_generation = 500 ;"
      },
      {
        "id": 22,
        "label": "guild_account . territory_tier = TerritoryTier :: City ;"
      },
      {
        "id": 23,
        "label": "for structure_id in 0 .. 5 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 3 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: MagicBarrier , } , health_points : 1500 , defense_power : 200 , maintenance_cost : 30 , last_upgrade : current_time , }) ; }"
      },
      {
        "id": 24,
        "label": "defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id % 3 { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: MagicBarrier , } , health_points : 1500 , defense_power : 200 , maintenance_cost : 30 , last_upgrade : current_time , }) ;"
      },
      {
        "id": 25,
        "label": "5"
      },
      {
        "id": 26,
        "label": "guild_account . max_member_capacity = 15 ;"
      },
      {
        "id": 27,
        "label": "guild_account . daily_resource_generation = 200 ;"
      },
      {
        "id": 28,
        "label": "guild_account . territory_tier = TerritoryTier :: Outpost ;"
      },
      {
        "id": 29,
        "label": "for structure_id in 0 .. 3 { defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: TrapField , } , health_points : 1000 , defense_power : 150 , maintenance_cost : 20 , last_upgrade : current_time , }) ; }"
      },
      {
        "id": 30,
        "label": "defense_structures . push (DefenseStructure { structure_id , structure_type : match structure_id { 0 => StructureType :: Watchtower , 1 => StructureType :: BarricadeWall , _ => StructureType :: TrapField , } , health_points : 1000 , defense_power : 150 , maintenance_cost : 20 , last_upgrade : current_time , }) ;"
      },
      {
        "id": 31,
        "label": "3"
      },
      {
        "id": 32,
        "label": "guild_account . defense_structures = defense_structures ;"
      },
      {
        "id": 33,
        "label": "let mut resource_nodes = Vec :: new () ;"
      },
      {
        "id": 34,
        "label": "let available_resources = [ResourceType :: Gold , ResourceType :: Crystal , ResourceType :: Wood , ResourceType :: Stone , ResourceType :: MagicEssence] ;"
      },
      {
        "id": 35,
        "label": "for (node_index , resource_type) in available_resources . iter () . enumerate () { let generation_rate = match guild_account . territory_tier { TerritoryTier :: Capital => 100 + (node_index as u32 * 20) , TerritoryTier :: City => 60 + (node_index as u32 * 15) , TerritoryTier :: Outpost => 30 + (node_index as u32 * 10) , } ; resource_nodes . push (ResourceNode { resource_type : resource_type . clone () , current_amount : 0 , generation_rate , capacity : generation_rate * 24 , last_harvest : current_time , enhancement_level : 0 , }) ; }"
      },
      {
        "id": 36,
        "label": "let generation_rate = match guild_account . territory_tier { TerritoryTier :: Capital => 100 + (node_index as u32 * 20) , TerritoryTier :: City => 60 + (node_index as u32 * 15) , TerritoryTier :: Outpost => 30 + (node_index as u32 * 10) , } ;"
      },
      {
        "id": 37,
        "label": "resource_nodes . push (ResourceNode { resource_type : resource_type . clone () , current_amount : 0 , generation_rate , capacity : generation_rate * 24 , last_harvest : current_time , enhancement_level : 0 , }) ;"
      },
      {
        "id": 38,
        "label": "guild_account . resource_nodes = resource_nodes ;"
      },
      {
        "id": 39,
        "label": "guild_account . alliance_relationships = Vec :: new () ;"
      },
      {
        "id": 40,
        "label": "guild_account . war_declarations = Vec :: new () ;"
      },
      {
        "id": 41,
        "label": "guild_account . territory_disputes = Vec :: new () ;"
      },
      {
        "id": 42,
        "label": "guild_account . guild_bonuses = GuildBonuses { experience_multiplier : 110 , resource_bonus : 105 , defense_bonus : 100 , attack_bonus : 100 , } ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: guild_account"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: current_time"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: guild_account"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: guild_account"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: territory_size"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: defense_structures"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: structure_count"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: territory_size"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 16,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 17,
        "label": "data_dep: current_time"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 18,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 22,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 23,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 23,
        "label": "data_dep: current_time"
      },
      {
        "from": 12,
        "to": 24,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 24,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 26,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 27,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 28,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 29,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 29,
        "label": "data_dep: current_time"
      },
      {
        "from": 12,
        "to": 30,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 2,
        "to": 30,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 32,
        "label": "data_dep: guild_account"
      },
      {
        "from": 12,
        "to": 32,
        "label": "data_dep: defense_structures"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: resource_nodes"
      },
      {
        "from": 34,
        "to": 34,
        "label": "def: available_resources"
      },
      {
        "from": 34,
        "to": 35,
        "label": "data_dep: available_resources"
      },
      {
        "from": 1,
        "to": 35,
        "label": "data_dep: guild_account"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: resource_nodes"
      },
      {
        "from": 2,
        "to": 35,
        "label": "data_dep: current_time"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: generation_rate"
      },
      {
        "from": 1,
        "to": 36,
        "label": "data_dep: guild_account"
      },
      {
        "from": 33,
        "to": 37,
        "label": "data_dep: resource_nodes"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: generation_rate"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: generation_rate"
      },
      {
        "from": 2,
        "to": 37,
        "label": "data_dep: current_time"
      },
      {
        "from": 1,
        "to": 38,
        "label": "data_dep: guild_account"
      },
      {
        "from": 33,
        "to": 38,
        "label": "data_dep: resource_nodes"
      },
      {
        "from": 1,
        "to": 39,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 40,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 41,
        "label": "data_dep: guild_account"
      },
      {
        "from": 1,
        "to": 42,
        "label": "data_dep: guild_account"
      }
    ]
  }
]