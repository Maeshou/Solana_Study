[
  {
    "name": "check_tier_requirements",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CheckTier >",
      "total_matches: u64",
      "win_rate: u32",
      "current_skill_rating: u64",
      "stake: u64",
      "tier: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "let mut min_matches = 10u64 ;",
      "let mut min_win = 30u32 ;",
      "let mut req_skill = 1000u64 ;",
      "let mut min_stake = 1000u64 ;",
      "if is_silver (tier)",
      "{",
      "min_matches = 50 ;",
      "min_win = 50 ;",
      "req_skill = 1500 ;",
      "min_stake = 2500 ;",
      "}",
      "if is_gold (tier)",
      "{",
      "min_matches = 100 ;",
      "min_win = 65 ;",
      "req_skill = 2000 ;",
      "min_stake = 5000 ;",
      "}",
      "if is_platinum (tier)",
      "{",
      "min_matches = 200 ;",
      "min_win = 75 ;",
      "req_skill = 2500 ;",
      "min_stake = 10_000 ;",
      "}",
      "if is_diamond (tier)",
      "{",
      "min_matches = 500 ;",
      "min_win = 80 ;",
      "req_skill = 3000 ;",
      "min_stake = 25_000 ;",
      "}",
      "if is_master (tier)",
      "{",
      "min_matches = 1000 ;",
      "min_win = 85 ;",
      "req_skill = 3500 ;",
      "min_stake = 50_000 ;",
      "}",
      "if is_grandmaster (tier)",
      "{",
      "min_matches = 2000 ;",
      "min_win = 90 ;",
      "req_skill = 4000 ;",
      "min_stake = 100_000 ;",
      "}",
      "require ! (total_matches >= min_matches , TierError :: InsufficientExperience) ;",
      "require ! (win_rate >= min_win , TierError :: WinRateTooLow) ;",
      "require ! (stake >= min_stake , TierError :: InsufficientStake) ;",
      "require ! (current_skill_rating >= req_skill , TierError :: SkillRatingTooLow) ;",
      "let gate = & mut ctx . accounts . tier_gate ;",
      "gate . tier = tier ;",
      "gate . required_skill = req_skill ;",
      "gate . checked_at = Clock :: get () ? . unix_timestamp ;",
      "Ok (())"
    ]
  },
  {
    "name": "is_silver",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Silver = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "is_gold",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Gold = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "is_platinum",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Platinum = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "is_diamond",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Diamond = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "is_master",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Master = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "is_grandmaster",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "t: TournamentTier"
    ],
    "attributes": [],
    "body": [
      "if let TournamentTier :: Grandmaster = t",
      "{",
      "return true",
      "}",
      "false"
    ]
  },
  {
    "name": "CheckTier",
    "node_type": "struct",
    "fields": [
      {
        "name": "tier_gate",
        "attribute": "# [account (init , payer = authority , space = 8 + TierGate :: LEN , seeds = [b\"tier_gate\" , authority . key () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , TierGate >"
      },
      {
        "name": "authority",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "TierGate",
    "node_type": "struct",
    "fields": [
      {
        "name": "tier",
        "attribute": null,
        "field_type": "TournamentTier"
      },
      {
        "name": "required_skill",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "checked_at",
        "attribute": null,
        "field_type": "i64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]