[
  {
    "name": "analyze",
    "inputs": [
      "ctx: Context < Analyze >",
      "performance_scores: Vec < u32 >",
      "timestamps: Vec < i64 >",
      "opponent_ratings: Vec < u32 >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let n = performance_scores . len () . min (20) ;"
      },
      {
        "id": 2,
        "label": "let mut rows : Vec < PerformanceRow > = Vec :: new () ;"
      },
      {
        "id": 3,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 4,
        "label": "while i < n { let win = performance_scores [i] > 70 ; let draw = performance_scores [i] >= 45 && performance_scores [i] <= 70 ; let window = 5usize . min (i + 1) ; let mut s = 0u32 ; let mut j = i + 1 - window ; while j <= i { s = s . saturating_add (performance_scores [j]) ; if j == i { break ; } j = j . saturating_add (1) ; } let avg = s / (window as u32) ; let mut acc = 0u32 ; let mut k = i + 1 - window ; while k <= i { let d = (performance_scores [k] as i32 - avg as i32) . pow (2) as u32 ; acc = acc . saturating_add (d) ; if k == i { break ; } k = k . saturating_add (1) ; } let var = acc / (window as u32) ; let consistency = 100 - (var / 10) . min (50) ; let mut trend = 0i32 ; if i + 1 >= 3 { let w = 10usize . min (i + 1) ; let half = w / 2 ; let start = i + 1 - w ; let mid = i + 1 - half ; let mut early = 0u32 ; let mut p = start ; while p < mid { early = early . saturating_add (performance_scores [p]) ; p = p . saturating_add (1) ; } let mut late = 0u32 ; let mut q = mid ; while q <= i { late = late . saturating_add (performance_scores [q]) ; if q == i { break ; } q = q . saturating_add (1) ; } trend = (late as i32 / (w - half) as i32) - (early as i32 / half as i32) ; } rows . push (PerformanceRow { ts : timestamps . get (i) . copied () . unwrap_or (0) , opponent : opponent_ratings . get (i) . copied () . unwrap_or (0) , score : performance_scores [i] , win_flag : win , draw_flag : draw , consistency_score : consistency , improvement_trend : trend , }) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 5,
        "label": "let win = performance_scores [i] > 70 ;"
      },
      {
        "id": 6,
        "label": "let draw = performance_scores [i] >= 45 && performance_scores [i] <= 70 ;"
      },
      {
        "id": 7,
        "label": "let window = 5usize . min (i + 1) ;"
      },
      {
        "id": 8,
        "label": "let mut s = 0u32 ;"
      },
      {
        "id": 9,
        "label": "let mut j = i + 1 - window ;"
      },
      {
        "id": 10,
        "label": "while j <= i { s = s . saturating_add (performance_scores [j]) ; if j == i { break ; } j = j . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "s = s . saturating_add (performance_scores [j]) ;"
      },
      {
        "id": 12,
        "label": "if j == i { break ; }"
      },
      {
        "id": 13,
        "label": "break ;"
      },
      {
        "id": 14,
        "label": "j = j . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "let avg = s / (window as u32) ;"
      },
      {
        "id": 16,
        "label": "let mut acc = 0u32 ;"
      },
      {
        "id": 17,
        "label": "let mut k = i + 1 - window ;"
      },
      {
        "id": 18,
        "label": "while k <= i { let d = (performance_scores [k] as i32 - avg as i32) . pow (2) as u32 ; acc = acc . saturating_add (d) ; if k == i { break ; } k = k . saturating_add (1) ; }"
      },
      {
        "id": 19,
        "label": "let d = (performance_scores [k] as i32 - avg as i32) . pow (2) as u32 ;"
      },
      {
        "id": 20,
        "label": "acc = acc . saturating_add (d) ;"
      },
      {
        "id": 21,
        "label": "if k == i { break ; }"
      },
      {
        "id": 22,
        "label": "break ;"
      },
      {
        "id": 23,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "let var = acc / (window as u32) ;"
      },
      {
        "id": 25,
        "label": "let consistency = 100 - (var / 10) . min (50) ;"
      },
      {
        "id": 26,
        "label": "let mut trend = 0i32 ;"
      },
      {
        "id": 27,
        "label": "if i + 1 >= 3 { let w = 10usize . min (i + 1) ; let half = w / 2 ; let start = i + 1 - w ; let mid = i + 1 - half ; let mut early = 0u32 ; let mut p = start ; while p < mid { early = early . saturating_add (performance_scores [p]) ; p = p . saturating_add (1) ; } let mut late = 0u32 ; let mut q = mid ; while q <= i { late = late . saturating_add (performance_scores [q]) ; if q == i { break ; } q = q . saturating_add (1) ; } trend = (late as i32 / (w - half) as i32) - (early as i32 / half as i32) ; }"
      },
      {
        "id": 28,
        "label": "let w = 10usize . min (i + 1) ;"
      },
      {
        "id": 29,
        "label": "let half = w / 2 ;"
      },
      {
        "id": 30,
        "label": "let start = i + 1 - w ;"
      },
      {
        "id": 31,
        "label": "let mid = i + 1 - half ;"
      },
      {
        "id": 32,
        "label": "let mut early = 0u32 ;"
      },
      {
        "id": 33,
        "label": "let mut p = start ;"
      },
      {
        "id": 34,
        "label": "while p < mid { early = early . saturating_add (performance_scores [p]) ; p = p . saturating_add (1) ; }"
      },
      {
        "id": 35,
        "label": "early = early . saturating_add (performance_scores [p]) ;"
      },
      {
        "id": 36,
        "label": "p = p . saturating_add (1) ;"
      },
      {
        "id": 37,
        "label": "let mut late = 0u32 ;"
      },
      {
        "id": 38,
        "label": "let mut q = mid ;"
      },
      {
        "id": 39,
        "label": "while q <= i { late = late . saturating_add (performance_scores [q]) ; if q == i { break ; } q = q . saturating_add (1) ; }"
      },
      {
        "id": 40,
        "label": "late = late . saturating_add (performance_scores [q]) ;"
      },
      {
        "id": 41,
        "label": "if q == i { break ; }"
      },
      {
        "id": 42,
        "label": "break ;"
      },
      {
        "id": 43,
        "label": "q = q . saturating_add (1) ;"
      },
      {
        "id": 44,
        "label": "trend = (late as i32 / (w - half) as i32) - (early as i32 / half as i32) ;"
      },
      {
        "id": 45,
        "label": "rows . push (PerformanceRow { ts : timestamps . get (i) . copied () . unwrap_or (0) , opponent : opponent_ratings . get (i) . copied () . unwrap_or (0) , score : performance_scores [i] , win_flag : win , draw_flag : draw , consistency_score : consistency , improvement_trend : trend , }) ;"
      },
      {
        "id": 46,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 47,
        "label": "ctx . accounts . analysis . rows = rows ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: n"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: n"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: win"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: i"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: draw"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: window"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: s"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: j"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: window"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: j"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: j"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: j"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: j"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: i"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: j"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: j"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: avg"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: window"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: acc"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: k"
      },
      {
        "from": 3,
        "to": 17,
        "label": "data_dep: i"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: window"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: k"
      },
      {
        "from": 3,
        "to": 18,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: k"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: acc"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: acc"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: k"
      },
      {
        "from": 3,
        "to": 18,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: k"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: k"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: d"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: k"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: acc"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: d"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: k"
      },
      {
        "from": 3,
        "to": 21,
        "label": "data_dep: i"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: k"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: var"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: acc"
      },
      {
        "from": 7,
        "to": 24,
        "label": "data_dep: window"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: consistency"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: var"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: trend"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 27,
        "label": "data_dep: i"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: trend"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: w"
      },
      {
        "from": 3,
        "to": 28,
        "label": "data_dep: i"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: half"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: w"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: start"
      },
      {
        "from": 3,
        "to": 30,
        "label": "data_dep: i"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: w"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: mid"
      },
      {
        "from": 3,
        "to": 31,
        "label": "data_dep: i"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: half"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: early"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: p"
      },
      {
        "from": 30,
        "to": 33,
        "label": "data_dep: start"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: mid"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: early"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: early"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: early"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: early"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 33,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 37,
        "to": 37,
        "label": "def: late"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: q"
      },
      {
        "from": 31,
        "to": 38,
        "label": "data_dep: mid"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: q"
      },
      {
        "from": 3,
        "to": 39,
        "label": "data_dep: i"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: late"
      },
      {
        "from": 37,
        "to": 39,
        "label": "data_dep: late"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: q"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: q"
      },
      {
        "from": 3,
        "to": 39,
        "label": "data_dep: i"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: q"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: q"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: late"
      },
      {
        "from": 37,
        "to": 40,
        "label": "data_dep: late"
      },
      {
        "from": 38,
        "to": 40,
        "label": "data_dep: q"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: q"
      },
      {
        "from": 3,
        "to": 41,
        "label": "data_dep: i"
      },
      {
        "from": 38,
        "to": 43,
        "label": "data_dep: q"
      },
      {
        "from": 38,
        "to": 43,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 44,
        "label": "data_dep: trend"
      },
      {
        "from": 37,
        "to": 44,
        "label": "data_dep: late"
      },
      {
        "from": 28,
        "to": 44,
        "label": "data_dep: w"
      },
      {
        "from": 29,
        "to": 44,
        "label": "data_dep: half"
      },
      {
        "from": 32,
        "to": 44,
        "label": "data_dep: early"
      },
      {
        "from": 29,
        "to": 44,
        "label": "data_dep: half"
      },
      {
        "from": 3,
        "to": 45,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 45,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 45,
        "label": "data_dep: i"
      },
      {
        "from": 5,
        "to": 45,
        "label": "data_dep: win"
      },
      {
        "from": 6,
        "to": 45,
        "label": "data_dep: draw"
      },
      {
        "from": 25,
        "to": 45,
        "label": "data_dep: consistency"
      },
      {
        "from": 26,
        "to": 45,
        "label": "data_dep: trend"
      },
      {
        "from": 3,
        "to": 46,
        "label": "data_dep: i"
      },
      {
        "from": 3,
        "to": 46,
        "label": "data_dep: i"
      }
    ]
  }
]