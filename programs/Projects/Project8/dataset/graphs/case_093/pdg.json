[
  {
    "name": "init_resource_nodes",
    "inputs": [
      "ctx: Context < InitResourceNodes >",
      "tier: TerritoryTier",
      "baseline: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let nodes = & mut ctx . accounts . resource_hub ;"
      },
      {
        "id": 2,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 3,
        "label": "nodes . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 4,
        "label": "nodes . created_at = now ;"
      },
      {
        "id": 5,
        "label": "nodes . tier = tier . clone () ;"
      },
      {
        "id": 6,
        "label": "nodes . nodes = build_nodes (now , tier , baseline) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: nodes"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: now"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: nodes"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: nodes"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: nodes"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: nodes"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: now"
      }
    ]
  },
  {
    "name": "harvest_and_raid",
    "inputs": [
      "ctx: Context < HarvestAndRaid >",
      "party_size: u8",
      "difficulty: RaidDifficulty",
      "hours_elapsed: u32"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let hub = & mut ctx . accounts . resource_hub ;"
      },
      {
        "id": 10,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 11,
        "label": "require ! (party_size >= 1 , ErrorCode :: PartyTooSmall) ;"
      },
      {
        "id": 12,
        "label": "require ! (party_size <= 6 , ErrorCode :: PartyTooLarge) ;"
      },
      {
        "id": 13,
        "label": "require ! (hours_elapsed > 0 , ErrorCode :: InvalidHours) ;"
      },
      {
        "id": 14,
        "label": "harvest_nodes (hub , now , party_size , hours_elapsed) ;"
      },
      {
        "id": 15,
        "label": "let threat = raid_threat (now , party_size , & difficulty) ;"
      },
      {
        "id": 16,
        "label": "let drops = roll_loot (now , hub . nodes . len () , threat) ;"
      },
      {
        "id": 17,
        "label": "push_drops (& mut ctx . accounts . raid_log , & drops) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: hub"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: now"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: hub"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: now"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: threat"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: now"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: drops"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: now"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: hub"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: threat"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: drops"
      }
    ]
  },
  {
    "name": "build_nodes",
    "inputs": [
      "now: i64",
      "tier: TerritoryTier",
      "baseline: u32"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let mut out = Vec :: new () ;"
      },
      {
        "id": 21,
        "label": "let start = (now as u64) . rotate_left (5) as usize % 5 ;"
      },
      {
        "id": 22,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 23,
        "label": "while i < 5 { let index = (start + i) % 5 ; let kind = resource_kind (index) ; let gen = tiered_generation (baseline . max (10) , & tier , index as u32) ; let cap = gen . saturating_mul (24) ; out . push (ResourceNode { resource_type : kind , current_amount : 0 , generation_rate : gen , capacity : cap , last_harvest : now , enhancement_level : 0 , }) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 24,
        "label": "let index = (start + i) % 5 ;"
      },
      {
        "id": 25,
        "label": "let kind = resource_kind (index) ;"
      },
      {
        "id": 26,
        "label": "let gen = tiered_generation (baseline . max (10) , & tier , index as u32) ;"
      },
      {
        "id": 27,
        "label": "let cap = gen . saturating_mul (24) ;"
      },
      {
        "id": 28,
        "label": "out . push (ResourceNode { resource_type : kind , current_amount : 0 , generation_rate : gen , capacity : cap , last_harvest : now , enhancement_level : 0 , }) ;"
      },
      {
        "id": 29,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "out"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: out"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: start"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: i"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: start"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: out"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: i"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: index"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: start"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: i"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: kind"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: index"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: gen"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: index"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: cap"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: gen"
      },
      {
        "from": 20,
        "to": 28,
        "label": "data_dep: out"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: kind"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: gen"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: cap"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: i"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: i"
      },
      {
        "from": 20,
        "to": 30,
        "label": "data_dep: out"
      }
    ]
  },
  {
    "name": "resource_kind",
    "inputs": [
      "i: usize"
    ],
    "nodes": [
      {
        "id": 31,
        "label": "Entry"
      },
      {
        "id": 32,
        "label": "let mut t = ResourceType :: Gold ;"
      },
      {
        "id": 33,
        "label": "if i == 1 { t = ResourceType :: Crystal ; }"
      },
      {
        "id": 34,
        "label": "t = ResourceType :: Crystal ;"
      },
      {
        "id": 35,
        "label": "if i == 2 { t = ResourceType :: Wood ; }"
      },
      {
        "id": 36,
        "label": "t = ResourceType :: Wood ;"
      },
      {
        "id": 37,
        "label": "if i == 3 { t = ResourceType :: Stone ; }"
      },
      {
        "id": 38,
        "label": "t = ResourceType :: Stone ;"
      },
      {
        "id": 39,
        "label": "if i >= 4 { t = ResourceType :: MagicEssence ; }"
      },
      {
        "id": 40,
        "label": "t = ResourceType :: MagicEssence ;"
      },
      {
        "id": 41,
        "label": "t"
      }
    ],
    "edges": [
      {
        "from": 32,
        "to": 32,
        "label": "def: t"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 36,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 37,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 38,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 39,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 40,
        "label": "data_dep: t"
      },
      {
        "from": 32,
        "to": 41,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "tiered_generation",
    "inputs": [
      "mut base: u32",
      "tier: & TerritoryTier",
      "idx: u32"
    ],
    "nodes": [
      {
        "id": 42,
        "label": "Entry"
      },
      {
        "id": 43,
        "label": "if matches ! (tier , TerritoryTier :: City) { base = base . saturating_add (20 + idx * 5) ; }"
      },
      {
        "id": 44,
        "label": "base = base . saturating_add (20 + idx * 5) ;"
      },
      {
        "id": 45,
        "label": "if matches ! (tier , TerritoryTier :: Capital) { base = base . saturating_add (50 + idx * 10) ; }"
      },
      {
        "id": 46,
        "label": "base = base . saturating_add (50 + idx * 10) ;"
      },
      {
        "id": 47,
        "label": "if matches ! (tier , TerritoryTier :: Outpost) { base = base . saturating_add (10 + idx * 3) ; }"
      },
      {
        "id": 48,
        "label": "base = base . saturating_add (10 + idx * 3) ;"
      },
      {
        "id": 49,
        "label": "base"
      }
    ],
    "edges": []
  },
  {
    "name": "harvest_nodes",
    "inputs": [
      "hub: & mut Account < ResourceHub >",
      "now: i64",
      "party_size: u8",
      "hours: u32"
    ],
    "nodes": [
      {
        "id": 50,
        "label": "Entry"
      },
      {
        "id": 51,
        "label": "let len = hub . nodes . len () . max (1) ;"
      },
      {
        "id": 52,
        "label": "let start = ((now as u64) ^ (party_size as u64)) . rotate_left (3) as usize % len ;"
      },
      {
        "id": 53,
        "label": "let mut j = 0usize ;"
      },
      {
        "id": 54,
        "label": "while j < hub . nodes . len () { let k = (start + j) % hub . nodes . len () ; let add = hub . nodes [k] . generation_rate . saturating_mul (hours) ; let new_amt = hub . nodes [k] . current_amount . saturating_add (add) ; hub . nodes [k] . current_amount = new_amt . min (hub . nodes [k] . capacity) ; hub . nodes [k] . last_harvest = now ; j = j . saturating_add (1) ; }"
      },
      {
        "id": 55,
        "label": "let k = (start + j) % hub . nodes . len () ;"
      },
      {
        "id": 56,
        "label": "let add = hub . nodes [k] . generation_rate . saturating_mul (hours) ;"
      },
      {
        "id": 57,
        "label": "let new_amt = hub . nodes [k] . current_amount . saturating_add (add) ;"
      },
      {
        "id": 58,
        "label": "hub . nodes [k] . current_amount = new_amt . min (hub . nodes [k] . capacity) ;"
      },
      {
        "id": 59,
        "label": "hub . nodes [k] . last_harvest = now ;"
      },
      {
        "id": 60,
        "label": "j = j . saturating_add (1) ;"
      }
    ],
    "edges": [
      {
        "from": 51,
        "to": 51,
        "label": "def: len"
      },
      {
        "from": 52,
        "to": 52,
        "label": "def: start"
      },
      {
        "from": 51,
        "to": 52,
        "label": "data_dep: len"
      },
      {
        "from": 53,
        "to": 53,
        "label": "def: j"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: j"
      },
      {
        "from": 52,
        "to": 54,
        "label": "data_dep: start"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: j"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: j"
      },
      {
        "from": 53,
        "to": 54,
        "label": "data_dep: j"
      },
      {
        "from": 55,
        "to": 55,
        "label": "def: k"
      },
      {
        "from": 52,
        "to": 55,
        "label": "data_dep: start"
      },
      {
        "from": 53,
        "to": 55,
        "label": "data_dep: j"
      },
      {
        "from": 56,
        "to": 56,
        "label": "def: add"
      },
      {
        "from": 55,
        "to": 56,
        "label": "data_dep: k"
      },
      {
        "from": 57,
        "to": 57,
        "label": "def: new_amt"
      },
      {
        "from": 55,
        "to": 57,
        "label": "data_dep: k"
      },
      {
        "from": 56,
        "to": 57,
        "label": "data_dep: add"
      },
      {
        "from": 55,
        "to": 58,
        "label": "data_dep: k"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: new_amt"
      },
      {
        "from": 55,
        "to": 58,
        "label": "data_dep: k"
      },
      {
        "from": 55,
        "to": 59,
        "label": "data_dep: k"
      },
      {
        "from": 53,
        "to": 60,
        "label": "data_dep: j"
      },
      {
        "from": 53,
        "to": 60,
        "label": "data_dep: j"
      }
    ]
  },
  {
    "name": "raid_threat",
    "inputs": [
      "now: i64",
      "party_size: u8",
      "difficulty: & RaidDifficulty"
    ],
    "nodes": [
      {
        "id": 61,
        "label": "Entry"
      },
      {
        "id": 62,
        "label": "let mut t = 50u32 ;"
      },
      {
        "id": 63,
        "label": "t = add_threat_normal (t , difficulty) ;"
      },
      {
        "id": 64,
        "label": "t = add_threat_hard (t , difficulty) ;"
      },
      {
        "id": 65,
        "label": "t = add_threat_mythic (t , difficulty) ;"
      },
      {
        "id": 66,
        "label": "if party_size >= 4 { t = t . saturating_add (25) ; }"
      },
      {
        "id": 67,
        "label": "t = t . saturating_add (25) ;"
      },
      {
        "id": 68,
        "label": "if now % 2 == 0 { t = t . saturating_add (7) ; }"
      },
      {
        "id": 69,
        "label": "t = t . saturating_add (7) ;"
      },
      {
        "id": 70,
        "label": "t"
      }
    ],
    "edges": [
      {
        "from": 62,
        "to": 62,
        "label": "def: t"
      },
      {
        "from": 62,
        "to": 63,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 63,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 64,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 64,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 65,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 65,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 66,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 66,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 67,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 67,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 68,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 68,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 69,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 69,
        "label": "data_dep: t"
      },
      {
        "from": 62,
        "to": 70,
        "label": "data_dep: t"
      }
    ]
  },
  {
    "name": "add_threat_normal",
    "inputs": [
      "mut t: u32",
      "d: & RaidDifficulty"
    ],
    "nodes": [
      {
        "id": 71,
        "label": "Entry"
      },
      {
        "id": 72,
        "label": "if matches ! (d , RaidDifficulty :: Normal) { t = t . saturating_add (30) ; }"
      },
      {
        "id": 73,
        "label": "t = t . saturating_add (30) ;"
      },
      {
        "id": 74,
        "label": "t"
      }
    ],
    "edges": []
  },
  {
    "name": "add_threat_hard",
    "inputs": [
      "mut t: u32",
      "d: & RaidDifficulty"
    ],
    "nodes": [
      {
        "id": 75,
        "label": "Entry"
      },
      {
        "id": 76,
        "label": "if matches ! (d , RaidDifficulty :: Hard) { t = t . saturating_add (60) ; }"
      },
      {
        "id": 77,
        "label": "t = t . saturating_add (60) ;"
      },
      {
        "id": 78,
        "label": "t"
      }
    ],
    "edges": []
  },
  {
    "name": "add_threat_mythic",
    "inputs": [
      "mut t: u32",
      "d: & RaidDifficulty"
    ],
    "nodes": [
      {
        "id": 79,
        "label": "Entry"
      },
      {
        "id": 80,
        "label": "if matches ! (d , RaidDifficulty :: Mythic) { t = t . saturating_add (120) ; }"
      },
      {
        "id": 81,
        "label": "t = t . saturating_add (120) ;"
      },
      {
        "id": 82,
        "label": "t"
      }
    ],
    "edges": []
  },
  {
    "name": "roll_loot",
    "inputs": [
      "now: i64",
      "node_len: usize",
      "threat: u32"
    ],
    "nodes": [
      {
        "id": 83,
        "label": "Entry"
      },
      {
        "id": 84,
        "label": "let mut out = Vec :: new () ;"
      },
      {
        "id": 85,
        "label": "let seed = ((now as u64) . rotate_left (9)) ^ (threat as u64) ;"
      },
      {
        "id": 86,
        "label": "let mut turn = 0u8 ;"
      },
      {
        "id": 87,
        "label": "while (turn as usize) < node_len { let bias = ((seed >> (turn % 13)) as u32) % 100 ; let r = rarity_from_score (threat , bias) ; out . push (make_item (threat , r , turn)) ; turn = turn . saturating_add (1) ; }"
      },
      {
        "id": 88,
        "label": "let bias = ((seed >> (turn % 13)) as u32) % 100 ;"
      },
      {
        "id": 89,
        "label": "let r = rarity_from_score (threat , bias) ;"
      },
      {
        "id": 90,
        "label": "out . push (make_item (threat , r , turn)) ;"
      },
      {
        "id": 91,
        "label": "turn = turn . saturating_add (1) ;"
      },
      {
        "id": 92,
        "label": "out"
      }
    ],
    "edges": [
      {
        "from": 84,
        "to": 84,
        "label": "def: out"
      },
      {
        "from": 85,
        "to": 85,
        "label": "def: seed"
      },
      {
        "from": 86,
        "to": 86,
        "label": "def: turn"
      },
      {
        "from": 86,
        "to": 87,
        "label": "data_dep: turn"
      },
      {
        "from": 85,
        "to": 87,
        "label": "data_dep: seed"
      },
      {
        "from": 86,
        "to": 87,
        "label": "data_dep: turn"
      },
      {
        "from": 84,
        "to": 87,
        "label": "data_dep: out"
      },
      {
        "from": 86,
        "to": 87,
        "label": "data_dep: turn"
      },
      {
        "from": 86,
        "to": 87,
        "label": "data_dep: turn"
      },
      {
        "from": 86,
        "to": 87,
        "label": "data_dep: turn"
      },
      {
        "from": 88,
        "to": 88,
        "label": "def: bias"
      },
      {
        "from": 85,
        "to": 88,
        "label": "data_dep: seed"
      },
      {
        "from": 86,
        "to": 88,
        "label": "data_dep: turn"
      },
      {
        "from": 89,
        "to": 89,
        "label": "def: r"
      },
      {
        "from": 88,
        "to": 89,
        "label": "data_dep: bias"
      },
      {
        "from": 84,
        "to": 90,
        "label": "data_dep: out"
      },
      {
        "from": 89,
        "to": 90,
        "label": "data_dep: r"
      },
      {
        "from": 86,
        "to": 90,
        "label": "data_dep: turn"
      },
      {
        "from": 86,
        "to": 91,
        "label": "data_dep: turn"
      },
      {
        "from": 86,
        "to": 91,
        "label": "data_dep: turn"
      },
      {
        "from": 84,
        "to": 92,
        "label": "data_dep: out"
      }
    ]
  },
  {
    "name": "rarity_from_score",
    "inputs": [
      "threat: u32",
      "bias: u32"
    ],
    "nodes": [
      {
        "id": 93,
        "label": "Entry"
      },
      {
        "id": 94,
        "label": "let s = threat . saturating_add (bias) ;"
      },
      {
        "id": 95,
        "label": "let mut r = Rarity :: Common ;"
      },
      {
        "id": 96,
        "label": "if s >= 40 { r = Rarity :: Rare ; }"
      },
      {
        "id": 97,
        "label": "r = Rarity :: Rare ;"
      },
      {
        "id": 98,
        "label": "if s >= 80 { r = Rarity :: Epic ; }"
      },
      {
        "id": 99,
        "label": "r = Rarity :: Epic ;"
      },
      {
        "id": 100,
        "label": "if s >= 120 { r = Rarity :: Legendary ; }"
      },
      {
        "id": 101,
        "label": "r = Rarity :: Legendary ;"
      },
      {
        "id": 102,
        "label": "if s >= 180 { r = Rarity :: Mythic ; }"
      },
      {
        "id": 103,
        "label": "r = Rarity :: Mythic ;"
      },
      {
        "id": 104,
        "label": "r"
      }
    ],
    "edges": [
      {
        "from": 94,
        "to": 94,
        "label": "def: s"
      },
      {
        "from": 95,
        "to": 95,
        "label": "def: r"
      },
      {
        "from": 94,
        "to": 96,
        "label": "data_dep: s"
      },
      {
        "from": 95,
        "to": 96,
        "label": "data_dep: r"
      },
      {
        "from": 95,
        "to": 97,
        "label": "data_dep: r"
      },
      {
        "from": 94,
        "to": 98,
        "label": "data_dep: s"
      },
      {
        "from": 95,
        "to": 98,
        "label": "data_dep: r"
      },
      {
        "from": 95,
        "to": 99,
        "label": "data_dep: r"
      },
      {
        "from": 94,
        "to": 100,
        "label": "data_dep: s"
      },
      {
        "from": 95,
        "to": 100,
        "label": "data_dep: r"
      },
      {
        "from": 95,
        "to": 101,
        "label": "data_dep: r"
      },
      {
        "from": 94,
        "to": 102,
        "label": "data_dep: s"
      },
      {
        "from": 95,
        "to": 102,
        "label": "data_dep: r"
      },
      {
        "from": 95,
        "to": 103,
        "label": "data_dep: r"
      },
      {
        "from": 95,
        "to": 104,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "make_item",
    "inputs": [
      "threat: u32",
      "rarity: Rarity",
      "turn: u8"
    ],
    "nodes": [
      {
        "id": 105,
        "label": "Entry"
      },
      {
        "id": 106,
        "label": "let mut p = 10u32 ;"
      },
      {
        "id": 107,
        "label": "let mut d = 10u32 ;"
      },
      {
        "id": 108,
        "label": "let mut u = 1u32 ;"
      },
      {
        "id": 109,
        "label": "if matches ! (rarity , Rarity :: Rare) { p = p . saturating_add (20) ; d = d . saturating_add (15) ; u = u . saturating_add (1) ; }"
      },
      {
        "id": 110,
        "label": "p = p . saturating_add (20) ;"
      },
      {
        "id": 111,
        "label": "d = d . saturating_add (15) ;"
      },
      {
        "id": 112,
        "label": "u = u . saturating_add (1) ;"
      },
      {
        "id": 113,
        "label": "if matches ! (rarity , Rarity :: Epic) { p = p . saturating_add (40) ; d = d . saturating_add (35) ; u = u . saturating_add (2) ; }"
      },
      {
        "id": 114,
        "label": "p = p . saturating_add (40) ;"
      },
      {
        "id": 115,
        "label": "d = d . saturating_add (35) ;"
      },
      {
        "id": 116,
        "label": "u = u . saturating_add (2) ;"
      },
      {
        "id": 117,
        "label": "if matches ! (rarity , Rarity :: Legendary) { p = p . saturating_add (70) ; d = d . saturating_add (60) ; u = u . saturating_add (3) ; }"
      },
      {
        "id": 118,
        "label": "p = p . saturating_add (70) ;"
      },
      {
        "id": 119,
        "label": "d = d . saturating_add (60) ;"
      },
      {
        "id": 120,
        "label": "u = u . saturating_add (3) ;"
      },
      {
        "id": 121,
        "label": "if matches ! (rarity , Rarity :: Mythic) { p = p . saturating_add (120) ; d = d . saturating_add (110) ; u = u . saturating_add (4) ; }"
      },
      {
        "id": 122,
        "label": "p = p . saturating_add (120) ;"
      },
      {
        "id": 123,
        "label": "d = d . saturating_add (110) ;"
      },
      {
        "id": 124,
        "label": "u = u . saturating_add (4) ;"
      },
      {
        "id": 125,
        "label": "let spice = ((threat . rotate_left ((turn % 11) as u32)) % 23) as u32 ;"
      },
      {
        "id": 126,
        "label": "Loot { rarity , power : p . saturating_add (spice) , defense : d . saturating_add (spice / 2) , utility : u . saturating_add (spice % 3) }"
      }
    ],
    "edges": [
      {
        "from": 106,
        "to": 106,
        "label": "def: p"
      },
      {
        "from": 107,
        "to": 107,
        "label": "def: d"
      },
      {
        "from": 108,
        "to": 108,
        "label": "def: u"
      },
      {
        "from": 106,
        "to": 109,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 109,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 109,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 109,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 109,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 109,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 110,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 110,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 111,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 111,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 112,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 112,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 113,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 113,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 113,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 113,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 113,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 113,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 114,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 114,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 115,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 115,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 116,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 116,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 117,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 117,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 117,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 117,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 117,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 117,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 118,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 118,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 119,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 119,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 120,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 120,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 121,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 121,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 121,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 121,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 121,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 121,
        "label": "data_dep: u"
      },
      {
        "from": 106,
        "to": 122,
        "label": "data_dep: p"
      },
      {
        "from": 106,
        "to": 122,
        "label": "data_dep: p"
      },
      {
        "from": 107,
        "to": 123,
        "label": "data_dep: d"
      },
      {
        "from": 107,
        "to": 123,
        "label": "data_dep: d"
      },
      {
        "from": 108,
        "to": 124,
        "label": "data_dep: u"
      },
      {
        "from": 108,
        "to": 124,
        "label": "data_dep: u"
      },
      {
        "from": 125,
        "to": 125,
        "label": "def: spice"
      },
      {
        "from": 106,
        "to": 126,
        "label": "data_dep: p"
      },
      {
        "from": 125,
        "to": 126,
        "label": "data_dep: spice"
      },
      {
        "from": 107,
        "to": 126,
        "label": "data_dep: d"
      },
      {
        "from": 125,
        "to": 126,
        "label": "data_dep: spice"
      },
      {
        "from": 108,
        "to": 126,
        "label": "data_dep: u"
      },
      {
        "from": 125,
        "to": 126,
        "label": "data_dep: spice"
      }
    ]
  },
  {
    "name": "push_drops",
    "inputs": [
      "log: & mut Account < RaidLog >",
      "new_items: & Vec < Loot >"
    ],
    "nodes": [
      {
        "id": 127,
        "label": "Entry"
      },
      {
        "id": 128,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 129,
        "label": "while i < new_items . len () { log . recent . push (new_items [i] . clone ()) ; i = i . saturating_add (1) ; }"
      },
      {
        "id": 130,
        "label": "log . recent . push (new_items [i] . clone ()) ;"
      },
      {
        "id": 131,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 132,
        "label": "while log . recent . len () > 16 { log . recent . remove (0) ; }"
      },
      {
        "id": 133,
        "label": "log . recent . remove (0) ;"
      }
    ],
    "edges": [
      {
        "from": 128,
        "to": 128,
        "label": "def: i"
      },
      {
        "from": 128,
        "to": 129,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 129,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 129,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 129,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 130,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 131,
        "label": "data_dep: i"
      },
      {
        "from": 128,
        "to": 131,
        "label": "data_dep: i"
      }
    ]
  }
]