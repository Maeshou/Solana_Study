[
  {
    "name": "scan",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let n = decision_times . len () ;"
      },
      {
        "id": 2,
        "label": "let mut sum = 0u32 ;"
      },
      {
        "id": 3,
        "label": "let mut i = 0usize ;"
      },
      {
        "id": 4,
        "label": "Loop Start"
      },
      {
        "id": 5,
        "label": "sum = sum . saturating_add (decision_times [i]) ;"
      },
      {
        "id": 6,
        "label": "i = i . saturating_add (1) ;"
      },
      {
        "id": 7,
        "label": "Loop End"
      },
      {
        "id": 8,
        "label": "let mut consistency = 50u32 ;"
      },
      {
        "id": 9,
        "label": "if statement"
      },
      {
        "id": 10,
        "label": "predicate"
      },
      {
        "id": 11,
        "label": "n > 0"
      },
      {
        "id": 12,
        "label": "True body"
      },
      {
        "id": 13,
        "label": "let mean = sum / (n as u32) ;"
      },
      {
        "id": 14,
        "label": "let mut acc = 0u32 ;"
      },
      {
        "id": 15,
        "label": "let mut k = 0usize ;"
      },
      {
        "id": 16,
        "label": "Loop Start"
      },
      {
        "id": 17,
        "label": "let d = (decision_times [k] as i32 - mean as i32) . pow (2) as u32 ;"
      },
      {
        "id": 18,
        "label": "acc = acc . saturating_add (d) ;"
      },
      {
        "id": 19,
        "label": "k = k . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "Loop End"
      },
      {
        "id": 21,
        "label": "let var = acc / (n as u32) ;"
      },
      {
        "id": 22,
        "label": "let pen = (var / 100) . min (50) ;"
      },
      {
        "id": 23,
        "label": "consistency = 100 - pen ;"
      },
      {
        "id": 24,
        "label": "False body"
      },
      {
        "id": 25,
        "label": "No-op"
      },
      {
        "id": 26,
        "label": "merge"
      },
      {
        "id": 27,
        "label": "ctx . accounts . report . analysis = GameplayPattern { average_reaction_time : reaction_ms , decision_making_consistency : consistency , input_pattern_variance : reaction_ms / 10 , suspicious_activity_flags : notes , } ;"
      },
      {
        "id": 28,
        "label": "ctx . accounts . report . checked_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 29,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 4,
        "to": 7,
        "label": "while"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "predicate"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 9,
        "to": 12,
        "label": "true"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 16,
        "to": 20,
        "label": "while"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 9,
        "to": 24,
        "label": "false"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      }
    ]
  }
]