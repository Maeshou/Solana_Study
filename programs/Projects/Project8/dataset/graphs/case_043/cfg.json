[
  {
    "name": "join_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let character = & ctx . accounts . character_stats ;"
      },
      {
        "id": 2,
        "label": "let guild = & mut ctx . accounts . guild_data ;"
      },
      {
        "id": 3,
        "label": "let player = & ctx . accounts . player ;"
      },
      {
        "id": 4,
        "label": "require ! (character . level >= guild . minimum_level_to_join , GameError :: LevelTooLowForGuild) ;"
      },
      {
        "id": 5,
        "label": "require ! (guild . member_count < guild . max_members , GameError :: GuildIsFull) ;"
      },
      {
        "id": 6,
        "label": "Loop Start"
      },
      {
        "id": 7,
        "label": "require ! (* member != player . key () , GameError :: AlreadyInGuild) ;"
      },
      {
        "id": 8,
        "label": "Loop End"
      },
      {
        "id": 9,
        "label": "guild . members . push (player . key ()) ;"
      },
      {
        "id": 10,
        "label": "guild . member_count += 1 ;"
      },
      {
        "id": 11,
        "label": "let character_power = character . attack_power + character . defense_power ;"
      },
      {
        "id": 12,
        "label": "guild . total_power += u64 :: from (character_power) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Welcome to the guild! Player {} has joined.\" , player . key ()) ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Guild total power is now: {}\" , guild . total_power) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 6,
        "to": 8,
        "label": "for"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  }
]