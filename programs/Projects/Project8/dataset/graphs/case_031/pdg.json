[
  {
    "name": "init_shop",
    "inputs": [
      "ctx: Context < InitShop >",
      "catalog: Pubkey"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . shop ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . catalog = catalog ;"
      },
      {
        "id": 4,
        "label": "s . salt = 41u64 . rotate_left (2) . wrapping_add (9) ;"
      },
      {
        "id": 5,
        "label": "for k in 0 .. 3u8 { let x = (s . salt ^ (k as u64 * 23)) . rotate_left (1) ; s . salt = s . salt . wrapping_add (x) . wrapping_mul (2) . wrapping_add (5) ; }"
      },
      {
        "id": 6,
        "label": "let x = (s . salt ^ (k as u64 * 23)) . rotate_left (1) ;"
      },
      {
        "id": 7,
        "label": "s . salt = s . salt . wrapping_add (x) . wrapping_mul (2) . wrapping_add (5) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: x"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: s"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: x"
      }
    ]
  },
  {
    "name": "settle_refund",
    "inputs": [
      "ctx: Context < SettleRefund >",
      "lamports: u64"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . shop . key () , & ctx . accounts . customer . key () , lamports) ;"
      },
      {
        "id": 11,
        "label": "let bump = * ctx . bumps . get (\"shop\") . ok_or (error ! (ShopErr :: MissingBump)) ? ;"
      },
      {
        "id": 12,
        "label": "let seeds : & [& [u8]] = & [b\"shop\" , ctx . accounts . owner . key . as_ref () , ctx . accounts . shop . catalog . as_ref () , & [bump] ,] ;"
      },
      {
        "id": 13,
        "label": "invoke_signed (& ix , & [ctx . accounts . shop . to_account_info () , ctx . accounts . customer . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 14,
        "label": "emit ! (RefundSettled { to : ctx . accounts . customer . key () , amount : lamports }) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: ix"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: bump"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: bump"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: ix"
      }
    ]
  }
]