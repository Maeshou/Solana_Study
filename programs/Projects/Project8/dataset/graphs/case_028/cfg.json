[
  {
    "name": "initialize_station",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let station = & mut ctx . accounts . station ;"
      },
      {
        "id": 2,
        "label": "station . owner = ctx . accounts . crafter . key () ;"
      },
      {
        "id": 3,
        "label": "station . recipe = recipe ;"
      },
      {
        "id": 4,
        "label": "station . energy = seed . rotate_left (2) . wrapping_add (50) ;"
      },
      {
        "id": 5,
        "label": "station . cycles = 3 ;"
      },
      {
        "id": 6,
        "label": "let mut value = station . energy ;"
      },
      {
        "id": 7,
        "label": "let mut counter = 0u32 ;"
      },
      {
        "id": 8,
        "label": "Loop Start"
      },
      {
        "id": 9,
        "label": "counter = counter . saturating_add ((value % 17) as u32) ;"
      },
      {
        "id": 10,
        "label": "value = value . rotate_right (1) . wrapping_sub (13) ;"
      },
      {
        "id": 11,
        "label": "if statement"
      },
      {
        "id": 12,
        "label": "predicate"
      },
      {
        "id": 13,
        "label": "counter > 20"
      },
      {
        "id": 14,
        "label": "True body"
      },
      {
        "id": 15,
        "label": "value = value . wrapping_mul (2) . wrapping_add (counter as u64) ;"
      },
      {
        "id": 16,
        "label": "counter = counter . saturating_sub (7) ;"
      },
      {
        "id": 17,
        "label": "False body"
      },
      {
        "id": 18,
        "label": "No-op"
      },
      {
        "id": 19,
        "label": "merge"
      },
      {
        "id": 20,
        "label": "Loop End"
      },
      {
        "id": 21,
        "label": "station . energy = value ;"
      },
      {
        "id": 22,
        "label": "station . cycles = station . cycles . saturating_add (counter) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "predicate"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "true"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 11,
        "to": 17,
        "label": "false"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 16,
        "to": 19,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 8,
        "to": 20,
        "label": "while"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      }
    ]
  },
  {
    "name": "craft_reward",
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . station . key () , & ctx . accounts . player . key () , lamports) ;"
      },
      {
        "id": 26,
        "label": "let bump = * ctx . bumps . get (\"station\") . ok_or (error ! (CraftErr :: MissingBump)) ? ;"
      },
      {
        "id": 27,
        "label": "let seeds : & [& [u8]] = & [b\"station\" , ctx . accounts . crafter . key . as_ref () , ctx . accounts . station . recipe . as_ref () , & [bump] ,] ;"
      },
      {
        "id": 28,
        "label": "invoke_signed (& ix , & [ctx . accounts . station . to_account_info () , ctx . accounts . player . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 29,
        "label": "emit ! (CraftCompleted { token_id , to : ctx . accounts . player . key () , amount : lamports }) ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      }
    ]
  }
]