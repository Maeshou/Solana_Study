[
  {
    "name": "record_match_result",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RecordMatchResult >",
      "winner_score: u32",
      "loser_score: u32"
    ],
    "attributes": [],
    "body": [
      "let match_record = & mut ctx . accounts . match_record ;",
      "if winner_score <= loser_score",
      "{",
      "return err ! (ArenaError :: InvalidScore) ;",
      "}",
      "let mut elo_change = 10 ;",
      "if winner_score > loser_score * 2",
      "{",
      "elo_change = 20 ;",
      "}",
      "match_record . player_one = * ctx . accounts . player_one . key ;",
      "match_record . player_two = * ctx . accounts . player_two . key ;",
      "match_record . winner = * ctx . accounts . winner . key ;",
      "match_record . elo_change = elo_change ;",
      "match_record . bump = * ctx . bumps . get (\"match_record\") . unwrap () ;",
      "let mut round = 0 ;",
      "loop { round += 1 ; msg ! (\"Simulating battle log for round {}\" , round) ; if round > 5 { break ; } }",
      "msg ! (\"Match recorded. Winner: {}. Elo change: {}\" , match_record . winner , match_record . elo_change) ;",
      "Ok (())"
    ]
  },
  {
    "name": "RecordMatchResult",
    "node_type": "struct",
    "fields": [
      {
        "name": "match_record",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 32 + 32 + 4 + 1 , seeds = [b\"match\" . as_ref () , & hash (& [player_one . key () . to_bytes () , player_two . key () . to_bytes ()] . concat ()) . to_bytes ()] , bump)]",
        "field_type": "Account < 'info , MatchRecord >"
      },
      {
        "name": "player_one",
        "attribute": "# [doc = \" CHECK: This is not dangerous because we are just checking the key\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "player_two",
        "attribute": "# [doc = \" CHECK: This is not dangerous because we are just checking the key\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "winner",
        "attribute": "# [doc = \" CHECK: Winner must be one of the players\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "MatchRecord",
    "node_type": "struct",
    "fields": [
      {
        "name": "player_one",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "player_two",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "winner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "elo_change",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]