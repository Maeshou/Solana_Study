[
  {
    "name": "record_match_result",
    "inputs": [
      "ctx: Context < RecordMatchResult >",
      "winner_score: u32",
      "loser_score: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let match_record = & mut ctx . accounts . match_record ;"
      },
      {
        "id": 2,
        "label": "if winner_score <= loser_score { return err ! (ArenaError :: InvalidScore) ; }"
      },
      {
        "id": 3,
        "label": "return err ! (ArenaError :: InvalidScore) ;"
      },
      {
        "id": 4,
        "label": "let mut elo_change = 10 ;"
      },
      {
        "id": 5,
        "label": "if winner_score > loser_score * 2 { elo_change = 20 ; }"
      },
      {
        "id": 6,
        "label": "elo_change = 20 ;"
      },
      {
        "id": 7,
        "label": "match_record . player_one = * ctx . accounts . player_one . key ;"
      },
      {
        "id": 8,
        "label": "match_record . player_two = * ctx . accounts . player_two . key ;"
      },
      {
        "id": 9,
        "label": "match_record . winner = * ctx . accounts . winner . key ;"
      },
      {
        "id": 10,
        "label": "match_record . elo_change = elo_change ;"
      },
      {
        "id": 11,
        "label": "match_record . bump = * ctx . bumps . get (\"match_record\") . unwrap () ;"
      },
      {
        "id": 12,
        "label": "let mut round = 0 ;"
      },
      {
        "id": 13,
        "label": "loop { round += 1 ; msg ! (\"Simulating battle log for round {}\" , round) ; if round > 5 { break ; } }"
      },
      {
        "id": 14,
        "label": "round += 1 ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Simulating battle log for round {}\" , round) ;"
      },
      {
        "id": 16,
        "label": "if round > 5 { break ; }"
      },
      {
        "id": 17,
        "label": "break ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Match recorded. Winner: {}. Elo change: {}\" , match_record . winner , match_record . elo_change) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: match_record"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: elo_change"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: elo_change"
      },
      {
        "from": 4,
        "to": 6,
        "label": "data_dep: elo_change"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: match_record"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: match_record"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: match_record"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: match_record"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: elo_change"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: match_record"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: round"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: round"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: round"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: round"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: round"
      }
    ]
  }
]