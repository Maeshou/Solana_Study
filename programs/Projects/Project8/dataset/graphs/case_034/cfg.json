[
  {
    "name": "init_market",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . market ;"
      },
      {
        "id": 2,
        "label": "m . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 3,
        "label": "m . collection = collection ;"
      },
      {
        "id": 4,
        "label": "m . score = 1 ;"
      },
      {
        "id": 5,
        "label": "let mut x = 29u64 ;"
      },
      {
        "id": 6,
        "label": "Loop Start"
      },
      {
        "id": 7,
        "label": "x = x . rotate_left (1) . wrapping_add (11) ;"
      },
      {
        "id": 8,
        "label": "m . score = m . score . saturating_add (((x % 23) as u64) + 1) ;"
      },
      {
        "id": 9,
        "label": "Loop End"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 6,
        "to": 9,
        "label": "for"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      }
    ]
  },
  {
    "name": "settle_sale",
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let ix = system_instruction :: transfer (& ctx . accounts . market . key () , & ctx . accounts . seller . key () , proceeds) ;"
      },
      {
        "id": 13,
        "label": "let bump = * ctx . bumps . get (\"market\") . ok_or (error ! (MarketErr :: MissingBump)) ? ;"
      },
      {
        "id": 14,
        "label": "let seeds : & [& [u8]] = & [b\"market\" , ctx . accounts . operator . key . as_ref () , ctx . accounts . market . collection . as_ref () , & [bump] ,] ;"
      },
      {
        "id": 15,
        "label": "invoke_signed (& ix , & [ctx . accounts . market . to_account_info () , ctx . accounts . seller . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;"
      },
      {
        "id": 16,
        "label": "emit ! (SaleSettled { to : ctx . accounts . seller . key () , amount : proceeds }) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  }
]