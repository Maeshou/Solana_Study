[
  {
    "name": "init_board",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitBoard >",
      "quest_id: u64"
    ],
    "attributes": [],
    "body": [
      "let b = & mut ctx . accounts . board ;",
      "b . author = ctx . accounts . author . key () ;",
      "b . quest_id = quest_id . rotate_left (1) . wrapping_add (7) ;",
      "b . span = 1 ;",
      "let mut t = b . quest_id . rotate_right (2) . wrapping_add (13) ;",
      "let mut i = 0u8 ;",
      "loop { if i >= 4 { break ; } t = t . rotate_left (1) . wrapping_mul (3) . wrapping_add (5) ; b . span = b . span . saturating_add (((t % 19) as u32) + 1) ; i = i . saturating_add (1) ; }",
      "Ok (())"
    ]
  },
  {
    "name": "claim_reward",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ClaimReward >",
      "lamports: u64"
    ],
    "attributes": [],
    "body": [
      "let ix = system_instruction :: transfer (& ctx . accounts . board . key () , & ctx . accounts . hunter . key () , lamports) ;",
      "let bump = * ctx . bumps . get (\"board\") . ok_or (error ! (BoardErr :: MissingBump)) ? ;",
      "let seeds : & [& [u8]] = & [b\"board\" , ctx . accounts . author . key . as_ref () , & ctx . accounts . board . quest_id . to_le_bytes () , & [bump] ,] ;",
      "invoke_signed (& ix , & [ctx . accounts . board . to_account_info () , ctx . accounts . hunter . to_account_info () , ctx . accounts . system_program . to_account_info () ,] , & [seeds] ,) ? ;",
      "emit ! (QuestCompleted { quest_id : ctx . accounts . board . quest_id , to : ctx . accounts . hunter . key () , amount : lamports }) ;",
      "Ok (())"
    ]
  },
  {
    "name": "QuestCompleted",
    "node_type": "struct",
    "fields": [
      {
        "name": "quest_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "to",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "amount",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitBoard",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": "# [account (init , payer = author , space = 8 + 32 + 8 + 4 , seeds = [b\"board\" , author . key () . as_ref () , quest_id . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , BoardState >"
      },
      {
        "name": "author",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "quest_id",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ClaimReward",
    "node_type": "struct",
    "fields": [
      {
        "name": "board",
        "attribute": "# [account (mut , seeds = [b\"board\" , author . key () . as_ref () , board . quest_id . to_le_bytes () . as_ref ()] , bump)]",
        "field_type": "Account < 'info , BoardState >"
      },
      {
        "name": "hunter",
        "attribute": "# [account (mut)]",
        "field_type": "SystemAccount < 'info >"
      },
      {
        "name": "author",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BoardState",
    "node_type": "struct",
    "fields": [
      {
        "name": "author",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "quest_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "span",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]