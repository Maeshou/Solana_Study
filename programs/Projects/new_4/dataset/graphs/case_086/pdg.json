[
  {
    "name": "init_pool",
    "inputs": [
      "ctx: Context < InitPool >",
      "fee_bps: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 2,
        "label": "p . token_a_reserve = 0 ;"
      },
      {
        "id": 3,
        "label": "p . token_b_reserve = 0 ;"
      },
      {
        "id": 4,
        "label": "p . fee_bps = fee_bps ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "swap",
    "inputs": [
      "ctx: Context < Swap >",
      "amount_in: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let p = & mut ctx . accounts . pool ;"
      },
      {
        "id": 8,
        "label": "let amount_after_fee = amount_in - (amount_in * p . fee_bps as u64 / 10_000) ;"
      },
      {
        "id": 9,
        "label": "if p . token_a_reserve > 0 { let amount_out = amount_after_fee * p . token_b_reserve / p . token_a_reserve ; p . token_a_reserve += amount_after_fee ; p . token_b_reserve -= amount_out ; }"
      },
      {
        "id": 10,
        "label": "let amount_out = amount_after_fee * p . token_b_reserve / p . token_a_reserve ;"
      },
      {
        "id": 11,
        "label": "p . token_a_reserve += amount_after_fee ;"
      },
      {
        "id": 12,
        "label": "p . token_b_reserve -= amount_out ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: p"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: amount_after_fee"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: amount_after_fee"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: amount_after_fee"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: amount_out"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: amount_after_fee"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: amount_after_fee"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: amount_out"
      }
    ]
  }
]