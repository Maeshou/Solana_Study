[
  {
    "name": "schedule_event",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ScheduleEvent >",
      "timestamp: i64"
    ],
    "attributes": [],
    "body": [
      "let event = & mut ctx . accounts . event ;",
      "event . when = timestamp ;",
      "let reminder = & mut ctx . accounts . reminder ;",
      "if timestamp > Clock :: get () ? . unix_timestamp",
      "{",
      "reminder . active = true ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "ScheduleEvent",
    "node_type": "struct",
    "fields": [
      {
        "name": "event",
        "attribute": "# [account (init , payer = organizer , space = 8 + 8)]",
        "field_type": "Account < 'info , EventData >"
      },
      {
        "name": "reminder",
        "attribute": null,
        "field_type": "Account < 'info , ReminderData >"
      },
      {
        "name": "organizer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EventData",
    "node_type": "struct",
    "fields": [
      {
        "name": "when",
        "attribute": null,
        "field_type": "i64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ReminderData",
    "node_type": "struct",
    "fields": [
      {
        "name": "active",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]