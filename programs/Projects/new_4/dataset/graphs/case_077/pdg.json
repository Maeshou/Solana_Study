[
  {
    "name": "schedule_event",
    "inputs": [
      "ctx: Context < ScheduleEvent >",
      "timestamp: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let event = & mut ctx . accounts . event ;"
      },
      {
        "id": 2,
        "label": "event . when = timestamp ;"
      },
      {
        "id": 3,
        "label": "let reminder = & mut ctx . accounts . reminder ;"
      },
      {
        "id": 4,
        "label": "if timestamp > Clock :: get () ? . unix_timestamp { reminder . active = true ; }"
      },
      {
        "id": 5,
        "label": "reminder . active = true ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: event"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: event"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: reminder"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: reminder"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: reminder"
      }
    ]
  }
]