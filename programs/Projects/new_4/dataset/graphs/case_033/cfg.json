[
  {
    "name": "setup_analysis",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let an = & mut ctx . accounts . analytics ;"
      },
      {
        "id": 2,
        "label": "an . metric = metric ;"
      },
      {
        "id": 3,
        "label": "an . created_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_metric",
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "let an = & mut ctx . accounts . analytics ;"
      },
      {
        "id": 7,
        "label": "an . metric = new_metric ;"
      },
      {
        "id": 8,
        "label": "an . updated_at = Some (Clock :: get () ? . unix_timestamp) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      }
    ]
  },
  {
    "name": "log_cache",
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let ch = & mut ctx . accounts . cache_log ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "ch . logs . len () >= 20"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "ch . logs . remove (0) ;"
      },
      {
        "id": 17,
        "label": "False body"
      },
      {
        "id": 18,
        "label": "No-op"
      },
      {
        "id": 19,
        "label": "merge"
      },
      {
        "id": 20,
        "label": "ch . logs . push ((info , Clock :: get () ? . unix_timestamp)) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 12,
        "to": 17,
        "label": "false"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 16,
        "to": 19,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      }
    ]
  }
]