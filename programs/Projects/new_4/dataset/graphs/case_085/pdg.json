[
  {
    "name": "create_proposal",
    "inputs": [
      "ctx: Context < CreateProposal >",
      "description: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 2,
        "label": "p . proposer = ctx . accounts . proposer . key () ;"
      },
      {
        "id": 3,
        "label": "p . description = description ;"
      },
      {
        "id": 4,
        "label": "p . for_votes = 0 ;"
      },
      {
        "id": 5,
        "label": "p . against_votes = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "tally",
    "inputs": [
      "ctx: Context < Tally >",
      "votes: Vec < bool >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let p = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 9,
        "label": "let mut for_count = 0u32 ;"
      },
      {
        "id": 10,
        "label": "let mut against_count = 0u32 ;"
      },
      {
        "id": 11,
        "label": "for & v in votes . iter () { if v { for_count += 1 ; } else { against_count += 1 ; } }"
      },
      {
        "id": 12,
        "label": "if v { for_count += 1 ; } else { against_count += 1 ; }"
      },
      {
        "id": 13,
        "label": "for_count += 1 ;"
      },
      {
        "id": 14,
        "label": "against_count += 1 ;"
      },
      {
        "id": 15,
        "label": "p . for_votes = for_count ;"
      },
      {
        "id": 16,
        "label": "p . against_votes = against_count ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: p"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: for_count"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: against_count"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: for_count"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: against_count"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: for_count"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: against_count"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: for_count"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: against_count"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: for_count"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: against_count"
      }
    ]
  }
]