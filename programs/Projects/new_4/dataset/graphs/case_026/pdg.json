[
  {
    "name": "configure_notifications",
    "inputs": [
      "ctx: Context < ConfigureNotifications >",
      "email: String",
      "frequency: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let cfg = & mut ctx . accounts . notification_config ;"
      },
      {
        "id": 2,
        "label": "require ! (email . contains (\"@\") , ErrorCode :: InvalidEmail) ;"
      },
      {
        "id": 3,
        "label": "cfg . email = email ;"
      },
      {
        "id": 4,
        "label": "cfg . frequency = frequency ;"
      },
      {
        "id": 5,
        "label": "cfg . updated_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 6,
        "label": "let log = & mut ctx . accounts . activity_log ;"
      },
      {
        "id": 7,
        "label": "log . activities . push (format ! (\"configured: {}hz at {}\" , frequency , cfg . updated_at)) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: cfg"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: cfg"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: log"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: log"
      }
    ]
  },
  {
    "name": "update_preferences",
    "inputs": [
      "ctx: Context < ConfigureNotifications >",
      "new_email: Option < String >",
      "new_frequency: Option < u16 >"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let cfg = & mut ctx . accounts . notification_config ;"
      },
      {
        "id": 11,
        "label": "if let Some (e) = new_email { require ! (e . contains (\"@\") , ErrorCode :: InvalidEmail) ; cfg . email = e ; }"
      },
      {
        "id": 12,
        "label": "require ! (e . contains (\"@\") , ErrorCode :: InvalidEmail) ;"
      },
      {
        "id": 13,
        "label": "cfg . email = e ;"
      },
      {
        "id": 14,
        "label": "if let Some (f) = new_frequency { cfg . frequency = f ; }"
      },
      {
        "id": 15,
        "label": "cfg . frequency = f ;"
      },
      {
        "id": 16,
        "label": "cfg . updated_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 17,
        "label": "let log = & mut ctx . accounts . activity_log ;"
      },
      {
        "id": 18,
        "label": "log . activities . push (format ! (\"updated at {}\" , cfg . updated_at)) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: cfg"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: cfg"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: cfg"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: cfg"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: cfg"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: cfg"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: log"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: log"
      }
    ]
  },
  {
    "name": "log_activity",
    "inputs": [
      "ctx: Context < ConfigureNotifications >",
      "activity: String"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let log = & mut ctx . accounts . activity_log ;"
      },
      {
        "id": 22,
        "label": "if log . activities . len () >= 100 { log . activities . remove (0) ; }"
      },
      {
        "id": 23,
        "label": "log . activities . remove (0) ;"
      },
      {
        "id": 24,
        "label": "log . activities . push (activity) ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: log"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: log"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: log"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: log"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: log"
      }
    ]
  }
]