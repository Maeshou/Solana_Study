[
  {
    "name": "init_brew",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "a . house . alchemist = a . alchemist . key () ;"
      },
      {
        "id": 3,
        "label": "a . house . base_q32 = base_q32 ;"
      },
      {
        "id": 4,
        "label": "a . house . stage = Mash ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "infuse",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let a = & mut ctx . accounts ;"
      },
      {
        "id": 8,
        "label": "Loop Start"
      },
      {
        "id": 9,
        "label": "a . kettle . essence_q32 = a . kettle . essence_q32 . wrapping_add (a . house . base_q32 >> 6) ;"
      },
      {
        "id": 10,
        "label": "a . kettle . density_q32 = ((u128 :: from (a . kettle . density_q32) * 5) / 4) . min (u128 :: from (u64 :: MAX)) as u64 ;"
      },
      {
        "id": 11,
        "label": "a . kettle . tint = a . kettle . tint . rotate_left (3) ^ (a . kettle . tint >> 2) ;"
      },
      {
        "id": 12,
        "label": "a . ledger . casks = a . ledger . casks . wrapping_add (1) ;"
      },
      {
        "id": 13,
        "label": "Loop End"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "(a . kettle . essence_q32 >> 32) > 200"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "a . house . stage = Age ;"
      },
      {
        "id": 19,
        "label": "a . ledger . notes = a . ledger . notes . wrapping_add (3) ;"
      },
      {
        "id": 20,
        "label": "a . kettle . density_q32 = a . kettle . density_q32 + (1u64 << 31) ;"
      },
      {
        "id": 21,
        "label": "a . kettle . tint ^= 0x6D6D_AAAA ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"aging: notes+3, density+0.5, tint xor\") ;"
      },
      {
        "id": 23,
        "label": "False body"
      },
      {
        "id": 24,
        "label": "a . house . stage = Boil ;"
      },
      {
        "id": 25,
        "label": "a . ledger . casks = a . ledger . casks . wrapping_mul (2) ;"
      },
      {
        "id": 26,
        "label": "a . kettle . essence_q32 = a . kettle . essence_q32 + (1u64 << 32) ;"
      },
      {
        "id": 27,
        "label": "a . kettle . tint = a . kettle . tint . wrapping_add (11) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"boiling: casks*2, essence+1.0, tint+11\") ;"
      },
      {
        "id": 29,
        "label": "merge"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 8,
        "to": 13,
        "label": "for"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 14,
        "to": 23,
        "label": "false"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 22,
        "to": 29,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      }
    ]
  }
]