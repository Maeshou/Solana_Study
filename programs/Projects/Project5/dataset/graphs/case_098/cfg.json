[
  {
    "name": "init_smithy",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . smithy ;"
      },
      {
        "id": 2,
        "label": "s . master = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "s . name = name ;"
      },
      {
        "id": 4,
        "label": "s . capacity = 12 ;"
      },
      {
        "id": 5,
        "label": "s . open = true ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_gear",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let g = & mut ctx . accounts . gear ;"
      },
      {
        "id": 9,
        "label": "g . parent = ctx . accounts . smithy . key () ;"
      },
      {
        "id": 10,
        "label": "g . kind = kind ;"
      },
      {
        "id": 11,
        "label": "g . power = (seed & 0xFF) as u32 ;"
      },
      {
        "id": 12,
        "label": "g . durability = 1000 ;"
      },
      {
        "id": 13,
        "label": "g . state = Idle ;"
      },
      {
        "id": 14,
        "label": "g . locked = false ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_refine",
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let a = & mut ctx . accounts . left ;"
      },
      {
        "id": 18,
        "label": "let b = & mut ctx . accounts . right ;"
      },
      {
        "id": 19,
        "label": "Loop Start"
      },
      {
        "id": 20,
        "label": "let tri = (t as i64 % 8 - 4) . abs () as u32 ;"
      },
      {
        "id": 21,
        "label": "a . power = a . power . saturating_add (tri) - (tri / 2) ;"
      },
      {
        "id": 22,
        "label": "b . power = b . power . saturating_add (3 * tri / 2) - tri / 3 ;"
      },
      {
        "id": 23,
        "label": "Loop End"
      },
      {
        "id": 24,
        "label": "if statement"
      },
      {
        "id": 25,
        "label": "predicate"
      },
      {
        "id": 26,
        "label": "a . power >= b . power"
      },
      {
        "id": 27,
        "label": "True body"
      },
      {
        "id": 28,
        "label": "a . state = Busy ;"
      },
      {
        "id": 29,
        "label": "b . state = Idle ;"
      },
      {
        "id": 30,
        "label": "a . durability = a . durability . saturating_sub (7) ;"
      },
      {
        "id": 31,
        "label": "b . durability = b . durability . checked_add (2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Left refines more, right cools down\") ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "b . state = Busy ;"
      },
      {
        "id": 35,
        "label": "a . state = Idle ;"
      },
      {
        "id": 36,
        "label": "b . durability = b . durability . saturating_sub (7) ;"
      },
      {
        "id": 37,
        "label": "a . durability = a . durability . checked_add (2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Right refines more, left cools down\") ;"
      },
      {
        "id": 39,
        "label": "merge"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 19,
        "to": 23,
        "label": "for"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "predicate"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 24,
        "to": 27,
        "label": "true"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 24,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 32,
        "to": 39,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      }
    ]
  }
]