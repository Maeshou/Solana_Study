[
  {
    "name": "init_arena",
    "inputs": [
      "ctx: Context < InitArena >",
      "limit: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . arena . host = ctx . accounts . organizer . key () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . arena . limit = limit ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . arena . open = true ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . board . total = 0 ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . board . fights = 0 ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . match_cfg . rounds = 3 ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . match_cfg . strict = true ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "duel",
    "inputs": [
      "ctx: Context < Duel >",
      "hits_a: u32",
      "hits_b: u32"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "require ! (ctx . accounts . fighter_a . key () != ctx . accounts . fighter_b . key () , ArenaErr :: Dup) ;"
      },
      {
        "id": 11,
        "label": "require ! (ctx . accounts . arena . key () != ctx . accounts . board . key () , ArenaErr :: Dup) ;"
      },
      {
        "id": 12,
        "label": "for _ in 0 .. hits_a { ctx . accounts . fighter_a . score = ctx . accounts . fighter_a . score . saturating_add (1) ; ctx . accounts . board . total = ctx . accounts . board . total . saturating_add (1) ; }"
      },
      {
        "id": 13,
        "label": "ctx . accounts . fighter_a . score = ctx . accounts . fighter_a . score . saturating_add (1) ;"
      },
      {
        "id": 14,
        "label": "ctx . accounts . board . total = ctx . accounts . board . total . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "for _ in 0 .. hits_b { ctx . accounts . fighter_b . score = ctx . accounts . fighter_b . score . saturating_add (1) ; ctx . accounts . board . total = ctx . accounts . board . total . saturating_add (1) ; }"
      },
      {
        "id": 16,
        "label": "ctx . accounts . fighter_b . score = ctx . accounts . fighter_b . score . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "ctx . accounts . board . total = ctx . accounts . board . total . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "if ctx . accounts . board . total > ctx . accounts . arena . limit as u64 { ctx . accounts . arena . open = false ; ctx . accounts . board . fights = ctx . accounts . board . fights . saturating_add (1) ; ctx . accounts . match_cfg . strict = true ; msg ! (\"limit exceeded\") ; } else { ctx . accounts . arena . open = true ; ctx . accounts . board . fights = ctx . accounts . board . fights . saturating_add (1) ; ctx . accounts . match_cfg . strict = false ; msg ! (\"ok\") ; }"
      },
      {
        "id": 19,
        "label": "ctx . accounts . arena . open = false ;"
      },
      {
        "id": 20,
        "label": "ctx . accounts . board . fights = ctx . accounts . board . fights . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "ctx . accounts . match_cfg . strict = true ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"limit exceeded\") ;"
      },
      {
        "id": 23,
        "label": "ctx . accounts . arena . open = true ;"
      },
      {
        "id": 24,
        "label": "ctx . accounts . board . fights = ctx . accounts . board . fights . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "ctx . accounts . match_cfg . strict = false ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"ok\") ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]