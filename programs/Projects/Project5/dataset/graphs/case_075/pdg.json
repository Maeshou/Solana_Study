[
  {
    "name": "init_map",
    "inputs": [
      "ctx: Context < InitMap >",
      "pop: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . map ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . overseer . key () ;"
      },
      {
        "id": 3,
        "label": "m . limit = pop . saturating_mul (3) + 100 ;"
      },
      {
        "id": 4,
        "label": "m . phase = Prep ;"
      },
      {
        "id": 5,
        "label": "let p = & mut ctx . accounts . path_a ;"
      },
      {
        "id": 6,
        "label": "let q = & mut ctx . accounts . path_b ;"
      },
      {
        "id": 7,
        "label": "let g = & mut ctx . accounts . grid ;"
      },
      {
        "id": 8,
        "label": "let mut x = (pop as u64) . max (1) ;"
      },
      {
        "id": 9,
        "label": "let k = 1000u64 ;"
      },
      {
        "id": 10,
        "label": "let delta = (x * (k - x)) / k ;"
      },
      {
        "id": 11,
        "label": "p . parent = m . key () ;"
      },
      {
        "id": 12,
        "label": "p . node = (pop & 7) as u8 ;"
      },
      {
        "id": 13,
        "label": "p . strength = (x + delta) as u32 % 777 + 33 ;"
      },
      {
        "id": 14,
        "label": "q . parent = m . key () ;"
      },
      {
        "id": 15,
        "label": "q . node = ((pop >> 2) & 7) as u8 ;"
      },
      {
        "id": 16,
        "label": "q . strength = ((x / 2 + delta) as u32 % 701) + 21 ;"
      },
      {
        "id": 17,
        "label": "g . parent = m . key () ;"
      },
      {
        "id": 18,
        "label": "g . node = 9 ;"
      },
      {
        "id": 19,
        "label": "g . ticks = 0 ;"
      },
      {
        "id": 20,
        "label": "g . hash = (x ^ delta) as u64 ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: p"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: q"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: g"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: x"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: k"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: delta"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: x"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: k"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: x"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: k"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: m"
      },
      {
        "from": 5,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 5,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: x"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: delta"
      },
      {
        "from": 6,
        "to": 14,
        "label": "data_dep: q"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: m"
      },
      {
        "from": 6,
        "to": 15,
        "label": "data_dep: q"
      },
      {
        "from": 6,
        "to": 16,
        "label": "data_dep: q"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: x"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: delta"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: m"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 19,
        "label": "data_dep: g"
      },
      {
        "from": 7,
        "to": 20,
        "label": "data_dep: g"
      },
      {
        "from": 8,
        "to": 20,
        "label": "data_dep: x"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: delta"
      }
    ]
  },
  {
    "name": "hold",
    "inputs": [
      "ctx: Context < Hold >",
      "t: u32"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let m = & mut ctx . accounts . map ;"
      },
      {
        "id": 24,
        "label": "let p = & mut ctx . accounts . path_a ;"
      },
      {
        "id": 25,
        "label": "let q = & mut ctx . accounts . path_b ;"
      },
      {
        "id": 26,
        "label": "let g = & mut ctx . accounts . grid ;"
      },
      {
        "id": 27,
        "label": "for i in 0 .. t { let z = ((p . strength ^ q . strength) as u64) . wrapping_mul (1469598103934665603) ; p . strength = p . strength . checked_add (((z & 63) as u32) + 3) . unwrap_or (u32 :: MAX) ; q . strength = q . strength . saturating_add ((((z >> 6) & 63) as u32) + 5) ; g . ticks = g . ticks . saturating_add (1) ; g . hash ^= z . rotate_left ((i % 19) as u32) ; }"
      },
      {
        "id": 28,
        "label": "let z = ((p . strength ^ q . strength) as u64) . wrapping_mul (1469598103934665603) ;"
      },
      {
        "id": 29,
        "label": "p . strength = p . strength . checked_add (((z & 63) as u32) + 3) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 30,
        "label": "q . strength = q . strength . saturating_add ((((z >> 6) & 63) as u32) + 5) ;"
      },
      {
        "id": 31,
        "label": "g . ticks = g . ticks . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "g . hash ^= z . rotate_left ((i % 19) as u32) ;"
      },
      {
        "id": 33,
        "label": "let total = p . strength + q . strength ;"
      },
      {
        "id": 34,
        "label": "if total > m . limit { m . phase = Surge ; p . node ^= 0x1 ; q . node = q . node . saturating_add (1) ; g . ticks = g . ticks . saturating_add (10) ; msg ! (\"surge: node tweak & ticks+10\") ; } else { m . phase = Hold ; p . strength = p . strength . saturating_add (7) ; q . strength = q . strength / 2 + 9 ; g . hash ^= 0x0FF0_FF0F ; msg ! (\"hold: adjust strengths & hash flip\") ; }"
      },
      {
        "id": 35,
        "label": "m . phase = Surge ;"
      },
      {
        "id": 36,
        "label": "p . node ^= 0x1 ;"
      },
      {
        "id": 37,
        "label": "q . node = q . node . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "g . ticks = g . ticks . saturating_add (10) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"surge: node tweak & ticks+10\") ;"
      },
      {
        "id": 40,
        "label": "m . phase = Hold ;"
      },
      {
        "id": 41,
        "label": "p . strength = p . strength . saturating_add (7) ;"
      },
      {
        "id": 42,
        "label": "q . strength = q . strength / 2 + 9 ;"
      },
      {
        "id": 43,
        "label": "g . hash ^= 0x0FF0_FF0F ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"hold: adjust strengths & hash flip\") ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 23,
        "to": 23,
        "label": "def: m"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: p"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: q"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: g"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: q"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: g"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: z"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: q"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: p"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: z"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: q"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: z"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: z"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: total"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: q"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: total"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 36,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 37,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 40,
        "label": "data_dep: m"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: p"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: p"
      },
      {
        "from": 25,
        "to": 42,
        "label": "data_dep: q"
      },
      {
        "from": 25,
        "to": 42,
        "label": "data_dep: q"
      },
      {
        "from": 26,
        "to": 43,
        "label": "data_dep: g"
      }
    ]
  }
]