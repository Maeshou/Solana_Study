[
  {
    "name": "init_reef",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitReef >",
      "cap: u32"
    ],
    "attributes": [],
    "body": [
      "let r = & mut ctx . accounts ;",
      "r . pool . keeper = r . keeper . key () ;",
      "r . pool . cap = cap ;",
      "r . pool . state = Calm ;",
      "r . pet . pool = r . pool . key () ;",
      "r . pet . slot = 1 ;",
      "r . feeder . pool = r . pool . key () ;",
      "r . feeder . slot = 2 ;",
      "r . log . pool = r . pool . key () ;",
      "r . log . slot = 9 ;",
      "Ok (())"
    ]
  },
  {
    "name": "feed",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Feed >",
      "scoops: u32"
    ],
    "attributes": [],
    "body": [
      "let r = & mut ctx . accounts ;",
      "for i in 0 .. scoops",
      "{",
      "r . pet . size = r . pet . size . checked_add (6 + (i % 4)) . unwrap_or (u32 :: MAX) ;",
      "r . feeder . stock = r . feeder . stock . saturating_add (3 + (i % 3)) ;",
      "r . log . events = r . log . events . saturating_add (1) ;",
      "}",
      "if r . pet . size as u64 > r . pool . cap as u64",
      "{",
      "r . pool . state = Bloom ;",
      "r . log . bonus = r . log . bonus . saturating_add (2) ;",
      "r . feeder . stock = r . feeder . stock / 2 + 5 ;",
      "r . pet . size = r . pet . size / 2 + 7 ;",
      "msg ! (\"bloom: bonus+2, damp size/stock\") ;",
      "} else",
      "{",
      "r . pool . state = Feed ;",
      "r . log . events = r . log . events . saturating_add (3) ;",
      "r . pet . size = r . pet . size . saturating_add (9) ;",
      "r . feeder . stock = r . feeder . stock . saturating_add (7) ;",
      "msg ! (\"feed: events+3, size+9, stock+7\") ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitReef",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 4 + 1)]",
        "field_type": "Account < 'info , Pool >"
      },
      {
        "name": "pet",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 1 + 4)]",
        "field_type": "Account < 'info , Pet >"
      },
      {
        "name": "feeder",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 1 + 4)]",
        "field_type": "Account < 'info , Feeder >"
      },
      {
        "name": "log",
        "attribute": "# [account (init , payer = payer , space = 8 + 32 + 1 + 8 + 4)]",
        "field_type": "Account < 'info , ReefLog >"
      },
      {
        "name": "payer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "keeper",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Feed",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool",
        "attribute": "# [account (mut , has_one = keeper)]",
        "field_type": "Account < 'info , Pool >"
      },
      {
        "name": "pet",
        "attribute": "# [account (mut , has_one = pool , constraint = pet . slot != feeder . slot @ CfErr :: Dup)]",
        "field_type": "Account < 'info , Pet >"
      },
      {
        "name": "feeder",
        "attribute": "# [account (mut , has_one = pool , constraint = feeder . slot != log . slot @ CfErr :: Dup)]",
        "field_type": "Account < 'info , Feeder >"
      },
      {
        "name": "log",
        "attribute": "# [account (mut , has_one = pool)]",
        "field_type": "Account < 'info , ReefLog >"
      },
      {
        "name": "keeper",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pool",
    "node_type": "struct",
    "fields": [
      {
        "name": "keeper",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "cap",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "state",
        "attribute": null,
        "field_type": "ReefState"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Pet",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "slot",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "size",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Feeder",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "slot",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "stock",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ReefLog",
    "node_type": "struct",
    "fields": [
      {
        "name": "pool",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "slot",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "events",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "bonus",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]