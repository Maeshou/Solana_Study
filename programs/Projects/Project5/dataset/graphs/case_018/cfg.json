[
  {
    "name": "init_board",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . board . host = ctx . accounts . master . key () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . board . need = need ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . board . flag = ExpeditionFlag :: Idle ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . party . leader = ctx . accounts . explorer . key () ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . party . level = 1 ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . party . ok = 1 ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . log . steps = 0 ;"
      },
      {
        "id": 8,
        "label": "ctx . accounts . log . loot = 0 ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      }
    ]
  },
  {
    "name": "explore",
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "assert_ne ! (ctx . accounts . board . key () , ctx . accounts . party . key () , \"dup board/party\") ;"
      },
      {
        "id": 12,
        "label": "assert_ne ! (ctx . accounts . board . key () , ctx . accounts . log . key () , \"dup board/log\") ;"
      },
      {
        "id": 13,
        "label": "let mut s = 0 ;"
      },
      {
        "id": 14,
        "label": "Loop Start"
      },
      {
        "id": 15,
        "label": "ctx . accounts . party . level = ctx . accounts . party . level . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "ctx . accounts . log . steps = ctx . accounts . log . steps . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "ctx . accounts . log . loot = ctx . accounts . log . loot . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "s += 1 ;"
      },
      {
        "id": 19,
        "label": "Loop End"
      },
      {
        "id": 20,
        "label": "if statement"
      },
      {
        "id": 21,
        "label": "predicate"
      },
      {
        "id": 22,
        "label": "steps >= ctx . accounts . board . need"
      },
      {
        "id": 23,
        "label": "True body"
      },
      {
        "id": 24,
        "label": "ctx . accounts . board . flag = ExpeditionFlag :: Running ;"
      },
      {
        "id": 25,
        "label": "ctx . accounts . party . ok = 0 ;"
      },
      {
        "id": 26,
        "label": "ctx . accounts . log . loot = ctx . accounts . log . loot . saturating_add (4) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"milestone reached; bonus loot\") ;"
      },
      {
        "id": 28,
        "label": "False body"
      },
      {
        "id": 29,
        "label": "ctx . accounts . board . flag = ExpeditionFlag :: Idle ;"
      },
      {
        "id": 30,
        "label": "ctx . accounts . party . ok = 1 ;"
      },
      {
        "id": 31,
        "label": "ctx . accounts . log . steps = ctx . accounts . log . steps . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"keep exploring; +1 step\") ;"
      },
      {
        "id": 33,
        "label": "merge"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 14,
        "to": 19,
        "label": "while"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "predicate"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 20,
        "to": 23,
        "label": "true"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 20,
        "to": 28,
        "label": "false"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 27,
        "to": 33,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      }
    ]
  }
]