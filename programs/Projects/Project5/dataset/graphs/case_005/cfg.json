[
  {
    "name": "init_ledger",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 2,
        "label": "l . owner = ctx . accounts . member . key () ;"
      },
      {
        "id": 3,
        "label": "l . tier = tier ;"
      },
      {
        "id": 4,
        "label": "l . cap = cap ;"
      },
      {
        "id": 5,
        "label": "let c = & mut ctx . accounts . counters ;"
      },
      {
        "id": 6,
        "label": "c . accum = 0 ;"
      },
      {
        "id": 7,
        "label": "c . ops = 0 ;"
      },
      {
        "id": 8,
        "label": "c . hot = true ;"
      },
      {
        "id": 9,
        "label": "let s = & mut ctx . accounts . settings ;"
      },
      {
        "id": 10,
        "label": "s . fee = 3 ;"
      },
      {
        "id": 11,
        "label": "s . open = true ;"
      },
      {
        "id": 12,
        "label": "s . bump = * ctx . bumps . get (\"settings\") . unwrap () ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      }
    ]
  },
  {
    "name": "credit_points",
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "require_keys_neq ! (ctx . accounts . ledger . key () , ctx . accounts . counters . key () , LLError :: SameAccount) ;"
      },
      {
        "id": 16,
        "label": "require_keys_neq ! (ctx . accounts . ledger . key () , ctx . accounts . settings . key () , LLError :: SameAccount) ;"
      },
      {
        "id": 17,
        "label": "let mut i = 0u32 ;"
      },
      {
        "id": 18,
        "label": "Loop Start"
      },
      {
        "id": 19,
        "label": "ctx . accounts . counters . accum = ctx . accounts . counters . accum . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "ctx . accounts . counters . ops = ctx . accounts . counters . ops . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "i += 1 ;"
      },
      {
        "id": 22,
        "label": "Loop End"
      },
      {
        "id": 23,
        "label": "if statement"
      },
      {
        "id": 24,
        "label": "predicate"
      },
      {
        "id": 25,
        "label": "(ctx . accounts . counters . accum as u64) > ctx . accounts . ledger . cap"
      },
      {
        "id": 26,
        "label": "True body"
      },
      {
        "id": 27,
        "label": "ctx . accounts . settings . open = false ;"
      },
      {
        "id": 28,
        "label": "ctx . accounts . counters . hot = false ;"
      },
      {
        "id": 29,
        "label": "ctx . accounts . counters . ops = ctx . accounts . counters . ops . saturating_add (10) ;"
      },
      {
        "id": 30,
        "label": "msg ! (\"Cap exceeded: accum={}, cap={}\" , ctx . accounts . counters . accum , ctx . accounts . ledger . cap) ;"
      },
      {
        "id": 31,
        "label": "False body"
      },
      {
        "id": 32,
        "label": "ctx . accounts . settings . fee = ctx . accounts . settings . fee . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "ctx . accounts . counters . hot = true ;"
      },
      {
        "id": 34,
        "label": "ctx . accounts . counters . ops = ctx . accounts . counters . ops . saturating_add (2) ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Within cap: accum={}, fee={}\" , ctx . accounts . counters . accum , ctx . accounts . settings . fee) ;"
      },
      {
        "id": 36,
        "label": "merge"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 18,
        "to": 22,
        "label": "while"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "predicate"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "true"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 23,
        "to": 31,
        "label": "false"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 30,
        "to": 36,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  }
]