[
  {
    "name": "init_subscription",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . subscriber_info . subscriber = * ctx . accounts . subscriber . key ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . subscriber_info . active = true ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . subscriber_info . bump = * ctx . bumps . get (\"subscriber_info\") . unwrap () ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . plan_config . price = 100 ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . plan_config . duration = 30 ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . plan_config . max_users = 1000 ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . subscription_stats . renewals = 0 ;"
      },
      {
        "id": 8,
        "label": "ctx . accounts . subscription_stats . cancellations = 0 ;"
      },
      {
        "id": 9,
        "label": "ctx . accounts . subscription_stats . is_active = true ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      }
    ]
  },
  {
    "name": "renew_subscription",
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let mut count = 0u32 ;"
      },
      {
        "id": 13,
        "label": "Loop Start"
      },
      {
        "id": 14,
        "label": "count += 1 ;"
      },
      {
        "id": 15,
        "label": "Loop End"
      },
      {
        "id": 16,
        "label": "assert_ne ! (ctx . accounts . subscriber_info . key () , ctx . accounts . plan_config . key () , \"accounts must differ\") ;"
      },
      {
        "id": 17,
        "label": "if statement"
      },
      {
        "id": 18,
        "label": "predicate"
      },
      {
        "id": 19,
        "label": "count > ctx . accounts . plan_config . max_users"
      },
      {
        "id": 20,
        "label": "True body"
      },
      {
        "id": 21,
        "label": "ctx . accounts . subscription_stats . renewals -= 1 ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"Exceeded max users\") ;"
      },
      {
        "id": 23,
        "label": "ctx . accounts . subscription_stats . is_active = false ;"
      },
      {
        "id": 24,
        "label": "ctx . accounts . plan_config . duration -= months ;"
      },
      {
        "id": 25,
        "label": "False body"
      },
      {
        "id": 26,
        "label": "ctx . accounts . subscription_stats . renewals += 1 ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"Subscription renewed\") ;"
      },
      {
        "id": 28,
        "label": "ctx . accounts . subscription_stats . is_active = true ;"
      },
      {
        "id": 29,
        "label": "ctx . accounts . plan_config . duration += months ;"
      },
      {
        "id": 30,
        "label": "merge"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 13,
        "to": 15,
        "label": "for"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "predicate"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 17,
        "to": 20,
        "label": "true"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 17,
        "to": 25,
        "label": "false"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 24,
        "to": 30,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      }
    ]
  }
]