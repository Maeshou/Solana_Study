[
  {
    "name": "init_rally",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "r . track . host = r . host . key () ;"
      },
      {
        "id": 3,
        "label": "r . track . laps = laps ;"
      },
      {
        "id": 4,
        "label": "r . track . stage = Grid ;"
      },
      {
        "id": 5,
        "label": "r . cart_a . track = r . track . key () ;"
      },
      {
        "id": 6,
        "label": "r . cart_a . lane = 5 ;"
      },
      {
        "id": 7,
        "label": "r . cart_b . track = r . track . key () ;"
      },
      {
        "id": 8,
        "label": "r . cart_b . lane = 8 ;"
      },
      {
        "id": 9,
        "label": "r . stats . track = r . track . key () ;"
      },
      {
        "id": 10,
        "label": "r . stats . lane = 99 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      }
    ]
  },
  {
    "name": "run",
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let r = & mut ctx . accounts ;"
      },
      {
        "id": 14,
        "label": "Loop Start"
      },
      {
        "id": 15,
        "label": "r . cart_a . time = r . cart_a . time . saturating_add (10 + (i % 3)) ;"
      },
      {
        "id": 16,
        "label": "r . cart_b . time = r . cart_b . time . saturating_add (9 + (i % 4)) ;"
      },
      {
        "id": 17,
        "label": "r . stats . total = r . stats . total . saturating_add (7) ;"
      },
      {
        "id": 18,
        "label": "Loop End"
      },
      {
        "id": 19,
        "label": "if statement"
      },
      {
        "id": 20,
        "label": "predicate"
      },
      {
        "id": 21,
        "label": "r . stats . total > (r . track . laps as u64) * 15"
      },
      {
        "id": 22,
        "label": "True body"
      },
      {
        "id": 23,
        "label": "r . track . stage = Cooldown ;"
      },
      {
        "id": 24,
        "label": "r . stats . heats = r . stats . heats . saturating_add (3) ;"
      },
      {
        "id": 25,
        "label": "r . cart_b . flags = r . cart_b . flags . saturating_add (2) ;"
      },
      {
        "id": 26,
        "label": "r . cart_a . flags = r . cart_a . flags . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"cooldown: heats+3, flags updated\") ;"
      },
      {
        "id": 28,
        "label": "False body"
      },
      {
        "id": 29,
        "label": "r . track . stage = Sprint ;"
      },
      {
        "id": 30,
        "label": "r . stats . heats = r . stats . heats . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "r . cart_a . time = r . cart_a . time . saturating_add (6) ;"
      },
      {
        "id": 32,
        "label": "r . cart_b . time = r . cart_b . time . saturating_add (6) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"sprint: heats+1, times+6\") ;"
      },
      {
        "id": 34,
        "label": "merge"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 14,
        "to": 18,
        "label": "for"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "predicate"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 19,
        "to": 22,
        "label": "true"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 19,
        "to": 28,
        "label": "false"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 27,
        "to": 34,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      }
    ]
  }
]