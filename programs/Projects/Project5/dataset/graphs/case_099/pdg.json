[
  {
    "name": "radical_inverse_base2",
    "inputs": [
      "mut x: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let mut y = 0u32 ;"
      },
      {
        "id": 2,
        "label": "for _ in 0 .. 16 { y = (y << 1) | (x & 1) ; x >>= 1 ; }"
      },
      {
        "id": 3,
        "label": "y = (y << 1) | (x & 1) ;"
      },
      {
        "id": 4,
        "label": "x >>= 1 ;"
      },
      {
        "id": 5,
        "label": "y"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: y"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: y"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: y"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: y"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: y"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: y"
      }
    ]
  },
  {
    "name": "init_mosaic",
    "inputs": [
      "ctx: Context < InitMosaic >",
      "w: u32",
      "h: u32"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let s = & mut ctx . accounts . studio ;"
      },
      {
        "id": 8,
        "label": "s . owner = ctx . accounts . glazier . key () ;"
      },
      {
        "id": 9,
        "label": "s . target = (w + h) * 6 + 240 ;"
      },
      {
        "id": 10,
        "label": "s . phase = Plan ;"
      },
      {
        "id": 11,
        "label": "let code_a = radical_inverse_base2 (w) ^ 0x5A5A ;"
      },
      {
        "id": 12,
        "label": "let code_b = radical_inverse_base2 (h) ^ 0xA5A5 ;"
      },
      {
        "id": 13,
        "label": "let a = & mut ctx . accounts . pane_a ;"
      },
      {
        "id": 14,
        "label": "a . parent = s . key () ;"
      },
      {
        "id": 15,
        "label": "a . frame = (w & 7) as u8 ;"
      },
      {
        "id": 16,
        "label": "a . hue = (code_a & 1023) + 41 ;"
      },
      {
        "id": 17,
        "label": "let b = & mut ctx . accounts . pane_b ;"
      },
      {
        "id": 18,
        "label": "b . parent = s . key () ;"
      },
      {
        "id": 19,
        "label": "b . frame = (h & 7) as u8 ;"
      },
      {
        "id": 20,
        "label": "b . hue = (code_b . rotate_left (3) & 1023) + 37 ;"
      },
      {
        "id": 21,
        "label": "let r = & mut ctx . accounts . rack ;"
      },
      {
        "id": 22,
        "label": "r . parent = s . key () ;"
      },
      {
        "id": 23,
        "label": "r . frame = 9 ;"
      },
      {
        "id": 24,
        "label": "r . count = 0 ;"
      },
      {
        "id": 25,
        "label": "r . blend = ((code_a as u64) << 20) ^ (code_b as u64) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: s"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: code_a"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: code_b"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: a"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: s"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: code_a"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: b"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: code_b"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: r"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: s"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: r"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 11,
        "to": 25,
        "label": "data_dep: code_a"
      },
      {
        "from": 12,
        "to": 25,
        "label": "data_dep: code_b"
      }
    ]
  },
  {
    "name": "assemble",
    "inputs": [
      "ctx: Context < AssembleGlass >"
    ],
    "nodes": [
      {
        "id": 27,
        "label": "Entry"
      },
      {
        "id": 28,
        "label": "let s = & mut ctx . accounts . studio ;"
      },
      {
        "id": 29,
        "label": "let a = & mut ctx . accounts . pane_a ;"
      },
      {
        "id": 30,
        "label": "let b = & mut ctx . accounts . pane_b ;"
      },
      {
        "id": 31,
        "label": "let r = & mut ctx . accounts . rack ;"
      },
      {
        "id": 32,
        "label": "let mix = ((a . hue ^ b . hue) as u64) . wrapping_mul (1099511628211) ;"
      },
      {
        "id": 33,
        "label": "a . hue = a . hue . checked_add (((mix & 63) as u32) + 5) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "b . hue = b . hue . saturating_add ((((mix >> 6) & 63) as u32) + 7) ;"
      },
      {
        "id": 35,
        "label": "r . count = r . count . saturating_add (3) ;"
      },
      {
        "id": 36,
        "label": "r . blend ^= mix . rotate_left (11) ;"
      },
      {
        "id": 37,
        "label": "s . phase = Cut ;"
      },
      {
        "id": 38,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 28,
        "label": "def: s"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: a"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: b"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: r"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: mix"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: mix"
      },
      {
        "from": 30,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 30,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: mix"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: r"
      },
      {
        "from": 31,
        "to": 36,
        "label": "data_dep: r"
      },
      {
        "from": 32,
        "to": 36,
        "label": "data_dep: mix"
      },
      {
        "from": 28,
        "to": 37,
        "label": "data_dep: s"
      }
    ]
  }
]