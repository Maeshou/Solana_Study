[
  {
    "name": "init_guild",
    "inputs": [
      "ctx: Context < InitGuild >",
      "cap: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "let a = & mut ctx . accounts . member_alpha ;"
      },
      {
        "id": 3,
        "label": "let b = & mut ctx . accounts . member_beta ;"
      },
      {
        "id": 4,
        "label": "let h = & mut ctx . accounts . hall ;"
      },
      {
        "id": 5,
        "label": "g . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 6,
        "label": "g . cap = cap ;"
      },
      {
        "id": 7,
        "label": "g . phase = Forming ;"
      },
      {
        "id": 8,
        "label": "a . parent = g . key () ;"
      },
      {
        "id": 9,
        "label": "a . seat = 1 ;"
      },
      {
        "id": 10,
        "label": "a . power = 10 ;"
      },
      {
        "id": 11,
        "label": "b . parent = g . key () ;"
      },
      {
        "id": 12,
        "label": "b . seat = 2 ;"
      },
      {
        "id": 13,
        "label": "b . power = 12 ;"
      },
      {
        "id": 14,
        "label": "h . parent = g . key () ;"
      },
      {
        "id": 15,
        "label": "h . channel = 9 ;"
      },
      {
        "id": 16,
        "label": "h . flags = 0 ;"
      },
      {
        "id": 17,
        "label": "h . notice = 0 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: g"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: a"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: b"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: h"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: g"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: g"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 4,
        "to": 14,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: g"
      },
      {
        "from": 4,
        "to": 15,
        "label": "data_dep: h"
      },
      {
        "from": 4,
        "to": 16,
        "label": "data_dep: h"
      },
      {
        "from": 4,
        "to": 17,
        "label": "data_dep: h"
      }
    ]
  },
  {
    "name": "update_march",
    "inputs": [
      "ctx: Context < UpdateMarch >",
      "steps: u32"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 21,
        "label": "let a = & mut ctx . accounts . member_alpha ;"
      },
      {
        "id": 22,
        "label": "let b = & mut ctx . accounts . member_beta ;"
      },
      {
        "id": 23,
        "label": "let h = & mut ctx . accounts . hall ;"
      },
      {
        "id": 24,
        "label": "for i in 0 .. steps { let da = (3 + (i % 5)) as u32 ; let db = (5 + (i % 7)) as u32 ; a . power = a . power . checked_add (da) . unwrap_or (u32 :: MAX) ; b . power = b . power . checked_add (db) . unwrap_or (u32 :: MAX) ; let mix = ((a . power as u64 + b . power as u64) / 6) as u32 ; h . notice = h . notice . rotate_left ((i % 8) as u32) ^ mix ; }"
      },
      {
        "id": 25,
        "label": "let da = (3 + (i % 5)) as u32 ;"
      },
      {
        "id": 26,
        "label": "let db = (5 + (i % 7)) as u32 ;"
      },
      {
        "id": 27,
        "label": "a . power = a . power . checked_add (da) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 28,
        "label": "b . power = b . power . checked_add (db) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 29,
        "label": "let mix = ((a . power as u64 + b . power as u64) / 6) as u32 ;"
      },
      {
        "id": 30,
        "label": "h . notice = h . notice . rotate_left ((i % 8) as u32) ^ mix ;"
      },
      {
        "id": 31,
        "label": "let total = a . power as u64 + b . power as u64 ;"
      },
      {
        "id": 32,
        "label": "if total > g . cap as u64 { g . phase = Rest ; h . flags = h . flags . saturating_add (2) ; a . power = (a . power / 2) + 11 ; b . power = (b . power / 2) + 13 ; msg ! (\"phase=Rest flags+2 damp powers total={}\" , total) ; } else { g . phase = March ; h . notice = h . notice . saturating_add (7) ; a . power ^= 0x00FF_00FF ; b . power = b . power . saturating_add (9) ; msg ! (\"phase=March notice+7 xor/boost total={}\" , total) ; }"
      },
      {
        "id": 33,
        "label": "g . phase = Rest ;"
      },
      {
        "id": 34,
        "label": "h . flags = h . flags . saturating_add (2) ;"
      },
      {
        "id": 35,
        "label": "a . power = (a . power / 2) + 11 ;"
      },
      {
        "id": 36,
        "label": "b . power = (b . power / 2) + 13 ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"phase=Rest flags+2 damp powers total={}\" , total) ;"
      },
      {
        "id": 38,
        "label": "g . phase = March ;"
      },
      {
        "id": 39,
        "label": "h . notice = h . notice . saturating_add (7) ;"
      },
      {
        "id": 40,
        "label": "a . power ^= 0x00FF_00FF ;"
      },
      {
        "id": 41,
        "label": "b . power = b . power . saturating_add (9) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"phase=March notice+7 xor/boost total={}\" , total) ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: g"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: a"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: b"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: h"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: da"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: db"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: da"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: db"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: mix"
      },
      {
        "from": 21,
        "to": 29,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: mix"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: total"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: b"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: total"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: h"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: h"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: h"
      },
      {
        "from": 21,
        "to": 35,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 35,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 39,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 39,
        "label": "data_dep: h"
      },
      {
        "from": 21,
        "to": 40,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 41,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 41,
        "label": "data_dep: b"
      }
    ]
  }
]