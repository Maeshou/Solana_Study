[
  {
    "name": "init_stable",
    "inputs": [
      "ctx: Context < InitStable >",
      "capacity: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . stable . keeper = ctx . accounts . keeper . key () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . stable . capacity = capacity ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . stable . state = StallState :: Training ;"
      },
      {
        "id": 4,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "train_mount",
    "inputs": [
      "ctx: Context < TrainMount >",
      "laps: u32"
    ],
    "nodes": [
      {
        "id": 5,
        "label": "Entry"
      },
      {
        "id": 6,
        "label": "assert_ne ! (ctx . accounts . stable . key () , ctx . accounts . log . key () , \"stable/log must differ\") ;"
      },
      {
        "id": 7,
        "label": "for _ in 0 .. laps { ctx . accounts . mount . stamina = ctx . accounts . mount . stamina . saturating_add (6) ; ctx . accounts . mount . grade = ctx . accounts . mount . grade . saturating_add (1) ; ctx . accounts . log . sessions = ctx . accounts . log . sessions . saturating_add (2) ; }"
      },
      {
        "id": 8,
        "label": "ctx . accounts . mount . stamina = ctx . accounts . mount . stamina . saturating_add (6) ;"
      },
      {
        "id": 9,
        "label": "ctx . accounts . mount . grade = ctx . accounts . mount . grade . saturating_add (1) ;"
      },
      {
        "id": 10,
        "label": "ctx . accounts . log . sessions = ctx . accounts . log . sessions . saturating_add (2) ;"
      },
      {
        "id": 11,
        "label": "if ctx . accounts . mount . stamina > ctx . accounts . stable . capacity { ctx . accounts . stable . state = StallState :: Rest ; ctx . accounts . log . score = ctx . accounts . log . score . saturating_add (15) ; ctx . accounts . mount . grade = ctx . accounts . mount . grade . saturating_add (2) ; msg ! (\"stamina beyond capacity: switch to Rest, record high score\") ; } else { ctx . accounts . stable . state = StallState :: Training ; ctx . accounts . log . score = ctx . accounts . log . score . saturating_add (4) ; ctx . accounts . mount . stamina = ctx . accounts . mount . stamina . saturating_add (3) ; msg ! (\"continue training: add score & stamina\") ; }"
      },
      {
        "id": 12,
        "label": "ctx . accounts . stable . state = StallState :: Rest ;"
      },
      {
        "id": 13,
        "label": "ctx . accounts . log . score = ctx . accounts . log . score . saturating_add (15) ;"
      },
      {
        "id": 14,
        "label": "ctx . accounts . mount . grade = ctx . accounts . mount . grade . saturating_add (2) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"stamina beyond capacity: switch to Rest, record high score\") ;"
      },
      {
        "id": 16,
        "label": "ctx . accounts . stable . state = StallState :: Training ;"
      },
      {
        "id": 17,
        "label": "ctx . accounts . log . score = ctx . accounts . log . score . saturating_add (4) ;"
      },
      {
        "id": 18,
        "label": "ctx . accounts . mount . stamina = ctx . accounts . mount . stamina . saturating_add (3) ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"continue training: add score & stamina\") ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]