[
  {
    "name": "init_barn",
    "inputs": [
      "ctx: Context < InitBarn >",
      "gene_cap: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let barn = & mut ctx . accounts . barn ;"
      },
      {
        "id": 2,
        "label": "barn . keeper = ctx . accounts . keeper . key () ;"
      },
      {
        "id": 3,
        "label": "barn . gene_cap = gene_cap ;"
      },
      {
        "id": 4,
        "label": "barn . active = true ;"
      },
      {
        "id": 5,
        "label": "let lab = & mut ctx . accounts . gene_lab ;"
      },
      {
        "id": 6,
        "label": "lab . rolls = 0 ;"
      },
      {
        "id": 7,
        "label": "lab . power = 0 ;"
      },
      {
        "id": 8,
        "label": "lab . bump = * ctx . bumps . get (\"gene_lab\") . unwrap () ;"
      },
      {
        "id": 9,
        "label": "let pol = & mut ctx . accounts . policy ;"
      },
      {
        "id": 10,
        "label": "pol . min_mix = 10 ;"
      },
      {
        "id": 11,
        "label": "pol . max_mix = 200 ;"
      },
      {
        "id": 12,
        "label": "pol . strict = true ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: barn"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: barn"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: barn"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: barn"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: lab"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: lab"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: lab"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: lab"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: pol"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: pol"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: pol"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: pol"
      }
    ]
  },
  {
    "name": "breed_attempt",
    "inputs": [
      "ctx: Context < BreedAttempt >",
      "eggs: u32"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "require_keys_neq ! (ctx . accounts . parent_a . key () , ctx . accounts . parent_b . key () , BreedErr :: Same) ;"
      },
      {
        "id": 16,
        "label": "require_keys_neq ! (ctx . accounts . parent_a . key () , ctx . accounts . gene_lab . key () , BreedErr :: Same) ;"
      },
      {
        "id": 17,
        "label": "require_keys_neq ! (ctx . accounts . parent_b . key () , ctx . accounts . gene_lab . key () , BreedErr :: Same) ;"
      },
      {
        "id": 18,
        "label": "let mut done = 0u32 ;"
      },
      {
        "id": 19,
        "label": "while done < eggs { ctx . accounts . parent_a . mutation = ctx . accounts . parent_a . mutation . saturating_add (1) ; ctx . accounts . parent_b . mutation = ctx . accounts . parent_b . mutation . saturating_add (2) ; ctx . accounts . gene_lab . rolls = ctx . accounts . gene_lab . rolls . saturating_add (1) ; done += 1 ; }"
      },
      {
        "id": 20,
        "label": "ctx . accounts . parent_a . mutation = ctx . accounts . parent_a . mutation . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "ctx . accounts . parent_b . mutation = ctx . accounts . parent_b . mutation . saturating_add (2) ;"
      },
      {
        "id": 22,
        "label": "ctx . accounts . gene_lab . rolls = ctx . accounts . gene_lab . rolls . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "done += 1 ;"
      },
      {
        "id": 24,
        "label": "if (ctx . accounts . parent_a . mutation + ctx . accounts . parent_b . mutation) as u64 > ctx . accounts . barn . gene_cap { ctx . accounts . barn . active = false ; ctx . accounts . policy . strict = true ; ctx . accounts . gene_lab . power = ctx . accounts . gene_lab . power . saturating_add (5) ; msg ! (\"cap exceeded; lab power boosted, barn paused\") ; } else { ctx . accounts . barn . active = true ; ctx . accounts . policy . strict = false ; ctx . accounts . gene_lab . power = ctx . accounts . gene_lab . power . saturating_add (1) ; msg ! (\"within cap; breeding continues, lab warmed\") ; }"
      },
      {
        "id": 25,
        "label": "ctx . accounts . barn . active = false ;"
      },
      {
        "id": 26,
        "label": "ctx . accounts . policy . strict = true ;"
      },
      {
        "id": 27,
        "label": "ctx . accounts . gene_lab . power = ctx . accounts . gene_lab . power . saturating_add (5) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"cap exceeded; lab power boosted, barn paused\") ;"
      },
      {
        "id": 29,
        "label": "ctx . accounts . barn . active = true ;"
      },
      {
        "id": 30,
        "label": "ctx . accounts . policy . strict = false ;"
      },
      {
        "id": 31,
        "label": "ctx . accounts . gene_lab . power = ctx . accounts . gene_lab . power . saturating_add (1) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"within cap; breeding continues, lab warmed\") ;"
      },
      {
        "id": 33,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: done"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: done"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: done"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: done"
      }
    ]
  }
]