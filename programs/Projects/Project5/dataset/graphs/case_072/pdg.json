[
  {
    "name": "init_stage",
    "inputs": [
      "ctx: Context < InitStage >",
      "tempo: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let st = & mut ctx . accounts . stage ;"
      },
      {
        "id": 2,
        "label": "st . owner = ctx . accounts . conductor . key () ;"
      },
      {
        "id": 3,
        "label": "st . tempo = tempo ;"
      },
      {
        "id": 4,
        "label": "st . status = Setup ;"
      },
      {
        "id": 5,
        "label": "let ch = & mut ctx . accounts . chair_a ;"
      },
      {
        "id": 6,
        "label": "let chb = & mut ctx . accounts . chair_b ;"
      },
      {
        "id": 7,
        "label": "let sc = & mut ctx . accounts . section_log ;"
      },
      {
        "id": 8,
        "label": "ch . parent = st . key () ;"
      },
      {
        "id": 9,
        "label": "ch . chair = (tempo % 8) as u8 ;"
      },
      {
        "id": 10,
        "label": "ch . score = (tempo as u32) * 2 + 5 ;"
      },
      {
        "id": 11,
        "label": "chb . parent = st . key () ;"
      },
      {
        "id": 12,
        "label": "chb . chair = ((tempo / 3) % 8) as u8 ;"
      },
      {
        "id": 13,
        "label": "chb . score = (tempo as u32) + 11 ;"
      },
      {
        "id": 14,
        "label": "sc . parent = st . key () ;"
      },
      {
        "id": 15,
        "label": "sc . section = ((tempo / 5) % 8) as u8 ;"
      },
      {
        "id": 16,
        "label": "sc . count = 0 ;"
      },
      {
        "id": 17,
        "label": "sc . total = 0 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: st"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: st"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: st"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: ch"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: chb"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: sc"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: ch"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: st"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: ch"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: ch"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: chb"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: st"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: chb"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: chb"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: sc"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: st"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: sc"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: sc"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: sc"
      }
    ]
  },
  {
    "name": "play",
    "inputs": [
      "ctx: Context < Play >",
      "bars: u32"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let st = & mut ctx . accounts . stage ;"
      },
      {
        "id": 21,
        "label": "let a = & mut ctx . accounts . chair_a ;"
      },
      {
        "id": 22,
        "label": "let b = & mut ctx . accounts . chair_b ;"
      },
      {
        "id": 23,
        "label": "let sc = & mut ctx . accounts . section_log ;"
      },
      {
        "id": 24,
        "label": "for i in 0 .. bars { a . score = a . score . saturating_add ((i % 5) as u32 + 1) ; b . score = b . score . checked_add ((i % 7) as u32 + 2) . unwrap_or (u32 :: MAX) ; sc . count = sc . count . saturating_add (1) ; sc . total = sc . total . saturating_add ((a . score + b . score) as u64) ; }"
      },
      {
        "id": 25,
        "label": "a . score = a . score . saturating_add ((i % 5) as u32 + 1) ;"
      },
      {
        "id": 26,
        "label": "b . score = b . score . checked_add ((i % 7) as u32 + 2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 27,
        "label": "sc . count = sc . count . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "sc . total = sc . total . saturating_add ((a . score + b . score) as u64) ;"
      },
      {
        "id": 29,
        "label": "let mean = if sc . count == 0 { 0 } else { (sc . total / sc . count) as u32 } ;"
      },
      {
        "id": 30,
        "label": "0"
      },
      {
        "id": 31,
        "label": "(sc . total / sc . count) as u32"
      },
      {
        "id": 32,
        "label": "if mean > st . tempo as u32 { st . status = Break ; a . chair ^= 0x1 ; b . chair = b . chair . saturating_add (1) ; sc . section = sc . section . saturating_add (1) ; msg ! (\"break: chair tweak & section++\") ; } else { st . status = Play ; a . score = a . score . saturating_add (9) ; b . score = b . score / 2 + 7 ; sc . total ^= 0x0FF0_FF0F ; msg ! (\"play: score adjust & total flip\") ; }"
      },
      {
        "id": 33,
        "label": "st . status = Break ;"
      },
      {
        "id": 34,
        "label": "a . chair ^= 0x1 ;"
      },
      {
        "id": 35,
        "label": "b . chair = b . chair . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "sc . section = sc . section . saturating_add (1) ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"break: chair tweak & section++\") ;"
      },
      {
        "id": 38,
        "label": "st . status = Play ;"
      },
      {
        "id": 39,
        "label": "a . score = a . score . saturating_add (9) ;"
      },
      {
        "id": 40,
        "label": "b . score = b . score / 2 + 7 ;"
      },
      {
        "id": 41,
        "label": "sc . total ^= 0x0FF0_FF0F ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"play: score adjust & total flip\") ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: st"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: a"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: b"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: sc"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: sc"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: sc"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: mean"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 29,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: sc"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: mean"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: sc"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: sc"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: sc"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: sc"
      },
      {
        "from": 20,
        "to": 38,
        "label": "data_dep: st"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 41,
        "label": "data_dep: sc"
      }
    ]
  }
]