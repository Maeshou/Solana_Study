[
  {
    "name": "init_wing",
    "inputs": [
      "ctx: Context < InitWing >",
      "x: u32",
      "y: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let w = & mut ctx . accounts . wing ;"
      },
      {
        "id": 2,
        "label": "w . owner = ctx . accounts . curator . key () ;"
      },
      {
        "id": 3,
        "label": "w . max = x + y + 200 ;"
      },
      {
        "id": 4,
        "label": "w . mode = Build ;"
      },
      {
        "id": 5,
        "label": "let a = & mut ctx . accounts . case_a ;"
      },
      {
        "id": 6,
        "label": "let b = & mut ctx . accounts . case_b ;"
      },
      {
        "id": 7,
        "label": "let l = & mut ctx . accounts . labeler ;"
      },
      {
        "id": 8,
        "label": "let r = x . max (y) + y . min (x) / 2 ;"
      },
      {
        "id": 9,
        "label": "a . parent = w . key () ;"
      },
      {
        "id": 10,
        "label": "a . case = (x & 7) as u8 ;"
      },
      {
        "id": 11,
        "label": "a . code = r + 5 ;"
      },
      {
        "id": 12,
        "label": "b . parent = w . key () ;"
      },
      {
        "id": 13,
        "label": "b . case = (y & 7) as u8 ;"
      },
      {
        "id": 14,
        "label": "b . code = r . rotate_left (3) + 9 ;"
      },
      {
        "id": 15,
        "label": "l . parent = w . key () ;"
      },
      {
        "id": 16,
        "label": "l . wing = 9 ;"
      },
      {
        "id": 17,
        "label": "l . count = 0 ;"
      },
      {
        "id": 18,
        "label": "l . mix = (x as u64) << 16 | y as u64 ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: w"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: w"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: w"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: a"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: b"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: l"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: r"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: w"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: r"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: w"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 6,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: w"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: l"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: l"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: l"
      }
    ]
  },
  {
    "name": "label",
    "inputs": [
      "ctx: Context < Label >",
      "n: u32"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let w = & mut ctx . accounts . wing ;"
      },
      {
        "id": 22,
        "label": "let a = & mut ctx . accounts . case_a ;"
      },
      {
        "id": 23,
        "label": "let b = & mut ctx . accounts . case_b ;"
      },
      {
        "id": 24,
        "label": "let l = & mut ctx . accounts . labeler ;"
      },
      {
        "id": 25,
        "label": "for i in 0 .. n { let r = ((a . code ^ b . code) as u64) . wrapping_mul (1099511628211) ; a . code = a . code . checked_add (((r & 31) as u32) + 1) . unwrap_or (u32 :: MAX) ; b . code = b . code . saturating_add ((((r >> 5) & 31) as u32) + 2) ; l . count = l . count . saturating_add (1) ; l . mix ^= r . rotate_left ((i % 17) as u32) ; }"
      },
      {
        "id": 26,
        "label": "let r = ((a . code ^ b . code) as u64) . wrapping_mul (1099511628211) ;"
      },
      {
        "id": 27,
        "label": "a . code = a . code . checked_add (((r & 31) as u32) + 1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 28,
        "label": "b . code = b . code . saturating_add ((((r >> 5) & 31) as u32) + 2) ;"
      },
      {
        "id": 29,
        "label": "l . count = l . count . saturating_add (1) ;"
      },
      {
        "id": 30,
        "label": "l . mix ^= r . rotate_left ((i % 17) as u32) ;"
      },
      {
        "id": 31,
        "label": "let mean = if l . count == 0 { 0 } else { (l . mix as u128 / l . count as u128) as u32 } ;"
      },
      {
        "id": 32,
        "label": "0"
      },
      {
        "id": 33,
        "label": "(l . mix as u128 / l . count as u128) as u32"
      },
      {
        "id": 34,
        "label": "if mean > w . max { w . mode = Close ; a . case ^= 1 ; b . case = b . case . saturating_add (1) ; l . wing = l . wing . saturating_add (1) ; msg ! (\"close: wing++ & case tweak\") ; } else { w . mode = Open ; a . code = a . code . saturating_add (7) ; b . code = b . code / 2 + 11 ; l . mix ^= 0x0F0F_F0F0 ; msg ! (\"open: adjust codes & mix\") ; }"
      },
      {
        "id": 35,
        "label": "w . mode = Close ;"
      },
      {
        "id": 36,
        "label": "a . case ^= 1 ;"
      },
      {
        "id": 37,
        "label": "b . case = b . case . saturating_add (1) ;"
      },
      {
        "id": 38,
        "label": "l . wing = l . wing . saturating_add (1) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"close: wing++ & case tweak\") ;"
      },
      {
        "id": 40,
        "label": "w . mode = Open ;"
      },
      {
        "id": 41,
        "label": "a . code = a . code . saturating_add (7) ;"
      },
      {
        "id": 42,
        "label": "b . code = b . code / 2 + 11 ;"
      },
      {
        "id": 43,
        "label": "l . mix ^= 0x0F0F_F0F0 ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"open: adjust codes & mix\") ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: w"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: a"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: b"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: l"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: r"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 27,
        "label": "data_dep: a"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: r"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: r"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: l"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: mean"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: l"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: mean"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: w"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: w"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: l"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: w"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: l"
      },
      {
        "from": 21,
        "to": 35,
        "label": "data_dep: w"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 38,
        "label": "data_dep: l"
      },
      {
        "from": 24,
        "to": 38,
        "label": "data_dep: l"
      },
      {
        "from": 21,
        "to": 40,
        "label": "data_dep: w"
      },
      {
        "from": 22,
        "to": 41,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 41,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 42,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 42,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 43,
        "label": "data_dep: l"
      }
    ]
  }
]