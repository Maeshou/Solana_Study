[
  {
    "name": "init_plot",
    "inputs": [
      "ctx: Context < InitPlot >",
      "rows: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let farm = & mut ctx . accounts . farm ;"
      },
      {
        "id": 2,
        "label": "farm . owner = ctx . accounts . gardener . key () ;"
      },
      {
        "id": 3,
        "label": "farm . rows = rows ;"
      },
      {
        "id": 4,
        "label": "farm . state = Dry ;"
      },
      {
        "id": 5,
        "label": "let bed = & mut ctx . accounts . bed_a ;"
      },
      {
        "id": 6,
        "label": "let bed2 = & mut ctx . accounts . bed_b ;"
      },
      {
        "id": 7,
        "label": "let silo = & mut ctx . accounts . silo ;"
      },
      {
        "id": 8,
        "label": "let t = rows . saturating_mul (rows + 1) / 2 ;"
      },
      {
        "id": 9,
        "label": "bed . parent = farm . key () ;"
      },
      {
        "id": 10,
        "label": "bed . row = (rows & 7) as u8 ;"
      },
      {
        "id": 11,
        "label": "bed . soil = t % 97 + 7 ;"
      },
      {
        "id": 12,
        "label": "bed2 . parent = farm . key () ;"
      },
      {
        "id": 13,
        "label": "bed2 . row = ((rows >> 1) & 7) as u8 ;"
      },
      {
        "id": 14,
        "label": "bed2 . soil = (t . rotate_left (3) % 83) + 9 ;"
      },
      {
        "id": 15,
        "label": "silo . parent = farm . key () ;"
      },
      {
        "id": 16,
        "label": "silo . bin = 5 ;"
      },
      {
        "id": 17,
        "label": "silo . stock = (t as u64) & 0xFFFF ;"
      },
      {
        "id": 18,
        "label": "silo . hash = 1 ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: farm"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: farm"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: bed"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: bed2"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: silo"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: t"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: bed"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: farm"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: bed"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: bed"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: bed2"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: farm"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: bed2"
      },
      {
        "from": 6,
        "to": 14,
        "label": "data_dep: bed2"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: silo"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: farm"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: silo"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: silo"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: silo"
      }
    ]
  },
  {
    "name": "tend",
    "inputs": [
      "ctx: Context < Tend >",
      "loops: u32"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let farm = & mut ctx . accounts . farm ;"
      },
      {
        "id": 22,
        "label": "let a = & mut ctx . accounts . bed_a ;"
      },
      {
        "id": 23,
        "label": "let b = & mut ctx . accounts . bed_b ;"
      },
      {
        "id": 24,
        "label": "let s = & mut ctx . accounts . silo ;"
      },
      {
        "id": 25,
        "label": "for i in 0 .. loops { let mut x = (a . soil as u64) + 17 ; let mut y = (b . soil as u64) + 11 ; while y != 0 { let r = x % y ; x = y ; y = r ; } let g = (x as u32) . max (1) ; a . soil = a . soil . checked_add (g % 13) . unwrap_or (u32 :: MAX) ; b . soil = b . soil . saturating_add ((g % 7) + 1) ; s . hash = s . hash . rotate_left ((g % 5) as u32) ^ (a . soil as u64) ; }"
      },
      {
        "id": 26,
        "label": "let mut x = (a . soil as u64) + 17 ;"
      },
      {
        "id": 27,
        "label": "let mut y = (b . soil as u64) + 11 ;"
      },
      {
        "id": 28,
        "label": "while y != 0 { let r = x % y ; x = y ; y = r ; }"
      },
      {
        "id": 29,
        "label": "let r = x % y ;"
      },
      {
        "id": 30,
        "label": "x = y ;"
      },
      {
        "id": 31,
        "label": "y = r ;"
      },
      {
        "id": 32,
        "label": "let g = (x as u32) . max (1) ;"
      },
      {
        "id": 33,
        "label": "a . soil = a . soil . checked_add (g % 13) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "b . soil = b . soil . saturating_add ((g % 7) + 1) ;"
      },
      {
        "id": 35,
        "label": "s . hash = s . hash . rotate_left ((g % 5) as u32) ^ (a . soil as u64) ;"
      },
      {
        "id": 36,
        "label": "let sum = a . soil + b . soil ;"
      },
      {
        "id": 37,
        "label": "if sum > farm . rows * 12 { farm . state = Rest ; s . stock = s . stock . saturating_add ((sum as u64) & 63) ; a . row ^= 0x1 ; b . row = b . row . saturating_add (1) ; msg ! (\"rest: rotate rows, stock+\") ; } else { farm . state = Moist ; a . soil = a . soil . saturating_add (5) ; b . soil = b . soil / 2 + 7 ; s . hash ^= 0x0F0F_F0F0 ; msg ! (\"moist: adjust soils, hash flip\") ; }"
      },
      {
        "id": 38,
        "label": "farm . state = Rest ;"
      },
      {
        "id": 39,
        "label": "s . stock = s . stock . saturating_add ((sum as u64) & 63) ;"
      },
      {
        "id": 40,
        "label": "a . row ^= 0x1 ;"
      },
      {
        "id": 41,
        "label": "b . row = b . row . saturating_add (1) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"rest: rotate rows, stock+\") ;"
      },
      {
        "id": 43,
        "label": "farm . state = Moist ;"
      },
      {
        "id": 44,
        "label": "a . soil = a . soil . saturating_add (5) ;"
      },
      {
        "id": 45,
        "label": "b . soil = b . soil / 2 + 7 ;"
      },
      {
        "id": 46,
        "label": "s . hash ^= 0x0F0F_F0F0 ;"
      },
      {
        "id": 47,
        "label": "msg ! (\"moist: adjust soils, hash flip\") ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: farm"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: a"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: b"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: s"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: x"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: y"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: r"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: y"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: y"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: g"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: x"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 24,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 35,
        "label": "data_dep: s"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: a"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: sum"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: b"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: sum"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: farm"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: farm"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: sum"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: farm"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: s"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: farm"
      },
      {
        "from": 24,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 36,
        "to": 39,
        "label": "data_dep: sum"
      },
      {
        "from": 22,
        "to": 40,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 41,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 41,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 43,
        "label": "data_dep: farm"
      },
      {
        "from": 22,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 46,
        "label": "data_dep: s"
      }
    ]
  }
]