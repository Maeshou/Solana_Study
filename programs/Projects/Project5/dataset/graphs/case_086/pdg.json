[
  {
    "name": "init_resort",
    "inputs": [
      "ctx: Context < InitResort >",
      "n: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . resort ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "r . limit = n * 5 + 150 ;"
      },
      {
        "id": 4,
        "label": "r . state = Prep ;"
      },
      {
        "id": 5,
        "label": "let a = & mut ctx . accounts . lift_a ;"
      },
      {
        "id": 6,
        "label": "let b = & mut ctx . accounts . lift_b ;"
      },
      {
        "id": 7,
        "label": "let c = & mut ctx . accounts . counter ;"
      },
      {
        "id": 8,
        "label": "let mut crc = 0xFFFF_FFFFu32 ^ n ;"
      },
      {
        "id": 9,
        "label": "for _ in 0 .. 4 { let bit = (crc ^ (n >> 3)) & 1 ; crc = (crc >> 1) ^ (if bit == 1 { 0x1EDC6F41 } else { 0 }) ; }"
      },
      {
        "id": 10,
        "label": "let bit = (crc ^ (n >> 3)) & 1 ;"
      },
      {
        "id": 11,
        "label": "crc = (crc >> 1) ^ (if bit == 1 { 0x1EDC6F41 } else { 0 }) ;"
      },
      {
        "id": 12,
        "label": "0x1EDC6F41"
      },
      {
        "id": 13,
        "label": "0"
      },
      {
        "id": 14,
        "label": "a . resort = r . key () ;"
      },
      {
        "id": 15,
        "label": "a . gate = (n & 7) as u8 ;"
      },
      {
        "id": 16,
        "label": "a . riders = (crc & 1023) + 30 ;"
      },
      {
        "id": 17,
        "label": "b . resort = r . key () ;"
      },
      {
        "id": 18,
        "label": "b . gate = ((n >> 2) & 7) as u8 ;"
      },
      {
        "id": 19,
        "label": "b . riders = ((crc >> 10) & 1023) + 27 ;"
      },
      {
        "id": 20,
        "label": "c . resort = r . key () ;"
      },
      {
        "id": 21,
        "label": "c . gate = 9 ;"
      },
      {
        "id": 22,
        "label": "c . laps = 0 ;"
      },
      {
        "id": 23,
        "label": "c . seed = crc ^ 0xBEEF_BEEF ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: r"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: a"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: b"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: c"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: crc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: crc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: crc"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: crc"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: bit"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: crc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: crc"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: crc"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: bit"
      },
      {
        "from": 5,
        "to": 14,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 5,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 5,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: crc"
      },
      {
        "from": 6,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 6,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 6,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: crc"
      },
      {
        "from": 7,
        "to": 20,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 7,
        "to": 21,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 23,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 23,
        "label": "data_dep: crc"
      }
    ]
  },
  {
    "name": "glide",
    "inputs": [
      "ctx: Context < Glide >",
      "loops: u32"
    ],
    "nodes": [
      {
        "id": 25,
        "label": "Entry"
      },
      {
        "id": 26,
        "label": "let r = & mut ctx . accounts . resort ;"
      },
      {
        "id": 27,
        "label": "let a = & mut ctx . accounts . lift_a ;"
      },
      {
        "id": 28,
        "label": "let b = & mut ctx . accounts . lift_b ;"
      },
      {
        "id": 29,
        "label": "let c = & mut ctx . accounts . counter ;"
      },
      {
        "id": 30,
        "label": "for i in 0 .. loops { let z = ((a . riders ^ b . riders) as u64) . wrapping_mul (1469598103934665603) ; a . riders = a . riders . checked_add (((z & 63) as u32) + 3) . unwrap_or (u32 :: MAX) ; b . riders = b . riders . saturating_add ((((z >> 6) & 63) as u32) + 5) ; c . laps = c . laps . saturating_add (1) ; c . seed ^= (z as u32) . rotate_left ((i % 19) as u32) ; }"
      },
      {
        "id": 31,
        "label": "let z = ((a . riders ^ b . riders) as u64) . wrapping_mul (1469598103934665603) ;"
      },
      {
        "id": 32,
        "label": "a . riders = a . riders . checked_add (((z & 63) as u32) + 3) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 33,
        "label": "b . riders = b . riders . saturating_add ((((z >> 6) & 63) as u32) + 5) ;"
      },
      {
        "id": 34,
        "label": "c . laps = c . laps . saturating_add (1) ;"
      },
      {
        "id": 35,
        "label": "c . seed ^= (z as u32) . rotate_left ((i % 19) as u32) ;"
      },
      {
        "id": 36,
        "label": "let sum = a . riders + b . riders ;"
      },
      {
        "id": 37,
        "label": "if sum > r . limit { r . state = Stop ; a . gate ^= 1 ; b . gate = b . gate . saturating_add (1) ; c . gate = c . gate . saturating_add (1) ; msg ! (\"stop: gate tweaks & counter move\") ; } else { r . state = Run ; a . riders = a . riders . saturating_add (9) ; b . riders = b . riders / 2 + 11 ; c . seed ^= 0x0F0F_F0F0 ; msg ! (\"run: adjust riders & seed flip\") ; }"
      },
      {
        "id": 38,
        "label": "r . state = Stop ;"
      },
      {
        "id": 39,
        "label": "a . gate ^= 1 ;"
      },
      {
        "id": 40,
        "label": "b . gate = b . gate . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "c . gate = c . gate . saturating_add (1) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"stop: gate tweaks & counter move\") ;"
      },
      {
        "id": 43,
        "label": "r . state = Run ;"
      },
      {
        "id": 44,
        "label": "a . riders = a . riders . saturating_add (9) ;"
      },
      {
        "id": 45,
        "label": "b . riders = b . riders / 2 + 11 ;"
      },
      {
        "id": 46,
        "label": "c . seed ^= 0x0F0F_F0F0 ;"
      },
      {
        "id": 47,
        "label": "msg ! (\"run: adjust riders & seed flip\") ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 26,
        "to": 26,
        "label": "def: r"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: a"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: b"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: c"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: c"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: z"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: a"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: z"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: b"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: z"
      },
      {
        "from": 29,
        "to": 34,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 34,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 35,
        "label": "data_dep: c"
      },
      {
        "from": 31,
        "to": 35,
        "label": "data_dep: z"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: sum"
      },
      {
        "from": 27,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 36,
        "label": "data_dep: b"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: sum"
      },
      {
        "from": 26,
        "to": 37,
        "label": "data_dep: r"
      },
      {
        "from": 26,
        "to": 37,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 26,
        "to": 37,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 41,
        "label": "data_dep: c"
      },
      {
        "from": 29,
        "to": 41,
        "label": "data_dep: c"
      },
      {
        "from": 26,
        "to": 43,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 28,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 28,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 46,
        "label": "data_dep: c"
      }
    ]
  }
]