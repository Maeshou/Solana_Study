[
  {
    "name": "init_bench",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let accs = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "accs . bench . owner = accs . crafter . key () ;"
      },
      {
        "id": 3,
        "label": "accs . bench . limit = limit ;"
      },
      {
        "id": 4,
        "label": "accs . bench . mode = BenchMode :: Warm ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "craft",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let accs = & mut ctx . accounts ;"
      },
      {
        "id": 8,
        "label": "let (bench , bin , ledger) = (& mut accs . bench , & mut accs . ore_bin , & mut accs . ledger) ;"
      },
      {
        "id": 9,
        "label": "assert_ne ! (bench . key () , bin . key () , \"bench/bin must differ\") ;"
      },
      {
        "id": 10,
        "label": "let rarity_delta = simulate_crafting (bin , passes) ;"
      },
      {
        "id": 11,
        "label": "ledger . rarity_score = ledger . rarity_score . saturating_add (rarity_delta) ;"
      },
      {
        "id": 12,
        "label": "ledger . crafts = ledger . crafts . saturating_add (passes as u64) ;"
      },
      {
        "id": 13,
        "label": "let hue_boost = hue_mix (& [bench . owner . as_ref () , & passes . to_le_bytes () , & ledger . crafts . to_le_bytes ()]) ;"
      },
      {
        "id": 14,
        "label": "bin . chromatic = bin . chromatic . saturating_add (hue_boost as u32) ;"
      },
      {
        "id": 15,
        "label": "if statement"
      },
      {
        "id": 16,
        "label": "predicate"
      },
      {
        "id": 17,
        "label": "bin . iron . saturating_add (bin . silica) > bench . limit"
      },
      {
        "id": 18,
        "label": "True body"
      },
      {
        "id": 19,
        "label": "bench . mode = BenchMode :: Overdrive ;"
      },
      {
        "id": 20,
        "label": "ledger . rarity_score = ledger . rarity_score . saturating_add (7) ;"
      },
      {
        "id": 21,
        "label": "bin . hardness = bin . hardness . saturating_add (5) ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"limit exceeded: overdrive on, rarity+7 hardness+5\") ;"
      },
      {
        "id": 23,
        "label": "False body"
      },
      {
        "id": 24,
        "label": "bench . mode = BenchMode :: Warm ;"
      },
      {
        "id": 25,
        "label": "ledger . crafts = ledger . crafts . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "bin . hardness = bin . hardness . saturating_add (2) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"within limit: warm mode, crafts+1 hardness+2\") ;"
      },
      {
        "id": 28,
        "label": "merge"
      },
      {
        "id": 29,
        "label": "emit ! (CraftEvent { owner : bench . owner , passes , rarity_delta }) ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "predicate"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 15,
        "to": 18,
        "label": "true"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 15,
        "to": 23,
        "label": "false"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 22,
        "to": 28,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      }
    ]
  },
  {
    "name": "simulate_crafting",
    "nodes": [
      {
        "id": 31,
        "label": "Entry"
      },
      {
        "id": 32,
        "label": "let mut rarity = 0u64 ;"
      },
      {
        "id": 33,
        "label": "Loop Start"
      },
      {
        "id": 34,
        "label": "let gain = (2 + (step % 3)) as u32 ;"
      },
      {
        "id": 35,
        "label": "bin . iron = bin . iron . saturating_add (gain) ;"
      },
      {
        "id": 36,
        "label": "bin . silica = bin . silica . saturating_add (gain + 1) ;"
      },
      {
        "id": 37,
        "label": "bin . cutlines = bin . cutlines . saturating_add (3) ;"
      },
      {
        "id": 38,
        "label": "rarity = rarity . saturating_add ((gain as u64) * 2) ;"
      },
      {
        "id": 39,
        "label": "Loop End"
      },
      {
        "id": 40,
        "label": "rarity"
      }
    ],
    "edges": [
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 33,
        "to": 39,
        "label": "for"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      }
    ]
  },
  {
    "name": "hue_mix",
    "nodes": [
      {
        "id": 41,
        "label": "Entry"
      },
      {
        "id": 42,
        "label": "let h = hashv (parts) ;"
      },
      {
        "id": 43,
        "label": "u16 :: from_le_bytes ([h . 0 [0] , h . 0 [1]]) % 97 + 3"
      }
    ],
    "edges": [
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      }
    ]
  }
]