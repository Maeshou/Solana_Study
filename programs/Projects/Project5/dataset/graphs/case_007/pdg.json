[
  {
    "name": "init_bin",
    "inputs": [
      "ctx: Context < InitBin >",
      "slot: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . bin . owner = ctx . accounts . manager . key () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . bin . slot = slot ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . bin . count = 0 ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . log . moves = 0 ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . log . ok = true ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . log . bump = * ctx . bumps . get (\"log\") . unwrap () ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . policy . max_per_move = 50 ;"
      },
      {
        "id": 8,
        "label": "ctx . accounts . policy . strict = true ;"
      },
      {
        "id": 9,
        "label": "ctx . accounts . policy . version = 1 ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "move_goods",
    "inputs": [
      "ctx: Context < MoveGoods >",
      "qty: u32"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "assert_ne ! (ctx . accounts . log . key () , ctx . accounts . policy . key () , \"accounts must differ\") ;"
      },
      {
        "id": 13,
        "label": "let mut moved = 0u32 ;"
      },
      {
        "id": 14,
        "label": "while moved < qty { ctx . accounts . bin . count = ctx . accounts . bin . count . saturating_add (1) ; ctx . accounts . log . moves = ctx . accounts . log . moves . saturating_add (1) ; moved += 1 ; }"
      },
      {
        "id": 15,
        "label": "ctx . accounts . bin . count = ctx . accounts . bin . count . saturating_add (1) ;"
      },
      {
        "id": 16,
        "label": "ctx . accounts . log . moves = ctx . accounts . log . moves . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "moved += 1 ;"
      },
      {
        "id": 18,
        "label": "if qty > ctx . accounts . policy . max_per_move { ctx . accounts . policy . version = ctx . accounts . policy . version . saturating_add (1) ; ctx . accounts . log . ok = false ; msg ! (\"excess move: qty={} limit={}\" , qty , ctx . accounts . policy . max_per_move) ; ctx . accounts . bin . slot = ctx . accounts . bin . slot . saturating_add (1) ; } else { ctx . accounts . log . ok = true ; ctx . accounts . policy . strict = true ; msg ! (\"move ok: count={} moves={}\" , ctx . accounts . bin . count , ctx . accounts . log . moves) ; ctx . accounts . bin . slot = ctx . accounts . bin . slot . saturating_add (0) ; }"
      },
      {
        "id": 19,
        "label": "ctx . accounts . policy . version = ctx . accounts . policy . version . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "ctx . accounts . log . ok = false ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"excess move: qty={} limit={}\" , qty , ctx . accounts . policy . max_per_move) ;"
      },
      {
        "id": 22,
        "label": "ctx . accounts . bin . slot = ctx . accounts . bin . slot . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "ctx . accounts . log . ok = true ;"
      },
      {
        "id": 24,
        "label": "ctx . accounts . policy . strict = true ;"
      },
      {
        "id": 25,
        "label": "msg ! (\"move ok: count={} moves={}\" , ctx . accounts . bin . count , ctx . accounts . log . moves) ;"
      },
      {
        "id": 26,
        "label": "ctx . accounts . bin . slot = ctx . accounts . bin . slot . saturating_add (0) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: moved"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: moved"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: moved"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: moved"
      }
    ]
  }
]