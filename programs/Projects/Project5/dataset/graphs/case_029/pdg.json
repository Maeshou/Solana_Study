[
  {
    "name": "init_forge",
    "inputs": [
      "ctx: Context < InitForge >",
      "cap: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "a . workshop . artisan = a . artisan . key () ;"
      },
      {
        "id": 3,
        "label": "a . workshop . capacity = cap ;"
      },
      {
        "id": 4,
        "label": "a . workshop . state = BenchState :: Blend ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: a"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: a"
      }
    ]
  },
  {
    "name": "fuse",
    "inputs": [
      "ctx: Context < Fuse >",
      "passes: u16"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let a = & mut ctx . accounts ;"
      },
      {
        "id": 8,
        "label": "assert_ne ! (a . vault . key () , a . glyph_a . key () , \"vault/glyph_a must differ\") ;"
      },
      {
        "id": 9,
        "label": "assert_ne ! (a . vault . key () , a . glyph_b . key () , \"vault/glyph_b must differ\") ;"
      },
      {
        "id": 10,
        "label": "for i in 0 .. passes { let inc = 3 + (i % 5) as u32 ; a . glyph_a . ink = a . glyph_a . ink . saturating_add (inc) ; a . glyph_b . ink = a . glyph_b . ink . saturating_add (inc + 2) ; a . vault . sigils = a . vault . sigils . saturating_add (1) ; }"
      },
      {
        "id": 11,
        "label": "let inc = 3 + (i % 5) as u32 ;"
      },
      {
        "id": 12,
        "label": "a . glyph_a . ink = a . glyph_a . ink . saturating_add (inc) ;"
      },
      {
        "id": 13,
        "label": "a . glyph_b . ink = a . glyph_b . ink . saturating_add (inc + 2) ;"
      },
      {
        "id": 14,
        "label": "a . vault . sigils = a . vault . sigils . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "let total = a . glyph_a . ink . saturating_add (a . glyph_b . ink) ;"
      },
      {
        "id": 16,
        "label": "if total > a . workshop . capacity { a . workshop . state = BenchState :: Lockdown ; a . vault . rarity = a . vault . rarity . saturating_add (7) ; a . vault . events = a . vault . events . saturating_add (2) ; msg ! (\"capacity hit; lockdown, rarity+7, events+2\") ; } else { a . workshop . state = BenchState :: Blend ; a . vault . rarity = a . vault . rarity . saturating_add (2) ; a . vault . sigils = a . vault . sigils . saturating_add (1) ; msg ! (\"within capacity; blend, rarity+2, sigils+1\") ; }"
      },
      {
        "id": 17,
        "label": "a . workshop . state = BenchState :: Lockdown ;"
      },
      {
        "id": 18,
        "label": "a . vault . rarity = a . vault . rarity . saturating_add (7) ;"
      },
      {
        "id": 19,
        "label": "a . vault . events = a . vault . events . saturating_add (2) ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"capacity hit; lockdown, rarity+7, events+2\") ;"
      },
      {
        "id": 21,
        "label": "a . workshop . state = BenchState :: Blend ;"
      },
      {
        "id": 22,
        "label": "a . vault . rarity = a . vault . rarity . saturating_add (2) ;"
      },
      {
        "id": 23,
        "label": "a . vault . sigils = a . vault . sigils . saturating_add (1) ;"
      },
      {
        "id": 24,
        "label": "msg ! (\"within capacity; blend, rarity+2, sigils+1\") ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: inc"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 12,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: inc"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 13,
        "label": "data_dep: a"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: inc"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 14,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: total"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: a"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: total"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 19,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 21,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 22,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 23,
        "label": "data_dep: a"
      },
      {
        "from": 7,
        "to": 23,
        "label": "data_dep: a"
      }
    ]
  }
]