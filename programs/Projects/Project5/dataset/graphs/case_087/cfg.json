[
  {
    "name": "init_lab",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let lab = & mut ctx . accounts . lab ;"
      },
      {
        "id": 2,
        "label": "lab . owner = ctx . accounts . chief . key () ;"
      },
      {
        "id": 3,
        "label": "lab . max = (a11 + a22) * 8 + 200 ;"
      },
      {
        "id": 4,
        "label": "lab . state = Boot ;"
      },
      {
        "id": 5,
        "label": "let arm_a = & mut ctx . accounts . arm_a ;"
      },
      {
        "id": 6,
        "label": "let arm_b = & mut ctx . accounts . arm_b ;"
      },
      {
        "id": 7,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 8,
        "label": "let v1 = a11 . saturating_mul (3) + a12 . saturating_mul (2) ;"
      },
      {
        "id": 9,
        "label": "let v2 = a21 . saturating_mul (2) + a22 . saturating_mul (3) ;"
      },
      {
        "id": 10,
        "label": "arm_a . lab = lab . key () ;"
      },
      {
        "id": 11,
        "label": "arm_a . dock = (a11 & 7) as u8 ;"
      },
      {
        "id": 12,
        "label": "arm_a . torque = v1 + 13 ;"
      },
      {
        "id": 13,
        "label": "arm_b . lab = lab . key () ;"
      },
      {
        "id": 14,
        "label": "arm_b . dock = (a22 & 7) as u8 ;"
      },
      {
        "id": 15,
        "label": "arm_b . torque = v2 + 11 ;"
      },
      {
        "id": 16,
        "label": "board . lab = lab . key () ;"
      },
      {
        "id": 17,
        "label": "board . dock = 9 ;"
      },
      {
        "id": 18,
        "label": "board . ticks = 0 ;"
      },
      {
        "id": 19,
        "label": "board . code = (v1 as u64) << 16 | v2 as u64 ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  },
  {
    "name": "assemble",
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let lab = & mut ctx . accounts . lab ;"
      },
      {
        "id": 23,
        "label": "let a = & mut ctx . accounts . arm_a ;"
      },
      {
        "id": 24,
        "label": "let b = & mut ctx . accounts . arm_b ;"
      },
      {
        "id": 25,
        "label": "let brd = & mut ctx . accounts . board ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "let mix = ((a . torque ^ b . torque) as u64) . wrapping_mul (780291637) ;"
      },
      {
        "id": 28,
        "label": "a . torque = a . torque . checked_add (((mix & 31) as u32) + 2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 29,
        "label": "b . torque = b . torque . saturating_add ((((mix >> 5) & 31) as u32) + 3) ;"
      },
      {
        "id": 30,
        "label": "brd . ticks = brd . ticks . saturating_add (1) ;"
      },
      {
        "id": 31,
        "label": "brd . code ^= mix . rotate_left ((i % 13) as u32) ;"
      },
      {
        "id": 32,
        "label": "Loop End"
      },
      {
        "id": 33,
        "label": "let total = a . torque + b . torque ;"
      },
      {
        "id": 34,
        "label": "if statement"
      },
      {
        "id": 35,
        "label": "predicate"
      },
      {
        "id": 36,
        "label": "total > lab . max"
      },
      {
        "id": 37,
        "label": "True body"
      },
      {
        "id": 38,
        "label": "lab . state = Halt ;"
      },
      {
        "id": 39,
        "label": "a . dock ^= 1 ;"
      },
      {
        "id": 40,
        "label": "b . dock = b . dock . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "brd . dock = brd . dock . saturating_add (1) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"halt: dock tweaks & board move\") ;"
      },
      {
        "id": 43,
        "label": "False body"
      },
      {
        "id": 44,
        "label": "lab . state = Assemble ;"
      },
      {
        "id": 45,
        "label": "a . torque = a . torque . saturating_add (9) ;"
      },
      {
        "id": 46,
        "label": "b . torque = b . torque / 2 + 11 ;"
      },
      {
        "id": 47,
        "label": "brd . code ^= 0x0F0F_F0F0 ;"
      },
      {
        "id": 48,
        "label": "msg ! (\"assemble: adjust torque & code flip\") ;"
      },
      {
        "id": 49,
        "label": "merge"
      },
      {
        "id": 50,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 26,
        "to": 32,
        "label": "for"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "predicate"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 34,
        "to": 37,
        "label": "true"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 34,
        "to": 43,
        "label": "false"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 42,
        "to": 49,
        "label": "next"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      }
    ]
  }
]