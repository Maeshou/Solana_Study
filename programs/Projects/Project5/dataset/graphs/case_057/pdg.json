[
  {
    "name": "init_foundry",
    "inputs": [
      "ctx: Context < InitFoundry >",
      "quota: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let f = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "f . foundry . owner = f . owner . key () ;"
      },
      {
        "id": 3,
        "label": "f . foundry . quota = quota ;"
      },
      {
        "id": 4,
        "label": "f . foundry . state = Prep ;"
      },
      {
        "id": 5,
        "label": "f . core . foundry = f . foundry . key () ;"
      },
      {
        "id": 6,
        "label": "f . core . lane = 10 ;"
      },
      {
        "id": 7,
        "label": "f . mold . foundry = f . foundry . key () ;"
      },
      {
        "id": 8,
        "label": "f . mold . lane = 20 ;"
      },
      {
        "id": 9,
        "label": "f . book . foundry = f . foundry . key () ;"
      },
      {
        "id": 10,
        "label": "f . book . lane = 99 ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: f"
      }
    ]
  },
  {
    "name": "cast",
    "inputs": [
      "ctx: Context < Cast >",
      "cycles: u32"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let f = & mut ctx . accounts ;"
      },
      {
        "id": 14,
        "label": "for i in 0 .. cycles { f . core . heat = f . core . heat . checked_add (6 + (i % 4)) . unwrap_or (u32 :: MAX) ; f . mold . stress = f . mold . stress . saturating_add (5 + (i % 3)) ; f . book . units = (f . book . units as u128 + 3 + (i as u128 % 5)) . min (u128 :: from (u64 :: MAX)) as u64 ; }"
      },
      {
        "id": 15,
        "label": "f . core . heat = f . core . heat . checked_add (6 + (i % 4)) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 16,
        "label": "f . mold . stress = f . mold . stress . saturating_add (5 + (i % 3)) ;"
      },
      {
        "id": 17,
        "label": "f . book . units = (f . book . units as u128 + 3 + (i as u128 % 5)) . min (u128 :: from (u64 :: MAX)) as u64 ;"
      },
      {
        "id": 18,
        "label": "let load = f . core . heat as u64 + f . mold . stress as u64 ;"
      },
      {
        "id": 19,
        "label": "if load > f . foundry . quota as u64 { f . foundry . state = Cool ; f . book . defects = f . book . defects . saturating_add (2) ; f . mold . stress = f . mold . stress / 2 + 8 ; f . core . heat = f . core . heat / 2 + 6 ; msg ! (\"cool: defects+2, stress/heat damp\") ; } else { f . foundry . state = Pour ; f . book . units = f . book . units . saturating_add (11) ; f . core . heat ^= 0x55AA_33CC ; f . mold . stress = f . mold . stress . saturating_add (7) ; msg ! (\"pour: units+11, core xor, mold+7\") ; }"
      },
      {
        "id": 20,
        "label": "f . foundry . state = Cool ;"
      },
      {
        "id": 21,
        "label": "f . book . defects = f . book . defects . saturating_add (2) ;"
      },
      {
        "id": 22,
        "label": "f . mold . stress = f . mold . stress / 2 + 8 ;"
      },
      {
        "id": 23,
        "label": "f . core . heat = f . core . heat / 2 + 6 ;"
      },
      {
        "id": 24,
        "label": "msg ! (\"cool: defects+2, stress/heat damp\") ;"
      },
      {
        "id": 25,
        "label": "f . foundry . state = Pour ;"
      },
      {
        "id": 26,
        "label": "f . book . units = f . book . units . saturating_add (11) ;"
      },
      {
        "id": 27,
        "label": "f . core . heat ^= 0x55AA_33CC ;"
      },
      {
        "id": 28,
        "label": "f . mold . stress = f . mold . stress . saturating_add (7) ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"pour: units+11, core xor, mold+7\") ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: f"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: load"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: f"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: load"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 25,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: f"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: f"
      }
    ]
  }
]