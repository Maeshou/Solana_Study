[
  {
    "name": "init_garden",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts ;"
      },
      {
        "id": 2,
        "label": "g . cfg . keeper = g . keeper . key () ;"
      },
      {
        "id": 3,
        "label": "g . cfg . cap_q24 = cap << 8 ;"
      },
      {
        "id": 4,
        "label": "g . cfg . state = Seed ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "grow",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let g = & mut ctx . accounts ;"
      },
      {
        "id": 8,
        "label": "Loop Start"
      },
      {
        "id": 9,
        "label": "let inc = (g . tree . height_q24 >> 3) + 256 ;"
      },
      {
        "id": 10,
        "label": "g . tree . height_q24 = g . tree . height_q24 . saturating_add (inc) ;"
      },
      {
        "id": 11,
        "label": "g . tree . hue = g . tree . hue . rotate_left (3) ^ (g . tree . hue >> 1) ;"
      },
      {
        "id": 12,
        "label": "g . journal . stamps = g . journal . stamps . wrapping_add (1) ;"
      },
      {
        "id": 13,
        "label": "Loop End"
      },
      {
        "id": 14,
        "label": "if statement"
      },
      {
        "id": 15,
        "label": "predicate"
      },
      {
        "id": 16,
        "label": "g . tree . height_q24 > g . cfg . cap_q24"
      },
      {
        "id": 17,
        "label": "True body"
      },
      {
        "id": 18,
        "label": "g . cfg . state = Trim ;"
      },
      {
        "id": 19,
        "label": "g . tree . height_q24 = g . cfg . cap_q24 ;"
      },
      {
        "id": 20,
        "label": "g . journal . prunes = g . journal . prunes . wrapping_add (2) ;"
      },
      {
        "id": 21,
        "label": "g . tree . hue ^= 0x00FF_00FF ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"trim: clip height, prunes+2, hue xor\") ;"
      },
      {
        "id": 23,
        "label": "False body"
      },
      {
        "id": 24,
        "label": "g . cfg . state = Bloom ;"
      },
      {
        "id": 25,
        "label": "g . journal . notes = g . journal . notes . wrapping_add (3) ;"
      },
      {
        "id": 26,
        "label": "g . tree . height_q24 = g . tree . height_q24 + 128 ;"
      },
      {
        "id": 27,
        "label": "g . tree . hue = g . tree . hue . wrapping_add (9) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"bloom: notes+3, height+0.5, hue+9\") ;"
      },
      {
        "id": 29,
        "label": "merge"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 8,
        "to": 13,
        "label": "for"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "predicate"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 14,
        "to": 17,
        "label": "true"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 14,
        "to": 23,
        "label": "false"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 22,
        "to": 29,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      }
    ]
  }
]