[
  {
    "name": "init_forge",
    "inputs": [
      "ctx: Context < InitForge >",
      "temp: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let f = & mut ctx . accounts . smith ;"
      },
      {
        "id": 2,
        "label": "let g = & mut ctx . accounts . gear_a ;"
      },
      {
        "id": 3,
        "label": "let h = & mut ctx . accounts . gear_b ;"
      },
      {
        "id": 4,
        "label": "let k = & mut ctx . accounts . kiln ;"
      },
      {
        "id": 5,
        "label": "f . owner = ctx . accounts . chief . key () ;"
      },
      {
        "id": 6,
        "label": "f . target_temp = temp ;"
      },
      {
        "id": 7,
        "label": "f . state = Idle ;"
      },
      {
        "id": 8,
        "label": "g . parent = f . key () ;"
      },
      {
        "id": 9,
        "label": "g . lane = 1 ;"
      },
      {
        "id": 10,
        "label": "g . durability = 40 ;"
      },
      {
        "id": 11,
        "label": "h . parent = f . key () ;"
      },
      {
        "id": 12,
        "label": "h . lane = 2 ;"
      },
      {
        "id": 13,
        "label": "h . durability = 42 ;"
      },
      {
        "id": 14,
        "label": "k . parent = f . key () ;"
      },
      {
        "id": 15,
        "label": "k . slot = 7 ;"
      },
      {
        "id": 16,
        "label": "k . heat = 0 ;"
      },
      {
        "id": 17,
        "label": "k . soot = 0 ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: f"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: g"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: h"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: k"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: f"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: f"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: g"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: f"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: g"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: g"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: h"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: f"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: h"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: h"
      },
      {
        "from": 4,
        "to": 14,
        "label": "data_dep: k"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: f"
      },
      {
        "from": 4,
        "to": 15,
        "label": "data_dep: k"
      },
      {
        "from": 4,
        "to": 16,
        "label": "data_dep: k"
      },
      {
        "from": 4,
        "to": 17,
        "label": "data_dep: k"
      }
    ]
  },
  {
    "name": "process_heat",
    "inputs": [
      "ctx: Context < ProcessHeat >",
      "rounds: u32"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let f = & mut ctx . accounts . smith ;"
      },
      {
        "id": 21,
        "label": "let g = & mut ctx . accounts . gear_a ;"
      },
      {
        "id": 22,
        "label": "let h = & mut ctx . accounts . gear_b ;"
      },
      {
        "id": 23,
        "label": "let k = & mut ctx . accounts . kiln ;"
      },
      {
        "id": 24,
        "label": "for r in 0 .. rounds { let diff = (f . target_temp as i64 - k . heat as i64) . abs () as u32 ; let step = (diff / 4) . max (1) ; k . heat = k . heat . checked_add (step) . unwrap_or (u32 :: MAX) ; g . durability = g . durability . saturating_add ((r % 3) as u32 + 1) ; h . durability = h . durability . saturating_add ((r % 5) as u32 + 1) ; k . soot ^= (k . heat ^ (g . durability | h . durability)) & 0x0FFF_FFFF ; }"
      },
      {
        "id": 25,
        "label": "let diff = (f . target_temp as i64 - k . heat as i64) . abs () as u32 ;"
      },
      {
        "id": 26,
        "label": "let step = (diff / 4) . max (1) ;"
      },
      {
        "id": 27,
        "label": "k . heat = k . heat . checked_add (step) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 28,
        "label": "g . durability = g . durability . saturating_add ((r % 3) as u32 + 1) ;"
      },
      {
        "id": 29,
        "label": "h . durability = h . durability . saturating_add ((r % 5) as u32 + 1) ;"
      },
      {
        "id": 30,
        "label": "k . soot ^= (k . heat ^ (g . durability | h . durability)) & 0x0FFF_FFFF ;"
      },
      {
        "id": 31,
        "label": "if k . heat > f . target_temp { f . state = Cooling ; g . durability = (g . durability / 2) + 5 ; h . durability = (h . durability / 2) + 7 ; k . soot = k . soot . saturating_add (11) ; msg ! (\"cooling: halve gears, soot+11\") ; } else { f . state = Heating ; g . durability = g . durability . checked_add (9) . unwrap_or (u32 :: MAX) ; h . durability ^= 0x00FF_F0F0 ; k . heat = k . heat . saturating_add (3) ; msg ! (\"heating: gear boost, heat+3\") ; }"
      },
      {
        "id": 32,
        "label": "f . state = Cooling ;"
      },
      {
        "id": 33,
        "label": "g . durability = (g . durability / 2) + 5 ;"
      },
      {
        "id": 34,
        "label": "h . durability = (h . durability / 2) + 7 ;"
      },
      {
        "id": 35,
        "label": "k . soot = k . soot . saturating_add (11) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"cooling: halve gears, soot+11\") ;"
      },
      {
        "id": 37,
        "label": "f . state = Heating ;"
      },
      {
        "id": 38,
        "label": "g . durability = g . durability . checked_add (9) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 39,
        "label": "h . durability ^= 0x00FF_F0F0 ;"
      },
      {
        "id": 40,
        "label": "k . heat = k . heat . saturating_add (3) ;"
      },
      {
        "id": 41,
        "label": "msg ! (\"heating: gear boost, heat+3\") ;"
      },
      {
        "id": 42,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: f"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: g"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: h"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: k"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: f"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: h"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: diff"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: f"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: k"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: step"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: diff"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: k"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: step"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 28,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: h"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 30,
        "label": "data_dep: k"
      },
      {
        "from": 21,
        "to": 30,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: f"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: f"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: f"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 31,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: k"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: f"
      },
      {
        "from": 21,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: h"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: k"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: f"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: g"
      },
      {
        "from": 22,
        "to": 39,
        "label": "data_dep: h"
      },
      {
        "from": 23,
        "to": 40,
        "label": "data_dep: k"
      },
      {
        "from": 23,
        "to": 40,
        "label": "data_dep: k"
      }
    ]
  }
]