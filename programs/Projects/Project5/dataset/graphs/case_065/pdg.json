[
  {
    "name": "init_raid",
    "inputs": [
      "ctx: Context < InitRaid >",
      "weight: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . party ;"
      },
      {
        "id": 2,
        "label": "let b = & mut ctx . accounts . boss_note ;"
      },
      {
        "id": 3,
        "label": "let l = & mut ctx . accounts . battle_log ;"
      },
      {
        "id": 4,
        "label": "p . owner = ctx . accounts . leader . key () ;"
      },
      {
        "id": 5,
        "label": "p . weight = weight ;"
      },
      {
        "id": 6,
        "label": "p . mode = Prep ;"
      },
      {
        "id": 7,
        "label": "b . parent = p . key () ;"
      },
      {
        "id": 8,
        "label": "b . phase = 1 ;"
      },
      {
        "id": 9,
        "label": "b . hp = 1000 ;"
      },
      {
        "id": 10,
        "label": "l . parent = p . key () ;"
      },
      {
        "id": 11,
        "label": "l . phase = 9 ;"
      },
      {
        "id": 12,
        "label": "l . ticks = 0 ;"
      },
      {
        "id": 13,
        "label": "l . acc = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: b"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: l"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: p"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: b"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: b"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: p"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: l"
      },
      {
        "from": 3,
        "to": 12,
        "label": "data_dep: l"
      },
      {
        "from": 3,
        "to": 13,
        "label": "data_dep: l"
      }
    ]
  },
  {
    "name": "write_tick",
    "inputs": [
      "ctx: Context < WriteTick >",
      "loops: u32"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let p = & mut ctx . accounts . party ;"
      },
      {
        "id": 17,
        "label": "let b = & mut ctx . accounts . boss_note ;"
      },
      {
        "id": 18,
        "label": "let l = & mut ctx . accounts . battle_log ;"
      },
      {
        "id": 19,
        "label": "for i in 0 .. loops { let mut x = (b . hp as u64) . max (1) ; let mut y = (x + 1) / 2 ; while y < x { x = y ; y = (x + (b . hp as u64 / x)) / 2 ; } let root = x as u32 ; b . hp = b . hp . saturating_sub ((i % 7) as u32 + (root % 5)) ; l . ticks = l . ticks . saturating_add (1) ; l . acc = l . acc . checked_add ((b . hp as u64) & 0xFFFF) . unwrap_or (u64 :: MAX) ; }"
      },
      {
        "id": 20,
        "label": "let mut x = (b . hp as u64) . max (1) ;"
      },
      {
        "id": 21,
        "label": "let mut y = (x + 1) / 2 ;"
      },
      {
        "id": 22,
        "label": "while y < x { x = y ; y = (x + (b . hp as u64 / x)) / 2 ; }"
      },
      {
        "id": 23,
        "label": "x = y ;"
      },
      {
        "id": 24,
        "label": "y = (x + (b . hp as u64 / x)) / 2 ;"
      },
      {
        "id": 25,
        "label": "let root = x as u32 ;"
      },
      {
        "id": 26,
        "label": "b . hp = b . hp . saturating_sub ((i % 7) as u32 + (root % 5)) ;"
      },
      {
        "id": 27,
        "label": "l . ticks = l . ticks . saturating_add (1) ;"
      },
      {
        "id": 28,
        "label": "l . acc = l . acc . checked_add ((b . hp as u64) & 0xFFFF) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 29,
        "label": "let avg = if l . ticks == 0 { 0 } else { (l . acc / l . ticks as u64) as u32 } ;"
      },
      {
        "id": 30,
        "label": "0"
      },
      {
        "id": 31,
        "label": "(l . acc / l . ticks as u64) as u32"
      },
      {
        "id": 32,
        "label": "if avg > p . weight as u32 { p . mode = Recover ; b . hp = b . hp . saturating_add (33) ; l . phase = l . phase . saturating_add (1) ; l . acc ^= 0x0FFF_FFFF ; msg ! (\"recover: boss heal, phase+1\") ; } else { p . mode = Assault ; b . phase = b . phase . saturating_add (1) ; l . ticks = l . ticks . saturating_add (3) ; l . acc = l . acc . saturating_add ((avg as u64) << 2) ; msg ! (\"assault: phase++ ticks+3\") ; }"
      },
      {
        "id": 33,
        "label": "p . mode = Recover ;"
      },
      {
        "id": 34,
        "label": "b . hp = b . hp . saturating_add (33) ;"
      },
      {
        "id": 35,
        "label": "l . phase = l . phase . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "l . acc ^= 0x0FFF_FFFF ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"recover: boss heal, phase+1\") ;"
      },
      {
        "id": 38,
        "label": "p . mode = Assault ;"
      },
      {
        "id": 39,
        "label": "b . phase = b . phase . saturating_add (1) ;"
      },
      {
        "id": 40,
        "label": "l . ticks = l . ticks . saturating_add (3) ;"
      },
      {
        "id": 41,
        "label": "l . acc = l . acc . saturating_add ((avg as u64) << 2) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"assault: phase++ ticks+3\") ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: p"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: b"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: l"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: x"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: y"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: x"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: y"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: x"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: x"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: y"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: y"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: x"
      },
      {
        "from": 17,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: x"
      },
      {
        "from": 20,
        "to": 23,
        "label": "data_dep: x"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: y"
      },
      {
        "from": 21,
        "to": 24,
        "label": "data_dep: y"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: x"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: x"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: root"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: x"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: root"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 28,
        "label": "data_dep: l"
      },
      {
        "from": 17,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: avg"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 32,
        "label": "data_dep: l"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: avg"
      },
      {
        "from": 16,
        "to": 33,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 36,
        "label": "data_dep: l"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 39,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 39,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: l"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: l"
      },
      {
        "from": 29,
        "to": 41,
        "label": "data_dep: avg"
      }
    ]
  }
]