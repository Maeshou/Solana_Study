[
  {
    "name": "init_dungeon",
    "inputs": [
      "ctx: Context < InitDungeon >",
      "n: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let d = & mut ctx . accounts . dungeon ;"
      },
      {
        "id": 2,
        "label": "d . owner = ctx . accounts . warden . key () ;"
      },
      {
        "id": 3,
        "label": "d . threshold = n * 9 + 200 ;"
      },
      {
        "id": 4,
        "label": "d . state = Locked ;"
      },
      {
        "id": 5,
        "label": "let a = & mut ctx . accounts . key_a ;"
      },
      {
        "id": 6,
        "label": "let b = & mut ctx . accounts . key_b ;"
      },
      {
        "id": 7,
        "label": "let c = & mut ctx . accounts . chest ;"
      },
      {
        "id": 8,
        "label": "let t = n . saturating_mul (n + 1) / 2 ;"
      },
      {
        "id": 9,
        "label": "a . dungeon = d . key () ;"
      },
      {
        "id": 10,
        "label": "a . ring = (n & 7) as u8 ;"
      },
      {
        "id": 11,
        "label": "a . keys = (t % 97) + 7 ;"
      },
      {
        "id": 12,
        "label": "b . dungeon = d . key () ;"
      },
      {
        "id": 13,
        "label": "b . ring = ((n >> 2) & 7) as u8 ;"
      },
      {
        "id": 14,
        "label": "b . keys = (t . rotate_left (3) % 83) + 11 ;"
      },
      {
        "id": 15,
        "label": "c . dungeon = d . key () ;"
      },
      {
        "id": 16,
        "label": "c . ring = 9 ;"
      },
      {
        "id": 17,
        "label": "c . score = (t as u64) & 0xFFFF ;"
      },
      {
        "id": 18,
        "label": "c . code = n ^ 0x2468 ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: d"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: d"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: d"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: a"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: b"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: c"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: t"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: a"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: d"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: a"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: a"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: t"
      },
      {
        "from": 6,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: d"
      },
      {
        "from": 6,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 6,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: d"
      },
      {
        "from": 7,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 7,
        "to": 17,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 7,
        "to": 18,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "solve",
    "inputs": [
      "ctx: Context < Solve >",
      "steps: u32"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let d = & mut ctx . accounts . dungeon ;"
      },
      {
        "id": 22,
        "label": "let a = & mut ctx . accounts . key_a ;"
      },
      {
        "id": 23,
        "label": "let b = & mut ctx . accounts . key_b ;"
      },
      {
        "id": 24,
        "label": "let c = & mut ctx . accounts . chest ;"
      },
      {
        "id": 25,
        "label": "for i in 0 .. steps { let mut x = (a . keys as u64) + 17 ; let mut y = (b . keys as u64) + 11 ; while y != 0 { let r = x % y ; x = y ; y = r ; } let g = (x as u32) . max (1) ; a . keys = a . keys . checked_add (g % 13) . unwrap_or (u32 :: MAX) ; b . keys = b . keys . saturating_add ((g % 7) + 1) ; c . code ^= ((a . keys ^ b . keys) as u32) . rotate_left ((i % 7) as u32) ; }"
      },
      {
        "id": 26,
        "label": "let mut x = (a . keys as u64) + 17 ;"
      },
      {
        "id": 27,
        "label": "let mut y = (b . keys as u64) + 11 ;"
      },
      {
        "id": 28,
        "label": "while y != 0 { let r = x % y ; x = y ; y = r ; }"
      },
      {
        "id": 29,
        "label": "let r = x % y ;"
      },
      {
        "id": 30,
        "label": "x = y ;"
      },
      {
        "id": 31,
        "label": "y = r ;"
      },
      {
        "id": 32,
        "label": "let g = (x as u32) . max (1) ;"
      },
      {
        "id": 33,
        "label": "a . keys = a . keys . checked_add (g % 13) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "b . keys = b . keys . saturating_add ((g % 7) + 1) ;"
      },
      {
        "id": 35,
        "label": "c . code ^= ((a . keys ^ b . keys) as u32) . rotate_left ((i % 7) as u32) ;"
      },
      {
        "id": 36,
        "label": "let sum = a . keys + b . keys ;"
      },
      {
        "id": 37,
        "label": "if sum > d . threshold { d . state = Open ; a . ring ^= 1 ; b . ring = b . ring . saturating_add (1) ; c . score = c . score . saturating_add ((sum as u64) & 63) ; msg ! (\"open: ring tweak & score+\") ; } else { d . state = Reset ; a . keys = a . keys . saturating_add (7) ; b . keys = b . keys / 2 + 9 ; c . code ^= 0x0F0F_F0F0 ; msg ! (\"reset: key adjust & code flip\") ; }"
      },
      {
        "id": 38,
        "label": "d . state = Open ;"
      },
      {
        "id": 39,
        "label": "a . ring ^= 1 ;"
      },
      {
        "id": 40,
        "label": "b . ring = b . ring . saturating_add (1) ;"
      },
      {
        "id": 41,
        "label": "c . score = c . score . saturating_add ((sum as u64) & 63) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"open: ring tweak & score+\") ;"
      },
      {
        "id": 43,
        "label": "d . state = Reset ;"
      },
      {
        "id": 44,
        "label": "a . keys = a . keys . saturating_add (7) ;"
      },
      {
        "id": 45,
        "label": "b . keys = b . keys / 2 + 9 ;"
      },
      {
        "id": 46,
        "label": "c . code ^= 0x0F0F_F0F0 ;"
      },
      {
        "id": 47,
        "label": "msg ! (\"reset: key adjust & code flip\") ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: d"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: a"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: b"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: c"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: c"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: x"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: a"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: y"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: y"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: r"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: y"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: x"
      },
      {
        "from": 27,
        "to": 30,
        "label": "data_dep: y"
      },
      {
        "from": 27,
        "to": 31,
        "label": "data_dep: y"
      },
      {
        "from": 29,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: g"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: x"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 33,
        "label": "data_dep: a"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: g"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: g"
      },
      {
        "from": 24,
        "to": 35,
        "label": "data_dep: c"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 36,
        "to": 36,
        "label": "def: sum"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: b"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: sum"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: d"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 36,
        "to": 37,
        "label": "data_dep: sum"
      },
      {
        "from": 21,
        "to": 37,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: c"
      },
      {
        "from": 21,
        "to": 38,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 39,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 40,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: c"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: c"
      },
      {
        "from": 36,
        "to": 41,
        "label": "data_dep: sum"
      },
      {
        "from": 21,
        "to": 43,
        "label": "data_dep: d"
      },
      {
        "from": 22,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 22,
        "to": 44,
        "label": "data_dep: a"
      },
      {
        "from": 23,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 23,
        "to": 45,
        "label": "data_dep: b"
      },
      {
        "from": 24,
        "to": 46,
        "label": "data_dep: c"
      }
    ]
  }
]