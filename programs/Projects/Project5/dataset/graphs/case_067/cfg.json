[
  {
    "name": "init_table",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let t = & mut ctx . accounts . parent ;"
      },
      {
        "id": 2,
        "label": "let a = & mut ctx . accounts . seat_a ;"
      },
      {
        "id": 3,
        "label": "let b = & mut ctx . accounts . seat_b ;"
      },
      {
        "id": 4,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 5,
        "label": "t . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 6,
        "label": "t . pot = pot_seed ;"
      },
      {
        "id": 7,
        "label": "t . mode = Closed ;"
      },
      {
        "id": 8,
        "label": "a . parent = t . key () ;"
      },
      {
        "id": 9,
        "label": "a . seat_id = 1 ;"
      },
      {
        "id": 10,
        "label": "a . chips = 100 ;"
      },
      {
        "id": 11,
        "label": "a . phase = 0 ;"
      },
      {
        "id": 12,
        "label": "b . parent = t . key () ;"
      },
      {
        "id": 13,
        "label": "b . seat_id = 2 ;"
      },
      {
        "id": 14,
        "label": "b . chips = 120 ;"
      },
      {
        "id": 15,
        "label": "b . phase = 0 ;"
      },
      {
        "id": 16,
        "label": "l . parent = t . key () ;"
      },
      {
        "id": 17,
        "label": "l . ring = 9 ;"
      },
      {
        "id": 18,
        "label": "l . lfsr = 0xA5A5_1234 ;"
      },
      {
        "id": 19,
        "label": "l . check = 0 ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  },
  {
    "name": "deal_round",
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let t = & mut ctx . accounts . parent ;"
      },
      {
        "id": 23,
        "label": "let a = & mut ctx . accounts . seat_a ;"
      },
      {
        "id": 24,
        "label": "let b = & mut ctx . accounts . seat_b ;"
      },
      {
        "id": 25,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "let bit = ((l . lfsr >> 0) ^ (l . lfsr >> 2) ^ (l . lfsr >> 6) ^ (l . lfsr >> 7)) & 1 ;"
      },
      {
        "id": 28,
        "label": "l . lfsr = (l . lfsr >> 1) | (bit << 31) ;"
      },
      {
        "id": 29,
        "label": "let draw_a = (l . lfsr & 31) as u64 ;"
      },
      {
        "id": 30,
        "label": "let draw_b = ((l . lfsr >> 5) & 31) as u64 ;"
      },
      {
        "id": 31,
        "label": "a . chips = a . chips . checked_add (draw_a) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 32,
        "label": "b . chips = b . chips . saturating_sub (draw_b . min (b . chips)) ;"
      },
      {
        "id": 33,
        "label": "t . pot = t . pot . saturating_add (draw_b) ;"
      },
      {
        "id": 34,
        "label": "l . check = l . check . wrapping_add (((a . chips ^ b . chips) as u64) . wrapping_mul (1315423911)) ;"
      },
      {
        "id": 35,
        "label": "Loop End"
      },
      {
        "id": 36,
        "label": "let swing = (a . chips as i128 - b . chips as i128) . unsigned_abs () ;"
      },
      {
        "id": 37,
        "label": "if statement"
      },
      {
        "id": 38,
        "label": "predicate"
      },
      {
        "id": 39,
        "label": "swing > t . pot"
      },
      {
        "id": 40,
        "label": "True body"
      },
      {
        "id": 41,
        "label": "t . mode = Settled ;"
      },
      {
        "id": 42,
        "label": "a . phase = a . phase . saturating_add (3) ;"
      },
      {
        "id": 43,
        "label": "b . phase = b . phase . saturating_add (1) ;"
      },
      {
        "id": 44,
        "label": "l . check ^= (t . pot . rotate_left (13)) as u64 ;"
      },
      {
        "id": 45,
        "label": "msg ! (\"settled: phases bumped, check mixed\") ;"
      },
      {
        "id": 46,
        "label": "False body"
      },
      {
        "id": 47,
        "label": "t . mode = Dealing ;"
      },
      {
        "id": 48,
        "label": "a . chips = a . chips . saturating_add (7) ;"
      },
      {
        "id": 49,
        "label": "b . chips = b . chips . saturating_add (5) ;"
      },
      {
        "id": 50,
        "label": "l . lfsr ^= 0x00FF_F0F0 ;"
      },
      {
        "id": 51,
        "label": "msg ! (\"dealing: small chip boosts, lfsr tweak\") ;"
      },
      {
        "id": 52,
        "label": "merge"
      },
      {
        "id": 53,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 26,
        "to": 35,
        "label": "for"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "predicate"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 37,
        "to": 40,
        "label": "true"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 37,
        "to": 46,
        "label": "false"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 45,
        "to": 52,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      }
    ]
  }
]