[
  {
    "name": "config_and_transfer_funds",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let config_acc = & ctx . accounts . config_account ;"
      },
      {
        "id": 2,
        "label": "let sender = & ctx . accounts . sender ;"
      },
      {
        "id": 3,
        "label": "let receiver = & ctx . accounts . receiver ;"
      },
      {
        "id": 4,
        "label": "let fee_acc = & ctx . accounts . fee_account ;"
      },
      {
        "id": 5,
        "label": "{ let mut raw = config_acc . try_borrow_mut_data () ? ; raw [0] = 1 ; let bytes = default_param . to_le_bytes () ; for i in 0 .. 8 { raw [1 + i] = bytes [i] ; } msg ! (\"[STEP1] config_account を再初期化: param = {}\" , default_param) ; }"
      },
      {
        "id": 6,
        "label": "let mut stored_param : u64 = { let raw = config_acc . try_borrow_data () ? ; let mut b = [0u8 ; 8] ; b . copy_from_slice (& raw [1 .. 9]) ; let p = u64 :: from_le_bytes (b) ; msg ! (\"[STEP2] stored_param = {}\" , p) ; p } ;"
      },
      {
        "id": 7,
        "label": "if (transfer_amount > stored_param)"
      },
      {
        "id": 8,
        "label": "then"
      },
      {
        "id": 9,
        "label": "msg ! (\"[STEP3] transfer_amount が大きすぎる: {}\" , transfer_amount) ;"
      },
      {
        "id": 10,
        "label": "return Err (error ! (ProgramError :: InsufficientFunds)) ;"
      },
      {
        "id": 11,
        "label": "else"
      },
      {
        "id": 12,
        "label": "No-op"
      },
      {
        "id": 13,
        "label": "merge"
      },
      {
        "id": 14,
        "label": "let (fee , net) = { let mut f = transfer_amount / 33 ; if f == 0 { f = 1 ; } let net_amount = transfer_amount . checked_sub (f) . ok_or (ProgramError :: InvalidArgument) ? ; msg ! (\"[STEP4] transfer_amount = {}, fee = {}, net_amount = {}\" , transfer_amount , f , net_amount) ; (f , net_amount) } ;"
      },
      {
        "id": 15,
        "label": "* * config_acc . try_borrow_mut_lamports () ? -= transfer_amount ;"
      },
      {
        "id": 16,
        "label": "* * receiver . try_borrow_mut_lamports () ? += net ;"
      },
      {
        "id": 17,
        "label": "* * sender . try_borrow_mut_lamports () ? += fee ;"
      },
      {
        "id": 18,
        "label": "stored_param = stored_param . checked_sub (transfer_amount) . unwrap () ;"
      },
      {
        "id": 19,
        "label": "{ let mut raw = config_acc . try_borrow_mut_data () ? ; let bytes = stored_param . to_le_bytes () ; for i in 0 .. 8 { raw [1 + i] = bytes [i] ; } msg ! (\"[STEP5] config_account の新しい param = {}\" , stored_param) ; }"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "true"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 7,
        "to": 11,
        "label": "false"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 10,
        "to": 13,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "call"
      }
    ]
  }
]