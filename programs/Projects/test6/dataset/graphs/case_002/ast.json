[
  {
    "name": "config_and_withdraw",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ConfigAndWithdraw >",
      "initial_config: u64",
      "withdraw_amount: u64"
    ],
    "attributes": [
      "# [doc = \" 1) ConfigAccount を初期化するが初期化済みチェックを行わず再初期化する\"]",
      "# [doc = \" 2) ConfigAccount のデータをパースして残高を引き出すが owner チェックを行わない\"]"
    ],
    "body": [
      "let config_acc = & ctx . accounts . config_account ;",
      "let recipient = & ctx . accounts . recipient_account ;",
      "let owner_acc = & ctx . accounts . owner_account ;",
      "{ let mut raw = config_acc . try_borrow_mut_data () ? ; raw [0] = 1 ; let cfg_bytes = initial_config . to_le_bytes () ; raw [1] = cfg_bytes [0] ; raw [2] = cfg_bytes [1] ; raw [3] = cfg_bytes [2] ; raw [4] = cfg_bytes [3] ; raw [5] = cfg_bytes [4] ; raw [6] = cfg_bytes [5] ; raw [7] = cfg_bytes [6] ; raw [8] = cfg_bytes [7] ; }",
      "let current_limit : u128 = { let raw = config_acc . try_borrow_data () ? ; let l0 = raw [1] as u128 ; let l1 = raw [2] as u128 ; let l2 = raw [3] as u128 ; let l3 = raw [4] as u128 ; let l4 = raw [5] as u128 ; let l5 = raw [6] as u128 ; let l6 = raw [7] as u128 ; let l7 = raw [8] as u128 ; l0 | (l1 << 8) | (l2 << 16) | (l3 << 24) | (l4 << 32) | (l5 << 40) | (l6 << 48) | (l7 << 56) } ;",
      "let remaining = (current_limit as u64) . wrapping_sub (withdraw_amount) ;",
      "let fee = withdraw_amount / 10 ;",
      "* * config_acc . try_borrow_mut_lamports () ? = remaining ;",
      "* * owner_acc . try_borrow_mut_lamports () ? += fee ;",
      "* * recipient . try_borrow_mut_lamports () ? += withdraw_amount . wrapping_sub (fee) ;",
      "let rem_bytes = remaining . to_le_bytes () ;",
      "let mut raw_mut = config_acc . try_borrow_mut_data () ? ;",
      "raw_mut [1] = rem_bytes [0] ;",
      "raw_mut [2] = rem_bytes [1] ;",
      "raw_mut [3] = rem_bytes [2] ;",
      "raw_mut [4] = rem_bytes [3] ;",
      "raw_mut [5] = rem_bytes [4] ;",
      "raw_mut [6] = rem_bytes [5] ;",
      "raw_mut [7] = rem_bytes [6] ;",
      "raw_mut [8] = rem_bytes [7] ;",
      "Ok (())"
    ]
  },
  {
    "name": "ConfigAccount",
    "node_type": "struct",
    "fields": [
      {
        "name": "initialized",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "limit",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ConfigAndWithdraw",
    "node_type": "struct",
    "fields": [
      {
        "name": "config_account",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "recipient_account",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "owner_account",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]