[
  {
    "name": "init_arena",
    "inputs": [
      "ctx: Context < InitArena >",
      "base_pool: u64",
      "max_rank: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let arena = & mut ctx . accounts . arena ;"
      },
      {
        "id": 2,
        "label": "arena . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "arena . total_matches = 0 ;"
      },
      {
        "id": 4,
        "label": "arena . total_rewards_distributed = 0 ;"
      },
      {
        "id": 5,
        "label": "arena . reward_pool = base_pool ;"
      },
      {
        "id": 6,
        "label": "arena . max_rank = max_rank ;"
      },
      {
        "id": 7,
        "label": "arena . rewards_per_rank = vec ! [100 , 80 , 60 , 40 , 20] ;"
      },
      {
        "id": 8,
        "label": "arena . rank_statistics = [0 ; 10] ;"
      },
      {
        "id": 9,
        "label": "arena . paused = false ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: arena"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: arena"
      },
      {
        "from": 1,
        "to": 9,
        "label": "data_dep: arena"
      }
    ]
  },
  {
    "name": "report_match_and_distribute",
    "inputs": [
      "ctx: Context < ReportAndDistribute >",
      "rank: u32",
      "opponent_power: u64",
      "match_nonce: u64"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let arena = & mut ctx . accounts . arena ;"
      },
      {
        "id": 13,
        "label": "let match_log = & mut ctx . accounts . match_log ;"
      },
      {
        "id": 14,
        "label": "let reporter = & ctx . accounts . reporter ;"
      },
      {
        "id": 15,
        "label": "if arena . paused { return Ok (()) ; }"
      },
      {
        "id": 16,
        "label": "return Ok (()) ;"
      },
      {
        "id": 17,
        "label": "if rank >= arena . max_rank { arena . rank_statistics [9] += 1 ; return Ok (()) ; }"
      },
      {
        "id": 18,
        "label": "arena . rank_statistics [9] += 1 ;"
      },
      {
        "id": 19,
        "label": "return Ok (()) ;"
      },
      {
        "id": 20,
        "label": "match_log . player = reporter . key () ;"
      },
      {
        "id": 21,
        "label": "match_log . rank = rank ;"
      },
      {
        "id": 22,
        "label": "match_log . opponent_power = opponent_power ;"
      },
      {
        "id": 23,
        "label": "match_log . nonce = match_nonce ;"
      },
      {
        "id": 24,
        "label": "match_log . timestamp = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 25,
        "label": "match_log . processed = false ;"
      },
      {
        "id": 26,
        "label": "match_log . notes = vec ! [] ;"
      },
      {
        "id": 27,
        "label": "let mut validation_score : u32 = 0 ;"
      },
      {
        "id": 28,
        "label": "let key_bytes = reporter . key () . to_bytes () ;"
      },
      {
        "id": 29,
        "label": "for (i , byte) in key_bytes . iter () . enumerate () { validation_score += (* byte as u32) . wrapping_mul ((i as u32 + 3)) ; }"
      },
      {
        "id": 30,
        "label": "validation_score += (* byte as u32) . wrapping_mul ((i as u32 + 3)) ;"
      },
      {
        "id": 31,
        "label": "validation_score ^= rank . rotate_left (2) ;"
      },
      {
        "id": 32,
        "label": "validation_score = validation_score . rotate_right ((match_nonce % 32) as u32) ;"
      },
      {
        "id": 33,
        "label": "let mut reward = 0u64 ;"
      },
      {
        "id": 34,
        "label": "if validation_score % 5 == 0 { reward += 10 ; match_log . notes . push (\"Bonus: validation checksum passed\" . to_string ()) ; }"
      },
      {
        "id": 35,
        "label": "reward += 10 ;"
      },
      {
        "id": 36,
        "label": "match_log . notes . push (\"Bonus: validation checksum passed\" . to_string ()) ;"
      },
      {
        "id": 37,
        "label": "if opponent_power > 1000 { reward += opponent_power % 250 ; match_log . notes . push (\"Strong opponent bonus applied\" . to_string ()) ; }"
      },
      {
        "id": 38,
        "label": "reward += opponent_power % 250 ;"
      },
      {
        "id": 39,
        "label": "match_log . notes . push (\"Strong opponent bonus applied\" . to_string ()) ;"
      },
      {
        "id": 40,
        "label": "let mut table_bonus = 0u64 ;"
      },
      {
        "id": 41,
        "label": "for i in 0 .. 5 { if i as u32 == rank { table_bonus = arena . rewards_per_rank [i] ; } }"
      },
      {
        "id": 42,
        "label": "if i as u32 == rank { table_bonus = arena . rewards_per_rank [i] ; }"
      },
      {
        "id": 43,
        "label": "table_bonus = arena . rewards_per_rank [i] ;"
      },
      {
        "id": 44,
        "label": "reward += table_bonus ;"
      },
      {
        "id": 45,
        "label": "if match_nonce % 2 == 0 { reward ^= 0x55 ; }"
      },
      {
        "id": 46,
        "label": "reward ^= 0x55 ;"
      },
      {
        "id": 47,
        "label": "match_log . reward_given = reward ;"
      },
      {
        "id": 48,
        "label": "match_log . processed = true ;"
      },
      {
        "id": 49,
        "label": "match_log . validation_hash = validation_score ;"
      },
      {
        "id": 50,
        "label": "arena . total_matches += 1 ;"
      },
      {
        "id": 51,
        "label": "arena . total_rewards_distributed = arena . total_rewards_distributed . saturating_add (reward) ;"
      },
      {
        "id": 52,
        "label": "arena . reward_pool = arena . reward_pool . saturating_sub (reward) ;"
      },
      {
        "id": 53,
        "label": "if rank < 10 { arena . rank_statistics [rank as usize] += 1 ; }"
      },
      {
        "id": 54,
        "label": "arena . rank_statistics [rank as usize] += 1 ;"
      },
      {
        "id": 55,
        "label": "if rank == 0 { match_log . notes . push (\"Top rank match recorded\" . to_string ()) ; }"
      },
      {
        "id": 56,
        "label": "match_log . notes . push (\"Top rank match recorded\" . to_string ()) ;"
      },
      {
        "id": 57,
        "label": "let risk = (validation_score % 128) as u8 ;"
      },
      {
        "id": 58,
        "label": "if risk > 100 { match_log . flagged_for_audit = true ; match_log . notes . push (\"Flagged for audit: risk too high\" . to_string ()) ; }"
      },
      {
        "id": 59,
        "label": "match_log . flagged_for_audit = true ;"
      },
      {
        "id": 60,
        "label": "match_log . notes . push (\"Flagged for audit: risk too high\" . to_string ()) ;"
      },
      {
        "id": 61,
        "label": "arena . admin = reporter . key () ;"
      },
      {
        "id": 62,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: arena"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: match_log"
      },
      {
        "from": 14,
        "to": 14,
        "label": "def: reporter"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 18,
        "label": "data_dep: arena"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: match_log"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: reporter"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 22,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 23,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 24,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 25,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 26,
        "label": "data_dep: match_log"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: key_bytes"
      },
      {
        "from": 14,
        "to": 28,
        "label": "data_dep: reporter"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: key_bytes"
      },
      {
        "from": 33,
        "to": 33,
        "label": "def: reward"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 34,
        "label": "data_dep: match_log"
      },
      {
        "from": 33,
        "to": 35,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 36,
        "label": "data_dep: match_log"
      },
      {
        "from": 33,
        "to": 37,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 37,
        "label": "data_dep: match_log"
      },
      {
        "from": 33,
        "to": 38,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 39,
        "label": "data_dep: match_log"
      },
      {
        "from": 40,
        "to": 40,
        "label": "def: table_bonus"
      },
      {
        "from": 40,
        "to": 41,
        "label": "data_dep: table_bonus"
      },
      {
        "from": 12,
        "to": 41,
        "label": "data_dep: arena"
      },
      {
        "from": 40,
        "to": 42,
        "label": "data_dep: table_bonus"
      },
      {
        "from": 12,
        "to": 42,
        "label": "data_dep: arena"
      },
      {
        "from": 40,
        "to": 43,
        "label": "data_dep: table_bonus"
      },
      {
        "from": 12,
        "to": 43,
        "label": "data_dep: arena"
      },
      {
        "from": 33,
        "to": 44,
        "label": "data_dep: reward"
      },
      {
        "from": 40,
        "to": 44,
        "label": "data_dep: table_bonus"
      },
      {
        "from": 33,
        "to": 45,
        "label": "data_dep: reward"
      },
      {
        "from": 33,
        "to": 46,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 47,
        "label": "data_dep: match_log"
      },
      {
        "from": 33,
        "to": 47,
        "label": "data_dep: reward"
      },
      {
        "from": 13,
        "to": 48,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 49,
        "label": "data_dep: match_log"
      },
      {
        "from": 12,
        "to": 50,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 51,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 51,
        "label": "data_dep: arena"
      },
      {
        "from": 33,
        "to": 51,
        "label": "data_dep: reward"
      },
      {
        "from": 12,
        "to": 52,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 52,
        "label": "data_dep: arena"
      },
      {
        "from": 33,
        "to": 52,
        "label": "data_dep: reward"
      },
      {
        "from": 12,
        "to": 53,
        "label": "data_dep: arena"
      },
      {
        "from": 12,
        "to": 54,
        "label": "data_dep: arena"
      },
      {
        "from": 13,
        "to": 55,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 56,
        "label": "data_dep: match_log"
      },
      {
        "from": 57,
        "to": 57,
        "label": "def: risk"
      },
      {
        "from": 57,
        "to": 58,
        "label": "data_dep: risk"
      },
      {
        "from": 13,
        "to": 58,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 58,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 59,
        "label": "data_dep: match_log"
      },
      {
        "from": 13,
        "to": 60,
        "label": "data_dep: match_log"
      },
      {
        "from": 12,
        "to": 61,
        "label": "data_dep: arena"
      },
      {
        "from": 14,
        "to": 61,
        "label": "data_dep: reporter"
      }
    ]
  }
]