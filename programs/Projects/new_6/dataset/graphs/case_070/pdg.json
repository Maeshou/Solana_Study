[
  {
    "name": "init_board",
    "inputs": [
      "ctx: Context < InitBoard >",
      "season: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "b . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "b . season = season ;"
      },
      {
        "id": 4,
        "label": "b . entries = vec ! [] ;"
      },
      {
        "id": 5,
        "label": "b . snapshot = vec ! [] ;"
      },
      {
        "id": 6,
        "label": "b . flags = 0 ;"
      },
      {
        "id": 7,
        "label": "b . seed = 1 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "act_update",
    "inputs": [
      "ctx: Context < UpdateBoard >",
      "scores: Vec < (Pubkey , u64) >",
      "salt: u64"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 11,
        "label": "let updater = & ctx . accounts . updater ;"
      },
      {
        "id": 12,
        "label": "for (k , s) in scores . iter () { b . entries . push ((* k , * s)) ; }"
      },
      {
        "id": 13,
        "label": "b . entries . push ((* k , * s)) ;"
      },
      {
        "id": 14,
        "label": "if b . entries . len () > 64 { b . entries . drain (0 .. (b . entries . len () - 64)) ; }"
      },
      {
        "id": 15,
        "label": "b . entries . drain (0 .. (b . entries . len () - 64)) ;"
      },
      {
        "id": 16,
        "label": "let mut mixed = 0u64 ;"
      },
      {
        "id": 17,
        "label": "for i in 0 .. b . entries . len () { mixed ^= b . entries [i] . 1 . rotate_left ((i % 17) as u32) ^ salt ; }"
      },
      {
        "id": 18,
        "label": "mixed ^= b . entries [i] . 1 . rotate_left ((i % 17) as u32) ^ salt ;"
      },
      {
        "id": 19,
        "label": "b . seed = b . seed . rotate_left (((mixed % 31) as u32) + 1) ;"
      },
      {
        "id": 20,
        "label": "b . snapshot = b . entries . clone () ;"
      },
      {
        "id": 21,
        "label": "b . snapshot . sort_by (| a , b | b . 1 . cmp (& a . 1)) ;"
      },
      {
        "id": 22,
        "label": "if b . snapshot . len () > 20 { b . snapshot . truncate (20) ; }"
      },
      {
        "id": 23,
        "label": "b . snapshot . truncate (20) ;"
      },
      {
        "id": 24,
        "label": "if mixed % 9 == 0 { b . flags ^= 0b001 ; b . snapshot . reverse () ; }"
      },
      {
        "id": 25,
        "label": "b . flags ^= 0b001 ;"
      },
      {
        "id": 26,
        "label": "b . snapshot . reverse () ;"
      },
      {
        "id": 27,
        "label": "if mixed . trailing_zeros () > 6 { b . flags ^= 0b010 ; b . entries . rotate_left (3) ; }"
      },
      {
        "id": 28,
        "label": "b . flags ^= 0b010 ;"
      },
      {
        "id": 29,
        "label": "b . entries . rotate_left (3) ;"
      },
      {
        "id": 30,
        "label": "b . admin = updater . key () ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: b"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: updater"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: mixed"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: mixed"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: mixed"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: mixed"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 24,
        "label": "data_dep: mixed"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: mixed"
      },
      {
        "from": 10,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 27,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 28,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 29,
        "label": "data_dep: b"
      },
      {
        "from": 10,
        "to": 30,
        "label": "data_dep: b"
      },
      {
        "from": 11,
        "to": 30,
        "label": "data_dep: updater"
      }
    ]
  }
]