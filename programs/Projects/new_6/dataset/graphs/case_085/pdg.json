[
  {
    "name": "forge_nft",
    "inputs": [
      "ctx: Context < ForgeNft >",
      "material_score: u64",
      "inspiration: u8",
      "review_mode: bool"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let forge = & mut ctx . accounts . nft_forge ;"
      },
      {
        "id": 2,
        "label": "let crafter = & ctx . accounts . crafter ;"
      },
      {
        "id": 3,
        "label": "let reviewer = & ctx . accounts . reviewer ;"
      },
      {
        "id": 4,
        "label": "forge . review_mode = review_mode ;"
      },
      {
        "id": 5,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 6,
        "label": "forge . last_forged = now ;"
      },
      {
        "id": 7,
        "label": "forge . total_forgings += 1 ;"
      },
      {
        "id": 8,
        "label": "let mut base_power = 10 ;"
      },
      {
        "id": 9,
        "label": "let mut quality_multiplier = 1 ;"
      },
      {
        "id": 10,
        "label": "if material_score > 500 { base_power += 25 ; }"
      },
      {
        "id": 11,
        "label": "base_power += 25 ;"
      },
      {
        "id": 12,
        "label": "if inspiration > 80 { quality_multiplier = 3 ; }"
      },
      {
        "id": 13,
        "label": "quality_multiplier = 3 ;"
      },
      {
        "id": 14,
        "label": "forge . power_score = base_power * quality_multiplier ;"
      },
      {
        "id": 15,
        "label": "let record = & mut ctx . accounts . forge_log ;"
      },
      {
        "id": 16,
        "label": "record . crafter = crafter . key () ;"
      },
      {
        "id": 17,
        "label": "record . reviewer = reviewer . key () ;"
      },
      {
        "id": 18,
        "label": "record . timestamp = now ;"
      },
      {
        "id": 19,
        "label": "record . material_score = material_score ;"
      },
      {
        "id": 20,
        "label": "record . inspiration = inspiration ;"
      },
      {
        "id": 21,
        "label": "record . power_generated = forge . power_score ;"
      },
      {
        "id": 22,
        "label": "record . review_mode_flag = review_mode ;"
      },
      {
        "id": 23,
        "label": "if review_mode { forge . pending_review = true ; record . requires_review = true ; } else { forge . pending_review = false ; record . requires_review = false ; }"
      },
      {
        "id": 24,
        "label": "forge . pending_review = true ;"
      },
      {
        "id": 25,
        "label": "record . requires_review = true ;"
      },
      {
        "id": 26,
        "label": "forge . pending_review = false ;"
      },
      {
        "id": 27,
        "label": "record . requires_review = false ;"
      },
      {
        "id": 28,
        "label": "let mut xp_gain = 5 ;"
      },
      {
        "id": 29,
        "label": "if material_score > 1000 { xp_gain += 10 ; }"
      },
      {
        "id": 30,
        "label": "xp_gain += 10 ;"
      },
      {
        "id": 31,
        "label": "if inspiration > 90 { xp_gain += 15 ; }"
      },
      {
        "id": 32,
        "label": "xp_gain += 15 ;"
      },
      {
        "id": 33,
        "label": "forge . total_xp += xp_gain ;"
      },
      {
        "id": 34,
        "label": "forge . recent_crafter = crafter . key () ;"
      },
      {
        "id": 35,
        "label": "forge . last_material_hash = hashv (& [& material_score . to_le_bytes () , & inspiration . to_le_bytes ()]) . to_bytes () ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: forge"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: crafter"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: reviewer"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: forge"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: now"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: forge"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: forge"
      },
      {
        "from": 8,
        "to": 8,
        "label": "def: base_power"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: quality_multiplier"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: base_power"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: base_power"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: quality_multiplier"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: quality_multiplier"
      },
      {
        "from": 1,
        "to": 14,
        "label": "data_dep: forge"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: base_power"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: quality_multiplier"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: record"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: record"
      },
      {
        "from": 2,
        "to": 16,
        "label": "data_dep: crafter"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: record"
      },
      {
        "from": 3,
        "to": 17,
        "label": "data_dep: reviewer"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: record"
      },
      {
        "from": 5,
        "to": 18,
        "label": "data_dep: now"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: record"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: record"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: record"
      },
      {
        "from": 1,
        "to": 21,
        "label": "data_dep: forge"
      },
      {
        "from": 15,
        "to": 22,
        "label": "data_dep: record"
      },
      {
        "from": 1,
        "to": 23,
        "label": "data_dep: forge"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: record"
      },
      {
        "from": 1,
        "to": 23,
        "label": "data_dep: forge"
      },
      {
        "from": 15,
        "to": 23,
        "label": "data_dep: record"
      },
      {
        "from": 1,
        "to": 24,
        "label": "data_dep: forge"
      },
      {
        "from": 15,
        "to": 25,
        "label": "data_dep: record"
      },
      {
        "from": 1,
        "to": 26,
        "label": "data_dep: forge"
      },
      {
        "from": 15,
        "to": 27,
        "label": "data_dep: record"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: xp_gain"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: xp_gain"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: xp_gain"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: xp_gain"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: xp_gain"
      },
      {
        "from": 1,
        "to": 33,
        "label": "data_dep: forge"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: xp_gain"
      },
      {
        "from": 1,
        "to": 34,
        "label": "data_dep: forge"
      },
      {
        "from": 2,
        "to": 34,
        "label": "data_dep: crafter"
      },
      {
        "from": 1,
        "to": 35,
        "label": "data_dep: forge"
      }
    ]
  }
]