[
  {
    "name": "init_profile",
    "inputs": [
      "ctx: Context < InitSkill >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 2,
        "label": "p . owner = ctx . accounts . initiator . key () ;"
      },
      {
        "id": 3,
        "label": "p . slot_mask = 0 ;"
      },
      {
        "id": 4,
        "label": "p . skills = vec ! [] ;"
      },
      {
        "id": 5,
        "label": "p . variant = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_learn",
    "inputs": [
      "ctx: Context < LearnSkill >",
      "pattern: u8"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 9,
        "label": "let signer = & ctx . accounts . actor ;"
      },
      {
        "id": 10,
        "label": "let index = (pattern % 5) as usize ;"
      },
      {
        "id": 11,
        "label": "if p . skills . len () <= index { p . skills . resize (index + 1 , 0) ; }"
      },
      {
        "id": 12,
        "label": "p . skills . resize (index + 1 , 0) ;"
      },
      {
        "id": 13,
        "label": "let new_skill = (! pattern) . rotate_left (index as u32) ;"
      },
      {
        "id": 14,
        "label": "p . skills [index] ^= new_skill ;"
      },
      {
        "id": 15,
        "label": "p . slot_mask |= 1 << index ;"
      },
      {
        "id": 16,
        "label": "if p . slot_mask & 0b11111 == 0b11111 { p . variant = (p . variant . wrapping_add (1) ^ new_skill) & 0xFF ; p . skills . iter_mut () . for_each (| x | * x = x . reverse_bits ()) ; }"
      },
      {
        "id": 17,
        "label": "p . variant = (p . variant . wrapping_add (1) ^ new_skill) & 0xFF ;"
      },
      {
        "id": 18,
        "label": "p . skills . iter_mut () . for_each (| x | * x = x . reverse_bits ()) ;"
      },
      {
        "id": 19,
        "label": "p . owner = signer . key () ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: p"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: signer"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: index"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: index"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: new_skill"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: index"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: new_skill"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: index"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: new_skill"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: new_skill"
      },
      {
        "from": 8,
        "to": 18,
        "label": "data_dep: p"
      },
      {
        "from": 8,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: signer"
      }
    ]
  }
]