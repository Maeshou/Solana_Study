[
  {
    "name": "init_relic",
    "inputs": [
      "ctx: Context < InitRelic >",
      "base: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let r = & mut ctx . accounts . relic ;"
      },
      {
        "id": 2,
        "label": "r . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "r . core_power = base ;"
      },
      {
        "id": 4,
        "label": "r . sockets = vec ! [0 ; 6] ;"
      },
      {
        "id": 5,
        "label": "r . affinity = [0u8 ; 3] ;"
      },
      {
        "id": 6,
        "label": "r . audit_notes = vec ! [] ;"
      },
      {
        "id": 7,
        "label": "r . mode = 0 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: r"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: r"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "act_socket",
    "inputs": [
      "ctx: Context < Socket >",
      "gem: u8",
      "times: u8",
      "label: String"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let r = & mut ctx . accounts . relic ;"
      },
      {
        "id": 11,
        "label": "let appraiser = & ctx . accounts . appraiser ;"
      },
      {
        "id": 12,
        "label": "r . audit_notes . push (format ! (\"{}#{}\" , label , times)) ;"
      },
      {
        "id": 13,
        "label": "if r . audit_notes . len () > 10 { r . audit_notes . remove (0) ; }"
      },
      {
        "id": 14,
        "label": "r . audit_notes . remove (0) ;"
      },
      {
        "id": 15,
        "label": "let mut t = 0 ;"
      },
      {
        "id": 16,
        "label": "while t < times { let slot = ((gem as usize) + t as usize) % r . sockets . len () ; let delta = ((gem as u16) << (t % 3)) ^ (r . core_power . rotate_left ((t % 7) as u32)) ; r . sockets [slot] = r . sockets [slot] . wrapping_add ((delta & 0xFF) as u8) ; if r . sockets [slot] & 1 == 1 { r . affinity [(slot % 3)] = r . affinity [(slot % 3)] . wrapping_add ((gem ^ (t as u8)) & 0x1F) ; r . mode = r . mode . rotate_left (1) ; } if r . affinity [(slot % 3)] > 100 { r . affinity [(slot % 3)] = r . affinity [(slot % 3)] % 67 ; r . core_power = r . core_power . rotate_right (1) ; } t += 1 ; }"
      },
      {
        "id": 17,
        "label": "let slot = ((gem as usize) + t as usize) % r . sockets . len () ;"
      },
      {
        "id": 18,
        "label": "let delta = ((gem as u16) << (t % 3)) ^ (r . core_power . rotate_left ((t % 7) as u32)) ;"
      },
      {
        "id": 19,
        "label": "r . sockets [slot] = r . sockets [slot] . wrapping_add ((delta & 0xFF) as u8) ;"
      },
      {
        "id": 20,
        "label": "if r . sockets [slot] & 1 == 1 { r . affinity [(slot % 3)] = r . affinity [(slot % 3)] . wrapping_add ((gem ^ (t as u8)) & 0x1F) ; r . mode = r . mode . rotate_left (1) ; }"
      },
      {
        "id": 21,
        "label": "r . affinity [(slot % 3)] = r . affinity [(slot % 3)] . wrapping_add ((gem ^ (t as u8)) & 0x1F) ;"
      },
      {
        "id": 22,
        "label": "r . mode = r . mode . rotate_left (1) ;"
      },
      {
        "id": 23,
        "label": "if r . affinity [(slot % 3)] > 100 { r . affinity [(slot % 3)] = r . affinity [(slot % 3)] % 67 ; r . core_power = r . core_power . rotate_right (1) ; }"
      },
      {
        "id": 24,
        "label": "r . affinity [(slot % 3)] = r . affinity [(slot % 3)] % 67 ;"
      },
      {
        "id": 25,
        "label": "r . core_power = r . core_power . rotate_right (1) ;"
      },
      {
        "id": 26,
        "label": "t += 1 ;"
      },
      {
        "id": 27,
        "label": "let sum = r . sockets . iter () . fold (0u32 , | a , b | a + * b as u32) ;"
      },
      {
        "id": 28,
        "label": "if sum % 9 == 0 { r . core_power = r . core_power . wrapping_add ((sum % 257) as u16) ; r . sockets . rotate_left (1) ; }"
      },
      {
        "id": 29,
        "label": "r . core_power = r . core_power . wrapping_add ((sum % 257) as u16) ;"
      },
      {
        "id": 30,
        "label": "r . sockets . rotate_left (1) ;"
      },
      {
        "id": 31,
        "label": "r . owner = appraiser . key () ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: r"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: appraiser"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: t"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: t"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: slot"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: r"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: delta"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 19,
        "label": "data_dep: slot"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: delta"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: slot"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 21,
        "label": "data_dep: slot"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: t"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 24,
        "label": "data_dep: r"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: slot"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 25,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 26,
        "label": "data_dep: t"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: sum"
      },
      {
        "from": 10,
        "to": 27,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: sum"
      },
      {
        "from": 10,
        "to": 28,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 28,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: sum"
      },
      {
        "from": 10,
        "to": 28,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 29,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 29,
        "label": "data_dep: r"
      },
      {
        "from": 27,
        "to": 29,
        "label": "data_dep: sum"
      },
      {
        "from": 10,
        "to": 30,
        "label": "data_dep: r"
      },
      {
        "from": 10,
        "to": 31,
        "label": "data_dep: r"
      },
      {
        "from": 11,
        "to": 31,
        "label": "data_dep: appraiser"
      }
    ]
  }
]