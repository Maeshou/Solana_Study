[
  {
    "name": "init_workshop",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let workshop = & mut ctx . accounts . workshop ;"
      },
      {
        "id": 2,
        "label": "workshop . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "workshop . workshop_name = workshop_name ;"
      },
      {
        "id": 4,
        "label": "workshop . crafting_fee = crafting_fee ;"
      },
      {
        "id": 5,
        "label": "workshop . total_crafts = 0 ;"
      },
      {
        "id": 6,
        "label": "workshop . is_open = true ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Workshop initialized: {}\" , workshop . workshop_name) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_material_storage",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let storage = & mut ctx . accounts . storage ;"
      },
      {
        "id": 11,
        "label": "storage . workshop = ctx . accounts . workshop . key () ;"
      },
      {
        "id": 12,
        "label": "storage . material_type = material_type ;"
      },
      {
        "id": 13,
        "label": "storage . quantity = quantity ;"
      },
      {
        "id": 14,
        "label": "storage . quality_grade = 1 ;"
      },
      {
        "id": 15,
        "label": "storage . is_available = true ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Material storage created: {:?}\" , material_type) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_crafting_process",
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let workshop = & mut ctx . accounts . workshop ;"
      },
      {
        "id": 20,
        "label": "let mut round = 0u8 ;"
      },
      {
        "id": 21,
        "label": "loop { if round >= iterations { break ; } if workshop . is_open { workshop . total_crafts += 1 ; let craft_bonus = (round as u32) * 50 ; workshop . crafting_fee += craft_bonus as u64 ; let power_mod = base_power ^ (round as u16) ; let final_power = power_mod & 0xFF ; msg ! (\"Craft round {}: power {}\" , round , final_power) ; } else { if workshop . total_crafts > 0 { workshop . total_crafts -= 1 ; } workshop . crafting_fee = workshop . crafting_fee . saturating_sub (100) ; msg ! (\"Closed workshop adjustment: round {}\" , round) ; } round += 1 ; }"
      },
      {
        "id": 22,
        "label": "let mut quality_iter = 0u8 ;"
      },
      {
        "id": 23,
        "label": "Loop Start"
      },
      {
        "id": 24,
        "label": "let quality_boost = quality_iter * 10 ;"
      },
      {
        "id": 25,
        "label": "workshop . crafting_fee += quality_boost as u64 ;"
      },
      {
        "id": 26,
        "label": "quality_iter += 1 ;"
      },
      {
        "id": 27,
        "label": "Loop End"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 23,
        "to": 27,
        "label": "while"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_dao_council",
    "nodes": [
      {
        "id": 29,
        "label": "Entry"
      },
      {
        "id": 30,
        "label": "let council = & mut ctx . accounts . council ;"
      },
      {
        "id": 31,
        "label": "council . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 32,
        "label": "council . dao_name = dao_name ;"
      },
      {
        "id": 33,
        "label": "council . quorum_threshold = quorum_threshold ;"
      },
      {
        "id": 34,
        "label": "council . active_proposals = 0 ;"
      },
      {
        "id": 35,
        "label": "council . is_operational = true ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"DAO Council established: {}\" , council . dao_name) ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_membership_record",
    "nodes": [
      {
        "id": 38,
        "label": "Entry"
      },
      {
        "id": 39,
        "label": "let record = & mut ctx . accounts . record ;"
      },
      {
        "id": 40,
        "label": "record . council = ctx . accounts . council . key () ;"
      },
      {
        "id": 41,
        "label": "record . member = ctx . accounts . member . key () ;"
      },
      {
        "id": 42,
        "label": "record . member_tier = member_tier ;"
      },
      {
        "id": 43,
        "label": "record . voting_weight = voting_weight ;"
      },
      {
        "id": 44,
        "label": "record . proposals_created = 0 ;"
      },
      {
        "id": 45,
        "label": "record . is_active = true ;"
      },
      {
        "id": 46,
        "label": "msg ! (\"Member record created with tier: {:?}\" , member_tier) ;"
      },
      {
        "id": 47,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_governance_vote",
    "nodes": [
      {
        "id": 48,
        "label": "Entry"
      },
      {
        "id": 49,
        "label": "let council = & mut ctx . accounts . council ;"
      },
      {
        "id": 50,
        "label": "let mut cycle = 0u16 ;"
      },
      {
        "id": 51,
        "label": "loop { if cycle >= vote_cycles { break ; } if council . is_operational { council . active_proposals += 1 ; let weight_bonus = (cycle % 10) as u32 * influence_modifier as u32 ; let shifted_weight = weight_bonus << 2 ; let final_weight = shifted_weight >> 1 ; msg ! (\"Vote cycle {}: weight {}\" , cycle , final_weight) ; } else { if council . active_proposals > 0 { council . active_proposals -= 1 ; } council . quorum_threshold = council . quorum_threshold . saturating_sub (5) ; msg ! (\"Suspended DAO cycle {}\" , cycle) ; } cycle += 1 ; }"
      },
      {
        "id": 52,
        "label": "let mut consensus = 0u8 ;"
      },
      {
        "id": 53,
        "label": "Loop Start"
      },
      {
        "id": 54,
        "label": "let adjustment = consensus * influence_modifier ;"
      },
      {
        "id": 55,
        "label": "council . quorum_threshold += adjustment as u16 ;"
      },
      {
        "id": 56,
        "label": "consensus += 1 ;"
      },
      {
        "id": 57,
        "label": "Loop End"
      },
      {
        "id": 58,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 53,
        "to": 57,
        "label": "while"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_escrow_agency",
    "nodes": [
      {
        "id": 59,
        "label": "Entry"
      },
      {
        "id": 60,
        "label": "let agency = & mut ctx . accounts . agency ;"
      },
      {
        "id": 61,
        "label": "agency . operator = ctx . accounts . operator . key () ;"
      },
      {
        "id": 62,
        "label": "agency . agency_name = agency_name ;"
      },
      {
        "id": 63,
        "label": "agency . service_rate = service_rate ;"
      },
      {
        "id": 64,
        "label": "agency . completed_escrows = 0 ;"
      },
      {
        "id": 65,
        "label": "agency . is_accepting = true ;"
      },
      {
        "id": 66,
        "label": "msg ! (\"Escrow agency created: {}\" , agency . agency_name) ;"
      },
      {
        "id": 67,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      },
      {
        "from": 61,
        "to": 62,
        "label": "next"
      },
      {
        "from": 62,
        "to": 63,
        "label": "next"
      },
      {
        "from": 63,
        "to": 64,
        "label": "next"
      },
      {
        "from": 64,
        "to": 65,
        "label": "next"
      },
      {
        "from": 65,
        "to": 66,
        "label": "next"
      },
      {
        "from": 66,
        "to": 67,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_escrow_contract",
    "nodes": [
      {
        "id": 68,
        "label": "Entry"
      },
      {
        "id": 69,
        "label": "let contract = & mut ctx . accounts . contract ;"
      },
      {
        "id": 70,
        "label": "contract . agency = ctx . accounts . agency . key () ;"
      },
      {
        "id": 71,
        "label": "contract . initiator = ctx . accounts . initiator . key () ;"
      },
      {
        "id": 72,
        "label": "contract . contract_value = contract_value ;"
      },
      {
        "id": 73,
        "label": "contract . release_condition = release_condition ;"
      },
      {
        "id": 74,
        "label": "contract . escrow_status = EscrowStatus :: Pending ;"
      },
      {
        "id": 75,
        "label": "contract . dispute_count = 0 ;"
      },
      {
        "id": 76,
        "label": "msg ! (\"Escrow contract created: {} value\" , contract_value) ;"
      },
      {
        "id": 77,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 68,
        "to": 69,
        "label": "next"
      },
      {
        "from": 69,
        "to": 70,
        "label": "next"
      },
      {
        "from": 70,
        "to": 71,
        "label": "next"
      },
      {
        "from": 71,
        "to": 72,
        "label": "next"
      },
      {
        "from": 72,
        "to": 73,
        "label": "next"
      },
      {
        "from": 73,
        "to": 74,
        "label": "next"
      },
      {
        "from": 74,
        "to": 75,
        "label": "next"
      },
      {
        "from": 75,
        "to": 76,
        "label": "next"
      },
      {
        "from": 76,
        "to": 77,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_escrow_settlement",
    "nodes": [
      {
        "id": 78,
        "label": "Entry"
      },
      {
        "id": 79,
        "label": "let agency = & mut ctx . accounts . agency ;"
      },
      {
        "id": 80,
        "label": "let contract = & mut ctx . accounts . contract ;"
      },
      {
        "id": 81,
        "label": "let mut round = 0u8 ;"
      },
      {
        "id": 82,
        "label": "loop { if round >= settlement_rounds { break ; } match contract . escrow_status { EscrowStatus :: Pending => { contract . contract_value += (round as u64) * 100 ; agency . completed_escrows += 1 ; let condition_met = (round % 3) == 0 ; if condition_met { contract . escrow_status = EscrowStatus :: Released ; } msg ! (\"Pending settlement round: {}\" , round) ; } , EscrowStatus :: Released => { let service_fee = (contract . contract_value * agency . service_rate as u64) / 100 ; contract . contract_value = contract . contract_value . saturating_sub (service_fee) ; msg ! (\"Released settlement round: {}\" , round) ; } , _ => { contract . dispute_count += 1 ; let penalty = (contract . contract_value * penalty_rate as u64) / 100 ; contract . contract_value = contract . contract_value . saturating_sub (penalty) ; msg ! (\"Disputed settlement round: {}\" , round) ; } } round += 1 ; }"
      },
      {
        "id": 83,
        "label": "let mut final_round = 0u8 ;"
      },
      {
        "id": 84,
        "label": "Loop Start"
      },
      {
        "id": 85,
        "label": "agency . service_rate = (agency . service_rate + final_round + 1) . min (50) ;"
      },
      {
        "id": 86,
        "label": "contract . contract_value += final_round as u64 * 50 ;"
      },
      {
        "id": 87,
        "label": "final_round += 1 ;"
      },
      {
        "id": 88,
        "label": "Loop End"
      },
      {
        "id": 89,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 78,
        "to": 79,
        "label": "next"
      },
      {
        "from": 79,
        "to": 80,
        "label": "next"
      },
      {
        "from": 80,
        "to": 81,
        "label": "next"
      },
      {
        "from": 81,
        "to": 82,
        "label": "next"
      },
      {
        "from": 82,
        "to": 83,
        "label": "next"
      },
      {
        "from": 83,
        "to": 84,
        "label": "next"
      },
      {
        "from": 84,
        "to": 85,
        "label": "next"
      },
      {
        "from": 85,
        "to": 86,
        "label": "next"
      },
      {
        "from": 86,
        "to": 87,
        "label": "next"
      },
      {
        "from": 84,
        "to": 88,
        "label": "while"
      },
      {
        "from": 88,
        "to": 89,
        "label": "next"
      }
    ]
  }
]