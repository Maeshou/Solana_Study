[
  {
    "name": "init_core",
    "inputs": [
      "ctx: Context < InitCore >",
      "base: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let c = & mut ctx . accounts . core ;"
      },
      {
        "id": 2,
        "label": "c . owner = ctx . accounts . fabricator . key () ;"
      },
      {
        "id": 3,
        "label": "c . base_power = base ;"
      },
      {
        "id": 4,
        "label": "c . fusion_index = vec ! [1 , 3 , 5] ;"
      },
      {
        "id": 5,
        "label": "c . status_flag = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: c"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: c"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: c"
      }
    ]
  },
  {
    "name": "act_fuse",
    "inputs": [
      "ctx: Context < FuseGear >",
      "catalyst: u32"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let c = & mut ctx . accounts . core ;"
      },
      {
        "id": 9,
        "label": "let helper = & ctx . accounts . helper ;"
      },
      {
        "id": 10,
        "label": "for i in 0 .. catalyst { c . base_power ^= i . wrapping_mul (31) ; if i % 2 == 1 { c . fusion_index . push ((i * 7 % 13) as u8) ; } }"
      },
      {
        "id": 11,
        "label": "c . base_power ^= i . wrapping_mul (31) ;"
      },
      {
        "id": 12,
        "label": "if i % 2 == 1 { c . fusion_index . push ((i * 7 % 13) as u8) ; }"
      },
      {
        "id": 13,
        "label": "c . fusion_index . push ((i * 7 % 13) as u8) ;"
      },
      {
        "id": 14,
        "label": "if c . fusion_index . len () > 5 { c . status_flag = (c . status_flag + 1) & 0b111 ; c . base_power = c . base_power . rotate_right (3) ; }"
      },
      {
        "id": 15,
        "label": "c . status_flag = (c . status_flag + 1) & 0b111 ;"
      },
      {
        "id": 16,
        "label": "c . base_power = c . base_power . rotate_right (3) ;"
      },
      {
        "id": 17,
        "label": "c . owner = helper . key () ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: c"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: helper"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 15,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 16,
        "label": "data_dep: c"
      },
      {
        "from": 8,
        "to": 17,
        "label": "data_dep: c"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: helper"
      }
    ]
  }
]