[
  {
    "name": "init_marketplace",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let marketplace = & mut ctx . accounts . marketplace ;"
      },
      {
        "id": 2,
        "label": "marketplace . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "marketplace . name = market_name ;"
      },
      {
        "id": 4,
        "label": "marketplace . total_orders = 0 ;"
      },
      {
        "id": 5,
        "label": "marketplace . fee_rate = 250 ;"
      },
      {
        "id": 6,
        "label": "marketplace . is_active = true ;"
      },
      {
        "id": 7,
        "label": "marketplace . total_volume = 0 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_order",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let order = & mut ctx . accounts . order ;"
      },
      {
        "id": 11,
        "label": "order . marketplace = ctx . accounts . marketplace . key () ;"
      },
      {
        "id": 12,
        "label": "order . creator = ctx . accounts . creator . key () ;"
      },
      {
        "id": 13,
        "label": "order . price = price ;"
      },
      {
        "id": 14,
        "label": "order . quantity = quantity ;"
      },
      {
        "id": 15,
        "label": "order . filled_quantity = 0 ;"
      },
      {
        "id": 16,
        "label": "order . status = Active ;"
      },
      {
        "id": 17,
        "label": "order . order_id = ctx . accounts . marketplace . total_orders ;"
      },
      {
        "id": 18,
        "label": "let marketplace = & mut ctx . accounts . marketplace ;"
      },
      {
        "id": 19,
        "label": "marketplace . total_orders = marketplace . total_orders . checked_add (1) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_trade",
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let marketplace = & mut ctx . accounts . marketplace ;"
      },
      {
        "id": 23,
        "label": "let buyer_data = ctx . accounts . buyer . try_borrow_mut_data () ? ;"
      },
      {
        "id": 24,
        "label": "let seller_data = ctx . accounts . seller . try_borrow_mut_data () ? ;"
      },
      {
        "id": 25,
        "label": "marketplace . total_volume = marketplace . total_volume . checked_add (trade_quantity as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "let fee_amount = (batch * marketplace . fee_rate) / 10000 ;"
      },
      {
        "id": 28,
        "label": "if statement"
      },
      {
        "id": 29,
        "label": "predicate"
      },
      {
        "id": 30,
        "label": "batch % 3 == 0"
      },
      {
        "id": 31,
        "label": "True body"
      },
      {
        "id": 32,
        "label": "marketplace . total_volume = marketplace . total_volume ^ (batch as u64) ;"
      },
      {
        "id": 33,
        "label": "marketplace . fee_rate = marketplace . fee_rate . checked_add (fee_amount) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "marketplace . total_orders = marketplace . total_orders + (batch as u64) * 2 ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Buyer batch {} processed\" , batch) ;"
      },
      {
        "id": 36,
        "label": "False body"
      },
      {
        "id": 37,
        "label": "marketplace . fee_rate = marketplace . fee_rate . saturating_sub (1) ;"
      },
      {
        "id": 38,
        "label": "marketplace . total_volume = marketplace . total_volume << 1 ;"
      },
      {
        "id": 39,
        "label": "marketplace . total_orders = marketplace . total_orders . wrapping_add (fee_amount as u64) ;"
      },
      {
        "id": 40,
        "label": "msg ! (\"Seller batch {} processed\" , batch) ;"
      },
      {
        "id": 41,
        "label": "merge"
      },
      {
        "id": 42,
        "label": "Loop End"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "predicate"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "true"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 28,
        "to": 36,
        "label": "false"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 35,
        "to": 41,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 26,
        "to": 42,
        "label": "for"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      }
    ]
  }
]