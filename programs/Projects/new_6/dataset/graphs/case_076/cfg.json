[
  {
    "name": "init_multisig_wallet",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let wallet = & mut ctx . accounts . multisig_wallet ;"
      },
      {
        "id": 2,
        "label": "wallet . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "wallet . required_signatures = required_signatures ;"
      },
      {
        "id": 4,
        "label": "wallet . total_signers = signers . len () as u8 ;"
      },
      {
        "id": 5,
        "label": "wallet . transaction_count = 0 ;"
      },
      {
        "id": 6,
        "label": "wallet . executed_count = 0 ;"
      },
      {
        "id": 7,
        "label": "Loop Start"
      },
      {
        "id": 8,
        "label": "wallet . authorized_signers [i] = * signer ;"
      },
      {
        "id": 9,
        "label": "wallet . signer_weights [i] = 1 ;"
      },
      {
        "id": 10,
        "label": "Loop End"
      },
      {
        "id": 11,
        "label": "wallet . emergency_mode = false ;"
      },
      {
        "id": 12,
        "label": "wallet . daily_limit = 1000000 ;"
      },
      {
        "id": 13,
        "label": "wallet . daily_spent = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 7,
        "to": 10,
        "label": "for"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_transaction",
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let wallet = & mut ctx . accounts . multisig_wallet ;"
      },
      {
        "id": 17,
        "label": "let transaction = & mut ctx . accounts . transaction_proposal ;"
      },
      {
        "id": 18,
        "label": "let executor = & ctx . accounts . executor ;"
      },
      {
        "id": 19,
        "label": "transaction . tx_id = tx_id ;"
      },
      {
        "id": 20,
        "label": "transaction . recipient = recipient ;"
      },
      {
        "id": 21,
        "label": "transaction . amount = amount ;"
      },
      {
        "id": 22,
        "label": "transaction . data = data ;"
      },
      {
        "id": 23,
        "label": "transaction . proposer = executor . key () ;"
      },
      {
        "id": 24,
        "label": "transaction . created_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 25,
        "label": "transaction . executed = false ;"
      },
      {
        "id": 26,
        "label": "let mut valid_signatures = 0u8 ;"
      },
      {
        "id": 27,
        "label": "let mut signature_weight = 0u16 ;"
      },
      {
        "id": 28,
        "label": "Loop Start"
      },
      {
        "id": 29,
        "label": "let signer = wallet . authorized_signers [i as usize] ;"
      },
      {
        "id": 30,
        "label": "if statement"
      },
      {
        "id": 31,
        "label": "predicate"
      },
      {
        "id": 32,
        "label": "signer != Pubkey :: default ()"
      },
      {
        "id": 33,
        "label": "True body"
      },
      {
        "id": 34,
        "label": "let sig_hash = (tx_id + amount + i as u64) % 100 ;"
      },
      {
        "id": 35,
        "label": "if statement"
      },
      {
        "id": 36,
        "label": "predicate"
      },
      {
        "id": 37,
        "label": "sig_hash > 30"
      },
      {
        "id": 38,
        "label": "True body"
      },
      {
        "id": 39,
        "label": "valid_signatures += 1 ;"
      },
      {
        "id": 40,
        "label": "signature_weight += wallet . signer_weights [i as usize] ;"
      },
      {
        "id": 41,
        "label": "transaction . signatures [i as usize] = true ;"
      },
      {
        "id": 42,
        "label": "False body"
      },
      {
        "id": 43,
        "label": "No-op"
      },
      {
        "id": 44,
        "label": "merge"
      },
      {
        "id": 45,
        "label": "False body"
      },
      {
        "id": 46,
        "label": "No-op"
      },
      {
        "id": 47,
        "label": "merge"
      },
      {
        "id": 48,
        "label": "Loop End"
      },
      {
        "id": 49,
        "label": "if statement"
      },
      {
        "id": 50,
        "label": "predicate"
      },
      {
        "id": 51,
        "label": "valid_signatures >= wallet . required_signatures || wallet . emergency_mode"
      },
      {
        "id": 52,
        "label": "True body"
      },
      {
        "id": 53,
        "label": "transaction . executed = true ;"
      },
      {
        "id": 54,
        "label": "transaction . executed_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 55,
        "label": "transaction . signature_count = valid_signatures ;"
      },
      {
        "id": 56,
        "label": "wallet . transaction_count += 1 ;"
      },
      {
        "id": 57,
        "label": "wallet . executed_count += 1 ;"
      },
      {
        "id": 58,
        "label": "wallet . daily_spent += amount ;"
      },
      {
        "id": 59,
        "label": "if statement"
      },
      {
        "id": 60,
        "label": "predicate"
      },
      {
        "id": 61,
        "label": "amount > wallet . daily_limit / 2"
      },
      {
        "id": 62,
        "label": "True body"
      },
      {
        "id": 63,
        "label": "transaction . requires_additional_approval = true ;"
      },
      {
        "id": 64,
        "label": "wallet . pending_high_value_tx += 1 ;"
      },
      {
        "id": 65,
        "label": "False body"
      },
      {
        "id": 66,
        "label": "No-op"
      },
      {
        "id": 67,
        "label": "merge"
      },
      {
        "id": 68,
        "label": "Loop Start"
      },
      {
        "id": 69,
        "label": "if statement"
      },
      {
        "id": 70,
        "label": "predicate"
      },
      {
        "id": 71,
        "label": "transaction . signatures [i as usize]"
      },
      {
        "id": 72,
        "label": "True body"
      },
      {
        "id": 73,
        "label": "wallet . signer_activity [i as usize] += 1 ;"
      },
      {
        "id": 74,
        "label": "False body"
      },
      {
        "id": 75,
        "label": "No-op"
      },
      {
        "id": 76,
        "label": "merge"
      },
      {
        "id": 77,
        "label": "Loop End"
      },
      {
        "id": 78,
        "label": "let risk_score = if amount > 100000 { 50 } else { 10 } + if data . len () > 100 { 30 } else { 0 } + if valid_signatures == wallet . required_signatures { 0 } else { 20 } ;"
      },
      {
        "id": 79,
        "label": "transaction . risk_score = risk_score ;"
      },
      {
        "id": 80,
        "label": "False body"
      },
      {
        "id": 81,
        "label": "No-op"
      },
      {
        "id": 82,
        "label": "merge"
      },
      {
        "id": 83,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "predicate"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 30,
        "to": 33,
        "label": "true"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "predicate"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 35,
        "to": 38,
        "label": "true"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 35,
        "to": 42,
        "label": "false"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 41,
        "to": 44,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 30,
        "to": 45,
        "label": "false"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 44,
        "to": 47,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 28,
        "to": 48,
        "label": "for"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "predicate"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 49,
        "to": 52,
        "label": "true"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 58,
        "to": 59,
        "label": "next"
      },
      {
        "from": 59,
        "to": 60,
        "label": "predicate"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      },
      {
        "from": 59,
        "to": 62,
        "label": "true"
      },
      {
        "from": 62,
        "to": 63,
        "label": "next"
      },
      {
        "from": 63,
        "to": 64,
        "label": "next"
      },
      {
        "from": 59,
        "to": 65,
        "label": "false"
      },
      {
        "from": 65,
        "to": 66,
        "label": "next"
      },
      {
        "from": 64,
        "to": 67,
        "label": "next"
      },
      {
        "from": 66,
        "to": 67,
        "label": "next"
      },
      {
        "from": 67,
        "to": 68,
        "label": "next"
      },
      {
        "from": 68,
        "to": 69,
        "label": "next"
      },
      {
        "from": 69,
        "to": 70,
        "label": "predicate"
      },
      {
        "from": 70,
        "to": 71,
        "label": "next"
      },
      {
        "from": 69,
        "to": 72,
        "label": "true"
      },
      {
        "from": 72,
        "to": 73,
        "label": "next"
      },
      {
        "from": 69,
        "to": 74,
        "label": "false"
      },
      {
        "from": 74,
        "to": 75,
        "label": "next"
      },
      {
        "from": 73,
        "to": 76,
        "label": "next"
      },
      {
        "from": 75,
        "to": 76,
        "label": "next"
      },
      {
        "from": 68,
        "to": 77,
        "label": "for"
      },
      {
        "from": 77,
        "to": 78,
        "label": "next"
      },
      {
        "from": 78,
        "to": 79,
        "label": "next"
      },
      {
        "from": 49,
        "to": 80,
        "label": "false"
      },
      {
        "from": 80,
        "to": 81,
        "label": "next"
      },
      {
        "from": 79,
        "to": 82,
        "label": "next"
      },
      {
        "from": 81,
        "to": 82,
        "label": "next"
      },
      {
        "from": 82,
        "to": 83,
        "label": "next"
      }
    ]
  }
]