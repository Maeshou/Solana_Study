[
  {
    "name": "init_palette",
    "inputs": [
      "ctx: Context < InitPalette >",
      "base: u32",
      "alpha: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . palette ;"
      },
      {
        "id": 2,
        "label": "p . creator = ctx . accounts . artist . key () ;"
      },
      {
        "id": 3,
        "label": "p . color_base = base ;"
      },
      {
        "id": 4,
        "label": "p . alpha = alpha ;"
      },
      {
        "id": 5,
        "label": "p . versions = 1 ;"
      },
      {
        "id": 6,
        "label": "p . saturated = false ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "act_mutate_color",
    "inputs": [
      "ctx: Context < MutateColor >",
      "bump: u32"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let p = & mut ctx . accounts . palette ;"
      },
      {
        "id": 10,
        "label": "let color_mgr = & ctx . accounts . manager ;"
      },
      {
        "id": 11,
        "label": "for i in 0 .. 5 { p . color_base = p . color_base . wrapping_add (bump . wrapping_mul (i)) ; }"
      },
      {
        "id": 12,
        "label": "p . color_base = p . color_base . wrapping_add (bump . wrapping_mul (i)) ;"
      },
      {
        "id": 13,
        "label": "if p . alpha < 200 { p . alpha += 20 ; } else { p . alpha -= 30 ; }"
      },
      {
        "id": 14,
        "label": "p . alpha += 20 ;"
      },
      {
        "id": 15,
        "label": "p . alpha -= 30 ;"
      },
      {
        "id": 16,
        "label": "if p . versions > 10 { p . saturated = true ; } else { p . versions += 1 ; }"
      },
      {
        "id": 17,
        "label": "p . saturated = true ;"
      },
      {
        "id": 18,
        "label": "p . versions += 1 ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Color modified by: {}\" , color_mgr . key ()) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: p"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: color_mgr"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: p"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: p"
      }
    ]
  }
]