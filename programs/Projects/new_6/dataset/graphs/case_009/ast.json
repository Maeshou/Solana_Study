[
  {
    "name": "init_prediction_market",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitPredictionMarket >"
    ],
    "attributes": [],
    "body": [
      "let market = & mut ctx . accounts . prediction_market ;",
      "market . oracle = ctx . accounts . oracle . key () ;",
      "market . total_volume = 0 ;",
      "market . yes_pool = 0 ;",
      "market . no_pool = 0 ;",
      "market . resolved = false ;",
      "Ok (())"
    ]
  },
  {
    "name": "create_bet",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CreateBet >",
      "amount: u64",
      "prediction: bool"
    ],
    "attributes": [],
    "body": [
      "let bet = & mut ctx . accounts . bet_account ;",
      "bet . market = ctx . accounts . prediction_market . key () ;",
      "bet . bettor = ctx . accounts . bettor . key () ;",
      "bet . amount = amount ;",
      "bet . prediction = prediction ;",
      "bet . claimed = false ;",
      "let market = & mut ctx . accounts . prediction_market ;",
      "market . total_volume = market . total_volume . checked_add (amount) . unwrap_or (u64 :: MAX) ;",
      "if prediction",
      "{",
      "market . yes_pool = market . yes_pool . checked_add (amount) . unwrap_or (u64 :: MAX) ;",
      "} else",
      "{",
      "market . no_pool = market . no_pool . checked_add (amount) . unwrap_or (u64 :: MAX) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "vulnerable_resolve",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < VulnerableResolve >"
    ],
    "attributes": [],
    "body": [
      "let market = & mut ctx . accounts . prediction_market ;",
      "let winner_info = & ctx . accounts . winner_bet ;",
      "let loser_info = & ctx . accounts . loser_bet ;",
      "let winner_data = winner_info . try_borrow_mut_data () ? ;",
      "let loser_data = loser_info . try_borrow_data () ? ;",
      "if winner_data . len () >= 41 && loser_data . len () >= 41",
      "{",
      "let winner_amount = u64 :: from_le_bytes ([winner_data [32] , winner_data [33] , winner_data [34] , winner_data [35] , winner_data [36] , winner_data [37] , winner_data [38] , winner_data [39]]) ;",
      "let loser_amount = u64 :: from_le_bytes ([loser_data [32] , loser_data [33] , loser_data [34] , loser_data [35] , loser_data [36] , loser_data [37] , loser_data [38] , loser_data [39]]) ;",
      "for resolve_round in 0 .. 8",
      "{",
      "if winner_amount > loser_amount { let payout_multiplier = (resolve_round + 2) as u64 ;",
      "let total_payout = winner_amount * payout_multiplier ;",
      "market . yes_pool = market . yes_pool . checked_add (total_payout) . unwrap_or (u64 :: MAX) ;",
      "market . total_volume = market . total_volume . checked_add (winner_amount) . unwrap_or (u64 :: MAX) ;",
      "let new_amount_bytes = total_payout . to_le_bytes () ;",
      "winner_data [32 .. 40] . copy_from_slice (& new_amount_bytes) ;",
      "msg ! (\"Winner payout round",
      "{",
      "}: amount={}\" , resolve_round , total_payout) ;",
      "} else",
      "{",
      "let house_cut = (loser_amount >> resolve_round) & 0x1FF ;",
      "market . no_pool = market . no_pool . saturating_sub (house_cut) ;",
      "let odds_adjustment = (house_cut ^ resolve_round as u64) & 0xFF ;",
      "market . total_volume = market . total_volume . checked_add (odds_adjustment) . unwrap_or (u64 :: MAX) ;",
      "msg ! (\"House cut round",
      "{",
      "}: amount={}\" , resolve_round , house_cut) ;",
      "} } market . resolved = true ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitPredictionMarket",
    "node_type": "struct",
    "fields": [
      {
        "name": "prediction_market",
        "attribute": "# [account (init , payer = oracle , space = 8 + 32 + 8 + 8 + 8 + 1)]",
        "field_type": "Account < 'info , PredictionMarket >"
      },
      {
        "name": "oracle",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CreateBet",
    "node_type": "struct",
    "fields": [
      {
        "name": "prediction_market",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , PredictionMarket >"
      },
      {
        "name": "bet_account",
        "attribute": "# [account (init , payer = bettor , space = 8 + 32 + 32 + 8 + 1 + 1)]",
        "field_type": "Account < 'info , BetAccount >"
      },
      {
        "name": "bettor",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "VulnerableResolve",
    "node_type": "struct",
    "fields": [
      {
        "name": "prediction_market",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , PredictionMarket >"
      },
      {
        "name": "winner_bet",
        "attribute": "# [doc = \" CHECK: 脆弱性 - 勝者検証なし\"]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "loser_bet",
        "attribute": "# [doc = \" CHECK: 脆弱性 - 敗者検証なし\"]",
        "field_type": "UncheckedAccount < 'info >"
      },
      {
        "name": "resolver",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PredictionMarket",
    "node_type": "struct",
    "fields": [
      {
        "name": "oracle",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "total_volume",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "yes_pool",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "no_pool",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "resolved",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "BetAccount",
    "node_type": "struct",
    "fields": [
      {
        "name": "market",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "bettor",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "amount",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "prediction",
        "attribute": null,
        "field_type": "bool"
      },
      {
        "name": "claimed",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]