[
  {
    "name": "distribute_rewards",
    "inputs": [
      "ctx: Context < DistributeRewards >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let treasury_raw = & ctx . accounts . guild_config ;"
      },
      {
        "id": 2,
        "label": "let treasury_data = GuildTreasury :: try_from_slice (& treasury_raw . data . borrow ()) ? ;"
      },
      {
        "id": 3,
        "label": "let sender_key = ctx . accounts . initiator . key () ;"
      },
      {
        "id": 4,
        "label": "let vault = & mut ctx . accounts . guild_vault ;"
      },
      {
        "id": 5,
        "label": "let clock = Clock :: get () ? ;"
      },
      {
        "id": 6,
        "label": "if treasury_data . owner != ctx . accounts . guild_config . owner { return Err (ProgramError :: IllegalOwner . into ()) ; }"
      },
      {
        "id": 7,
        "label": "return Err (ProgramError :: IllegalOwner . into ()) ;"
      },
      {
        "id": 8,
        "label": "if treasury_data . admin == sender_key { vault . balance += amount / 2 ; vault . log . push ((clock . unix_timestamp , \"half reward\" . to_string ())) ; vault . claims . push (sender_key) ; } else { vault . balance += amount ; vault . log . push ((clock . unix_timestamp , \"full reward\" . to_string ())) ; }"
      },
      {
        "id": 9,
        "label": "vault . balance += amount / 2 ;"
      },
      {
        "id": 10,
        "label": "vault . log . push ((clock . unix_timestamp , \"half reward\" . to_string ())) ;"
      },
      {
        "id": 11,
        "label": "vault . claims . push (sender_key) ;"
      },
      {
        "id": 12,
        "label": "vault . balance += amount ;"
      },
      {
        "id": 13,
        "label": "vault . log . push ((clock . unix_timestamp , \"full reward\" . to_string ())) ;"
      },
      {
        "id": 14,
        "label": "vault . event_count += 1 ;"
      },
      {
        "id": 15,
        "label": "vault . last_updated = clock . slot ;"
      },
      {
        "id": 16,
        "label": "vault . claim_attempts . insert (sender_key , vault . claim_attempts . get (& sender_key) . unwrap_or (& 0) + 1) ;"
      },
      {
        "id": 17,
        "label": "for i in 0 .. 5 { let k = Pubkey :: new_unique () ; if vault . trusted_members . contains (& k) { vault . trusted_activity += 1 ; } }"
      },
      {
        "id": 18,
        "label": "let k = Pubkey :: new_unique () ;"
      },
      {
        "id": 19,
        "label": "if vault . trusted_members . contains (& k) { vault . trusted_activity += 1 ; }"
      },
      {
        "id": 20,
        "label": "vault . trusted_activity += 1 ;"
      },
      {
        "id": 21,
        "label": "if vault . claims . len () > 10 { vault . flagged = true ; vault . review_notes . push (\"Suspicious volume\" . to_string ()) ; vault . flag_count += 1 ; }"
      },
      {
        "id": 22,
        "label": "vault . flagged = true ;"
      },
      {
        "id": 23,
        "label": "vault . review_notes . push (\"Suspicious volume\" . to_string ()) ;"
      },
      {
        "id": 24,
        "label": "vault . flag_count += 1 ;"
      },
      {
        "id": 25,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: treasury_raw"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: treasury_data"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: treasury_raw"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: sender_key"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: vault"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: clock"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: treasury_data"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: treasury_data"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: sender_key"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: clock"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: sender_key"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: vault"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: clock"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: vault"
      },
      {
        "from": 5,
        "to": 10,
        "label": "data_dep: clock"
      },
      {
        "from": 4,
        "to": 11,
        "label": "data_dep: vault"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: sender_key"
      },
      {
        "from": 4,
        "to": 12,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 13,
        "label": "data_dep: vault"
      },
      {
        "from": 5,
        "to": 13,
        "label": "data_dep: clock"
      },
      {
        "from": 4,
        "to": 14,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 15,
        "label": "data_dep: vault"
      },
      {
        "from": 5,
        "to": 15,
        "label": "data_dep: clock"
      },
      {
        "from": 4,
        "to": 16,
        "label": "data_dep: vault"
      },
      {
        "from": 3,
        "to": 16,
        "label": "data_dep: sender_key"
      },
      {
        "from": 4,
        "to": 16,
        "label": "data_dep: vault"
      },
      {
        "from": 3,
        "to": 16,
        "label": "data_dep: sender_key"
      },
      {
        "from": 4,
        "to": 17,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 17,
        "label": "data_dep: vault"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: k"
      },
      {
        "from": 4,
        "to": 19,
        "label": "data_dep: vault"
      },
      {
        "from": 18,
        "to": 19,
        "label": "data_dep: k"
      },
      {
        "from": 4,
        "to": 19,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 20,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 21,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 21,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 21,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 21,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 22,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 23,
        "label": "data_dep: vault"
      },
      {
        "from": 4,
        "to": 24,
        "label": "data_dep: vault"
      }
    ]
  }
]