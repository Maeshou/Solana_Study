[
  {
    "name": "init_crafting_station",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let station = & mut ctx . accounts . crafting_station ;"
      },
      {
        "id": 2,
        "label": "station . master_crafter = ctx . accounts . master . key () ;"
      },
      {
        "id": 3,
        "label": "station . station_type = station_type ;"
      },
      {
        "id": 4,
        "label": "station . efficiency_rating = efficiency ;"
      },
      {
        "id": 5,
        "label": "station . total_crafts = 0 ;"
      },
      {
        "id": 6,
        "label": "station . durability = 1000 ;"
      },
      {
        "id": 7,
        "label": "station . upgrade_level = 1 ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "execute_crafting",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let station = & mut ctx . accounts . crafting_station ;"
      },
      {
        "id": 11,
        "label": "let crafter = & ctx . accounts . crafter ;"
      },
      {
        "id": 12,
        "label": "let base_cost = 10 ;"
      },
      {
        "id": 13,
        "label": "let efficiency_bonus = station . efficiency_rating as u32 ;"
      },
      {
        "id": 14,
        "label": "Loop Start"
      },
      {
        "id": 15,
        "label": "station . total_crafts += 1 ;"
      },
      {
        "id": 16,
        "label": "station . durability -= 5 ;"
      },
      {
        "id": 17,
        "label": "let quality_roll = (batch as u32 + efficiency_bonus + recipe_id) % 100 ;"
      },
      {
        "id": 18,
        "label": "if statement"
      },
      {
        "id": 19,
        "label": "predicate"
      },
      {
        "id": 20,
        "label": "quality_roll > 80"
      },
      {
        "id": 21,
        "label": "True body"
      },
      {
        "id": 22,
        "label": "station . rare_crafts += 1 ;"
      },
      {
        "id": 23,
        "label": "False body"
      },
      {
        "id": 24,
        "label": "No-op"
      },
      {
        "id": 25,
        "label": "merge"
      },
      {
        "id": 26,
        "label": "Loop End"
      },
      {
        "id": 27,
        "label": "Loop Start"
      },
      {
        "id": 28,
        "label": "station . resource_consumption [resource_type] += quantity as u32 * (resource_type + 1) as u32 ;"
      },
      {
        "id": 29,
        "label": "Loop End"
      },
      {
        "id": 30,
        "label": "station . master_experience += quantity as u64 * 15 ;"
      },
      {
        "id": 31,
        "label": "if statement"
      },
      {
        "id": 32,
        "label": "predicate"
      },
      {
        "id": 33,
        "label": "station . master_experience >= 1000 * station . upgrade_level as u64"
      },
      {
        "id": 34,
        "label": "True body"
      },
      {
        "id": 35,
        "label": "station . upgrade_level += 1 ;"
      },
      {
        "id": 36,
        "label": "station . efficiency_rating = (station . efficiency_rating + 5) . min (100) ;"
      },
      {
        "id": 37,
        "label": "False body"
      },
      {
        "id": 38,
        "label": "No-op"
      },
      {
        "id": 39,
        "label": "merge"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "predicate"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 18,
        "to": 21,
        "label": "true"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 18,
        "to": 23,
        "label": "false"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 22,
        "to": 25,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 14,
        "to": 26,
        "label": "for"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 27,
        "to": 29,
        "label": "for"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "predicate"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 31,
        "to": 34,
        "label": "true"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 31,
        "to": 37,
        "label": "false"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 36,
        "to": 39,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      }
    ]
  }
]