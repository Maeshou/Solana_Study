[
  {
    "name": "init_marketplace",
    "inputs": [
      "ctx: Context < InitMarketplace >",
      "fee_rate: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let marketplace = & mut ctx . accounts . marketplace ;"
      },
      {
        "id": 2,
        "label": "marketplace . authority = ctx . accounts . authority . key () ;"
      },
      {
        "id": 3,
        "label": "marketplace . fee_rate = fee_rate ;"
      },
      {
        "id": 4,
        "label": "marketplace . total_sales = 0 ;"
      },
      {
        "id": 5,
        "label": "marketplace . is_active = true ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Marketplace initialized with fee rate: {}%\" , fee_rate) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: marketplace"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: marketplace"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: marketplace"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: marketplace"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: marketplace"
      }
    ]
  },
  {
    "name": "init_listing",
    "inputs": [
      "ctx: Context < InitListing >",
      "price: u64",
      "nft_mint: Pubkey"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let listing = & mut ctx . accounts . listing ;"
      },
      {
        "id": 10,
        "label": "listing . marketplace = ctx . accounts . marketplace . key () ;"
      },
      {
        "id": 11,
        "label": "listing . seller = ctx . accounts . seller . key () ;"
      },
      {
        "id": 12,
        "label": "listing . price = price ;"
      },
      {
        "id": 13,
        "label": "listing . nft_mint = nft_mint ;"
      },
      {
        "id": 14,
        "label": "listing . is_active = true ;"
      },
      {
        "id": 15,
        "label": "listing . created_at = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"NFT listed for {} lamports\" , price) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: listing"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: listing"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: listing"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: listing"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: listing"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: listing"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: listing"
      }
    ]
  },
  {
    "name": "execute_trade",
    "inputs": [
      "ctx: Context < ExecuteTrade >",
      "expected_price: u64"
    ],
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let marketplace = & mut ctx . accounts . marketplace ;"
      },
      {
        "id": 20,
        "label": "let listing = & mut ctx . accounts . listing ;"
      },
      {
        "id": 21,
        "label": "for iteration in 0 .. 3 { if listing . is_active { let adjusted_price = expected_price . checked_add (iteration * 1000) . unwrap_or (u64 :: MAX) ; listing . price = adjusted_price ; listing . is_active = false ; marketplace . total_sales = marketplace . total_sales . checked_add (1) . unwrap_or (u64 :: MAX) ; let fee_amount = (adjusted_price * marketplace . fee_rate as u64) / 10000 ; let seller_amount = adjusted_price - fee_amount ; msg ! (\"Trade executed: seller gets {}, fee: {}\" , seller_amount , fee_amount) ; } else { marketplace . total_sales = marketplace . total_sales . checked_add (iteration) . unwrap_or (u64 :: MAX) ; let timestamp_diff = Clock :: get () ? . unix_timestamp - listing . created_at ; listing . price = listing . price . checked_add (timestamp_diff as u64 * 100) . unwrap_or (u64 :: MAX) ; msg ! (\"Inactive listing processed in iteration {}\" , iteration) ; } }"
      },
      {
        "id": 22,
        "label": "if listing . is_active { let adjusted_price = expected_price . checked_add (iteration * 1000) . unwrap_or (u64 :: MAX) ; listing . price = adjusted_price ; listing . is_active = false ; marketplace . total_sales = marketplace . total_sales . checked_add (1) . unwrap_or (u64 :: MAX) ; let fee_amount = (adjusted_price * marketplace . fee_rate as u64) / 10000 ; let seller_amount = adjusted_price - fee_amount ; msg ! (\"Trade executed: seller gets {}, fee: {}\" , seller_amount , fee_amount) ; } else { marketplace . total_sales = marketplace . total_sales . checked_add (iteration) . unwrap_or (u64 :: MAX) ; let timestamp_diff = Clock :: get () ? . unix_timestamp - listing . created_at ; listing . price = listing . price . checked_add (timestamp_diff as u64 * 100) . unwrap_or (u64 :: MAX) ; msg ! (\"Inactive listing processed in iteration {}\" , iteration) ; }"
      },
      {
        "id": 23,
        "label": "let adjusted_price = expected_price . checked_add (iteration * 1000) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 24,
        "label": "listing . price = adjusted_price ;"
      },
      {
        "id": 25,
        "label": "listing . is_active = false ;"
      },
      {
        "id": 26,
        "label": "marketplace . total_sales = marketplace . total_sales . checked_add (1) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 27,
        "label": "let fee_amount = (adjusted_price * marketplace . fee_rate as u64) / 10000 ;"
      },
      {
        "id": 28,
        "label": "let seller_amount = adjusted_price - fee_amount ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"Trade executed: seller gets {}, fee: {}\" , seller_amount , fee_amount) ;"
      },
      {
        "id": 30,
        "label": "marketplace . total_sales = marketplace . total_sales . checked_add (iteration) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 31,
        "label": "let timestamp_diff = Clock :: get () ? . unix_timestamp - listing . created_at ;"
      },
      {
        "id": 32,
        "label": "listing . price = listing . price . checked_add (timestamp_diff as u64 * 100) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Inactive listing processed in iteration {}\" , iteration) ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 19,
        "label": "def: marketplace"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: listing"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 21,
        "label": "data_dep: marketplace"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: marketplace"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 22,
        "label": "data_dep: listing"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: adjusted_price"
      },
      {
        "from": 20,
        "to": 24,
        "label": "data_dep: listing"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: adjusted_price"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: listing"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: marketplace"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: fee_amount"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: adjusted_price"
      },
      {
        "from": 19,
        "to": 27,
        "label": "data_dep: marketplace"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: seller_amount"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: adjusted_price"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: fee_amount"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: marketplace"
      },
      {
        "from": 19,
        "to": 30,
        "label": "data_dep: marketplace"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: timestamp_diff"
      },
      {
        "from": 20,
        "to": 31,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: listing"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: listing"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: timestamp_diff"
      }
    ]
  }
]