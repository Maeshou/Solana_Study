[
  {
    "name": "open_crate",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let opener = & ctx . accounts . slot_a ;"
      },
      {
        "id": 2,
        "label": "let recipient = & ctx . accounts . slot_b ;"
      },
      {
        "id": 3,
        "label": "let crate_data = & mut ctx . accounts . loot_info ;"
      },
      {
        "id": 4,
        "label": "crate_data . data . borrow_mut () [0 .. 8] . copy_from_slice (& seed . to_le_bytes ()) ;"
      },
      {
        "id": 5,
        "label": "crate_data . data . borrow_mut () [8] = opener . key . as_ref () [0] ;"
      },
      {
        "id": 6,
        "label": "crate_data . data . borrow_mut () [9] = recipient . key . as_ref () [0] ;"
      },
      {
        "id": 7,
        "label": "if statement"
      },
      {
        "id": 8,
        "label": "predicate"
      },
      {
        "id": 9,
        "label": "opener . key == recipient . key"
      },
      {
        "id": 10,
        "label": "True body"
      },
      {
        "id": 11,
        "label": "crate_data . data . borrow_mut () [10] = 1 ;"
      },
      {
        "id": 12,
        "label": "False body"
      },
      {
        "id": 13,
        "label": "No-op"
      },
      {
        "id": 14,
        "label": "merge"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "predicate"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 7,
        "to": 10,
        "label": "true"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 7,
        "to": 12,
        "label": "false"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 11,
        "to": 14,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  }
]