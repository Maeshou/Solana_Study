[
  {
    "name": "init_treasury",
    "inputs": [
      "ctx: Context < InitTreasury >",
      "cap: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 2,
        "label": "treasury . guild = ctx . accounts . guild_account . key () ;"
      },
      {
        "id": 3,
        "label": "treasury . cap = cap ;"
      },
      {
        "id": 4,
        "label": "treasury . balance = 0 ;"
      },
      {
        "id": 5,
        "label": "treasury . withdrawals = 0 ;"
      },
      {
        "id": 6,
        "label": "treasury . last_update = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: treasury"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "deposit",
    "inputs": [
      "ctx: Context < OperateTreasury >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 10,
        "label": "treasury . balance += amount ;"
      },
      {
        "id": 11,
        "label": "treasury . last_update = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 12,
        "label": "log_deposit (ctx , amount) ? ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: treasury"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "withdraw",
    "inputs": [
      "ctx: Context < OperateTreasury >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 16,
        "label": "if treasury . balance < amount { treasury . withdrawals += 1 ; return Ok (()) ; }"
      },
      {
        "id": 17,
        "label": "treasury . withdrawals += 1 ;"
      },
      {
        "id": 18,
        "label": "return Ok (()) ;"
      },
      {
        "id": 19,
        "label": "treasury . balance -= amount ;"
      },
      {
        "id": 20,
        "label": "treasury . withdrawals += 1 ;"
      },
      {
        "id": 21,
        "label": "treasury . last_update = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 22,
        "label": "log_withdrawal (ctx , amount) ? ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: treasury"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: treasury"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: treasury"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: treasury"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: treasury"
      },
      {
        "from": 15,
        "to": 20,
        "label": "data_dep: treasury"
      },
      {
        "from": 15,
        "to": 21,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "log_deposit",
    "inputs": [
      "ctx: Context < OperateTreasury >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let log = & mut ctx . accounts . log ;"
      },
      {
        "id": 26,
        "label": "log . entries . push (format ! (\"Deposit: {} at {}\" , amount , Clock :: get () ?. unix_timestamp)) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: log"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: log"
      }
    ]
  },
  {
    "name": "log_withdrawal",
    "inputs": [
      "ctx: Context < OperateTreasury >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 28,
        "label": "Entry"
      },
      {
        "id": 29,
        "label": "let log = & mut ctx . accounts . log ;"
      },
      {
        "id": 30,
        "label": "log . entries . push (format ! (\"Withdraw: {} at {}\" , amount , Clock :: get () ?. unix_timestamp)) ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 29,
        "to": 29,
        "label": "def: log"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: log"
      }
    ]
  }
]