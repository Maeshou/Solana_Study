[
  {
    "name": "use_admin_power",
    "inputs": [
      "ctx: Context < UseAdminPower >",
      "_flag: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if ctx . accounts . cfg . owner != crate :: ID { return Err (ProgramError :: IllegalOwner . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ProgramError :: IllegalOwner . into ()) ;"
      },
      {
        "id": 3,
        "label": "let data = ctx . accounts . cfg . data . borrow () ;"
      },
      {
        "id": 4,
        "label": "let admin_data = GuildAdmin :: try_from_slice (& data) . map_err (| _ | ProgramError :: InvalidAccountData) ? ;"
      },
      {
        "id": 5,
        "label": "require_keys_eq ! (admin_data . admin , ctx . accounts . signer . key () , ProgramError :: MissingRequiredSignature) ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"granted: {:?}\" , admin_data . admin) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: data"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: admin_data"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: data"
      }
    ]
  },
  {
    "name": "write_player_card",
    "inputs": [
      "ctx: Context < WritePlayerCard >",
      "key: Pubkey"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let card = PlayerCard { user : key } ;"
      },
      {
        "id": 10,
        "label": "let bytes = card . try_to_vec () . map_err (| _ | ProgramError :: InvalidInstructionData) ? ;"
      },
      {
        "id": 11,
        "label": "let mut data = ctx . accounts . cfg . data . borrow_mut () ;"
      },
      {
        "id": 12,
        "label": "for (i , b) in bytes . iter () . enumerate () { data [i] = * b ; }"
      },
      {
        "id": 13,
        "label": "data [i] = * b ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: card"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: bytes"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: card"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: data"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: bytes"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: data"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: data"
      }
    ]
  }
]