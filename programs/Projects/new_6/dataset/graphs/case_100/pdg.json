[
  {
    "name": "init_treasury",
    "inputs": [
      "ctx: Context < InitTreasury >",
      "max_withdrawals: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 2,
        "label": "treasury . guild_id = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "treasury . max_withdrawals = max_withdrawals ;"
      },
      {
        "id": 4,
        "label": "treasury . remaining_withdrawals = max_withdrawals ;"
      },
      {
        "id": 5,
        "label": "treasury . locked = false ;"
      },
      {
        "id": 6,
        "label": "treasury . audit_log = Vec :: new () ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: treasury"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: treasury"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "propose_withdrawal",
    "inputs": [
      "ctx: Context < ProposeWithdrawal >",
      "amount: u64",
      "reason: String"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 10,
        "label": "let actor = & ctx . accounts . actor ;"
      },
      {
        "id": 11,
        "label": "let timestamp = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 12,
        "label": "if treasury . locked { treasury . audit_log . push (format ! (\"{}: Rejected proposal by {} due to locked treasury\" , timestamp , actor . key ())) ; return Ok (()) ; }"
      },
      {
        "id": 13,
        "label": "treasury . audit_log . push (format ! (\"{}: Rejected proposal by {} due to locked treasury\" , timestamp , actor . key ())) ;"
      },
      {
        "id": 14,
        "label": "return Ok (()) ;"
      },
      {
        "id": 15,
        "label": "treasury . pending_amount = Some (amount) ;"
      },
      {
        "id": 16,
        "label": "treasury . pending_reason = Some (reason . clone ()) ;"
      },
      {
        "id": 17,
        "label": "treasury . pending_actor = Some (actor . key ()) ;"
      },
      {
        "id": 18,
        "label": "treasury . pending_at = Some (timestamp) ;"
      },
      {
        "id": 19,
        "label": "treasury . audit_log . push (format ! (\"{}: Proposal submitted by {} - {} lamports for {}\" , timestamp , actor . key () , amount , reason)) ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: treasury"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: actor"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: timestamp"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 16,
        "label": "data_dep: treasury"
      },
      {
        "from": 9,
        "to": 17,
        "label": "data_dep: treasury"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: actor"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: treasury"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: timestamp"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "approve_withdrawal",
    "inputs": [
      "ctx: Context < ApproveWithdrawal >"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 23,
        "label": "let board = & ctx . accounts . board ;"
      },
      {
        "id": 24,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 25,
        "label": "if treasury . locked || treasury . remaining_withdrawals == 0 { treasury . audit_log . push (format ! (\"{}: Withdrawal approval failed - treasury locked or exhausted\" , now)) ; return Ok (()) ; }"
      },
      {
        "id": 26,
        "label": "treasury . audit_log . push (format ! (\"{}: Withdrawal approval failed - treasury locked or exhausted\" , now)) ;"
      },
      {
        "id": 27,
        "label": "return Ok (()) ;"
      },
      {
        "id": 28,
        "label": "let approved_amount = treasury . pending_amount . unwrap_or (0) ;"
      },
      {
        "id": 29,
        "label": "if approved_amount == 0 { treasury . audit_log . push (format ! (\"{}: Approval failed - no pending amount\" , now)) ; return Ok (()) ; }"
      },
      {
        "id": 30,
        "label": "treasury . audit_log . push (format ! (\"{}: Approval failed - no pending amount\" , now)) ;"
      },
      {
        "id": 31,
        "label": "return Ok (()) ;"
      },
      {
        "id": 32,
        "label": "let dest = & ctx . accounts . fund_sink ;"
      },
      {
        "id": 33,
        "label": "* * dest . to_account_info () . try_borrow_mut_lamports () ? += approved_amount ;"
      },
      {
        "id": 34,
        "label": "treasury . remaining_withdrawals -= 1 ;"
      },
      {
        "id": 35,
        "label": "treasury . audit_log . push (format ! (\"{}: Withdrawal approved by {} - {} lamports to {}\" , now , board . key () , approved_amount , dest . key ())) ;"
      },
      {
        "id": 36,
        "label": "treasury . pending_amount = None ;"
      },
      {
        "id": 37,
        "label": "treasury . pending_actor = None ;"
      },
      {
        "id": 38,
        "label": "treasury . pending_reason = None ;"
      },
      {
        "id": 39,
        "label": "treasury . pending_at = None ;"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 22,
        "to": 22,
        "label": "def: treasury"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: board"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: now"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 26,
        "label": "data_dep: treasury"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: approved_amount"
      },
      {
        "from": 22,
        "to": 28,
        "label": "data_dep: treasury"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: approved_amount"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 30,
        "label": "data_dep: treasury"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: dest"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: dest"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: approved_amount"
      },
      {
        "from": 22,
        "to": 34,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 35,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 36,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 37,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 38,
        "label": "data_dep: treasury"
      },
      {
        "from": 22,
        "to": 39,
        "label": "data_dep: treasury"
      }
    ]
  },
  {
    "name": "emergency_lock",
    "inputs": [
      "ctx: Context < LockTreasury >"
    ],
    "nodes": [
      {
        "id": 41,
        "label": "Entry"
      },
      {
        "id": 42,
        "label": "let treasury = & mut ctx . accounts . treasury ;"
      },
      {
        "id": 43,
        "label": "treasury . locked = true ;"
      },
      {
        "id": 44,
        "label": "treasury . audit_log . push (format ! (\"{}: Emergency lock initiated by {}\" , Clock :: get () ?. unix_timestamp , ctx . accounts . council . key ())) ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 42,
        "to": 42,
        "label": "def: treasury"
      },
      {
        "from": 42,
        "to": 43,
        "label": "data_dep: treasury"
      },
      {
        "from": 42,
        "to": 44,
        "label": "data_dep: treasury"
      }
    ]
  }
]