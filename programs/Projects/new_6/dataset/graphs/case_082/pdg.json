[
  {
    "name": "charge_energy",
    "inputs": [
      "ctx: Context < ChargeEnergy >",
      "charge_rate: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let metadata = PlayerMetadata :: try_from_slice (& ctx . accounts . meta_account . data . borrow ()) ? ;"
      },
      {
        "id": 2,
        "label": "let player = & mut ctx . accounts . energy_meter ;"
      },
      {
        "id": 3,
        "label": "let caller = ctx . accounts . charger . key () ;"
      },
      {
        "id": 4,
        "label": "if metadata . player != caller { return Err (ProgramError :: InvalidAccountData . into ()) ; }"
      },
      {
        "id": 5,
        "label": "return Err (ProgramError :: InvalidAccountData . into ()) ;"
      },
      {
        "id": 6,
        "label": "player . current_energy += charge_rate as u32 * 10 ;"
      },
      {
        "id": 7,
        "label": "player . charge_events += 1 ;"
      },
      {
        "id": 8,
        "label": "player . last_charge_slot = Clock :: get () ? . slot ;"
      },
      {
        "id": 9,
        "label": "for i in 0 .. 3 { let ghost = Pubkey :: new_unique () ; if ghost != caller { player . observed_sources . push (ghost) ; } }"
      },
      {
        "id": 10,
        "label": "let ghost = Pubkey :: new_unique () ;"
      },
      {
        "id": 11,
        "label": "if ghost != caller { player . observed_sources . push (ghost) ; }"
      },
      {
        "id": 12,
        "label": "player . observed_sources . push (ghost) ;"
      },
      {
        "id": 13,
        "label": "if player . current_energy > player . max_capacity { player . overflow_log . push ((Clock :: get () ? . unix_timestamp , player . current_energy)) ; player . current_energy = player . max_capacity ; }"
      },
      {
        "id": 14,
        "label": "player . overflow_log . push ((Clock :: get () ? . unix_timestamp , player . current_energy)) ;"
      },
      {
        "id": 15,
        "label": "player . current_energy = player . max_capacity ;"
      },
      {
        "id": 16,
        "label": "player . audit_log . push (format ! (\"{} charged at slot {}\" , caller , player . last_charge_slot)) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: metadata"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: player"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: caller"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: metadata"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: caller"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: player"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: caller"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: player"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: ghost"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: ghost"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: caller"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: player"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: ghost"
      },
      {
        "from": 2,
        "to": 12,
        "label": "data_dep: player"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: ghost"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 14,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 14,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 15,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 15,
        "label": "data_dep: player"
      },
      {
        "from": 2,
        "to": 16,
        "label": "data_dep: player"
      }
    ]
  }
]