[
  {
    "name": "charge_energy",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ChargeEnergy >",
      "charge_rate: u8"
    ],
    "attributes": [],
    "body": [
      "let metadata = PlayerMetadata :: try_from_slice (& ctx . accounts . meta_account . data . borrow ()) ? ;",
      "let player = & mut ctx . accounts . energy_meter ;",
      "let caller = ctx . accounts . charger . key () ;",
      "if metadata . player != caller",
      "{",
      "return Err (ProgramError :: InvalidAccountData . into ()) ;",
      "}",
      "player . current_energy += charge_rate as u32 * 10 ;",
      "player . charge_events += 1 ;",
      "player . last_charge_slot = Clock :: get () ? . slot ;",
      "for i in 0 .. 3",
      "{",
      "let ghost = Pubkey :: new_unique () ;",
      "if ghost != caller",
      "{",
      "player . observed_sources . push (ghost) ;",
      "}",
      "}",
      "if player . current_energy > player . max_capacity",
      "{",
      "player . overflow_log . push ((Clock :: get () ? . unix_timestamp , player . current_energy)) ;",
      "player . current_energy = player . max_capacity ;",
      "}",
      "player . audit_log . push (format ! (\"{} charged at slot {}\" , caller , player . last_charge_slot)) ;",
      "Ok (())"
    ]
  },
  {
    "name": "ChargeEnergy",
    "node_type": "struct",
    "fields": [
      {
        "name": "charger",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "meta_account",
        "attribute": "# [doc = \" CHECK: Could be any data-structured account\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "energy_meter",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , EnergyMeter >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EnergyMeter",
    "node_type": "struct",
    "fields": [
      {
        "name": "current_energy",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "max_capacity",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "charge_events",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "last_charge_slot",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "observed_sources",
        "attribute": null,
        "field_type": "Vec < Pubkey >"
      },
      {
        "name": "overflow_log",
        "attribute": null,
        "field_type": "Vec < (i64 , u32) >"
      },
      {
        "name": "audit_log",
        "attribute": null,
        "field_type": "Vec < String >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "PlayerMetadata",
    "node_type": "struct",
    "fields": [
      {
        "name": "player",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "class_id",
        "attribute": null,
        "field_type": "u8"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]