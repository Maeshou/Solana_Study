[
  {
    "name": "init_equipment",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let eq = & mut ctx . accounts . equipment ;"
      },
      {
        "id": 2,
        "label": "eq . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "eq . seed = seed ;"
      },
      {
        "id": 4,
        "label": "eq . slot = [0 ; 4] ;"
      },
      {
        "id": 5,
        "label": "eq . flag = false ;"
      },
      {
        "id": 6,
        "label": "eq . mode = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_enhance",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let eq = & mut ctx . accounts . equipment ;"
      },
      {
        "id": 10,
        "label": "let enhancer = & ctx . accounts . operator ;"
      },
      {
        "id": 11,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 12,
        "label": "Loop Start"
      },
      {
        "id": 13,
        "label": "let idx = (i % 4) as usize ;"
      },
      {
        "id": 14,
        "label": "let modifier = ((val ^ eq . seed) << 1) % 256 ;"
      },
      {
        "id": 15,
        "label": "eq . slot [idx] = eq . slot [idx] . wrapping_add (modifier as u8) ;"
      },
      {
        "id": 16,
        "label": "i += 3 ;"
      },
      {
        "id": 17,
        "label": "Loop End"
      },
      {
        "id": 18,
        "label": "if statement"
      },
      {
        "id": 19,
        "label": "predicate"
      },
      {
        "id": 20,
        "label": "eq . slot [0] & 0b1000 != 0"
      },
      {
        "id": 21,
        "label": "True body"
      },
      {
        "id": 22,
        "label": "eq . flag = true ;"
      },
      {
        "id": 23,
        "label": "eq . mode = ((eq . slot [1] | eq . slot [2]) & 0b1111) as u8 ;"
      },
      {
        "id": 24,
        "label": "False body"
      },
      {
        "id": 25,
        "label": "No-op"
      },
      {
        "id": 26,
        "label": "merge"
      },
      {
        "id": 27,
        "label": "if statement"
      },
      {
        "id": 28,
        "label": "predicate"
      },
      {
        "id": 29,
        "label": "eq . flag"
      },
      {
        "id": 30,
        "label": "True body"
      },
      {
        "id": 31,
        "label": "eq . seed = eq . seed . rotate_left (3) ^ 0x5A5A5A5A5A5A5A5A ;"
      },
      {
        "id": 32,
        "label": "False body"
      },
      {
        "id": 33,
        "label": "No-op"
      },
      {
        "id": 34,
        "label": "merge"
      },
      {
        "id": 35,
        "label": "eq . owner = enhancer . key () ;"
      },
      {
        "id": 36,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 12,
        "to": 17,
        "label": "while"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "predicate"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 18,
        "to": 21,
        "label": "true"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 18,
        "to": 24,
        "label": "false"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "predicate"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 27,
        "to": 30,
        "label": "true"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 27,
        "to": 32,
        "label": "false"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 31,
        "to": 34,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      }
    ]
  }
]