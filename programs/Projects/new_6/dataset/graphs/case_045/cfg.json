[
  {
    "name": "init_art",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let a = & mut ctx . accounts . art ;"
      },
      {
        "id": 2,
        "label": "a . artist = ctx . accounts . signer . key () ;"
      },
      {
        "id": 3,
        "label": "a . seed = 42 ;"
      },
      {
        "id": 4,
        "label": "a . strokes = vec ! [1 , 2 , 3] ;"
      },
      {
        "id": 5,
        "label": "a . layers = 0 ;"
      },
      {
        "id": 6,
        "label": "a . palette = vec ! [] ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "act_progress",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let a = & mut ctx . accounts . art ;"
      },
      {
        "id": 10,
        "label": "let painter = & ctx . accounts . participant ;"
      },
      {
        "id": 11,
        "label": "Loop Start"
      },
      {
        "id": 12,
        "label": "a . strokes . push ((a . seed ^ (i as u64)) as u8) ;"
      },
      {
        "id": 13,
        "label": "if statement"
      },
      {
        "id": 14,
        "label": "predicate"
      },
      {
        "id": 15,
        "label": "i % 3 == 0"
      },
      {
        "id": 16,
        "label": "True body"
      },
      {
        "id": 17,
        "label": "a . palette . push (i * 5) ;"
      },
      {
        "id": 18,
        "label": "False body"
      },
      {
        "id": 19,
        "label": "a . palette . push (i + stroke) ;"
      },
      {
        "id": 20,
        "label": "merge"
      },
      {
        "id": 21,
        "label": "Loop End"
      },
      {
        "id": 22,
        "label": "if statement"
      },
      {
        "id": 23,
        "label": "predicate"
      },
      {
        "id": 24,
        "label": "a . palette . len () > 5"
      },
      {
        "id": 25,
        "label": "True body"
      },
      {
        "id": 26,
        "label": "a . palette . sort_by (| a , b | b . cmp (a)) ;"
      },
      {
        "id": 27,
        "label": "a . palette . dedup () ;"
      },
      {
        "id": 28,
        "label": "a . layers += 1 ;"
      },
      {
        "id": 29,
        "label": "False body"
      },
      {
        "id": 30,
        "label": "No-op"
      },
      {
        "id": 31,
        "label": "merge"
      },
      {
        "id": 32,
        "label": "a . seed = a . seed . rotate_left (2) . wrapping_add (stroke as u64) ;"
      },
      {
        "id": 33,
        "label": "a . artist = painter . key () ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "predicate"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 13,
        "to": 16,
        "label": "true"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 13,
        "to": 18,
        "label": "false"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 17,
        "to": 20,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 11,
        "to": 21,
        "label": "for"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "predicate"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 22,
        "to": 25,
        "label": "true"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 22,
        "to": 29,
        "label": "false"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 28,
        "to": 31,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      }
    ]
  }
]