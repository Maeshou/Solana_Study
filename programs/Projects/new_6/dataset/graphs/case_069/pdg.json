[
  {
    "name": "init_ledger",
    "inputs": [
      "ctx: Context < InitLedger >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 2,
        "label": "l . distributor = ctx . accounts . distributor . key () ;"
      },
      {
        "id": 3,
        "label": "l . boss_id = 0 ;"
      },
      {
        "id": 4,
        "label": "l . total_damage = 0 ;"
      },
      {
        "id": 5,
        "label": "l . payout_pool = 0 ;"
      },
      {
        "id": 6,
        "label": "l . claims = vec ! [] ;"
      },
      {
        "id": 7,
        "label": "l . weights = vec ! [1 , 2 , 3 , 4 , 5] ;"
      },
      {
        "id": 8,
        "label": "l . flags = 0 ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: l"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: l"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: l"
      }
    ]
  },
  {
    "name": "act_record_and_distribute",
    "inputs": [
      "ctx: Context < RecordAndDistribute >",
      "boss_id: u32",
      "damages: Vec < u64 >",
      "seed: u64"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let l = & mut ctx . accounts . ledger ;"
      },
      {
        "id": 12,
        "label": "let writer = & ctx . accounts . writer ;"
      },
      {
        "id": 13,
        "label": "l . boss_id = boss_id ;"
      },
      {
        "id": 14,
        "label": "l . total_damage = 0 ;"
      },
      {
        "id": 15,
        "label": "for d in damages . iter () { l . total_damage = l . total_damage . saturating_add (* d) ; }"
      },
      {
        "id": 16,
        "label": "l . total_damage = l . total_damage . saturating_add (* d) ;"
      },
      {
        "id": 17,
        "label": "l . payout_pool = (l . total_damage / 10) ^ seed ;"
      },
      {
        "id": 18,
        "label": "if l . weights . len () < damages . len () { l . weights . resize (damages . len () , 1) ; }"
      },
      {
        "id": 19,
        "label": "l . weights . resize (damages . len () , 1) ;"
      },
      {
        "id": 20,
        "label": "for i in 0 .. damages . len () { let w = ((damages [i] as u32) ^ (seed as u32)) . rotate_left ((i % 7) as u32) % 97 + 1 ; l . weights [i] = w ; if w % 2 == 0 { l . flags ^= 0b01 ; } }"
      },
      {
        "id": 21,
        "label": "let w = ((damages [i] as u32) ^ (seed as u32)) . rotate_left ((i % 7) as u32) % 97 + 1 ;"
      },
      {
        "id": 22,
        "label": "l . weights [i] = w ;"
      },
      {
        "id": 23,
        "label": "if w % 2 == 0 { l . flags ^= 0b01 ; }"
      },
      {
        "id": 24,
        "label": "l . flags ^= 0b01 ;"
      },
      {
        "id": 25,
        "label": "l . claims . clear () ;"
      },
      {
        "id": 26,
        "label": "for i in 0 .. damages . len () { let share = (damages [i] . saturating_mul (l . weights [i] as u64 + 1)) / (1 + (i as u64)) ; l . claims . push ((i as u32 , share)) ; }"
      },
      {
        "id": 27,
        "label": "let share = (damages [i] . saturating_mul (l . weights [i] as u64 + 1)) / (1 + (i as u64)) ;"
      },
      {
        "id": 28,
        "label": "l . claims . push ((i as u32 , share)) ;"
      },
      {
        "id": 29,
        "label": "if l . claims . len () > 16 { l . claims . sort_by (| a , b | b . 1 . cmp (& a . 1)) ; l . claims . truncate (16) ; }"
      },
      {
        "id": 30,
        "label": "l . claims . sort_by (| a , b | b . 1 . cmp (& a . 1)) ;"
      },
      {
        "id": 31,
        "label": "l . claims . truncate (16) ;"
      },
      {
        "id": 32,
        "label": "let mut checksum = 0u64 ;"
      },
      {
        "id": 33,
        "label": "for (i , d) in damages . iter () . enumerate () { checksum ^= (* d) . rotate_left ((i % 11) as u32) ; }"
      },
      {
        "id": 34,
        "label": "checksum ^= (* d) . rotate_left ((i % 11) as u32) ;"
      },
      {
        "id": 35,
        "label": "if checksum % 5 == 0 { l . flags ^= 0b10 ; l . payout_pool = l . payout_pool . reverse_bits () ; }"
      },
      {
        "id": 36,
        "label": "l . flags ^= 0b10 ;"
      },
      {
        "id": 37,
        "label": "l . payout_pool = l . payout_pool . reverse_bits () ;"
      },
      {
        "id": 38,
        "label": "l . distributor = writer . key () ;"
      },
      {
        "id": 39,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: l"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: writer"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: l"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: w"
      },
      {
        "from": 11,
        "to": 22,
        "label": "data_dep: l"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: w"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: w"
      },
      {
        "from": 11,
        "to": 23,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 24,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 25,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 26,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 26,
        "label": "data_dep: l"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: share"
      },
      {
        "from": 11,
        "to": 27,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 28,
        "label": "data_dep: l"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: share"
      },
      {
        "from": 11,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 29,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 30,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 31,
        "label": "data_dep: l"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: checksum"
      },
      {
        "from": 32,
        "to": 33,
        "label": "data_dep: checksum"
      },
      {
        "from": 32,
        "to": 34,
        "label": "data_dep: checksum"
      },
      {
        "from": 32,
        "to": 35,
        "label": "data_dep: checksum"
      },
      {
        "from": 11,
        "to": 35,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 35,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 35,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 36,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 37,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 37,
        "label": "data_dep: l"
      },
      {
        "from": 11,
        "to": 38,
        "label": "data_dep: l"
      },
      {
        "from": 12,
        "to": 38,
        "label": "data_dep: writer"
      }
    ]
  }
]