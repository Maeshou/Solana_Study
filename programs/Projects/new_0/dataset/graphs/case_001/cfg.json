[
  {
    "name": "modify_schema",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let old_val = ctx . accounts . target . value ;"
      },
      {
        "id": 2,
        "label": "let new_val = ctx . accounts . user_input . key () . to_bytes () [0] as u64 + old_val ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . target . value = new_val ;"
      },
      {
        "id": 4,
        "label": "let diff = new_val . checked_sub (old_val) . unwrap () ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "reset_value",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "require ! (ctx . accounts . admin . is_signer , CustomError :: Unauthorized) ;"
      },
      {
        "id": 8,
        "label": "ctx . accounts . target . value = 0 ;"
      },
      {
        "id": 9,
        "label": "msg ! (\"Target value reset to 0 by admin {}\" , ctx . accounts . admin . key ()) ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      }
    ]
  }
]