[
  {
    "name": "create_proposal",
    "inputs": [
      "ctx: Context < CreateProposal >",
      "bump: u8",
      "id: u64",
      "description: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (description . len () <= 200 , ErrorCode :: DescriptionTooLong) ;"
      },
      {
        "id": 2,
        "label": "let proposal = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 3,
        "label": "proposal . creator = * ctx . accounts . creator . key ;"
      },
      {
        "id": 4,
        "label": "proposal . bump = bump ;"
      },
      {
        "id": 5,
        "label": "proposal . id = id ;"
      },
      {
        "id": 6,
        "label": "proposal . description = description ;"
      },
      {
        "id": 7,
        "label": "proposal . votes = 0 ;"
      },
      {
        "id": 8,
        "label": "proposal . open = true ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: proposal"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: proposal"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: proposal"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: proposal"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: proposal"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: proposal"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: proposal"
      }
    ]
  },
  {
    "name": "cast_vote",
    "inputs": [
      "ctx: Context < CastVote >"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let proposal = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 12,
        "label": "require ! (proposal . open , ErrorCode :: ProposalClosed) ;"
      },
      {
        "id": 13,
        "label": "proposal . votes = proposal . votes . checked_add (1) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: proposal"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: proposal"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: proposal"
      }
    ]
  },
  {
    "name": "close_proposal",
    "inputs": [
      "ctx: Context < CloseProposal >"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let proposal = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 17,
        "label": "require ! (proposal . open , ErrorCode :: ProposalClosed) ;"
      },
      {
        "id": 18,
        "label": "proposal . open = false ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: proposal"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: proposal"
      }
    ]
  }
]