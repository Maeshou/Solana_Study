[
  {
    "name": "create_event",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < CreateEvent >",
      "timestamp: i64",
      "location: String",
      "details: String"
    ],
    "attributes": [
      "# [doc = \" 新しいイベントを作成\"]"
    ],
    "body": [
      "if location . len () > 64",
      "{",
      "return Err (ErrorCode :: LocationTooLong . into ()) ;",
      "}",
      "if details . len () > 256",
      "{",
      "return Err (ErrorCode :: DetailsTooLong . into ()) ;",
      "}",
      "let ev = & mut ctx . accounts . event ;",
      "ev . owner = ctx . accounts . user . key () ;",
      "ev . timestamp = timestamp ;",
      "ev . location = location ;",
      "ev . details = details ;",
      "Ok (())"
    ]
  },
  {
    "name": "update_event",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < UpdateEvent >",
      "new_timestamp: i64",
      "new_location: String",
      "new_details: String"
    ],
    "attributes": [
      "# [doc = \" 既存イベントを更新\"]"
    ],
    "body": [
      "if new_location . len () > 64",
      "{",
      "return Err (ErrorCode :: LocationTooLong . into ()) ;",
      "}",
      "if new_details . len () > 256",
      "{",
      "return Err (ErrorCode :: DetailsTooLong . into ()) ;",
      "}",
      "let ev = & mut ctx . accounts . event ;",
      "if ev . owner != ctx . accounts . user . key ()",
      "{",
      "return Err (ErrorCode :: Unauthorized . into ()) ;",
      "}",
      "ev . timestamp = new_timestamp ;",
      "ev . location = new_location ;",
      "ev . details = new_details ;",
      "Ok (())"
    ]
  },
  {
    "name": "CreateEvent",
    "node_type": "struct",
    "fields": [
      {
        "name": "event",
        "attribute": "# [doc = \" 同一アカウントを二度初期化できない（Reinit Attack 防止）\"] # [account (init , payer = user , space = 8 + 32 + 8 + 4 + 64 + 4 + 256)]",
        "field_type": "Account < 'info , EventAccount >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" 操作するユーザー（Signer Authorization）\"] # [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "UpdateEvent",
    "node_type": "struct",
    "fields": [
      {
        "name": "event",
        "attribute": "# [doc = \" Anchor の Account<> による Owner Check & Type Cosplay\"] # [account (mut)]",
        "field_type": "Account < 'info , EventAccount >"
      },
      {
        "name": "user",
        "attribute": "# [doc = \" 実際に署名したユーザー\"]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EventAccount",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": "# [doc = \" このイベントを操作できるユーザー\"]",
        "field_type": "Pubkey"
      },
      {
        "name": "timestamp",
        "attribute": "# [doc = \" イベントの日時 (UNIX timestamp)\"]",
        "field_type": "i64"
      },
      {
        "name": "location",
        "attribute": "# [doc = \" 開催場所（最大64文字）\"]",
        "field_type": "String"
      },
      {
        "name": "details",
        "attribute": "# [doc = \" 詳細説明（最大256文字）\"]",
        "field_type": "String"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]