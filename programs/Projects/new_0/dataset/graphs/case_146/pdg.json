[
  {
    "name": "init_alert",
    "inputs": [
      "ctx: Context < InitAlert >",
      "threshold: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (threshold > 0 , ErrorCode :: InvalidThreshold) ;"
      },
      {
        "id": 2,
        "label": "let alert = & mut ctx . accounts . alert ;"
      },
      {
        "id": 3,
        "label": "alert . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 4,
        "label": "alert . threshold = threshold ;"
      },
      {
        "id": 5,
        "label": "alert . active = true ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: alert"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: alert"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: alert"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: alert"
      }
    ]
  },
  {
    "name": "update_alert",
    "inputs": [
      "ctx: Context < UpdateAlert >",
      "threshold: u64"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "require ! (threshold > 0 , ErrorCode :: InvalidThreshold) ;"
      },
      {
        "id": 9,
        "label": "let alert = & mut ctx . accounts . alert ;"
      },
      {
        "id": 10,
        "label": "require ! (alert . owner == ctx . accounts . user . key () , ErrorCode :: AccessDenied) ;"
      },
      {
        "id": 11,
        "label": "alert . threshold = threshold ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: alert"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: alert"
      }
    ]
  },
  {
    "name": "disable_alert",
    "inputs": [
      "ctx: Context < DisableAlert >"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let alert = & mut ctx . accounts . alert ;"
      },
      {
        "id": 15,
        "label": "require ! (alert . owner == ctx . accounts . user . key () , ErrorCode :: AccessDenied) ;"
      },
      {
        "id": 16,
        "label": "alert . active = false ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: alert"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: alert"
      }
    ]
  }
]