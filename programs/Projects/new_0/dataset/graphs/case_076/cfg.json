[
  {
    "name": "initialize_badge",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let badge = & mut ctx . accounts . badge ;"
      },
      {
        "id": 2,
        "label": "badge . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "badge . name_bytes = name . as_bytes () [.. name . as_bytes () . len () . min (32)] . try_into () . unwrap_or ([0 ; 32]) ;"
      },
      {
        "id": 4,
        "label": "badge . redeemed = false ;"
      },
      {
        "id": 5,
        "label": "badge . redeemed_ts = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "redeem_badge",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let badge = & mut ctx . accounts . badge ;"
      },
      {
        "id": 9,
        "label": "let flag = badge . redeemed as u8 ;"
      },
      {
        "id": 10,
        "label": "let can = 1u8 . saturating_sub (flag) ;"
      },
      {
        "id": 11,
        "label": "badge . redeemed = can == 1 ;"
      },
      {
        "id": 12,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 13,
        "label": "badge . redeemed_ts = now . saturating_mul (can as i64) ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Badge '{}' redeemed at {} (was redeemed={}).\" , String :: from_utf8_lossy (& badge . name_bytes) , badge . redeemed_ts , badge . redeemed ,) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      }
    ]
  },
  {
    "name": "view_badge",
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let badge = & ctx . accounts . badge ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Owner       : {:?}\" , badge . owner) ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Name        : {}\" , String :: from_utf8_lossy (& badge . name_bytes)) ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Redeemed    : {}\" , badge . redeemed) ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"Redeemed TS : {}\" , badge . redeemed_ts) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      }
    ]
  }
]