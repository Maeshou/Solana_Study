[
  {
    "name": "add_recipe",
    "inputs": [
      "ctx: Context < AddRecipe >",
      "title: String",
      "instructions: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if title . len () > 64 { return Err (ErrorCode :: TitleTooLong . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: TitleTooLong . into ()) ;"
      },
      {
        "id": 3,
        "label": "if instructions . len () > 1024 { return Err (ErrorCode :: InstructionsTooLong . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: InstructionsTooLong . into ()) ;"
      },
      {
        "id": 5,
        "label": "let r = & mut ctx . accounts . recipe ;"
      },
      {
        "id": 6,
        "label": "r . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "r . title = title ;"
      },
      {
        "id": 8,
        "label": "r . instructions = instructions ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: r"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: r"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: r"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: r"
      }
    ]
  },
  {
    "name": "update_recipe",
    "inputs": [
      "ctx: Context < UpdateRecipe >",
      "new_title: String",
      "new_instructions: String"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "if new_title . len () > 64 { return Err (ErrorCode :: TitleTooLong . into ()) ; }"
      },
      {
        "id": 12,
        "label": "return Err (ErrorCode :: TitleTooLong . into ()) ;"
      },
      {
        "id": 13,
        "label": "if new_instructions . len () > 1024 { return Err (ErrorCode :: InstructionsTooLong . into ()) ; }"
      },
      {
        "id": 14,
        "label": "return Err (ErrorCode :: InstructionsTooLong . into ()) ;"
      },
      {
        "id": 15,
        "label": "let r = & mut ctx . accounts . recipe ;"
      },
      {
        "id": 16,
        "label": "if r . owner != ctx . accounts . user . key () { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 17,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 18,
        "label": "r . title = new_title ;"
      },
      {
        "id": 19,
        "label": "r . instructions = new_instructions ;"
      },
      {
        "id": 20,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: r"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 18,
        "label": "data_dep: r"
      },
      {
        "from": 15,
        "to": 19,
        "label": "data_dep: r"
      }
    ]
  }
]