[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < InitializeWhitelist >",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let wl = & mut ctx . accounts . whitelist ;"
      },
      {
        "id": 2,
        "label": "wl . authority = * ctx . accounts . authority . key ;"
      },
      {
        "id": 3,
        "label": "wl . entries = Vec :: new () ;"
      },
      {
        "id": 4,
        "label": "wl . bump = bump ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: wl"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: wl"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: wl"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: wl"
      }
    ]
  },
  {
    "name": "add_member",
    "inputs": [
      "ctx: Context < ModifyWhitelist >",
      "member: Pubkey"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let wl = & mut ctx . accounts . whitelist ;"
      },
      {
        "id": 8,
        "label": "require ! (ctx . accounts . authority . key == & wl . authority , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 9,
        "label": "require ! (! wl . entries . contains (& member) , ErrorCode :: AlreadyMember) ;"
      },
      {
        "id": 10,
        "label": "wl . entries . push (member) ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: wl"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: wl"
      }
    ]
  },
  {
    "name": "remove_member",
    "inputs": [
      "ctx: Context < ModifyWhitelist >",
      "member: Pubkey"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let wl = & mut ctx . accounts . whitelist ;"
      },
      {
        "id": 14,
        "label": "require ! (ctx . accounts . authority . key == & wl . authority , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 15,
        "label": "wl . entries . retain (| & x | x != member) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: wl"
      },
      {
        "from": 13,
        "to": 15,
        "label": "data_dep: wl"
      }
    ]
  },
  {
    "name": "mint_nft",
    "inputs": [
      "ctx: Context < MintNft >",
      "bump: u8"
    ],
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let wl = & ctx . accounts . whitelist ;"
      },
      {
        "id": 19,
        "label": "let user = & ctx . accounts . user ;"
      },
      {
        "id": 20,
        "label": "require ! (wl . entries . contains (& user . key ()) , ErrorCode :: NotWhitelisted) ;"
      },
      {
        "id": 21,
        "label": "let seeds = & [b\"whitelist\" , ctx . accounts . mint . key () . as_ref () , & [bump]] ;"
      },
      {
        "id": 22,
        "label": "let signer = & [& seeds [..]] ;"
      },
      {
        "id": 23,
        "label": "let cpi_accounts = MintTo { mint : ctx . accounts . mint . to_account_info () , to : ctx . accounts . user_token_account . to_account_info () , authority : ctx . accounts . whitelist . to_account_info () , } ;"
      },
      {
        "id": 24,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , signer ,) ;"
      },
      {
        "id": 25,
        "label": "mint_to (cpi_ctx , 1) ? ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 18,
        "label": "def: wl"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: user"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: seeds"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: signer"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: seeds"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: cpi_accounts"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: cpi_ctx"
      },
      {
        "from": 23,
        "to": 24,
        "label": "data_dep: cpi_accounts"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: signer"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: cpi_ctx"
      }
    ]
  }
]