[
  {
    "name": "TempLog",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "entries",
        "attribute": null,
        "field_type": "Vec < (i64 , u64) >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "initialize",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "attributes": [
      "# [doc = \" アカウント初期化：所有者と bump を設定\"]"
    ],
    "body": [
      "let log = & mut ctx . accounts . log ;",
      "log . owner = ctx . accounts . authority . key () ;",
      "log . bump = * ctx . bumps . get (\"log\") . unwrap () ;",
      "Ok (())"
    ]
  },
  {
    "name": "record_temperature",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyLog >",
      "temp_x100: u64"
    ],
    "attributes": [
      "# [doc = \" 温度記録：エントリ数制限＋push\"]"
    ],
    "body": [
      "let log = & mut ctx . accounts . log ;",
      "let list = & mut log . entries ;",
      "if list . len () >= MAX_ENTRIES",
      "{",
      "return err ! (ErrorCode :: MaxEntriesReached) ;",
      "}",
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "list . push ((now , temp_x100)) ;",
      "Ok (())"
    ]
  },
  {
    "name": "purge_old",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyLog >",
      "age_limit_secs: i64"
    ],
    "attributes": [
      "# [doc = \" 古いログ削除：checked_sub でオーバーフロー回避\"]"
    ],
    "body": [
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "let cutoff = now . checked_sub (age_limit_secs) . ok_or (ErrorCode :: TimestampOverflow) ? ;",
      "ctx . accounts . log . entries . retain (| & (ts , _) | { if ts >= cutoff { true } else { false } }) ;",
      "Ok (())"
    ]
  },
  {
    "name": "average_recent",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyLog >",
      "window_secs: i64"
    ],
    "attributes": [
      "# [doc = \" 最近の平均温度計算：overflow-safe 演算\"]"
    ],
    "body": [
      "let log = & ctx . accounts . log ;",
      "let now = ctx . accounts . clock . unix_timestamp ;",
      "let start = now . checked_sub (window_secs) . ok_or (ErrorCode :: TimestampOverflow) ? ;",
      "let mut sum : u128 = 0 ;",
      "let mut cnt : u64 = 0 ;",
      "for & (ts , temp) in log . entries . iter ()",
      "{",
      "if ts >= start",
      "{",
      "sum = sum . wrapping_add (temp as u128) ;",
      "cnt = cnt . wrapping_add (1) ;",
      "}",
      "}",
      "if cnt > 0",
      "{",
      "let avg_x100 = (sum / cnt as u128) as u64 ;",
      "msg ! (\"Average recent temp:",
      "{",
      "}.{:02}℃\" , avg_x100 / 100 , avg_x100 % 100) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "Initialize",
    "node_type": "struct",
    "fields": [
      {
        "name": "log",
        "attribute": "# [account (init_zeroed , payer = authority , seeds = [b\"temp_log\" , authority . key () . as_ref ()] , bump , space = 8 + 32 + 1 + 4 + 10 * (8 + 8))]",
        "field_type": "Account < 'info , TempLog >"
      },
      {
        "name": "authority",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ModifyLog",
    "node_type": "struct",
    "fields": [
      {
        "name": "log",
        "attribute": "# [account (mut , seeds = [b\"temp_log\" , log . owner . as_ref ()] , bump = log . bump , has_one = owner)]",
        "field_type": "Account < 'info , TempLog >"
      },
      {
        "name": "owner",
        "attribute": "# [doc = \" 明示的に所有者の署名をチェック\"] # [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "clock",
        "attribute": null,
        "field_type": "Sysvar < 'info , Clock >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]