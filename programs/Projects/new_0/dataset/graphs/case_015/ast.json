[
  {
    "name": "controlled_increment",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >",
      "limit: u64"
    ],
    "attributes": [],
    "body": [
      "match ctx . accounts . authority . is_signer { true => () , false => return Err (CustomError :: Unauthorized . into ()) , }",
      "match ctx . accounts . storage . data . checked_add (1) { Some (new_val) if new_val <= limit => { ctx . accounts . storage . data = new_val ; msg ! (\"Incremented safely: {}\" , new_val) ; Ok (()) } , _ => Err (CustomError :: LimitReached . into ()) , }"
    ]
  },
  {
    "name": "show",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "attributes": [],
    "body": [
      "msg ! (\"Count: {}\" , ctx . accounts . storage . data) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx003",
    "node_type": "struct",
    "fields": [
      {
        "name": "storage",
        "attribute": "# [account (mut , has_one = authority)]",
        "field_type": "Account < 'info , Storage003 >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Storage003",
    "node_type": "struct",
    "fields": [
      {
        "name": "authority",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "data",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]