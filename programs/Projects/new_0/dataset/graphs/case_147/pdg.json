[
  {
    "name": "init_key",
    "inputs": [
      "ctx: Context < InitKey >",
      "key: [u8 ; 32]"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (key != [0u8 ; 32] , ErrorCode :: InvalidKey) ;"
      },
      {
        "id": 2,
        "label": "let acct = & mut ctx . accounts . key_account ;"
      },
      {
        "id": 3,
        "label": "acct . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 4,
        "label": "acct . key = key ;"
      },
      {
        "id": 5,
        "label": "acct . active = true ;"
      },
      {
        "id": 6,
        "label": "acct . last_rotated = 0 ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: acct"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: acct"
      },
      {
        "from": 2,
        "to": 4,
        "label": "data_dep: acct"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: acct"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: acct"
      }
    ]
  },
  {
    "name": "rotate_key",
    "inputs": [
      "ctx: Context < ModifyKey >",
      "new_key: [u8 ; 32]"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "require ! (new_key != [0u8 ; 32] , ErrorCode :: InvalidKey) ;"
      },
      {
        "id": 10,
        "label": "let acct = & mut ctx . accounts . key_account ;"
      },
      {
        "id": 11,
        "label": "require ! (acct . owner == ctx . accounts . user . key () , ErrorCode :: AccessDenied) ;"
      },
      {
        "id": 12,
        "label": "acct . key = new_key ;"
      },
      {
        "id": 13,
        "label": "acct . last_rotated = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: acct"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: acct"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: acct"
      }
    ]
  },
  {
    "name": "revoke_key",
    "inputs": [
      "ctx: Context < ModifyKey >"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let acct = & mut ctx . accounts . key_account ;"
      },
      {
        "id": 17,
        "label": "require ! (acct . owner == ctx . accounts . user . key () , ErrorCode :: AccessDenied) ;"
      },
      {
        "id": 18,
        "label": "acct . active = false ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: acct"
      },
      {
        "from": 16,
        "to": 18,
        "label": "data_dep: acct"
      }
    ]
  }
]