[
  {
    "name": "distribute_penalties",
    "inputs": [
      "ctx: Context < DistributePenalties >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (ctx . accounts . admin . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 2,
        "label": "let vault_info = ctx . accounts . vault . to_account_info () ;"
      },
      {
        "id": 3,
        "label": "let mut vault_lamports = * * vault_info . lamports . borrow () ;"
      },
      {
        "id": 4,
        "label": "let recipients = & ctx . remaining_accounts ;"
      },
      {
        "id": 5,
        "label": "let count = recipients . len () as u64 ;"
      },
      {
        "id": 6,
        "label": "require ! (count > 0 , ErrorCode :: NoRecipients) ;"
      },
      {
        "id": 7,
        "label": "let share = vault_lamports / count ;"
      },
      {
        "id": 8,
        "label": "for recipient_info in recipients . iter () { * * vault_info . try_borrow_mut_lamports () ? -= share ; * * recipient_info . try_borrow_mut_lamports () ? += share ; vault_lamports -= share ; msg ! (\"Distributed {} lamports to {}\" , share , recipient_info . key) ; }"
      },
      {
        "id": 9,
        "label": "* * vault_info . try_borrow_mut_lamports () ? -= share ;"
      },
      {
        "id": 10,
        "label": "* * recipient_info . try_borrow_mut_lamports () ? += share ;"
      },
      {
        "id": 11,
        "label": "vault_lamports -= share ;"
      },
      {
        "id": 12,
        "label": "msg ! (\"Distributed {} lamports to {}\" , share , recipient_info . key) ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Remaining in vault: {}\" , vault_lamports) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 2,
        "to": 2,
        "label": "def: vault_info"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: vault_lamports"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: vault_info"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: recipients"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: count"
      },
      {
        "from": 4,
        "to": 5,
        "label": "data_dep: recipients"
      },
      {
        "from": 7,
        "to": 7,
        "label": "def: share"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: vault_lamports"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: count"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: recipients"
      },
      {
        "from": 2,
        "to": 8,
        "label": "data_dep: vault_info"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: share"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: share"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: vault_lamports"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: share"
      },
      {
        "from": 2,
        "to": 9,
        "label": "data_dep: vault_info"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: share"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: share"
      },
      {
        "from": 3,
        "to": 11,
        "label": "data_dep: vault_lamports"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: share"
      }
    ]
  }
]