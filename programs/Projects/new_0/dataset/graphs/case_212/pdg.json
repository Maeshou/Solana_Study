[
  {
    "name": "create_bounty",
    "inputs": [
      "ctx: Context < CreateBounty >",
      "description: String",
      "total_reward: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . bounty ;"
      },
      {
        "id": 2,
        "label": "b . organizer = ctx . accounts . organizer . key () ;"
      },
      {
        "id": 3,
        "label": "b . description = description ;"
      },
      {
        "id": 4,
        "label": "b . reward_pool = total_reward ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "submit_work",
    "inputs": [
      "ctx: Context < SubmitWork >"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let s = & mut ctx . accounts . submission ;"
      },
      {
        "id": 8,
        "label": "s . submitter = ctx . accounts . submitter . key () ;"
      },
      {
        "id": 9,
        "label": "s . bounty = ctx . accounts . bounty . key () ;"
      },
      {
        "id": 10,
        "label": "s . accepted = false ;"
      },
      {
        "id": 11,
        "label": "require_keys_eq ! (s . bounty , ctx . accounts . bounty . key () , BountyError :: BountyMismatch) ;"
      },
      {
        "id": 12,
        "label": "require_keys_eq ! (s . submitter , ctx . accounts . submitter . key () , BountyError :: SubmitterMismatch) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: s"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "accept_submission",
    "inputs": [
      "ctx: Context < AcceptSubmission >"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let s = & mut ctx . accounts . submission ;"
      },
      {
        "id": 16,
        "label": "require_keys_eq ! (ctx . accounts . bounty . organizer , ctx . accounts . signer . key () , BountyError :: Unauthorized) ;"
      },
      {
        "id": 17,
        "label": "s . accepted = true ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: s"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "pay_out",
    "inputs": [
      "ctx: Context < PayOut >"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let b = & mut ctx . accounts . bounty ;"
      },
      {
        "id": 21,
        "label": "let s = & ctx . accounts . submission ;"
      },
      {
        "id": 22,
        "label": "require_keys_eq ! (s . bounty , b . key () , BountyError :: BountyMismatch) ;"
      },
      {
        "id": 23,
        "label": "require_keys_eq ! (s . submitter , ctx . accounts . submitter . key () , BountyError :: SubmitterMismatch) ;"
      },
      {
        "id": 24,
        "label": "require ! (s . accepted , BountyError :: NotAccepted) ;"
      },
      {
        "id": 25,
        "label": "let amount = b . reward_pool ;"
      },
      {
        "id": 26,
        "label": "b . reward_pool = b . reward_pool . checked_sub (amount) . ok_or (BountyError :: InsufficientFunds) ? ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: b"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: s"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: amount"
      },
      {
        "from": 20,
        "to": 25,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: amount"
      }
    ]
  }
]