[
  {
    "name": "initialize_vesting",
    "inputs": [
      "ctx: Context < InitializeVesting >",
      "amount: u64",
      "release_time: i64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let vest = & mut ctx . accounts . vesting ;"
      },
      {
        "id": 2,
        "label": "vest . beneficiary = ctx . accounts . beneficiary . key () ;"
      },
      {
        "id": 3,
        "label": "vest . total_amount = amount ;"
      },
      {
        "id": 4,
        "label": "vest . release_time = release_time ;"
      },
      {
        "id": 5,
        "label": "vest . claimed_amount = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: vest"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: vest"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: vest"
      }
    ]
  },
  {
    "name": "claim_vested",
    "inputs": [
      "ctx: Context < ClaimVested >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let vest = & mut ctx . accounts . vesting ;"
      },
      {
        "id": 9,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 10,
        "label": "let elapsed = now . saturating_sub (vest . release_time) as u64 ;"
      },
      {
        "id": 11,
        "label": "let can = (elapsed != 0) as u64 ;"
      },
      {
        "id": 12,
        "label": "let payable = vest . total_amount . saturating_mul (can) ;"
      },
      {
        "id": 13,
        "label": "let to_claim = payable . saturating_sub (vest . claimed_amount) ;"
      },
      {
        "id": 14,
        "label": "vest . claimed_amount = vest . claimed_amount . saturating_add (to_claim) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Vested {} tokens to {:?}\" , to_claim , vest . beneficiary) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: vest"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: now"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: elapsed"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: now"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: vest"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: can"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: elapsed"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: payable"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: vest"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: can"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: to_claim"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: payable"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: vest"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: vest"
      },
      {
        "from": 8,
        "to": 14,
        "label": "data_dep: vest"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: to_claim"
      }
    ]
  }
]