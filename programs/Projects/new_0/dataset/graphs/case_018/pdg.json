[
  {
    "name": "write_phase_one",
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let input = ctx . accounts . authority . key () ;"
      },
      {
        "id": 2,
        "label": "let allowed = ctx . accounts . storage . allowed_1 ;"
      },
      {
        "id": 3,
        "label": "let result = Result :: from_bool (input == allowed , CustomError :: Unauthorized1) ;"
      },
      {
        "id": 4,
        "label": "result . map (| _ | { ctx . accounts . storage . data = 1 ; msg ! (\"Phase 1 complete\") ; })"
      },
      {
        "id": 5,
        "label": "ctx . accounts . storage . data = 1 ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Phase 1 complete\") ;"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: input"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: allowed"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: result"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: input"
      },
      {
        "from": 2,
        "to": 3,
        "label": "data_dep: allowed"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: result"
      }
    ]
  },
  {
    "name": "write_phase_two",
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let input = ctx . accounts . authority . key () ;"
      },
      {
        "id": 9,
        "label": "let allowed = ctx . accounts . storage . allowed_2 ;"
      },
      {
        "id": 10,
        "label": "let result = Result :: from_bool (input == allowed , CustomError :: Unauthorized2) ;"
      },
      {
        "id": 11,
        "label": "result . map (| _ | { ctx . accounts . storage . data = 2 ; msg ! (\"Phase 2 complete\") ; })"
      },
      {
        "id": 12,
        "label": "ctx . accounts . storage . data = 2 ;"
      },
      {
        "id": 13,
        "label": "msg ! (\"Phase 2 complete\") ;"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: input"
      },
      {
        "from": 9,
        "to": 9,
        "label": "def: allowed"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: result"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: input"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: allowed"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: result"
      }
    ]
  },
  {
    "name": "write_phase_three",
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let input = ctx . accounts . authority . key () ;"
      },
      {
        "id": 16,
        "label": "let allowed = ctx . accounts . storage . allowed_3 ;"
      },
      {
        "id": 17,
        "label": "let result = Result :: from_bool (input == allowed , CustomError :: Unauthorized3) ;"
      },
      {
        "id": 18,
        "label": "result . map (| _ | { ctx . accounts . storage . data = 3 ; msg ! (\"Phase 3 complete\") ; })"
      },
      {
        "id": 19,
        "label": "ctx . accounts . storage . data = 3 ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Phase 3 complete\") ;"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: input"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: allowed"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: result"
      },
      {
        "from": 15,
        "to": 17,
        "label": "data_dep: input"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: allowed"
      },
      {
        "from": 17,
        "to": 18,
        "label": "data_dep: result"
      }
    ]
  },
  {
    "name": "show",
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "nodes": [
      {
        "id": 21,
        "label": "Entry"
      },
      {
        "id": 22,
        "label": "msg ! (\"Current phase: {}\" , ctx . accounts . storage . data) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": []
  }
]