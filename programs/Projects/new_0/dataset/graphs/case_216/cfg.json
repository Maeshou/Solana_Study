[
  {
    "name": "initialize_escrow",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let escrow = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 2,
        "label": "escrow . buyer = * ctx . accounts . buyer . key ;"
      },
      {
        "id": 3,
        "label": "escrow . seller = * ctx . accounts . seller . key ;"
      },
      {
        "id": 4,
        "label": "escrow . amount = amount ;"
      },
      {
        "id": 5,
        "label": "escrow . deadline = deadline ;"
      },
      {
        "id": 6,
        "label": "escrow . bump = bump ;"
      },
      {
        "id": 7,
        "label": "let buyer_lamports = ctx . accounts . buyer . to_account_info () . lamports () ;"
      },
      {
        "id": 8,
        "label": "require ! (buyer_lamports >= amount , ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 9,
        "label": "* * ctx . accounts . buyer . to_account_info () . try_borrow_mut_lamports () ? = buyer_lamports . checked_sub (amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 10,
        "label": "* * ctx . accounts . escrow . to_account_info () . try_borrow_mut_lamports () ? = ctx . accounts . escrow . to_account_info () . lamports () . checked_add (amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      }
    ]
  },
  {
    "name": "release_funds",
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let escrow = & ctx . accounts . escrow ;"
      },
      {
        "id": 14,
        "label": "require ! (escrow . seller == * ctx . accounts . seller . key , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 15,
        "label": "let pot = ctx . accounts . escrow . to_account_info () . lamports () ;"
      },
      {
        "id": 16,
        "label": "* * ctx . accounts . escrow . to_account_info () . try_borrow_mut_lamports () ? = pot . checked_sub (escrow . amount) . ok_or (ErrorCode :: InsufficientFunds) ? ;"
      },
      {
        "id": 17,
        "label": "* * ctx . accounts . seller . to_account_info () . try_borrow_mut_lamports () ? = ctx . accounts . seller . to_account_info () . lamports () . checked_add (escrow . amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  },
  {
    "name": "refund",
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let escrow = & ctx . accounts . escrow ;"
      },
      {
        "id": 21,
        "label": "let now = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 22,
        "label": "require ! (now >= escrow . deadline , ErrorCode :: TooEarly) ;"
      },
      {
        "id": 23,
        "label": "require ! (escrow . buyer == * ctx . accounts . buyer . key , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 24,
        "label": "let pot = ctx . accounts . escrow . to_account_info () . lamports () ;"
      },
      {
        "id": 25,
        "label": "* * ctx . accounts . escrow . to_account_info () . try_borrow_mut_lamports () ? = pot . checked_sub (escrow . amount) . ok_or (ErrorCode :: InsufficientFunds) ? ;"
      },
      {
        "id": 26,
        "label": "* * ctx . accounts . buyer . to_account_info () . try_borrow_mut_lamports () ? = ctx . accounts . buyer . to_account_info () . lamports () . checked_add (escrow . amount) . ok_or (ErrorCode :: Overflow) ? ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      }
    ]
  }
]