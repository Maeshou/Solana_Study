[
  {
    "name": "initialize_escrow",
    "inputs": [
      "ctx: Context < InitializeEscrow >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let esc = & mut ctx . accounts . escrow ;"
      },
      {
        "id": 2,
        "label": "esc . initializer = ctx . accounts . initializer . key () ;"
      },
      {
        "id": 3,
        "label": "esc . beneficiary = ctx . accounts . beneficiary . key () ;"
      },
      {
        "id": 4,
        "label": "msg ! (\"Escrow initialized: initializer={}, beneficiary={}\" , esc . initializer , esc . beneficiary) ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: esc"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: esc"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: esc"
      }
    ]
  },
  {
    "name": "deposit",
    "inputs": [
      "ctx: Context < Deposit >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "require ! (ctx . accounts . initializer . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 8,
        "label": "* * ctx . accounts . initializer . to_account_info () . try_borrow_mut_lamports () ? -= amount ;"
      },
      {
        "id": 9,
        "label": "* * ctx . accounts . vault . to_account_info () . try_borrow_mut_lamports () ? += amount ;"
      },
      {
        "id": 10,
        "label": "msg ! (\"Deposited {} lamports into escrow vault\" , amount) ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "release",
    "inputs": [
      "ctx: Context < Release >"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "require ! (ctx . accounts . initializer . is_signer , ErrorCode :: Unauthorized) ;"
      },
      {
        "id": 14,
        "label": "let vault_balance = * * ctx . accounts . vault . to_account_info () . lamports . borrow () ;"
      },
      {
        "id": 15,
        "label": "* * ctx . accounts . vault . to_account_info () . try_borrow_mut_lamports () ? -= vault_balance ;"
      },
      {
        "id": 16,
        "label": "* * ctx . accounts . beneficiary . to_account_info () . try_borrow_mut_lamports () ? += vault_balance ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Released {} lamports to beneficiary {}\" , vault_balance , ctx . accounts . beneficiary . key ()) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: vault_balance"
      },
      {
        "from": 14,
        "to": 15,
        "label": "data_dep: vault_balance"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: vault_balance"
      }
    ]
  }
]