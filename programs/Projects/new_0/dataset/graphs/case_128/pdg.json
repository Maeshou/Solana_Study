[
  {
    "name": "add_movie",
    "inputs": [
      "ctx: Context < AddMovie >",
      "title: String",
      "year: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if title . len () > 100 { return Err (ErrorCode :: TitleTooLong . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: TitleTooLong . into ()) ;"
      },
      {
        "id": 3,
        "label": "if year < 1888 { return Err (ErrorCode :: InvalidYear . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: InvalidYear . into ()) ;"
      },
      {
        "id": 5,
        "label": "if year > 2100 { return Err (ErrorCode :: InvalidYear . into ()) ; }"
      },
      {
        "id": 6,
        "label": "return Err (ErrorCode :: InvalidYear . into ()) ;"
      },
      {
        "id": 7,
        "label": "let movie = & mut ctx . accounts . movie ;"
      },
      {
        "id": 8,
        "label": "movie . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 9,
        "label": "movie . title = title ;"
      },
      {
        "id": 10,
        "label": "movie . year = year ;"
      },
      {
        "id": 11,
        "label": "movie . watched = false ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 7,
        "label": "def: movie"
      },
      {
        "from": 7,
        "to": 8,
        "label": "data_dep: movie"
      },
      {
        "from": 7,
        "to": 9,
        "label": "data_dep: movie"
      },
      {
        "from": 7,
        "to": 10,
        "label": "data_dep: movie"
      },
      {
        "from": 7,
        "to": 11,
        "label": "data_dep: movie"
      }
    ]
  },
  {
    "name": "mark_watched",
    "inputs": [
      "ctx: Context < MarkWatched >"
    ],
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let movie = & mut ctx . accounts . movie ;"
      },
      {
        "id": 15,
        "label": "let user_key = ctx . accounts . user . key () ;"
      },
      {
        "id": 16,
        "label": "if movie . owner != user_key { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 17,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 18,
        "label": "if movie . watched { return Err (ErrorCode :: AlreadyWatched . into ()) ; }"
      },
      {
        "id": 19,
        "label": "return Err (ErrorCode :: AlreadyWatched . into ()) ;"
      },
      {
        "id": 20,
        "label": "movie . watched = true ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 14,
        "to": 14,
        "label": "def: movie"
      },
      {
        "from": 15,
        "to": 15,
        "label": "def: user_key"
      },
      {
        "from": 14,
        "to": 16,
        "label": "data_dep: movie"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: user_key"
      },
      {
        "from": 14,
        "to": 18,
        "label": "data_dep: movie"
      },
      {
        "from": 14,
        "to": 20,
        "label": "data_dep: movie"
      }
    ]
  }
]