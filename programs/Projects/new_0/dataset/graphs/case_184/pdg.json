[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let bump = * ctx . bumps . get (\"tracker\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . tracker . 0 = bump ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: bump"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: bump"
      }
    ]
  },
  {
    "name": "add_goal",
    "inputs": [
      "ctx: Context < Modify >",
      "goal_id: u64"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 6,
        "label": "if list . len () >= MAX_GOALS { return err ! (ErrorCode :: MaxGoalsReached) ; }"
      },
      {
        "id": 7,
        "label": "return err ! (ErrorCode :: MaxGoalsReached) ;"
      },
      {
        "id": 8,
        "label": "list . push ((goal_id , 0)) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "deposit",
    "inputs": [
      "ctx: Context < Modify >",
      "goal_id: u64",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 12,
        "label": "let mut found = false ;"
      },
      {
        "id": 13,
        "label": "for entry in list . iter_mut () { if entry . 0 == goal_id { entry . 1 = entry . 1 . wrapping_add (amount) ; found = true ; } }"
      },
      {
        "id": 14,
        "label": "if entry . 0 == goal_id { entry . 1 = entry . 1 . wrapping_add (amount) ; found = true ; }"
      },
      {
        "id": 15,
        "label": "entry . 1 = entry . 1 . wrapping_add (amount) ;"
      },
      {
        "id": 16,
        "label": "found = true ;"
      },
      {
        "id": 17,
        "label": "if ! found { return err ! (ErrorCode :: NoSuchGoal) ; }"
      },
      {
        "id": 18,
        "label": "return err ! (ErrorCode :: NoSuchGoal) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: list"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: found"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: list"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 16,
        "label": "data_dep: found"
      },
      {
        "from": 12,
        "to": 17,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "withdraw",
    "inputs": [
      "ctx: Context < Modify >",
      "goal_id: u64",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 22,
        "label": "let mut found = false ;"
      },
      {
        "id": 23,
        "label": "for entry in list . iter_mut () { if entry . 0 == goal_id { found = true ; if entry . 1 < amount { return err ! (ErrorCode :: InsufficientFunds) ; } entry . 1 = entry . 1 - amount ; } }"
      },
      {
        "id": 24,
        "label": "if entry . 0 == goal_id { found = true ; if entry . 1 < amount { return err ! (ErrorCode :: InsufficientFunds) ; } entry . 1 = entry . 1 - amount ; }"
      },
      {
        "id": 25,
        "label": "found = true ;"
      },
      {
        "id": 26,
        "label": "if entry . 1 < amount { return err ! (ErrorCode :: InsufficientFunds) ; }"
      },
      {
        "id": 27,
        "label": "return err ! (ErrorCode :: InsufficientFunds) ;"
      },
      {
        "id": 28,
        "label": "entry . 1 = entry . 1 - amount ;"
      },
      {
        "id": 29,
        "label": "if ! found { return err ! (ErrorCode :: NoSuchGoal) ; }"
      },
      {
        "id": 30,
        "label": "return err ! (ErrorCode :: NoSuchGoal) ;"
      },
      {
        "id": 31,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: list"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: found"
      },
      {
        "from": 21,
        "to": 23,
        "label": "data_dep: list"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: found"
      },
      {
        "from": 22,
        "to": 29,
        "label": "data_dep: found"
      }
    ]
  },
  {
    "name": "purge_zero",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 32,
        "label": "Entry"
      },
      {
        "id": 33,
        "label": "let list = & mut ctx . accounts . tracker . 1 ;"
      },
      {
        "id": 34,
        "label": "list . retain (| & (_ , saved) | saved > 0) ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 33,
        "to": 33,
        "label": "def: list"
      },
      {
        "from": 33,
        "to": 34,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "count_goals",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 36,
        "label": "Entry"
      },
      {
        "id": 37,
        "label": "let total = ctx . accounts . tracker . 1 . len () as u64 ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Total goals: {}\" , total) ;"
      },
      {
        "id": 39,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 37,
        "to": 37,
        "label": "def: total"
      }
    ]
  }
]