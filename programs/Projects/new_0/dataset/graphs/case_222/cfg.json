[
  {
    "name": "initialize_tournament",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (name . len () <= 50 , ErrorCode :: NameTooLong) ;"
      },
      {
        "id": 2,
        "label": "let tour = & mut ctx . accounts . tournament ;"
      },
      {
        "id": 3,
        "label": "tour . owner = * ctx . accounts . admin . key ;"
      },
      {
        "id": 4,
        "label": "tour . bump = bump ;"
      },
      {
        "id": 5,
        "label": "tour . name = name ;"
      },
      {
        "id": 6,
        "label": "tour . teams = Vec :: new () ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "register_team",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let tour = & mut ctx . accounts . tournament ;"
      },
      {
        "id": 10,
        "label": "require ! (! tour . teams . contains (& team) , ErrorCode :: AlreadyRegistered) ;"
      },
      {
        "id": 11,
        "label": "tour . teams . push (team) ;"
      },
      {
        "id": 12,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      }
    ]
  },
  {
    "name": "unregister_team",
    "nodes": [
      {
        "id": 13,
        "label": "Entry"
      },
      {
        "id": 14,
        "label": "let tour = & mut ctx . accounts . tournament ;"
      },
      {
        "id": 15,
        "label": "require ! (tour . teams . contains (& team) , ErrorCode :: NotRegistered) ;"
      },
      {
        "id": 16,
        "label": "tour . teams . retain (| & t | t != team) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  }
]