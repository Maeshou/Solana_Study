[
  {
    "name": "initialize_tournament",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitializeTournament >",
      "bump: u8",
      "name: String"
    ],
    "attributes": [
      "# [doc = \" トーナメントアカウントを初期化\"]"
    ],
    "body": [
      "require ! (name . len () <= 50 , ErrorCode :: NameTooLong) ;",
      "let tour = & mut ctx . accounts . tournament ;",
      "tour . owner = * ctx . accounts . admin . key ;",
      "tour . bump = bump ;",
      "tour . name = name ;",
      "tour . teams = Vec :: new () ;",
      "Ok (())"
    ]
  },
  {
    "name": "register_team",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyTournament >",
      "team: Pubkey"
    ],
    "attributes": [
      "# [doc = \" チームを登録\"]"
    ],
    "body": [
      "let tour = & mut ctx . accounts . tournament ;",
      "require ! (! tour . teams . contains (& team) , ErrorCode :: AlreadyRegistered) ;",
      "tour . teams . push (team) ;",
      "Ok (())"
    ]
  },
  {
    "name": "unregister_team",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ModifyTournament >",
      "team: Pubkey"
    ],
    "attributes": [
      "# [doc = \" チームを登録解除\"]"
    ],
    "body": [
      "let tour = & mut ctx . accounts . tournament ;",
      "require ! (tour . teams . contains (& team) , ErrorCode :: NotRegistered) ;",
      "tour . teams . retain (| & t | t != team) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitializeTournament",
    "node_type": "struct",
    "fields": [
      {
        "name": "tournament",
        "attribute": "# [account (init , seeds = [b\"tournament\" , admin . key () . as_ref ()] , bump = bump , payer = admin , space = 8 + 32 + 1 + 4 + 50 + 4 + 32 * 100 ,)]",
        "field_type": "Account < 'info , Tournament >"
      },
      {
        "name": "admin",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      },
      {
        "name": "rent",
        "attribute": null,
        "field_type": "Sysvar < 'info , Rent >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ModifyTournament",
    "node_type": "struct",
    "fields": [
      {
        "name": "tournament",
        "attribute": "# [account (mut , seeds = [b\"tournament\" , tournament . owner . as_ref ()] , bump = tournament . bump , has_one = owner ,)]",
        "field_type": "Account < 'info , Tournament >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Tournament",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "bump",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "name",
        "attribute": null,
        "field_type": "String"
      },
      {
        "name": "teams",
        "attribute": null,
        "field_type": "Vec < Pubkey >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]