[
  {
    "name": "UrlShortener",
    "node_type": "struct",
    "fields": [
      {
        "name": "",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "",
        "attribute": null,
        "field_type": "Vec < (u8 , String) >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "initialize",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "attributes": [
      "# [doc = \" 初期化：内部 Vec はデフォルトで空、bump のみ設定\"]"
    ],
    "body": [
      "let bump = * ctx . bumps . get (\"shortener\") . unwrap () ;",
      "ctx . accounts . shortener . 0 = bump ;",
      "Ok (())"
    ]
  },
  {
    "name": "register",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8",
      "url: String"
    ],
    "attributes": [
      "# [doc = \" URL 登録：同じ ID がなければ追加、あれば上書き\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . shortener . 1 ;",
      "let mut found = false ;",
      "for entry in list . iter_mut ()",
      "{",
      "if entry . 0 == id",
      "{",
      "entry . 1 = url . clone () ;",
      "found = true ;",
      "}",
      "}",
      "if ! found",
      "{",
      "list . push ((id , url)) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "lookup",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8"
    ],
    "attributes": [
      "# [doc = \" URL 取得：ID が一致した最初の URL をログ出力\"]"
    ],
    "body": [
      "let list = & ctx . accounts . shortener . 1 ;",
      "for entry in list . iter ()",
      "{",
      "if entry . 0 == id",
      "{",
      "msg ! (\"URL for {}: {}\" , id , entry . 1) ;",
      "}",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "remove",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8"
    ],
    "attributes": [
      "# [doc = \" URL 削除：ID が一致するものを一括除去\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . shortener . 1 ;",
      "list . retain (| & (eid , _) | eid != id) ;",
      "Ok (())"
    ]
  },
  {
    "name": "count",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "attributes": [
      "# [doc = \" 登録数報告：現在のエントリ数をログ出力\"]"
    ],
    "body": [
      "let length = ctx . accounts . shortener . 1 . len () as u64 ;",
      "msg ! (\"Total entries: {}\" , length) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Initialize",
    "node_type": "struct",
    "fields": [
      {
        "name": "shortener",
        "attribute": "# [account (init_zeroed , payer = authority , seeds = [b\"url_shortener\" , authority . key () . as_ref ()] , bump , space = 8 + 1 + 4 + 10 * (1 + 4 + 200))]",
        "field_type": "Account < 'info , UrlShortener >"
      },
      {
        "name": "authority",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Modify",
    "node_type": "struct",
    "fields": [
      {
        "name": "shortener",
        "attribute": "# [account (mut , seeds = [b\"url_shortener\" , authority . key () . as_ref ()] , bump = shortener . 0 ,)]",
        "field_type": "Account < 'info , UrlShortener >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]