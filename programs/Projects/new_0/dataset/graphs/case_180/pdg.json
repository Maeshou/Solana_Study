[
  {
    "name": "initialize",
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let bump = * ctx . bumps . get (\"shortener\") . unwrap () ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . shortener . 0 = bump ;"
      },
      {
        "id": 3,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: bump"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: bump"
      }
    ]
  },
  {
    "name": "register",
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8",
      "url: String"
    ],
    "nodes": [
      {
        "id": 4,
        "label": "Entry"
      },
      {
        "id": 5,
        "label": "let list = & mut ctx . accounts . shortener . 1 ;"
      },
      {
        "id": 6,
        "label": "let mut found = false ;"
      },
      {
        "id": 7,
        "label": "for entry in list . iter_mut () { if entry . 0 == id { entry . 1 = url . clone () ; found = true ; } }"
      },
      {
        "id": 8,
        "label": "if entry . 0 == id { entry . 1 = url . clone () ; found = true ; }"
      },
      {
        "id": 9,
        "label": "entry . 1 = url . clone () ;"
      },
      {
        "id": 10,
        "label": "found = true ;"
      },
      {
        "id": 11,
        "label": "if ! found { list . push ((id , url)) ; }"
      },
      {
        "id": 12,
        "label": "list . push ((id , url)) ;"
      },
      {
        "id": 13,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: list"
      },
      {
        "from": 6,
        "to": 6,
        "label": "def: found"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: list"
      },
      {
        "from": 6,
        "to": 7,
        "label": "data_dep: found"
      },
      {
        "from": 6,
        "to": 8,
        "label": "data_dep: found"
      },
      {
        "from": 6,
        "to": 10,
        "label": "data_dep: found"
      },
      {
        "from": 6,
        "to": 11,
        "label": "data_dep: found"
      },
      {
        "from": 5,
        "to": 11,
        "label": "data_dep: list"
      },
      {
        "from": 5,
        "to": 12,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "lookup",
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8"
    ],
    "nodes": [
      {
        "id": 14,
        "label": "Entry"
      },
      {
        "id": 15,
        "label": "let list = & ctx . accounts . shortener . 1 ;"
      },
      {
        "id": 16,
        "label": "for entry in list . iter () { if entry . 0 == id { msg ! (\"URL for {}: {}\" , id , entry . 1) ; } }"
      },
      {
        "id": 17,
        "label": "if entry . 0 == id { msg ! (\"URL for {}: {}\" , id , entry . 1) ; }"
      },
      {
        "id": 18,
        "label": "msg ! (\"URL for {}: {}\" , id , entry . 1) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 15,
        "label": "def: list"
      },
      {
        "from": 15,
        "to": 16,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "remove",
    "inputs": [
      "ctx: Context < Modify >",
      "id: u8"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let list = & mut ctx . accounts . shortener . 1 ;"
      },
      {
        "id": 22,
        "label": "list . retain (| & (eid , _) | eid != id) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: list"
      },
      {
        "from": 21,
        "to": 22,
        "label": "data_dep: list"
      }
    ]
  },
  {
    "name": "count",
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let length = ctx . accounts . shortener . 1 . len () as u64 ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"Total entries: {}\" , length) ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: length"
      }
    ]
  }
]