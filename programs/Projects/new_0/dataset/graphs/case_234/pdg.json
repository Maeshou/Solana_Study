[
  {
    "name": "create_proposal",
    "inputs": [
      "ctx: Context < CreateProposal >",
      "bump: u8",
      "id: u64",
      "description: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if description . len () > 200 { return Err (ProgramError :: InvalidInstructionData . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ProgramError :: InvalidInstructionData . into ()) ;"
      },
      {
        "id": 3,
        "label": "let prop = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 4,
        "label": "prop . creator = * ctx . accounts . creator . key ;"
      },
      {
        "id": 5,
        "label": "prop . id = id ;"
      },
      {
        "id": 6,
        "label": "prop . description = description ;"
      },
      {
        "id": 7,
        "label": "prop . votes_for = 0 ;"
      },
      {
        "id": 8,
        "label": "prop . votes_against = 0 ;"
      },
      {
        "id": 9,
        "label": "prop . open = true ;"
      },
      {
        "id": 10,
        "label": "prop . bump = bump ;"
      },
      {
        "id": 11,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: prop"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 5,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: prop"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: prop"
      }
    ]
  },
  {
    "name": "cast_vote",
    "inputs": [
      "ctx: Context < CastVote >",
      "support: bool"
    ],
    "nodes": [
      {
        "id": 12,
        "label": "Entry"
      },
      {
        "id": 13,
        "label": "let prop = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 14,
        "label": "if ! prop . open { return Err (ProgramError :: InvalidAccountData . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ProgramError :: InvalidAccountData . into ()) ;"
      },
      {
        "id": 16,
        "label": "prop . votes_for = if support { prop . votes_for . checked_add (1) . ok_or (ProgramError :: InvalidInstructionData) ? } else { prop . votes_for } ;"
      },
      {
        "id": 17,
        "label": "prop . votes_for . checked_add (1) . ok_or (ProgramError :: InvalidInstructionData) ?"
      },
      {
        "id": 18,
        "label": "prop . votes_for"
      },
      {
        "id": 19,
        "label": "prop . votes_against = if ! support { prop . votes_against . checked_add (1) . ok_or (ProgramError :: InvalidInstructionData) ? } else { prop . votes_against } ;"
      },
      {
        "id": 20,
        "label": "prop . votes_against . checked_add (1) . ok_or (ProgramError :: InvalidInstructionData) ?"
      },
      {
        "id": 21,
        "label": "prop . votes_against"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 13,
        "to": 13,
        "label": "def: prop"
      },
      {
        "from": 13,
        "to": 14,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 16,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 17,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 18,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 19,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: prop"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: prop"
      }
    ]
  },
  {
    "name": "close_proposal",
    "inputs": [
      "ctx: Context < CloseProposal >"
    ],
    "nodes": [
      {
        "id": 23,
        "label": "Entry"
      },
      {
        "id": 24,
        "label": "let prop = & mut ctx . accounts . proposal ;"
      },
      {
        "id": 25,
        "label": "if prop . creator != * ctx . accounts . creator . key { return Err (ProgramError :: InvalidAccountData . into ()) ; }"
      },
      {
        "id": 26,
        "label": "return Err (ProgramError :: InvalidAccountData . into ()) ;"
      },
      {
        "id": 27,
        "label": "if ! prop . open { return Err (ProgramError :: InvalidAccountData . into ()) ; }"
      },
      {
        "id": 28,
        "label": "return Err (ProgramError :: InvalidAccountData . into ()) ;"
      },
      {
        "id": 29,
        "label": "prop . open = false ;"
      },
      {
        "id": 30,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 24,
        "label": "def: prop"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: prop"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: prop"
      },
      {
        "from": 24,
        "to": 29,
        "label": "data_dep: prop"
      }
    ]
  }
]