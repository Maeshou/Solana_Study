[
  {
    "name": "write_if_hashed_key_matches",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >",
      "new_value: u64"
    ],
    "attributes": [],
    "body": [
      "let signer_pubkey = ctx . accounts . authority . key () . to_bytes () ;",
      "let computed_hash = Sha256 :: digest (& signer_pubkey) ;",
      "let stored_hash = ctx . accounts . storage . hash_key ;",
      "let is_match = computed_hash [..] == stored_hash [..] ;",
      "let allow = is_match as u8 ;",
      "let current = ctx . accounts . storage . data ;",
      "let new = allow * new_value as u8 + (1 - allow) * current as u8 ;",
      "ctx . accounts . storage . data = new as u64 ;",
      "Ok (())"
    ]
  },
  {
    "name": "read",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx003 >"
    ],
    "attributes": [],
    "body": [
      "msg ! (\"Stored data: {}\" , ctx . accounts . storage . data) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx003",
    "node_type": "struct",
    "fields": [
      {
        "name": "storage",
        "attribute": "# [account (mut , has_one = authority)]",
        "field_type": "Account < 'info , Storage003 >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Storage003",
    "node_type": "struct",
    "fields": [
      {
        "name": "authority",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "hash_key",
        "attribute": null,
        "field_type": "[u8 ; 32]"
      },
      {
        "name": "data",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]