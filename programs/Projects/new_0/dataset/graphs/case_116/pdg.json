[
  {
    "name": "create_session",
    "inputs": [
      "ctx: Context < CreateSession >",
      "timestamp: i64",
      "duration_minutes: u16",
      "note: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "if duration_minutes == 0 { return Err (ErrorCode :: InvalidDuration . into ()) ; }"
      },
      {
        "id": 2,
        "label": "return Err (ErrorCode :: InvalidDuration . into ()) ;"
      },
      {
        "id": 3,
        "label": "if note . len () > 128 { return Err (ErrorCode :: NoteTooLong . into ()) ; }"
      },
      {
        "id": 4,
        "label": "return Err (ErrorCode :: NoteTooLong . into ()) ;"
      },
      {
        "id": 5,
        "label": "let sess = & mut ctx . accounts . session ;"
      },
      {
        "id": 6,
        "label": "sess . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 7,
        "label": "sess . timestamp = timestamp ;"
      },
      {
        "id": 8,
        "label": "sess . duration_minutes = duration_minutes ;"
      },
      {
        "id": 9,
        "label": "sess . note = note ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 5,
        "to": 5,
        "label": "def: sess"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: sess"
      },
      {
        "from": 5,
        "to": 7,
        "label": "data_dep: sess"
      },
      {
        "from": 5,
        "to": 8,
        "label": "data_dep: sess"
      },
      {
        "from": 5,
        "to": 9,
        "label": "data_dep: sess"
      }
    ]
  },
  {
    "name": "update_session",
    "inputs": [
      "ctx: Context < UpdateSession >",
      "new_timestamp: i64",
      "new_duration_minutes: u16",
      "new_note: String"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "if new_duration_minutes == 0 { return Err (ErrorCode :: InvalidDuration . into ()) ; }"
      },
      {
        "id": 13,
        "label": "return Err (ErrorCode :: InvalidDuration . into ()) ;"
      },
      {
        "id": 14,
        "label": "if new_note . len () > 128 { return Err (ErrorCode :: NoteTooLong . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ErrorCode :: NoteTooLong . into ()) ;"
      },
      {
        "id": 16,
        "label": "let sess = & mut ctx . accounts . session ;"
      },
      {
        "id": 17,
        "label": "if sess . owner != ctx . accounts . user . key () { return Err (ErrorCode :: Unauthorized . into ()) ; }"
      },
      {
        "id": 18,
        "label": "return Err (ErrorCode :: Unauthorized . into ()) ;"
      },
      {
        "id": 19,
        "label": "sess . timestamp = new_timestamp ;"
      },
      {
        "id": 20,
        "label": "sess . duration_minutes = new_duration_minutes ;"
      },
      {
        "id": 21,
        "label": "sess . note = new_note ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: sess"
      },
      {
        "from": 16,
        "to": 17,
        "label": "data_dep: sess"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: sess"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: sess"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: sess"
      }
    ]
  }
]