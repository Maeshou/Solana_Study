[
  {
    "name": "HabitTracker",
    "node_type": "struct",
    "fields": [
      {
        "name": "",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "",
        "attribute": null,
        "field_type": "Vec < (Vec < u8 > , u64) >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "initialize",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Initialize >"
    ],
    "attributes": [
      "# [doc = \" 初期化：内部 Vec は空、bump のみ設定\"]"
    ],
    "body": [
      "let b = * ctx . bumps . get (\"tracker\") . unwrap () ;",
      "ctx . accounts . tracker . 0 = b ;",
      "Ok (())"
    ]
  },
  {
    "name": "add_habit",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "name: Vec < u8 >"
    ],
    "attributes": [
      "# [doc = \" 習慣追加：件数制限チェック＋初期ストリーク 0 で追加\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . tracker . 1 ;",
      "if list . len () >= MAX_HABITS",
      "{",
      "return err ! (ErrorCode :: MaxHabitsReached) ;",
      "}",
      "list . push ((name , 0)) ;",
      "Ok (())"
    ]
  },
  {
    "name": "increment_streak",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "name: Vec < u8 >"
    ],
    "attributes": [
      "# [doc = \" ストリーク更新：該当習慣を検索し、+1\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . tracker . 1 ;",
      "let mut found = false ;",
      "for entry in list . iter_mut ()",
      "{",
      "if entry . 0 == name",
      "{",
      "entry . 1 = entry . 1 . wrapping_add (1) ;",
      "found = true ;",
      "}",
      "}",
      "if ! found",
      "{",
      "return err ! (ErrorCode :: HabitNotFound) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "remove_habit",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >",
      "name: Vec < u8 >"
    ],
    "attributes": [
      "# [doc = \" 習慣削除：該当習慣を一括除去\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . tracker . 1 ;",
      "list . retain (| (n , _) | { if * n == name { false } else { true } }) ;",
      "Ok (())"
    ]
  },
  {
    "name": "reset_all",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "attributes": [
      "# [doc = \" 全ストリークをリセット：すべてのカウントを0に\"]"
    ],
    "body": [
      "let list = & mut ctx . accounts . tracker . 1 ;",
      "for entry in list . iter_mut ()",
      "{",
      "entry . 1 = 0 ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "count_habits",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Modify >"
    ],
    "attributes": [
      "# [doc = \" 現在の習慣数をログ出力\"]"
    ],
    "body": [
      "let cnt = ctx . accounts . tracker . 1 . len () as u64 ;",
      "msg ! (\"Total habits tracked: {}\" , cnt) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Initialize",
    "node_type": "struct",
    "fields": [
      {
        "name": "tracker",
        "attribute": "# [account (init_zeroed , payer = authority , seeds = [b\"tracker\" , authority . key () . as_ref ()] , bump , space = 8 + 1 + 4 + 12 * (4 + 32 + 8))]",
        "field_type": "Account < 'info , HabitTracker >"
      },
      {
        "name": "authority",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Modify",
    "node_type": "struct",
    "fields": [
      {
        "name": "tracker",
        "attribute": "# [account (mut , seeds = [b\"tracker\" , authority . key () . as_ref ()] , bump = tracker . 0 ,)]",
        "field_type": "Account < 'info , HabitTracker >"
      },
      {
        "name": "authority",
        "attribute": "# [account (signer)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]