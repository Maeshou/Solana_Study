[
  {
    "name": "init_points",
    "inputs": [
      "ctx: Context < InitPoints >",
      "initial: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let state = & mut ctx . accounts . state ;"
      },
      {
        "id": 2,
        "label": "let meta = & mut ctx . accounts . metadata ;"
      },
      {
        "id": 3,
        "label": "let cfg = & mut ctx . accounts . config ;"
      },
      {
        "id": 4,
        "label": "state . count = initial ;"
      },
      {
        "id": 5,
        "label": "meta . owner = ctx . accounts . payer . key () ;"
      },
      {
        "id": 6,
        "label": "cfg . param = 0 ;"
      },
      {
        "id": 7,
        "label": "for i in 0 .. 2 { state . count = state . count . saturating_add (i) ; msg ! (\"Loop {}\" , i) ; if state . count > 10 { state . active = false ; msg ! (\"Above ten\") ; meta . threshold = meta . threshold . saturating_add (state . count) ; cfg . param = cfg . param . saturating_add (1) ; } else { state . active = true ; msg ! (\"Below ten\") ; meta . threshold = meta . threshold . saturating_add (1) ; cfg . param = cfg . param . saturating_add (2) ; } }"
      },
      {
        "id": 8,
        "label": "state . count = state . count . saturating_add (i) ;"
      },
      {
        "id": 9,
        "label": "msg ! (\"Loop {}\" , i) ;"
      },
      {
        "id": 10,
        "label": "if state . count > 10 { state . active = false ; msg ! (\"Above ten\") ; meta . threshold = meta . threshold . saturating_add (state . count) ; cfg . param = cfg . param . saturating_add (1) ; } else { state . active = true ; msg ! (\"Below ten\") ; meta . threshold = meta . threshold . saturating_add (1) ; cfg . param = cfg . param . saturating_add (2) ; }"
      },
      {
        "id": 11,
        "label": "state . active = false ;"
      },
      {
        "id": 12,
        "label": "msg ! (\"Above ten\") ;"
      },
      {
        "id": 13,
        "label": "meta . threshold = meta . threshold . saturating_add (state . count) ;"
      },
      {
        "id": 14,
        "label": "cfg . param = cfg . param . saturating_add (1) ;"
      },
      {
        "id": 15,
        "label": "state . active = true ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Below ten\") ;"
      },
      {
        "id": 17,
        "label": "meta . threshold = meta . threshold . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "cfg . param = cfg . param . saturating_add (2) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: state"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: meta"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: cfg"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 5,
        "label": "data_dep: meta"
      },
      {
        "from": 3,
        "to": 6,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: meta"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 7,
        "label": "data_dep: meta"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: state"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: meta"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: state"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 10,
        "label": "data_dep: meta"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 10,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 11,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: meta"
      },
      {
        "from": 1,
        "to": 13,
        "label": "data_dep: state"
      },
      {
        "from": 3,
        "to": 14,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 14,
        "label": "data_dep: cfg"
      },
      {
        "from": 1,
        "to": 15,
        "label": "data_dep: state"
      },
      {
        "from": 2,
        "to": 17,
        "label": "data_dep: meta"
      },
      {
        "from": 2,
        "to": 17,
        "label": "data_dep: meta"
      },
      {
        "from": 3,
        "to": 18,
        "label": "data_dep: cfg"
      },
      {
        "from": 3,
        "to": 18,
        "label": "data_dep: cfg"
      }
    ]
  },
  {
    "name": "update_points",
    "inputs": [
      "ctx: Context < UpdatePoints >"
    ],
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let u1 = & ctx . accounts . user1 ;"
      },
      {
        "id": 22,
        "label": "let u2 = & ctx . accounts . user2 ;"
      },
      {
        "id": 23,
        "label": "require_keys_neq ! (u1 . key () , u2 . key () , CustomError :: DuplicateAccount) ;"
      },
      {
        "id": 24,
        "label": "let state = & mut ctx . accounts . state ;"
      },
      {
        "id": 25,
        "label": "let cfg = & mut ctx . accounts . config ;"
      },
      {
        "id": 26,
        "label": "let mut sum = 0 ;"
      },
      {
        "id": 27,
        "label": "for _ in 0 .. 3 { sum = sum . saturating_add (state . count) ; msg ! (\"Sum {}\" , sum) ; }"
      },
      {
        "id": 28,
        "label": "sum = sum . saturating_add (state . count) ;"
      },
      {
        "id": 29,
        "label": "msg ! (\"Sum {}\" , sum) ;"
      },
      {
        "id": 30,
        "label": "if sum % 2 == 0 { state . active = true ; msg ! (\"Even\") ; state . count = state . count . saturating_add (5) ; cfg . param = ! cfg . param ; } else { state . active = false ; msg ! (\"Odd\") ; state . count = state . count . saturating_add (3) ; cfg . param = cfg . param ; }"
      },
      {
        "id": 31,
        "label": "state . active = true ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Even\") ;"
      },
      {
        "id": 33,
        "label": "state . count = state . count . saturating_add (5) ;"
      },
      {
        "id": 34,
        "label": "cfg . param = ! cfg . param ;"
      },
      {
        "id": 35,
        "label": "state . active = false ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"Odd\") ;"
      },
      {
        "id": 37,
        "label": "state . count = state . count . saturating_add (3) ;"
      },
      {
        "id": 38,
        "label": "cfg . param = cfg . param ;"
      },
      {
        "id": 39,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 21,
        "to": 21,
        "label": "def: u1"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: u2"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: state"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: cfg"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: sum"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: sum"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: sum"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: state"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: sum"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: sum"
      },
      {
        "from": 24,
        "to": 28,
        "label": "data_dep: state"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: sum"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: cfg"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: cfg"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: state"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: cfg"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: cfg"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: state"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: cfg"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: cfg"
      },
      {
        "from": 24,
        "to": 35,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: state"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: state"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: cfg"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: cfg"
      }
    ]
  }
]