[
  {
    "name": "init_profile",
    "inputs": [
      "ctx: Context < InitProfile >",
      "level: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "ctx . accounts . client_profile . level = level ;"
      },
      {
        "id": 2,
        "label": "ctx . accounts . usage_stats . count = 0 ;"
      },
      {
        "id": 3,
        "label": "ctx . accounts . usage_stats . last_active = Clock :: get () ? . unix_timestamp as u64 ;"
      },
      {
        "id": 4,
        "label": "ctx . accounts . usage_stats . is_active = true ;"
      },
      {
        "id": 5,
        "label": "ctx . accounts . reward_config . max_reward = 1000 ;"
      },
      {
        "id": 6,
        "label": "ctx . accounts . reward_config . min_threshold = 10 ;"
      },
      {
        "id": 7,
        "label": "ctx . accounts . reward_config . bump = * ctx . bumps . get (\"client_profile\") . unwrap () ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": []
  },
  {
    "name": "update_profile",
    "inputs": [
      "ctx: Context < UpdateProfile >",
      "add_points: u64"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "require_keys_neq ! (ctx . accounts . client_profile . key () , ctx . accounts . usage_stats . key () , CustomError :: SameAccount) ;"
      },
      {
        "id": 11,
        "label": "let mut total = ctx . accounts . client_profile . level as u64 ;"
      },
      {
        "id": 12,
        "label": "for _ in 0 .. add_points { total += 1 ; }"
      },
      {
        "id": 13,
        "label": "total += 1 ;"
      },
      {
        "id": 14,
        "label": "if total > ctx . accounts . reward_config . max_reward { ctx . accounts . reward_config . min_threshold = total as u32 ; msg ! (\"Threshold updated: {}\" , ctx . accounts . reward_config . min_threshold) ; ctx . accounts . usage_stats . count += 1 ; ctx . accounts . usage_stats . is_active = false ; } else { ctx . accounts . reward_config . min_threshold -= 1 ; msg ! (\"Threshold decreased: {}\" , ctx . accounts . reward_config . min_threshold) ; ctx . accounts . usage_stats . count -= 1 ; ctx . accounts . usage_stats . is_active = true ; }"
      },
      {
        "id": 15,
        "label": "ctx . accounts . reward_config . min_threshold = total as u32 ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"Threshold updated: {}\" , ctx . accounts . reward_config . min_threshold) ;"
      },
      {
        "id": 17,
        "label": "ctx . accounts . usage_stats . count += 1 ;"
      },
      {
        "id": 18,
        "label": "ctx . accounts . usage_stats . is_active = false ;"
      },
      {
        "id": 19,
        "label": "ctx . accounts . reward_config . min_threshold -= 1 ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Threshold decreased: {}\" , ctx . accounts . reward_config . min_threshold) ;"
      },
      {
        "id": 21,
        "label": "ctx . accounts . usage_stats . count -= 1 ;"
      },
      {
        "id": 22,
        "label": "ctx . accounts . usage_stats . is_active = true ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: total"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: total"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: total"
      }
    ]
  }
]