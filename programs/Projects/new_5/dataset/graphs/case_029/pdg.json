[
  {
    "name": "init_profile",
    "inputs": [
      "ctx: Context < InitProfile >",
      "seed: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 2,
        "label": "p . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "p . seed = seed ;"
      },
      {
        "id": 4,
        "label": "p . level = 1 ;"
      },
      {
        "id": 5,
        "label": "p . energy = 100 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: p"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: p"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: p"
      }
    ]
  },
  {
    "name": "init_stage",
    "inputs": [
      "ctx: Context < InitStage >",
      "label: u32"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let s = & mut ctx . accounts . stage ;"
      },
      {
        "id": 9,
        "label": "s . parent = ctx . accounts . profile . key () ;"
      },
      {
        "id": 10,
        "label": "s . label = label ;"
      },
      {
        "id": 11,
        "label": "s . phase = Locked ;"
      },
      {
        "id": 12,
        "label": "s . progress = 0 ;"
      },
      {
        "id": 13,
        "label": "s . fail_counter = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: s"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: s"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "tick_two",
    "inputs": [
      "ctx: Context < TickTwo >",
      "budget: u32"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let p = & mut ctx . accounts . profile ;"
      },
      {
        "id": 17,
        "label": "let s1 = & mut ctx . accounts . stage_one ;"
      },
      {
        "id": 18,
        "label": "let s2 = & mut ctx . accounts . stage_two ;"
      },
      {
        "id": 19,
        "label": "let mut acc : u64 = p . energy as u64 + 1 ;"
      },
      {
        "id": 20,
        "label": "for _ in 0 .. 5 { acc = acc + acc * (1000 - (acc % 1000)) / 2000 ; p . level = (p . level + (acc as u32 % 3)) . min (99) ; }"
      },
      {
        "id": 21,
        "label": "acc = acc + acc * (1000 - (acc % 1000)) / 2000 ;"
      },
      {
        "id": 22,
        "label": "p . level = (p . level + (acc as u32 % 3)) . min (99) ;"
      },
      {
        "id": 23,
        "label": "if p . energy > budget / 2 { s1 . phase = Active ; s1 . progress = s1 . progress . saturating_add (budget / 3 + 5) ; p . energy = p . energy . saturating_sub (budget / 4) ; s1 . fail_counter = s1 . fail_counter / 2 ; msg ! (\"Stage1 active; prog={}, energy={}\" , s1 . progress , p . energy) ; } else { s1 . phase = Locked ; s1 . progress = s1 . progress / 2 + 1 ; p . energy = p . energy + (p . seed as u32 % 17) ; s1 . fail_counter = s1 . fail_counter . saturating_add (1) ; msg ! (\"Stage1 locked; prog={}, energy={}\" , s1 . progress , p . energy) ; }"
      },
      {
        "id": 24,
        "label": "s1 . phase = Active ;"
      },
      {
        "id": 25,
        "label": "s1 . progress = s1 . progress . saturating_add (budget / 3 + 5) ;"
      },
      {
        "id": 26,
        "label": "p . energy = p . energy . saturating_sub (budget / 4) ;"
      },
      {
        "id": 27,
        "label": "s1 . fail_counter = s1 . fail_counter / 2 ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"Stage1 active; prog={}, energy={}\" , s1 . progress , p . energy) ;"
      },
      {
        "id": 29,
        "label": "s1 . phase = Locked ;"
      },
      {
        "id": 30,
        "label": "s1 . progress = s1 . progress / 2 + 1 ;"
      },
      {
        "id": 31,
        "label": "p . energy = p . energy + (p . seed as u32 % 17) ;"
      },
      {
        "id": 32,
        "label": "s1 . fail_counter = s1 . fail_counter . saturating_add (1) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Stage1 locked; prog={}, energy={}\" , s1 . progress , p . energy) ;"
      },
      {
        "id": 34,
        "label": "for _ in 0 .. 4 { if (s2 . label + p . level) & 2 == 0 { s2 . phase = Active ; s2 . progress = s2 . progress . saturating_add ((p . level as u32) & 31) ; p . energy = p . energy . saturating_sub (3) ; msg ! (\"Stage2 tick+; prog={}, energy={}\" , s2 . progress , p . energy) ; } else { s2 . phase = Failed ; s2 . fail_counter = s2 . fail_counter . saturating_add (2) ; p . energy = p . energy + 5 ; msg ! (\"Stage2 fail; fails={}, energy={}\" , s2 . fail_counter , p . energy) ; } }"
      },
      {
        "id": 35,
        "label": "if (s2 . label + p . level) & 2 == 0 { s2 . phase = Active ; s2 . progress = s2 . progress . saturating_add ((p . level as u32) & 31) ; p . energy = p . energy . saturating_sub (3) ; msg ! (\"Stage2 tick+; prog={}, energy={}\" , s2 . progress , p . energy) ; } else { s2 . phase = Failed ; s2 . fail_counter = s2 . fail_counter . saturating_add (2) ; p . energy = p . energy + 5 ; msg ! (\"Stage2 fail; fails={}, energy={}\" , s2 . fail_counter , p . energy) ; }"
      },
      {
        "id": 36,
        "label": "s2 . phase = Active ;"
      },
      {
        "id": 37,
        "label": "s2 . progress = s2 . progress . saturating_add ((p . level as u32) & 31) ;"
      },
      {
        "id": 38,
        "label": "p . energy = p . energy . saturating_sub (3) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Stage2 tick+; prog={}, energy={}\" , s2 . progress , p . energy) ;"
      },
      {
        "id": 40,
        "label": "s2 . phase = Failed ;"
      },
      {
        "id": 41,
        "label": "s2 . fail_counter = s2 . fail_counter . saturating_add (2) ;"
      },
      {
        "id": 42,
        "label": "p . energy = p . energy + 5 ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"Stage2 fail; fails={}, energy={}\" , s2 . fail_counter , p . energy) ;"
      },
      {
        "id": 44,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: p"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: s1"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: s2"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: s1"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: s1"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: p"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: s1"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: s1"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 36,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 37,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: p"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: s2"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: s2"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: p"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: p"
      }
    ]
  }
]