[
  {
    "name": "init_item",
    "inputs": [
      "ctx: Context < InitItem >",
      "item_id: u64",
      "base_power: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let item = & mut ctx . accounts . item ;"
      },
      {
        "id": 2,
        "label": "item . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "item . item_id = item_id ;"
      },
      {
        "id": 4,
        "label": "item . base_power = base_power ;"
      },
      {
        "id": 5,
        "label": "item . level = 0 ;"
      },
      {
        "id": 6,
        "label": "item . upgrade_cost = 100 ;"
      },
      {
        "id": 7,
        "label": "item . rarity_level = Rarity :: Common ;"
      },
      {
        "id": 8,
        "label": "item . is_locked = false ;"
      },
      {
        "id": 9,
        "label": "msg ! (\"Item {} initialized with base power {}\" , item . item_id , item . base_power) ;"
      },
      {
        "id": 10,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: item"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: item"
      },
      {
        "from": 1,
        "to": 8,
        "label": "data_dep: item"
      }
    ]
  },
  {
    "name": "enhance_item",
    "inputs": [
      "ctx: Context < EnhanceItem >"
    ],
    "nodes": [
      {
        "id": 11,
        "label": "Entry"
      },
      {
        "id": 12,
        "label": "let item = & mut ctx . accounts . item ;"
      },
      {
        "id": 13,
        "label": "let material = & mut ctx . accounts . material ;"
      },
      {
        "id": 14,
        "label": "if item . is_locked { return Err (ErrorCode :: ItemLocked . into ()) ; }"
      },
      {
        "id": 15,
        "label": "return Err (ErrorCode :: ItemLocked . into ()) ;"
      },
      {
        "id": 16,
        "label": "let mut success_chance_sum = 0.0 ;"
      },
      {
        "id": 17,
        "label": "let mut total_added_power = 0 ;"
      },
      {
        "id": 18,
        "label": "let mut loops_run = 0 ;"
      },
      {
        "id": 19,
        "label": "let max_loops = 5 ;"
      },
      {
        "id": 20,
        "label": "while loops_run < max_loops { if material . count == 0 { break ; } let bonus_factor = if item . level > 10 { 1.2 } else { 1.0 } ; let success_roll = 1.0 - (loops_run as f64 * 0.1) ; if success_roll > 0.5 { let added_power = (material . power as f64 * bonus_factor) as u16 ; item . base_power = item . base_power . checked_add (added_power) . unwrap_or (u16 :: MAX) ; total_added_power += added_power ; success_chance_sum += success_roll ; material . count -= 1 ; } else { item . upgrade_cost = item . upgrade_cost . saturating_add (10) ; item . level = item . level . saturating_sub (1) ; material . count = material . count . saturating_sub (1) ; msg ! (\"Enhancement failed, item level decreased and cost increased.\") ; break ; } loops_run += 1 ; }"
      },
      {
        "id": 21,
        "label": "if material . count == 0 { break ; }"
      },
      {
        "id": 22,
        "label": "break ;"
      },
      {
        "id": 23,
        "label": "let bonus_factor = if item . level > 10 { 1.2 } else { 1.0 } ;"
      },
      {
        "id": 24,
        "label": "1.2"
      },
      {
        "id": 25,
        "label": "1.0"
      },
      {
        "id": 26,
        "label": "let success_roll = 1.0 - (loops_run as f64 * 0.1) ;"
      },
      {
        "id": 27,
        "label": "if success_roll > 0.5 { let added_power = (material . power as f64 * bonus_factor) as u16 ; item . base_power = item . base_power . checked_add (added_power) . unwrap_or (u16 :: MAX) ; total_added_power += added_power ; success_chance_sum += success_roll ; material . count -= 1 ; } else { item . upgrade_cost = item . upgrade_cost . saturating_add (10) ; item . level = item . level . saturating_sub (1) ; material . count = material . count . saturating_sub (1) ; msg ! (\"Enhancement failed, item level decreased and cost increased.\") ; break ; }"
      },
      {
        "id": 28,
        "label": "let added_power = (material . power as f64 * bonus_factor) as u16 ;"
      },
      {
        "id": 29,
        "label": "item . base_power = item . base_power . checked_add (added_power) . unwrap_or (u16 :: MAX) ;"
      },
      {
        "id": 30,
        "label": "total_added_power += added_power ;"
      },
      {
        "id": 31,
        "label": "success_chance_sum += success_roll ;"
      },
      {
        "id": 32,
        "label": "material . count -= 1 ;"
      },
      {
        "id": 33,
        "label": "item . upgrade_cost = item . upgrade_cost . saturating_add (10) ;"
      },
      {
        "id": 34,
        "label": "item . level = item . level . saturating_sub (1) ;"
      },
      {
        "id": 35,
        "label": "material . count = material . count . saturating_sub (1) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"Enhancement failed, item level decreased and cost increased.\") ;"
      },
      {
        "id": 37,
        "label": "break ;"
      },
      {
        "id": 38,
        "label": "loops_run += 1 ;"
      },
      {
        "id": 39,
        "label": "if item . base_power > 2000 { item . rarity_level = Rarity :: Legendary ; msg ! (\"Item upgraded to Legendary rarity!\") ; } else { item . rarity_level = Rarity :: Rare ; msg ! (\"Item upgraded to Rare rarity.\") ; }"
      },
      {
        "id": 40,
        "label": "item . rarity_level = Rarity :: Legendary ;"
      },
      {
        "id": 41,
        "label": "msg ! (\"Item upgraded to Legendary rarity!\") ;"
      },
      {
        "id": 42,
        "label": "item . rarity_level = Rarity :: Rare ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"Item upgraded to Rare rarity.\") ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"Enhanced item {} with {} total added power. New power: {}\" , item . item_id , total_added_power , item . base_power) ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 12,
        "to": 12,
        "label": "def: item"
      },
      {
        "from": 13,
        "to": 13,
        "label": "def: material"
      },
      {
        "from": 12,
        "to": 14,
        "label": "data_dep: item"
      },
      {
        "from": 16,
        "to": 16,
        "label": "def: success_chance_sum"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: total_added_power"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: loops_run"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: max_loops"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: loops_run"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: max_loops"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: material"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: loops_run"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: material"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 17,
        "to": 20,
        "label": "data_dep: total_added_power"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: success_chance_sum"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: material"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 20,
        "label": "data_dep: item"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: material"
      },
      {
        "from": 13,
        "to": 20,
        "label": "data_dep: material"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: loops_run"
      },
      {
        "from": 13,
        "to": 21,
        "label": "data_dep: material"
      },
      {
        "from": 23,
        "to": 23,
        "label": "def: bonus_factor"
      },
      {
        "from": 12,
        "to": 23,
        "label": "data_dep: item"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: success_roll"
      },
      {
        "from": 18,
        "to": 26,
        "label": "data_dep: loops_run"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: success_roll"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: material"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: total_added_power"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: success_chance_sum"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: success_roll"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: material"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 27,
        "label": "data_dep: item"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: material"
      },
      {
        "from": 13,
        "to": 27,
        "label": "data_dep: material"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: added_power"
      },
      {
        "from": 13,
        "to": 28,
        "label": "data_dep: material"
      },
      {
        "from": 23,
        "to": 28,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 12,
        "to": 29,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 29,
        "label": "data_dep: item"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: added_power"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: total_added_power"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: added_power"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: success_chance_sum"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: success_roll"
      },
      {
        "from": 13,
        "to": 32,
        "label": "data_dep: material"
      },
      {
        "from": 12,
        "to": 33,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 33,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 34,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 34,
        "label": "data_dep: item"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: material"
      },
      {
        "from": 13,
        "to": 35,
        "label": "data_dep: material"
      },
      {
        "from": 18,
        "to": 38,
        "label": "data_dep: loops_run"
      },
      {
        "from": 12,
        "to": 39,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 39,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 39,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 40,
        "label": "data_dep: item"
      },
      {
        "from": 12,
        "to": 42,
        "label": "data_dep: item"
      }
    ]
  }
]