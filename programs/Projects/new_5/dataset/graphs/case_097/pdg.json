[
  {
    "name": "init_foundry",
    "inputs": [
      "ctx: Context < InitFoundry >",
      "foundry_id: u64",
      "power_level: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let foundry = & mut ctx . accounts . foundry_core ;"
      },
      {
        "id": 2,
        "label": "foundry . foundry_id = foundry_id + 500 ;"
      },
      {
        "id": 3,
        "label": "foundry . total_power = power_level . saturating_add (BASE_POWER_BONUS) ;"
      },
      {
        "id": 4,
        "label": "foundry . runes_merged = 0 ;"
      },
      {
        "id": 5,
        "label": "foundry . is_operational = foundry . total_power > MIN_POWER_LEVEL ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Arcane Foundry {} initialized with {} power.\" , foundry . foundry_id , foundry . total_power) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: foundry"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: foundry"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: foundry"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: foundry"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: foundry"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: foundry"
      }
    ]
  },
  {
    "name": "init_rune",
    "inputs": [
      "ctx: Context < InitRune >",
      "rune_id: u64",
      "base_power: u32"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let rune = & mut ctx . accounts . magic_rune ;"
      },
      {
        "id": 10,
        "label": "rune . parent_foundry = ctx . accounts . foundry_core . key () ;"
      },
      {
        "id": 11,
        "label": "rune . rune_id = rune_id * 7 ;"
      },
      {
        "id": 12,
        "label": "rune . power_level = base_power ;"
      },
      {
        "id": 13,
        "label": "rune . is_merged = false ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"New rune {} created with {} base power.\" , rune . rune_id , rune . power_level) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: rune"
      },
      {
        "from": 9,
        "to": 10,
        "label": "data_dep: rune"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: rune"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: rune"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: rune"
      }
    ]
  },
  {
    "name": "merge_runes",
    "inputs": [
      "ctx: Context < MergeRunes >"
    ],
    "nodes": [
      {
        "id": 16,
        "label": "Entry"
      },
      {
        "id": 17,
        "label": "let foundry = & mut ctx . accounts . foundry_core ;"
      },
      {
        "id": 18,
        "label": "let first_rune = & mut ctx . accounts . first_rune ;"
      },
      {
        "id": 19,
        "label": "let second_rune = & mut ctx . accounts . second_rune ;"
      },
      {
        "id": 20,
        "label": "if first_rune . is_merged || second_rune . is_merged { return Err (ProgramError :: Custom (1) . into ()) ; }"
      },
      {
        "id": 21,
        "label": "return Err (ProgramError :: Custom (1) . into ()) ;"
      },
      {
        "id": 22,
        "label": "let combined_power = first_rune . power_level . saturating_add (second_rune . power_level) ;"
      },
      {
        "id": 23,
        "label": "if combined_power > MERGE_SUCCESS_THRESHOLD { foundry . total_power = foundry . total_power . saturating_add (combined_power) ; first_rune . power_level = combined_power ; second_rune . power_level = 0 ; first_rune . is_merged = true ; second_rune . is_merged = true ; foundry . runes_merged = foundry . runes_merged . saturating_add (2) ; msg ! (\"Rune merge successful! New combined power: {}.\" , combined_power) ; } else { foundry . total_power = foundry . total_power . saturating_sub (combined_power / 2) ; msg ! (\"Rune merge failed. Foundry power reduced.\") ; }"
      },
      {
        "id": 24,
        "label": "foundry . total_power = foundry . total_power . saturating_add (combined_power) ;"
      },
      {
        "id": 25,
        "label": "first_rune . power_level = combined_power ;"
      },
      {
        "id": 26,
        "label": "second_rune . power_level = 0 ;"
      },
      {
        "id": 27,
        "label": "first_rune . is_merged = true ;"
      },
      {
        "id": 28,
        "label": "second_rune . is_merged = true ;"
      },
      {
        "id": 29,
        "label": "foundry . runes_merged = foundry . runes_merged . saturating_add (2) ;"
      },
      {
        "id": 30,
        "label": "msg ! (\"Rune merge successful! New combined power: {}.\" , combined_power) ;"
      },
      {
        "id": 31,
        "label": "foundry . total_power = foundry . total_power . saturating_sub (combined_power / 2) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Rune merge failed. Foundry power reduced.\") ;"
      },
      {
        "id": 33,
        "label": "foundry . is_operational = foundry . total_power > MIN_POWER_LEVEL ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 17,
        "label": "def: foundry"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: first_rune"
      },
      {
        "from": 19,
        "to": 19,
        "label": "def: second_rune"
      },
      {
        "from": 18,
        "to": 20,
        "label": "data_dep: first_rune"
      },
      {
        "from": 19,
        "to": 20,
        "label": "data_dep: second_rune"
      },
      {
        "from": 22,
        "to": 22,
        "label": "def: combined_power"
      },
      {
        "from": 18,
        "to": 22,
        "label": "data_dep: first_rune"
      },
      {
        "from": 19,
        "to": 22,
        "label": "data_dep: second_rune"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: combined_power"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: combined_power"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: first_rune"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: combined_power"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: second_rune"
      },
      {
        "from": 18,
        "to": 23,
        "label": "data_dep: first_rune"
      },
      {
        "from": 19,
        "to": 23,
        "label": "data_dep: second_rune"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: foundry"
      },
      {
        "from": 22,
        "to": 23,
        "label": "data_dep: combined_power"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: foundry"
      },
      {
        "from": 22,
        "to": 24,
        "label": "data_dep: combined_power"
      },
      {
        "from": 18,
        "to": 25,
        "label": "data_dep: first_rune"
      },
      {
        "from": 22,
        "to": 25,
        "label": "data_dep: combined_power"
      },
      {
        "from": 19,
        "to": 26,
        "label": "data_dep: second_rune"
      },
      {
        "from": 18,
        "to": 27,
        "label": "data_dep: first_rune"
      },
      {
        "from": 19,
        "to": 28,
        "label": "data_dep: second_rune"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: foundry"
      },
      {
        "from": 22,
        "to": 31,
        "label": "data_dep: combined_power"
      },
      {
        "from": 17,
        "to": 33,
        "label": "data_dep: foundry"
      },
      {
        "from": 17,
        "to": 33,
        "label": "data_dep: foundry"
      }
    ]
  }
]