[
  {
    "name": "init_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "g . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "g . tag = tag ;"
      },
      {
        "id": 4,
        "label": "g . member_count = 0 ;"
      },
      {
        "id": 5,
        "label": "g . reputation = 1000 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_member",
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let m = & mut ctx . accounts . member ;"
      },
      {
        "id": 9,
        "label": "m . parent = ctx . accounts . guild . key () ;"
      },
      {
        "id": 10,
        "label": "m . player = ctx . accounts . player . key () ;"
      },
      {
        "id": 11,
        "label": "m . seat = seat ;"
      },
      {
        "id": 12,
        "label": "m . status = Vacant ;"
      },
      {
        "id": 13,
        "label": "m . points = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_seats",
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let g = & mut ctx . accounts . guild ;"
      },
      {
        "id": 17,
        "label": "let a = & mut ctx . accounts . member_a ;"
      },
      {
        "id": 18,
        "label": "let b = & mut ctx . accounts . member_b ;"
      },
      {
        "id": 19,
        "label": "let mut accum : u64 = 0 ;"
      },
      {
        "id": 20,
        "label": "let mut x = (g . reputation as u64) . max (1) ;"
      },
      {
        "id": 21,
        "label": "let mut i = 0 ;"
      },
      {
        "id": 22,
        "label": "Loop Start"
      },
      {
        "id": 23,
        "label": "let nx = (x + (g . reputation as u64) / x) / 2 ;"
      },
      {
        "id": 24,
        "label": "let diff = if nx > x { nx - x } else { x - nx } ;"
      },
      {
        "id": 25,
        "label": "x = nx ;"
      },
      {
        "id": 26,
        "label": "accum = accum . checked_add (diff) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 27,
        "label": "i += 1 ;"
      },
      {
        "id": 28,
        "label": "Loop End"
      },
      {
        "id": 29,
        "label": "if statement"
      },
      {
        "id": 30,
        "label": "predicate"
      },
      {
        "id": 31,
        "label": "(a . seat % 2) == 0"
      },
      {
        "id": 32,
        "label": "True body"
      },
      {
        "id": 33,
        "label": "a . points = a . points . checked_add (add_points / 2) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 34,
        "label": "a . status = Occupied ;"
      },
      {
        "id": 35,
        "label": "g . member_count = g . member_count . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "g . reputation = ((g . reputation as u64 + accum / 4) as u32) . min (50_000) ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"Seat A occupied; acc={}, rep={}\" , accum , g . reputation) ;"
      },
      {
        "id": 38,
        "label": "False body"
      },
      {
        "id": 39,
        "label": "a . points = a . points . saturating_sub (add_points / 3) ;"
      },
      {
        "id": 40,
        "label": "a . status = Suspended ;"
      },
      {
        "id": 41,
        "label": "g . member_count = g . member_count . saturating_sub (1) ;"
      },
      {
        "id": 42,
        "label": "g . reputation = g . reputation / 2 + ((accum % 97) as u32) ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"Seat A suspended; acc={}, rep={}\" , accum , g . reputation) ;"
      },
      {
        "id": 44,
        "label": "merge"
      },
      {
        "id": 45,
        "label": "Loop Start"
      },
      {
        "id": 46,
        "label": "let mask = 0b10101u32 ;"
      },
      {
        "id": 47,
        "label": "if statement"
      },
      {
        "id": 48,
        "label": "predicate"
      },
      {
        "id": 49,
        "label": "b . points & mask == 0"
      },
      {
        "id": 50,
        "label": "True body"
      },
      {
        "id": 51,
        "label": "b . points = b . points . saturating_add (add_points) ;"
      },
      {
        "id": 52,
        "label": "b . status = Occupied ;"
      },
      {
        "id": 53,
        "label": "g . reputation = g . reputation . saturating_add ((b . seat as u32) & 255) ;"
      },
      {
        "id": 54,
        "label": "msg ! (\"B boosted; pts={}, rep={}\" , b . points , g . reputation) ;"
      },
      {
        "id": 55,
        "label": "False body"
      },
      {
        "id": 56,
        "label": "b . points = b . points . saturating_sub (add_points / 2) ;"
      },
      {
        "id": 57,
        "label": "b . status = Suspended ;"
      },
      {
        "id": 58,
        "label": "g . reputation = g . reputation . saturating_sub (((b . seat as u32) & 63) + 1) ;"
      },
      {
        "id": 59,
        "label": "msg ! (\"B reduced; pts={}, rep={}\" , b . points , g . reputation) ;"
      },
      {
        "id": 60,
        "label": "merge"
      },
      {
        "id": 61,
        "label": "Loop End"
      },
      {
        "id": 62,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 22,
        "to": 28,
        "label": "while"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "predicate"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 29,
        "to": 32,
        "label": "true"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 29,
        "to": 38,
        "label": "false"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 37,
        "to": 44,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "predicate"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 47,
        "to": 50,
        "label": "true"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 47,
        "to": 55,
        "label": "false"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 58,
        "to": 59,
        "label": "next"
      },
      {
        "from": 54,
        "to": 60,
        "label": "next"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 45,
        "to": 61,
        "label": "for"
      },
      {
        "from": 61,
        "to": 62,
        "label": "next"
      }
    ]
  }
]