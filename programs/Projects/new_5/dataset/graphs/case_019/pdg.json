[
  {
    "name": "init_game",
    "inputs": [
      "ctx: Context < InitGame >",
      "game_id: u64",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let game = & mut ctx . accounts . game ;"
      },
      {
        "id": 2,
        "label": "game . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "game . game_id = game_id ;"
      },
      {
        "id": 4,
        "label": "game . name = name ;"
      },
      {
        "id": 5,
        "label": "game . is_active = true ;"
      },
      {
        "id": 6,
        "label": "game . total_players = 0 ;"
      },
      {
        "id": 7,
        "label": "game . total_score = 0 ;"
      },
      {
        "id": 8,
        "label": "msg ! (\"Game {} initialized.\" , game . name) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: game"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: game"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: game"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: game"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: game"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: game"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: game"
      }
    ]
  },
  {
    "name": "init_player_state",
    "inputs": [
      "ctx: Context < InitPlayerState >",
      "player_id: u32",
      "initial_level: u8"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let player = & mut ctx . accounts . player_state ;"
      },
      {
        "id": 12,
        "label": "let game = & mut ctx . accounts . game ;"
      },
      {
        "id": 13,
        "label": "player . game = game . key () ;"
      },
      {
        "id": 14,
        "label": "player . player_id = player_id ;"
      },
      {
        "id": 15,
        "label": "player . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 16,
        "label": "player . level = initial_level ;"
      },
      {
        "id": 17,
        "label": "player . xp = 0 ;"
      },
      {
        "id": 18,
        "label": "player . is_online = true ;"
      },
      {
        "id": 19,
        "label": "game . total_players = game . total_players . saturating_add (1) ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"Player {} added to game {}.\" , player . player_id , game . name) ;"
      },
      {
        "id": 21,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: player"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: game"
      },
      {
        "from": 11,
        "to": 13,
        "label": "data_dep: player"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: game"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: player"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: player"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: player"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: player"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: player"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: game"
      },
      {
        "from": 12,
        "to": 19,
        "label": "data_dep: game"
      }
    ]
  },
  {
    "name": "update_player_scores",
    "inputs": [
      "ctx: Context < UpdatePlayerScores >",
      "updates: Vec < u32 >"
    ],
    "nodes": [
      {
        "id": 22,
        "label": "Entry"
      },
      {
        "id": 23,
        "label": "let player_a = & mut ctx . accounts . player_a ;"
      },
      {
        "id": 24,
        "label": "let player_b = & mut ctx . accounts . player_b ;"
      },
      {
        "id": 25,
        "label": "let mut total_score_a = 0 ;"
      },
      {
        "id": 26,
        "label": "let mut total_score_b = 0 ;"
      },
      {
        "id": 27,
        "label": "for score in updates . iter () { let bonus_factor = if * score > 50 { 2 } else { 1 } ; if score % 2 == 0 { player_a . xp = player_a . xp . saturating_add ((* score as u64) * bonus_factor) ; total_score_a = total_score_a . saturating_add (score) ; } else { player_b . xp = player_b . xp . saturating_add ((* score as u64) * bonus_factor) ; total_score_b = total_score_b . saturating_add (score) ; } }"
      },
      {
        "id": 28,
        "label": "let bonus_factor = if * score > 50 { 2 } else { 1 } ;"
      },
      {
        "id": 29,
        "label": "2"
      },
      {
        "id": 30,
        "label": "1"
      },
      {
        "id": 31,
        "label": "if score % 2 == 0 { player_a . xp = player_a . xp . saturating_add ((* score as u64) * bonus_factor) ; total_score_a = total_score_a . saturating_add (score) ; } else { player_b . xp = player_b . xp . saturating_add ((* score as u64) * bonus_factor) ; total_score_b = total_score_b . saturating_add (score) ; }"
      },
      {
        "id": 32,
        "label": "player_a . xp = player_a . xp . saturating_add ((* score as u64) * bonus_factor) ;"
      },
      {
        "id": 33,
        "label": "total_score_a = total_score_a . saturating_add (score) ;"
      },
      {
        "id": 34,
        "label": "player_b . xp = player_b . xp . saturating_add ((* score as u64) * bonus_factor) ;"
      },
      {
        "id": 35,
        "label": "total_score_b = total_score_b . saturating_add (score) ;"
      },
      {
        "id": 36,
        "label": "player_a . level = (player_a . xp / 1000) as u8 ;"
      },
      {
        "id": 37,
        "label": "player_b . level = (player_b . xp / 1000) as u8 ;"
      },
      {
        "id": 38,
        "label": "ctx . accounts . game . total_score = ctx . accounts . game . total_score . saturating_add (total_score_a as u64) . saturating_add (total_score_b as u64) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Updated scores for two players. Player A gained {} XP, Player B gained {} XP.\" , total_score_a , total_score_b) ;"
      },
      {
        "id": 40,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 23,
        "to": 23,
        "label": "def: player_a"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: player_b"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: total_score_a"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: total_score_b"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: player_a"
      },
      {
        "from": 23,
        "to": 27,
        "label": "data_dep: player_a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: player_b"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: player_b"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: bonus_factor"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: player_a"
      },
      {
        "from": 23,
        "to": 31,
        "label": "data_dep: player_a"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: player_b"
      },
      {
        "from": 24,
        "to": 31,
        "label": "data_dep: player_b"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 26,
        "to": 31,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: player_a"
      },
      {
        "from": 23,
        "to": 32,
        "label": "data_dep: player_a"
      },
      {
        "from": 28,
        "to": 32,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 25,
        "to": 33,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: player_b"
      },
      {
        "from": 24,
        "to": 34,
        "label": "data_dep: player_b"
      },
      {
        "from": 28,
        "to": 34,
        "label": "data_dep: bonus_factor"
      },
      {
        "from": 26,
        "to": 35,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 26,
        "to": 35,
        "label": "data_dep: total_score_b"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: player_a"
      },
      {
        "from": 23,
        "to": 36,
        "label": "data_dep: player_a"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: player_b"
      },
      {
        "from": 24,
        "to": 37,
        "label": "data_dep: player_b"
      },
      {
        "from": 25,
        "to": 38,
        "label": "data_dep: total_score_a"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: total_score_b"
      }
    ]
  }
]