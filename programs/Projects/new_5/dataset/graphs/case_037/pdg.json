[
  {
    "name": "init_event",
    "inputs": [
      "ctx: Context < InitEvent >",
      "event_id: u32",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let event = & mut ctx . accounts . event ;"
      },
      {
        "id": 2,
        "label": "event . host = ctx . accounts . host . key () ;"
      },
      {
        "id": 3,
        "label": "event . event_id = event_id ;"
      },
      {
        "id": 4,
        "label": "event . name = name ;"
      },
      {
        "id": 5,
        "label": "event . participant_count = 0 ;"
      },
      {
        "id": 6,
        "label": "event . is_open = true ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Event '{}' initialized.\" , event . name) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: event"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: event"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: event"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: event"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: event"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: event"
      }
    ]
  },
  {
    "name": "init_participation",
    "inputs": [
      "ctx: Context < InitParticipation >",
      "participation_id: u64"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let participation = & mut ctx . accounts . participation ;"
      },
      {
        "id": 11,
        "label": "let event = & mut ctx . accounts . event ;"
      },
      {
        "id": 12,
        "label": "participation . event = event . key () ;"
      },
      {
        "id": 13,
        "label": "participation . participant = ctx . accounts . participant . key () ;"
      },
      {
        "id": 14,
        "label": "participation . participation_id = participation_id ;"
      },
      {
        "id": 15,
        "label": "participation . has_attended = false ;"
      },
      {
        "id": 16,
        "label": "event . participant_count = event . participant_count . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Participation {} created for event {}.\" , participation . participation_id , event . name) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: participation"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: event"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: participation"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: event"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: participation"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: participation"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: participation"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: event"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: event"
      }
    ]
  },
  {
    "name": "update_participation_records",
    "inputs": [
      "ctx: Context < UpdateParticipationRecords >",
      "update_values: Vec < u8 >"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let record_a = & mut ctx . accounts . record_a ;"
      },
      {
        "id": 21,
        "label": "let record_b = & mut ctx . accounts . record_b ;"
      },
      {
        "id": 22,
        "label": "if ! ctx . accounts . event . is_open { return Err (ErrorCode :: EventClosed . into ()) ; }"
      },
      {
        "id": 23,
        "label": "return Err (ErrorCode :: EventClosed . into ()) ;"
      },
      {
        "id": 24,
        "label": "let mut a_update_count = 0 ;"
      },
      {
        "id": 25,
        "label": "let mut b_update_count = 0 ;"
      },
      {
        "id": 26,
        "label": "for value in update_values . iter () { if * value > 5 { record_a . has_attended = true ; record_b . has_attended = false ; a_update_count += 1 ; msg ! (\"Value > 5, updating A and B differently.\") ; } else { record_a . has_attended = false ; record_b . has_attended = true ; b_update_count += 1 ; msg ! (\"Value <= 5, updating B and A differently.\") ; } }"
      },
      {
        "id": 27,
        "label": "if * value > 5 { record_a . has_attended = true ; record_b . has_attended = false ; a_update_count += 1 ; msg ! (\"Value > 5, updating A and B differently.\") ; } else { record_a . has_attended = false ; record_b . has_attended = true ; b_update_count += 1 ; msg ! (\"Value <= 5, updating B and A differently.\") ; }"
      },
      {
        "id": 28,
        "label": "record_a . has_attended = true ;"
      },
      {
        "id": 29,
        "label": "record_b . has_attended = false ;"
      },
      {
        "id": 30,
        "label": "a_update_count += 1 ;"
      },
      {
        "id": 31,
        "label": "msg ! (\"Value > 5, updating A and B differently.\") ;"
      },
      {
        "id": 32,
        "label": "record_a . has_attended = false ;"
      },
      {
        "id": 33,
        "label": "record_b . has_attended = true ;"
      },
      {
        "id": 34,
        "label": "b_update_count += 1 ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Value <= 5, updating B and A differently.\") ;"
      },
      {
        "id": 36,
        "label": "if record_a . has_attended { msg ! (\"Record A is set to true.\") ; } else { msg ! (\"Record A is set to false.\") ; }"
      },
      {
        "id": 37,
        "label": "msg ! (\"Record A is set to true.\") ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Record A is set to false.\") ;"
      },
      {
        "id": 39,
        "label": "if record_b . has_attended { msg ! (\"Record B is set to true.\") ; } else { msg ! (\"Record B is set to false.\") ; }"
      },
      {
        "id": 40,
        "label": "msg ! (\"Record B is set to true.\") ;"
      },
      {
        "id": 41,
        "label": "msg ! (\"Record B is set to false.\") ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"Processed {} updates. A updates: {}, B updates: {}.\" , update_values . len () , a_update_count , b_update_count) ;"
      },
      {
        "id": 43,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: record_a"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: record_b"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: a_update_count"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: b_update_count"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: record_b"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: a_update_count"
      },
      {
        "from": 20,
        "to": 26,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 26,
        "label": "data_dep: record_b"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: b_update_count"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: record_b"
      },
      {
        "from": 24,
        "to": 27,
        "label": "data_dep: a_update_count"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: record_b"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: b_update_count"
      },
      {
        "from": 20,
        "to": 28,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 29,
        "label": "data_dep: record_b"
      },
      {
        "from": 24,
        "to": 30,
        "label": "data_dep: a_update_count"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 33,
        "label": "data_dep: record_b"
      },
      {
        "from": 25,
        "to": 34,
        "label": "data_dep: b_update_count"
      },
      {
        "from": 20,
        "to": 36,
        "label": "data_dep: record_a"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: record_b"
      }
    ]
  }
]