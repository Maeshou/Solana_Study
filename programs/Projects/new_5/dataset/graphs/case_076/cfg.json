[
  {
    "name": "init_tally",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let tally = & mut ctx . accounts . tally_core ;"
      },
      {
        "id": 2,
        "label": "tally . founding_era = founding_era . rotate_left (8) ;"
      },
      {
        "id": 3,
        "label": "tally . max_voters = max_voters . checked_add (100) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 4,
        "label": "tally . total_votes = (founding_era . checked_rem (10) . unwrap_or (0)) as u64 ;"
      },
      {
        "id": 5,
        "label": "tally . current_voters = 0 ;"
      },
      {
        "id": 6,
        "label": "tally . tally_status = TallyStatus :: Open ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Cosmic Tally established in era {} with capacity for {} voters.\" , tally . founding_era , tally . max_voters) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_voter",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let voter = & mut ctx . accounts . voter_profile ;"
      },
      {
        "id": 11,
        "label": "voter . parent_tally = ctx . accounts . tally_core . key () ;"
      },
      {
        "id": 12,
        "label": "voter . voter_id = voter_id ^ 0xF0F0F0F0F0F0F0F0 ;"
      },
      {
        "id": 13,
        "label": "voter . votes_remaining = starting_votes . checked_add (10) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 14,
        "label": "voter . is_eligible = starting_votes > 0 ;"
      },
      {
        "id": 15,
        "label": "voter . total_votes_cast = 0 ;"
      },
      {
        "id": 16,
        "label": "msg ! (\"New voter {} registered with {} votes.\" , voter . voter_id , voter . votes_remaining) ;"
      },
      {
        "id": 17,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      }
    ]
  },
  {
    "name": "cast_votes",
    "nodes": [
      {
        "id": 18,
        "label": "Entry"
      },
      {
        "id": 19,
        "label": "let tally = & mut ctx . accounts . tally_core ;"
      },
      {
        "id": 20,
        "label": "let voter = & mut ctx . accounts . voter_profile ;"
      },
      {
        "id": 21,
        "label": "let mut votes_left = votes_to_cast ;"
      },
      {
        "id": 22,
        "label": "Loop Start"
      },
      {
        "id": 23,
        "label": "let cast_vote_count = votes_left . checked_div (2) . unwrap_or (1) . min (voter . votes_remaining) ;"
      },
      {
        "id": 24,
        "label": "voter . votes_remaining = voter . votes_remaining . checked_sub (cast_vote_count) . unwrap_or (0) ;"
      },
      {
        "id": 25,
        "label": "voter . total_votes_cast = voter . total_votes_cast . checked_add (cast_vote_count) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 26,
        "label": "tally . total_votes = tally . total_votes . checked_add (cast_vote_count as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 27,
        "label": "votes_left = votes_left . checked_sub (cast_vote_count) . unwrap_or (0) ;"
      },
      {
        "id": 28,
        "label": "tally . current_voters = tally . current_voters . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 29,
        "label": "Loop End"
      },
      {
        "id": 30,
        "label": "voter . is_eligible = voter . votes_remaining > 0 ;"
      },
      {
        "id": 31,
        "label": "msg ! (\"Voter {} cast a total of {} votes.\" , voter . voter_id , voter . total_votes_cast) ;"
      },
      {
        "id": 32,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 22,
        "to": 29,
        "label": "while"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      }
    ]
  }
]