[
  {
    "name": "initialize_reputation_board",
    "inputs": [
      "ctx: Context < InitializeReputationBoard >",
      "board_name: String",
      "initial_user_count: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 2,
        "label": "board . governor = ctx . accounts . governor . key () ;"
      },
      {
        "id": 3,
        "label": "board . board_name = board_name ;"
      },
      {
        "id": 4,
        "label": "board . last_update_count = 0 ;"
      },
      {
        "id": 5,
        "label": "board . total_users = initial_user_count . checked_add (50) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 6,
        "label": "board . board_state = BoardState :: Running ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Reputation Board '{}' initialized with {} users. State is Running.\" , board . board_name , board . total_users) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: board"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "create_user_profile",
    "inputs": [
      "ctx: Context < CreateUserProfile >",
      "username: String",
      "trust_score: u32"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let profile = & mut ctx . accounts . user_profile ;"
      },
      {
        "id": 11,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 12,
        "label": "if board . board_state == BoardState :: Running { profile . trust_score = trust_score ; } else { profile . trust_score = 0 ; msg ! (\"Board is not running. User profile created with trust score 0.\") ; }"
      },
      {
        "id": 13,
        "label": "profile . trust_score = trust_score ;"
      },
      {
        "id": 14,
        "label": "profile . trust_score = 0 ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"Board is not running. User profile created with trust score 0.\") ;"
      },
      {
        "id": 16,
        "label": "profile . board = board . key () ;"
      },
      {
        "id": 17,
        "label": "profile . user = ctx . accounts . user . key () ;"
      },
      {
        "id": 18,
        "label": "profile . username = username ;"
      },
      {
        "id": 19,
        "label": "profile . last_score_change_count = trust_score as u64 ;"
      },
      {
        "id": 20,
        "label": "profile . profile_status = ProfileStatus :: Active ;"
      },
      {
        "id": 21,
        "label": "board . total_users = board . total_users . saturating_add (1) ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"User profile for '{}' created with a starting score of {}.\" , profile . username , profile . trust_score) ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: profile"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: board"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: profile"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: profile"
      },
      {
        "from": 11,
        "to": 21,
        "label": "data_dep: board"
      },
      {
        "from": 11,
        "to": 21,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "transfer_trust_score",
    "inputs": [
      "ctx: Context < TransferTrustScore >",
      "score_to_transfer: u32"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let target_profile = & mut ctx . accounts . target_profile ;"
      },
      {
        "id": 26,
        "label": "let source_profile = & mut ctx . accounts . source_profile ;"
      },
      {
        "id": 27,
        "label": "if source_profile . trust_score >= score_to_transfer { target_profile . trust_score = target_profile . trust_score . saturating_add (score_to_transfer) ; source_profile . trust_score = source_profile . trust_score . checked_sub (score_to_transfer) . unwrap_or (0) ; msg ! (\"Transferred {} score from source to target.\" , score_to_transfer) ; if target_profile . trust_score > 10000 { target_profile . profile_status = ProfileStatus :: Maxed ; msg ! (\"Target profile achieved maximum reputation!\") ; } } else { msg ! (\"Insufficient score to transfer. Transfer failed.\") ; }"
      },
      {
        "id": 28,
        "label": "target_profile . trust_score = target_profile . trust_score . saturating_add (score_to_transfer) ;"
      },
      {
        "id": 29,
        "label": "source_profile . trust_score = source_profile . trust_score . checked_sub (score_to_transfer) . unwrap_or (0) ;"
      },
      {
        "id": 30,
        "label": "msg ! (\"Transferred {} score from source to target.\" , score_to_transfer) ;"
      },
      {
        "id": 31,
        "label": "if target_profile . trust_score > 10000 { target_profile . profile_status = ProfileStatus :: Maxed ; msg ! (\"Target profile achieved maximum reputation!\") ; }"
      },
      {
        "id": 32,
        "label": "target_profile . profile_status = ProfileStatus :: Maxed ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Target profile achieved maximum reputation!\") ;"
      },
      {
        "id": 34,
        "label": "msg ! (\"Insufficient score to transfer. Transfer failed.\") ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: target_profile"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: source_profile"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: source_profile"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: target_profile"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: source_profile"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: source_profile"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: target_profile"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: source_profile"
      },
      {
        "from": 26,
        "to": 29,
        "label": "data_dep: source_profile"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 32,
        "label": "data_dep: target_profile"
      }
    ]
  }
]