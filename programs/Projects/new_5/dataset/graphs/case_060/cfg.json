[
  {
    "name": "initialize_reputation_board",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 2,
        "label": "board . governor = ctx . accounts . governor . key () ;"
      },
      {
        "id": 3,
        "label": "board . board_name = board_name ;"
      },
      {
        "id": 4,
        "label": "board . last_update_count = 0 ;"
      },
      {
        "id": 5,
        "label": "board . total_users = initial_user_count . checked_add (50) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 6,
        "label": "board . board_state = BoardState :: Running ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Reputation Board '{}' initialized with {} users. State is Running.\" , board . board_name , board . total_users) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "create_user_profile",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let profile = & mut ctx . accounts . user_profile ;"
      },
      {
        "id": 11,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "board . board_state == BoardState :: Running"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "profile . trust_score = trust_score ;"
      },
      {
        "id": 17,
        "label": "False body"
      },
      {
        "id": 18,
        "label": "profile . trust_score = 0 ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Board is not running. User profile created with trust score 0.\") ;"
      },
      {
        "id": 20,
        "label": "merge"
      },
      {
        "id": 21,
        "label": "profile . board = board . key () ;"
      },
      {
        "id": 22,
        "label": "profile . user = ctx . accounts . user . key () ;"
      },
      {
        "id": 23,
        "label": "profile . username = username ;"
      },
      {
        "id": 24,
        "label": "profile . last_score_change_count = trust_score as u64 ;"
      },
      {
        "id": 25,
        "label": "profile . profile_status = ProfileStatus :: Active ;"
      },
      {
        "id": 26,
        "label": "board . total_users = board . total_users . saturating_add (1) ;"
      },
      {
        "id": 27,
        "label": "msg ! (\"User profile for '{}' created with a starting score of {}.\" , profile . username , profile . trust_score) ;"
      },
      {
        "id": 28,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 12,
        "to": 17,
        "label": "false"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 16,
        "to": 20,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      }
    ]
  },
  {
    "name": "transfer_trust_score",
    "nodes": [
      {
        "id": 29,
        "label": "Entry"
      },
      {
        "id": 30,
        "label": "let target_profile = & mut ctx . accounts . target_profile ;"
      },
      {
        "id": 31,
        "label": "let source_profile = & mut ctx . accounts . source_profile ;"
      },
      {
        "id": 32,
        "label": "if statement"
      },
      {
        "id": 33,
        "label": "predicate"
      },
      {
        "id": 34,
        "label": "source_profile . trust_score >= score_to_transfer"
      },
      {
        "id": 35,
        "label": "True body"
      },
      {
        "id": 36,
        "label": "target_profile . trust_score = target_profile . trust_score . saturating_add (score_to_transfer) ;"
      },
      {
        "id": 37,
        "label": "source_profile . trust_score = source_profile . trust_score . checked_sub (score_to_transfer) . unwrap_or (0) ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Transferred {} score from source to target.\" , score_to_transfer) ;"
      },
      {
        "id": 39,
        "label": "if statement"
      },
      {
        "id": 40,
        "label": "predicate"
      },
      {
        "id": 41,
        "label": "target_profile . trust_score > 10000"
      },
      {
        "id": 42,
        "label": "True body"
      },
      {
        "id": 43,
        "label": "target_profile . profile_status = ProfileStatus :: Maxed ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"Target profile achieved maximum reputation!\") ;"
      },
      {
        "id": 45,
        "label": "False body"
      },
      {
        "id": 46,
        "label": "No-op"
      },
      {
        "id": 47,
        "label": "merge"
      },
      {
        "id": 48,
        "label": "False body"
      },
      {
        "id": 49,
        "label": "msg ! (\"Insufficient score to transfer. Transfer failed.\") ;"
      },
      {
        "id": 50,
        "label": "merge"
      },
      {
        "id": 51,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "predicate"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 32,
        "to": 35,
        "label": "true"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "predicate"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 39,
        "to": 42,
        "label": "true"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 39,
        "to": 45,
        "label": "false"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 44,
        "to": 47,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 32,
        "to": 48,
        "label": "false"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 47,
        "to": 50,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      }
    ]
  }
]