[
  {
    "name": "setup_ledger_book",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < SetupLedgerBook >",
      "book_id: u64",
      "name: String"
    ],
    "attributes": [],
    "body": [
      "let book = & mut ctx . accounts . ledger_book ;",
      "book . owner = ctx . accounts . owner . key () ;",
      "book . book_id = book_id ;",
      "book . name = name ;",
      "book . transaction_count = 0 ;",
      "book . total_volume = 1000 ;",
      "book . ledger_status = LedgerStatus :: Open ;",
      "msg ! (\"Financial Ledger Book '{}' created with initial volume of 1000. Status is Open.\" , book . name) ;",
      "Ok (())"
    ]
  },
  {
    "name": "record_transaction",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < RecordTransaction >",
      "transaction_id: u64",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let transaction_record = & mut ctx . accounts . transaction_record ;",
      "let book = & mut ctx . accounts . ledger_book ;",
      "if book . ledger_status != LedgerStatus :: Open",
      "{",
      "return Err (error ! (FinancialError :: LedgerClosed)) ;",
      "}",
      "transaction_record . ledger_book = book . key () ;",
      "transaction_record . transaction_id = transaction_id ;",
      "transaction_record . sender = ctx . accounts . sender . key () ;",
      "transaction_record . receiver = ctx . accounts . receiver . key () ;",
      "transaction_record . amount = amount ;",
      "transaction_record . processing_status = ProcessingStatus :: Pending ;",
      "book . transaction_count = book . transaction_count . saturating_add (1) ;",
      "book . total_volume = book . total_volume . saturating_add (amount) ;",
      "msg ! (\"Transaction record {} logged with amount {}.\" , transaction_record . transaction_id , transaction_record . amount) ;",
      "Ok (())"
    ]
  },
  {
    "name": "process_multiple_transactions",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ProcessMultipleTransactions >"
    ],
    "attributes": [],
    "body": [
      "let first_record = & mut ctx . accounts . first_record ;",
      "let second_record = & mut ctx . accounts . second_record ;",
      "if first_record . processing_status != ProcessingStatus :: Pending || second_record . processing_status != ProcessingStatus :: Pending",
      "{",
      "return Err (error ! (FinancialError :: TransactionNotPending)) ;",
      "}",
      "let mut loop_count = 0 ;",
      "while loop_count < 2",
      "{",
      "if first_record . amount > second_record . amount",
      "{",
      "first_record . amount = first_record . amount . saturating_sub (10) ;",
      "second_record . amount = second_record . amount . saturating_add (20) ;",
      "msg ! (\"First record has larger amount, adjusting.\") ;",
      "} else",
      "{",
      "first_record . amount = first_record . amount . saturating_add (20) ;",
      "second_record . amount = second_record . amount . saturating_sub (10) ;",
      "msg ! (\"Second record has larger or equal amount, adjusting.\") ;",
      "} loop_count += 1 ;",
      "}",
      "if first_record . amount > 1000",
      "{",
      "first_record . processing_status = ProcessingStatus :: Processed ;",
      "msg ! (\"First record processed due to large amount.\") ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "SetupLedgerBook",
    "node_type": "struct",
    "fields": [
      {
        "name": "ledger_book",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 8 + 32 + 4 + 8 + 1)]",
        "field_type": "Account < 'info , LedgerBook >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "RecordTransaction",
    "node_type": "struct",
    "fields": [
      {
        "name": "ledger_book",
        "attribute": "# [account (mut , has_one = ledger_book)]",
        "field_type": "Account < 'info , LedgerBook >"
      },
      {
        "name": "transaction_record",
        "attribute": "# [account (init , payer = sender , space = 8 + 32 + 8 + 32 + 32 + 8 + 1)]",
        "field_type": "Account < 'info , TransactionRecord >"
      },
      {
        "name": "sender",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "receiver",
        "attribute": "# [doc = \" CHECK: This is the receiver of the transaction, not a signer.\"]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ProcessMultipleTransactions",
    "node_type": "struct",
    "fields": [
      {
        "name": "ledger_book",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , LedgerBook >"
      },
      {
        "name": "first_record",
        "attribute": "# [account (mut , has_one = ledger_book)]",
        "field_type": "Account < 'info , TransactionRecord >"
      },
      {
        "name": "second_record",
        "attribute": "# [account (mut , has_one = ledger_book)]",
        "field_type": "Account < 'info , TransactionRecord >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "LedgerBook",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "book_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "name",
        "attribute": null,
        "field_type": "String"
      },
      {
        "name": "transaction_count",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "total_volume",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "ledger_status",
        "attribute": null,
        "field_type": "LedgerStatus"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "TransactionRecord",
    "node_type": "struct",
    "fields": [
      {
        "name": "ledger_book",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "transaction_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "sender",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "receiver",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "amount",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "processing_status",
        "attribute": null,
        "field_type": "ProcessingStatus"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]