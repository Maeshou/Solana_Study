[
  {
    "name": "create_system",
    "inputs": [
      "ctx: Context < CreateSystem >",
      "system_id: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let system = & mut ctx . accounts . system ;"
      },
      {
        "id": 2,
        "label": "system . manager = ctx . accounts . manager . key () ;"
      },
      {
        "id": 3,
        "label": "system . system_id = system_id ;"
      },
      {
        "id": 4,
        "label": "system . vehicle_count = 0 ;"
      },
      {
        "id": 5,
        "label": "system . is_operational = TrafficSystemStatus :: Operational ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Traffic management system {} created.\" , system . system_id) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: system"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: system"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: system"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: system"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: system"
      }
    ]
  },
  {
    "name": "register_vehicle",
    "inputs": [
      "ctx: Context < RegisterVehicle >",
      "vehicle_id: u32",
      "route_code: u8"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let vehicle = & mut ctx . accounts . vehicle ;"
      },
      {
        "id": 10,
        "label": "let system = & mut ctx . accounts . system ;"
      },
      {
        "id": 11,
        "label": "if matches ! (system . is_operational , TrafficSystemStatus :: Operational) { vehicle . is_active = true ; if route_code == 1 { vehicle . current_route = Route :: City ; } else { vehicle . current_route = Route :: Highway ; } system . vehicle_count = system . vehicle_count . saturating_add (1) ; msg ! (\"Vehicle {} registered and assigned a route.\" , vehicle . vehicle_id) ; } else { vehicle . is_active = false ; vehicle . current_route = Route :: City ; msg ! (\"System is not operational. Vehicle {} registered as inactive.\" , vehicle . vehicle_id) ; }"
      },
      {
        "id": 12,
        "label": "vehicle . is_active = true ;"
      },
      {
        "id": 13,
        "label": "if route_code == 1 { vehicle . current_route = Route :: City ; } else { vehicle . current_route = Route :: Highway ; }"
      },
      {
        "id": 14,
        "label": "vehicle . current_route = Route :: City ;"
      },
      {
        "id": 15,
        "label": "vehicle . current_route = Route :: Highway ;"
      },
      {
        "id": 16,
        "label": "system . vehicle_count = system . vehicle_count . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Vehicle {} registered and assigned a route.\" , vehicle . vehicle_id) ;"
      },
      {
        "id": 18,
        "label": "vehicle . is_active = false ;"
      },
      {
        "id": 19,
        "label": "vehicle . current_route = Route :: City ;"
      },
      {
        "id": 20,
        "label": "msg ! (\"System is not operational. Vehicle {} registered as inactive.\" , vehicle . vehicle_id) ;"
      },
      {
        "id": 21,
        "label": "vehicle . system = system . key () ;"
      },
      {
        "id": 22,
        "label": "vehicle . vehicle_id = vehicle_id ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: vehicle"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: system"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vehicle"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: system"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: system"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: vehicle"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: system"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: system"
      },
      {
        "from": 9,
        "to": 18,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 19,
        "label": "data_dep: vehicle"
      },
      {
        "from": 9,
        "to": 21,
        "label": "data_dep: vehicle"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: system"
      },
      {
        "from": 9,
        "to": 22,
        "label": "data_dep: vehicle"
      }
    ]
  },
  {
    "name": "update_routes",
    "inputs": [
      "ctx: Context < UpdateRoutes >",
      "new_route_code: u8"
    ],
    "nodes": [
      {
        "id": 24,
        "label": "Entry"
      },
      {
        "id": 25,
        "label": "let vehicle1 = & mut ctx . accounts . vehicle1 ;"
      },
      {
        "id": 26,
        "label": "let vehicle2 = & mut ctx . accounts . vehicle2 ;"
      },
      {
        "id": 27,
        "label": "if matches ! (vehicle1 . is_active , true) && matches ! (vehicle2 . is_active , true) { if new_route_code == 1 { vehicle1 . current_route = Route :: City ; vehicle2 . current_route = Route :: City ; } else { vehicle1 . current_route = Route :: Highway ; vehicle2 . current_route = Route :: Highway ; } msg ! (\"Routes updated for both vehicles.\") ; } else { msg ! (\"One or both vehicles are inactive.\") ; }"
      },
      {
        "id": 28,
        "label": "if new_route_code == 1 { vehicle1 . current_route = Route :: City ; vehicle2 . current_route = Route :: City ; } else { vehicle1 . current_route = Route :: Highway ; vehicle2 . current_route = Route :: Highway ; }"
      },
      {
        "id": 29,
        "label": "vehicle1 . current_route = Route :: City ;"
      },
      {
        "id": 30,
        "label": "vehicle2 . current_route = Route :: City ;"
      },
      {
        "id": 31,
        "label": "vehicle1 . current_route = Route :: Highway ;"
      },
      {
        "id": 32,
        "label": "vehicle2 . current_route = Route :: Highway ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Routes updated for both vehicles.\") ;"
      },
      {
        "id": 34,
        "label": "msg ! (\"One or both vehicles are inactive.\") ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 25,
        "to": 25,
        "label": "def: vehicle1"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: vehicle2"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: vehicle2"
      },
      {
        "from": 25,
        "to": 27,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: vehicle2"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: vehicle2"
      },
      {
        "from": 25,
        "to": 28,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: vehicle2"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 30,
        "label": "data_dep: vehicle2"
      },
      {
        "from": 25,
        "to": 31,
        "label": "data_dep: vehicle1"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: vehicle2"
      }
    ]
  }
]