[
  {
    "name": "create_farm",
    "inputs": [
      "ctx: Context < CreateFarm >",
      "farm_id: u64",
      "initial_size: u32"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let farm = & mut ctx . accounts . farm ;"
      },
      {
        "id": 2,
        "label": "farm . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "farm . farm_id = farm_id ;"
      },
      {
        "id": 4,
        "label": "farm . size_acres = initial_size ;"
      },
      {
        "id": 5,
        "label": "farm . crop_count = 0 ;"
      },
      {
        "id": 6,
        "label": "farm . farm_status = FarmStatus :: Active ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Farm {} created with {} acres.\" , farm . farm_id , farm . size_acres) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: farm"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: farm"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: farm"
      }
    ]
  },
  {
    "name": "plant_crops",
    "inputs": [
      "ctx: Context < PlantCrops >",
      "crop_id: u32",
      "seed_amount: u32",
      "crop_type_code: u8"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let crop = & mut ctx . accounts . crop ;"
      },
      {
        "id": 11,
        "label": "let farm = & mut ctx . accounts . farm ;"
      },
      {
        "id": 12,
        "label": "if matches ! (farm . farm_status , FarmStatus :: Active) { if seed_amount > 100 { crop . is_harvestable = true ; } else { crop . is_harvestable = false ; } } else { crop . is_harvestable = false ; msg ! (\"Farm is inactive, crops cannot be planted.\") ; }"
      },
      {
        "id": 13,
        "label": "if seed_amount > 100 { crop . is_harvestable = true ; } else { crop . is_harvestable = false ; }"
      },
      {
        "id": 14,
        "label": "crop . is_harvestable = true ;"
      },
      {
        "id": 15,
        "label": "crop . is_harvestable = false ;"
      },
      {
        "id": 16,
        "label": "crop . is_harvestable = false ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Farm is inactive, crops cannot be planted.\") ;"
      },
      {
        "id": 18,
        "label": "crop . farm = farm . key () ;"
      },
      {
        "id": 19,
        "label": "crop . crop_id = crop_id ;"
      },
      {
        "id": 20,
        "label": "crop . seeds_planted = seed_amount ;"
      },
      {
        "id": 21,
        "label": "if crop_type_code == 1 { crop . crop_type = CropType :: Wheat ; } else { crop . crop_type = CropType :: Corn ; }"
      },
      {
        "id": 22,
        "label": "crop . crop_type = CropType :: Wheat ;"
      },
      {
        "id": 23,
        "label": "crop . crop_type = CropType :: Corn ;"
      },
      {
        "id": 24,
        "label": "farm . crop_count = farm . crop_count . saturating_add (1) ;"
      },
      {
        "id": 25,
        "label": "msg ! (\"{} {:?} planted on farm {}.\" , crop . seeds_planted , crop . crop_type , farm . farm_id) ;"
      },
      {
        "id": 26,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: crop"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: farm"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 12,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 13,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: crop"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: farm"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 20,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 21,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 22,
        "label": "data_dep: crop"
      },
      {
        "from": 10,
        "to": 23,
        "label": "data_dep: crop"
      },
      {
        "from": 11,
        "to": 24,
        "label": "data_dep: farm"
      },
      {
        "from": 11,
        "to": 24,
        "label": "data_dep: farm"
      }
    ]
  },
  {
    "name": "harvest_and_sell",
    "inputs": [
      "ctx: Context < HarvestAndSell >",
      "harvest_amount: u32"
    ],
    "nodes": [
      {
        "id": 27,
        "label": "Entry"
      },
      {
        "id": 28,
        "label": "let crop1 = & mut ctx . accounts . crop1 ;"
      },
      {
        "id": 29,
        "label": "let crop2 = & mut ctx . accounts . crop2 ;"
      },
      {
        "id": 30,
        "label": "if crop1 . is_harvestable && crop2 . is_harvestable { crop1 . seeds_planted = crop1 . seeds_planted . checked_sub (harvest_amount) . unwrap_or (0) ; crop2 . seeds_planted = crop2 . seeds_planted . checked_add (harvest_amount) . unwrap_or (u32 :: MAX) ; if crop1 . seeds_planted < 50 { crop1 . is_harvestable = false ; } msg ! (\"Harvested {} from crop1, sold as part of crop2.\" , harvest_amount) ; } else { msg ! (\"One or both crops are not harvestable.\") ; }"
      },
      {
        "id": 31,
        "label": "crop1 . seeds_planted = crop1 . seeds_planted . checked_sub (harvest_amount) . unwrap_or (0) ;"
      },
      {
        "id": 32,
        "label": "crop2 . seeds_planted = crop2 . seeds_planted . checked_add (harvest_amount) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 33,
        "label": "if crop1 . seeds_planted < 50 { crop1 . is_harvestable = false ; }"
      },
      {
        "id": 34,
        "label": "crop1 . is_harvestable = false ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Harvested {} from crop1, sold as part of crop2.\" , harvest_amount) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"One or both crops are not harvestable.\") ;"
      },
      {
        "id": 37,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 28,
        "label": "def: crop1"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: crop2"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: crop1"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: crop2"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: crop1"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: crop2"
      },
      {
        "from": 29,
        "to": 30,
        "label": "data_dep: crop2"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 31,
        "label": "data_dep: crop1"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: crop2"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: crop2"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 33,
        "label": "data_dep: crop1"
      },
      {
        "from": 28,
        "to": 34,
        "label": "data_dep: crop1"
      }
    ]
  }
]