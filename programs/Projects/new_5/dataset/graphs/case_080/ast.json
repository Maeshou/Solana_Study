[
  {
    "name": "init_engine",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitEngine >",
      "engine_id: u64",
      "base_energy: u64"
    ],
    "attributes": [],
    "body": [
      "let engine = & mut ctx . accounts . engine_core ;",
      "engine . engine_id = engine_id . rotate_left (4) ;",
      "engine . energy_level = base_energy . checked_mul (100) . unwrap_or (u64 :: MAX) ;",
      "engine . fragment_count = 0 ;",
      "engine . is_operational = engine . energy_level > 1000 ;",
      "msg ! (\"Void Engine {} activated with {} energy.\" , engine . engine_id , engine . energy_level) ;",
      "Ok (())"
    ]
  },
  {
    "name": "init_fragment",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitFragment >",
      "fragment_id: u64",
      "efficiency: u32"
    ],
    "attributes": [],
    "body": [
      "let fragment = & mut ctx . accounts . fragment_data ;",
      "fragment . parent_engine = ctx . accounts . engine_core . key () ;",
      "fragment . fragment_id = fragment_id . checked_add (1000) . unwrap_or (u64 :: MAX) ;",
      "fragment . efficiency = efficiency . checked_div (2) . unwrap_or (1) ;",
      "fragment . is_active = true ;",
      "fragment . processed_count = 0 ;",
      "msg ! (\"New fragment {} linked with efficiency {}.\" , fragment . fragment_id , fragment . efficiency) ;",
      "Ok (())"
    ]
  },
  {
    "name": "process_fragments",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ProcessFragments >",
      "cycles: u32"
    ],
    "attributes": [],
    "body": [
      "let engine = & mut ctx . accounts . engine_core ;",
      "let fragment1 = & mut ctx . accounts . fragment1 ;",
      "let fragment2 = & mut ctx . accounts . fragment2 ;",
      "let mut loop_counter = cycles ;",
      "while loop_counter > 0",
      "{",
      "let energy_gain1 = (fragment1 . efficiency as u64) . checked_mul (10) . unwrap_or (u64 :: MAX) ;",
      "engine . energy_level = engine . energy_level . checked_add (energy_gain1) . unwrap_or (u64 :: MAX) ;",
      "fragment1 . processed_count = fragment1 . processed_count . checked_add (1) . unwrap_or (u32 :: MAX) ;",
      "fragment1 . is_active = fragment1 . efficiency > 50 && engine . is_operational ;",
      "let energy_gain2 = (fragment2 . efficiency as u64) . checked_mul (20) . unwrap_or (u64 :: MAX) ;",
      "engine . energy_level = engine . energy_level . checked_add (energy_gain2) . unwrap_or (u64 :: MAX) ;",
      "fragment2 . processed_count = fragment2 . processed_count . checked_add (1) . unwrap_or (u32 :: MAX) ;",
      "fragment2 . is_active = fragment2 . efficiency > 60 && engine . is_operational ;",
      "engine . is_operational = engine . energy_level > 500 && (fragment1 . is_active || fragment2 . is_active) ;",
      "loop_counter = loop_counter . checked_sub (1) . unwrap_or (0) ;",
      "}",
      "msg ! (\"Engine processed fragments for {} cycles. Current energy level is {}.\" , cycles , engine . energy_level) ;",
      "Ok (())"
    ]
  },
  {
    "name": "InitEngine",
    "node_type": "struct",
    "fields": [
      {
        "name": "engine_core",
        "attribute": "# [account (init , payer = signer , space = 8 + 8 + 8 + 4 + 1)]",
        "field_type": "Account < 'info , EngineCore >"
      },
      {
        "name": "signer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitFragment",
    "node_type": "struct",
    "fields": [
      {
        "name": "fragment_data",
        "attribute": "# [account (init , payer = signer , space = 8 + 32 + 8 + 4 + 1 + 4)]",
        "field_type": "Account < 'info , FragmentData >"
      },
      {
        "name": "engine_core",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , EngineCore >"
      },
      {
        "name": "signer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ProcessFragments",
    "node_type": "struct",
    "fields": [
      {
        "name": "engine_core",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , EngineCore >"
      },
      {
        "name": "fragment1",
        "attribute": "# [account (mut , has_one = parent_engine)]",
        "field_type": "Account < 'info , FragmentData >"
      },
      {
        "name": "fragment2",
        "attribute": "# [account (mut , has_one = parent_engine)]",
        "field_type": "Account < 'info , FragmentData >"
      },
      {
        "name": "signer",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "EngineCore",
    "node_type": "struct",
    "fields": [
      {
        "name": "engine_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "energy_level",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "fragment_count",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "is_operational",
        "attribute": null,
        "field_type": "bool"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "FragmentData",
    "node_type": "struct",
    "fields": [
      {
        "name": "parent_engine",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "fragment_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "efficiency",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "is_active",
        "attribute": null,
        "field_type": "bool"
      },
      {
        "name": "processed_count",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]