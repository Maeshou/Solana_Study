[
  {
    "name": "create_network",
    "inputs": [
      "ctx: Context < CreateNetwork >",
      "network_id: u64",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let network = & mut ctx . accounts . social_network ;"
      },
      {
        "id": 2,
        "label": "network . founder = ctx . accounts . founder . key () ;"
      },
      {
        "id": 3,
        "label": "network . network_id = network_id ;"
      },
      {
        "id": 4,
        "label": "network . name = name ;"
      },
      {
        "id": 5,
        "label": "network . user_count = 0 ;"
      },
      {
        "id": 6,
        "label": "network . network_status = NetworkStatus :: Public ;"
      },
      {
        "id": 7,
        "label": "network . last_post_timestamp = Clock :: get () ? . unix_timestamp ;"
      },
      {
        "id": 8,
        "label": "msg ! (\"Social Network '{}' created. Status is Public.\" , network . name) ;"
      },
      {
        "id": 9,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: network"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: network"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: network"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: network"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: network"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: network"
      },
      {
        "from": 1,
        "to": 7,
        "label": "data_dep: network"
      }
    ]
  },
  {
    "name": "create_user_profile",
    "inputs": [
      "ctx: Context < CreateUserProfile >",
      "user_id: u64",
      "username: String"
    ],
    "nodes": [
      {
        "id": 10,
        "label": "Entry"
      },
      {
        "id": 11,
        "label": "let user_profile = & mut ctx . accounts . user_profile ;"
      },
      {
        "id": 12,
        "label": "let network = & mut ctx . accounts . social_network ;"
      },
      {
        "id": 13,
        "label": "if network . network_status != NetworkStatus :: Public { return Err (error ! (SocialNetworkError :: NetworkUnavailable)) ; }"
      },
      {
        "id": 14,
        "label": "return Err (error ! (SocialNetworkError :: NetworkUnavailable)) ;"
      },
      {
        "id": 15,
        "label": "user_profile . network = network . key () ;"
      },
      {
        "id": 16,
        "label": "user_profile . user_id = user_id ;"
      },
      {
        "id": 17,
        "label": "user_profile . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 18,
        "label": "user_profile . username = username ;"
      },
      {
        "id": 19,
        "label": "user_profile . followers = 0 ;"
      },
      {
        "id": 20,
        "label": "user_profile . posts_count = 0 ;"
      },
      {
        "id": 21,
        "label": "user_profile . profile_status = ProfileStatus :: Active ;"
      },
      {
        "id": 22,
        "label": "network . user_count = network . user_count . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "msg ! (\"User profile '{}' created. Status is Active.\" , user_profile . username) ;"
      },
      {
        "id": 24,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 11,
        "to": 11,
        "label": "def: user_profile"
      },
      {
        "from": 12,
        "to": 12,
        "label": "def: network"
      },
      {
        "from": 12,
        "to": 13,
        "label": "data_dep: network"
      },
      {
        "from": 11,
        "to": 15,
        "label": "data_dep: user_profile"
      },
      {
        "from": 12,
        "to": 15,
        "label": "data_dep: network"
      },
      {
        "from": 11,
        "to": 16,
        "label": "data_dep: user_profile"
      },
      {
        "from": 11,
        "to": 17,
        "label": "data_dep: user_profile"
      },
      {
        "from": 11,
        "to": 18,
        "label": "data_dep: user_profile"
      },
      {
        "from": 11,
        "to": 19,
        "label": "data_dep: user_profile"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: user_profile"
      },
      {
        "from": 11,
        "to": 21,
        "label": "data_dep: user_profile"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: network"
      },
      {
        "from": 12,
        "to": 22,
        "label": "data_dep: network"
      }
    ]
  },
  {
    "name": "interact_with_posts",
    "inputs": [
      "ctx: Context < InteractWithPosts >",
      "engagement_score: u32"
    ],
    "nodes": [
      {
        "id": 25,
        "label": "Entry"
      },
      {
        "id": 26,
        "label": "let poster_profile = & mut ctx . accounts . poster_profile ;"
      },
      {
        "id": 27,
        "label": "let target_profile = & mut ctx . accounts . target_profile ;"
      },
      {
        "id": 28,
        "label": "if poster_profile . profile_status != ProfileStatus :: Active || target_profile . profile_status != ProfileStatus :: Active { return Err (error ! (SocialNetworkError :: ProfileInactive)) ; }"
      },
      {
        "id": 29,
        "label": "return Err (error ! (SocialNetworkError :: ProfileInactive)) ;"
      },
      {
        "id": 30,
        "label": "let mut loop_counter = 0 ;"
      },
      {
        "id": 31,
        "label": "let bonus_points = engagement_score / 10 ;"
      },
      {
        "id": 32,
        "label": "while loop_counter < 3 { poster_profile . posts_count = poster_profile . posts_count . saturating_add (1) ; poster_profile . followers = poster_profile . followers . saturating_add (bonus_points) ; target_profile . followers = target_profile . followers . saturating_add (1) ; msg ! (\"Interaction processed. Poster posts count: {}, Target followers: {}.\" , poster_profile . posts_count , target_profile . followers) ; loop_counter += 1 ; }"
      },
      {
        "id": 33,
        "label": "poster_profile . posts_count = poster_profile . posts_count . saturating_add (1) ;"
      },
      {
        "id": 34,
        "label": "poster_profile . followers = poster_profile . followers . saturating_add (bonus_points) ;"
      },
      {
        "id": 35,
        "label": "target_profile . followers = target_profile . followers . saturating_add (1) ;"
      },
      {
        "id": 36,
        "label": "msg ! (\"Interaction processed. Poster posts count: {}, Target followers: {}.\" , poster_profile . posts_count , target_profile . followers) ;"
      },
      {
        "id": 37,
        "label": "loop_counter += 1 ;"
      },
      {
        "id": 38,
        "label": "if poster_profile . followers > 1000 { poster_profile . posts_count = poster_profile . posts_count . saturating_add (10) ; msg ! (\"Poster reached 1000 followers, gaining 10 bonus posts.\") ; }"
      },
      {
        "id": 39,
        "label": "poster_profile . posts_count = poster_profile . posts_count . saturating_add (10) ;"
      },
      {
        "id": 40,
        "label": "msg ! (\"Poster reached 1000 followers, gaining 10 bonus posts.\") ;"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 26,
        "to": 26,
        "label": "def: poster_profile"
      },
      {
        "from": 27,
        "to": 27,
        "label": "def: target_profile"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 27,
        "to": 28,
        "label": "data_dep: target_profile"
      },
      {
        "from": 30,
        "to": 30,
        "label": "def: loop_counter"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: bonus_points"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: loop_counter"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 32,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 31,
        "to": 32,
        "label": "data_dep: bonus_points"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: target_profile"
      },
      {
        "from": 27,
        "to": 32,
        "label": "data_dep: target_profile"
      },
      {
        "from": 30,
        "to": 32,
        "label": "data_dep: loop_counter"
      },
      {
        "from": 26,
        "to": 33,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 33,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 34,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: bonus_points"
      },
      {
        "from": 27,
        "to": 35,
        "label": "data_dep: target_profile"
      },
      {
        "from": 27,
        "to": 35,
        "label": "data_dep: target_profile"
      },
      {
        "from": 30,
        "to": 37,
        "label": "data_dep: loop_counter"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 38,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 39,
        "label": "data_dep: poster_profile"
      },
      {
        "from": 26,
        "to": 39,
        "label": "data_dep: poster_profile"
      }
    ]
  }
]