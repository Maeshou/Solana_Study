[
  {
    "name": "init_board",
    "inputs": [
      "ctx: Context < InitBoardQB >",
      "seed: u16"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "b . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "b . seed = seed ;"
      },
      {
        "id": 4,
        "label": "b . roll = 1 ;"
      },
      {
        "id": 5,
        "label": "b . posts = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: b"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: b"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: b"
      }
    ]
  },
  {
    "name": "init_quest",
    "inputs": [
      "ctx: Context < InitQuest >",
      "qid: u32"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let q = & mut ctx . accounts . quest ;"
      },
      {
        "id": 9,
        "label": "q . parent = ctx . accounts . board . key () ;"
      },
      {
        "id": 10,
        "label": "q . qid = qid ;"
      },
      {
        "id": 11,
        "label": "q . phase = Open ;"
      },
      {
        "id": 12,
        "label": "q . reward = 100 ;"
      },
      {
        "id": 13,
        "label": "q . fail = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: q"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: q"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: q"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: q"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: q"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: q"
      }
    ]
  },
  {
    "name": "advance_pair",
    "inputs": [
      "ctx: Context < AdvancePair >",
      "step: u32"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let b = & mut ctx . accounts . board ;"
      },
      {
        "id": 17,
        "label": "let qa = & mut ctx . accounts . qa ;"
      },
      {
        "id": 18,
        "label": "let qb = & mut ctx . accounts . qb ;"
      },
      {
        "id": 19,
        "label": "for r in 0 .. 6 { let add = ((b . seed as u32 + step + r) % 23) as u32 ; b . roll = b . roll . saturating_add (add) ; b . posts = b . posts . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "let add = ((b . seed as u32 + step + r) % 23) as u32 ;"
      },
      {
        "id": 21,
        "label": "b . roll = b . roll . saturating_add (add) ;"
      },
      {
        "id": 22,
        "label": "b . posts = b . posts . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "if (qa . qid ^ b . roll) & 1 == 0 { qa . phase = Running ; qa . reward = qa . reward . saturating_add (step / 2 + 7) ; b . roll = b . roll . saturating_add ((qa . reward & 63) as u32) ; qa . fail = qa . fail . saturating_sub (qa . fail . min (1)) ; msg ! (\"QA running; reward={}, roll={}\" , qa . reward , b . roll) ; } else { qa . phase = Failed ; qa . reward = qa . reward / 2 + 11 ; qa . fail = qa . fail . saturating_add (2) ; b . roll = b . roll / 2 + 5 ; msg ! (\"QA failed; reward={}, fail={}\" , qa . reward , qa . fail) ; }"
      },
      {
        "id": 24,
        "label": "qa . phase = Running ;"
      },
      {
        "id": 25,
        "label": "qa . reward = qa . reward . saturating_add (step / 2 + 7) ;"
      },
      {
        "id": 26,
        "label": "b . roll = b . roll . saturating_add ((qa . reward & 63) as u32) ;"
      },
      {
        "id": 27,
        "label": "qa . fail = qa . fail . saturating_sub (qa . fail . min (1)) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"QA running; reward={}, roll={}\" , qa . reward , b . roll) ;"
      },
      {
        "id": 29,
        "label": "qa . phase = Failed ;"
      },
      {
        "id": 30,
        "label": "qa . reward = qa . reward / 2 + 11 ;"
      },
      {
        "id": 31,
        "label": "qa . fail = qa . fail . saturating_add (2) ;"
      },
      {
        "id": 32,
        "label": "b . roll = b . roll / 2 + 5 ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"QA failed; reward={}, fail={}\" , qa . reward , qa . fail) ;"
      },
      {
        "id": 34,
        "label": "for _ in 0 .. 3 { if (qb . reward + b . roll) & 3 == 0 { qb . phase = Running ; qb . reward = qb . reward . saturating_add ((b . seed as u32 % 17) + 3) ; b . posts = b . posts . saturating_add (2) ; msg ! (\"QB bonus; reward={}, posts={}\" , qb . reward , b . posts) ; } else { qb . phase = Open ; qb . reward = qb . reward . saturating_sub (qb . reward . min (9)) ; b . roll = b . roll ^ (qb . qid . rotate_left (5)) ; msg ! (\"QB rest; reward={}, roll={}\" , qb . reward , b . roll) ; } }"
      },
      {
        "id": 35,
        "label": "if (qb . reward + b . roll) & 3 == 0 { qb . phase = Running ; qb . reward = qb . reward . saturating_add ((b . seed as u32 % 17) + 3) ; b . posts = b . posts . saturating_add (2) ; msg ! (\"QB bonus; reward={}, posts={}\" , qb . reward , b . posts) ; } else { qb . phase = Open ; qb . reward = qb . reward . saturating_sub (qb . reward . min (9)) ; b . roll = b . roll ^ (qb . qid . rotate_left (5)) ; msg ! (\"QB rest; reward={}, roll={}\" , qb . reward , b . roll) ; }"
      },
      {
        "id": 36,
        "label": "qb . phase = Running ;"
      },
      {
        "id": 37,
        "label": "qb . reward = qb . reward . saturating_add ((b . seed as u32 % 17) + 3) ;"
      },
      {
        "id": 38,
        "label": "b . posts = b . posts . saturating_add (2) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"QB bonus; reward={}, posts={}\" , qb . reward , b . posts) ;"
      },
      {
        "id": 40,
        "label": "qb . phase = Open ;"
      },
      {
        "id": 41,
        "label": "qb . reward = qb . reward . saturating_sub (qb . reward . min (9)) ;"
      },
      {
        "id": 42,
        "label": "b . roll = b . roll ^ (qb . qid . rotate_left (5)) ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"QB rest; reward={}, roll={}\" , qb . reward , b . roll) ;"
      },
      {
        "id": 44,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: b"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: qa"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: qb"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: add"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: b"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: add"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: qa"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: qa"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: b"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 27,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: qa"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: qa"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 36,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 37,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: qb"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: qb"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: b"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: b"
      },
      {
        "from": 18,
        "to": 42,
        "label": "data_dep: qb"
      }
    ]
  }
]