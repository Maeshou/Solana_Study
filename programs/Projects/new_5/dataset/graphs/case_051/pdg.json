[
  {
    "name": "initialize_reputation_board",
    "inputs": [
      "ctx: Context < InitializeReputationBoard >",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 2,
        "label": "board . governor = ctx . accounts . governor . key () ;"
      },
      {
        "id": 3,
        "label": "board . board_name = name ;"
      },
      {
        "id": 4,
        "label": "board . last_update_count = 0 ;"
      },
      {
        "id": 5,
        "label": "board . total_users = 0 ;"
      },
      {
        "id": 6,
        "label": "board . board_state = BoardState :: Running ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Reputation Board '{}' initialized. State is Running.\" , board . board_name) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: board"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 6,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "create_user_profile",
    "inputs": [
      "ctx: Context < CreateUserProfile >",
      "username: String"
    ],
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let profile = & mut ctx . accounts . user_profile ;"
      },
      {
        "id": 11,
        "label": "let board = & mut ctx . accounts . reputation_board ;"
      },
      {
        "id": 12,
        "label": "if board . board_state != BoardState :: Running { return Err (error ! (ReputationError :: BoardPaused)) ; }"
      },
      {
        "id": 13,
        "label": "return Err (error ! (ReputationError :: BoardPaused)) ;"
      },
      {
        "id": 14,
        "label": "profile . board = board . key () ;"
      },
      {
        "id": 15,
        "label": "profile . user = ctx . accounts . user . key () ;"
      },
      {
        "id": 16,
        "label": "profile . username = username ;"
      },
      {
        "id": 17,
        "label": "profile . trust_score = 500 ;"
      },
      {
        "id": 18,
        "label": "profile . last_score_change_count = 0 ;"
      },
      {
        "id": 19,
        "label": "profile . profile_status = ProfileStatus :: Active ;"
      },
      {
        "id": 20,
        "label": "board . total_users = board . total_users . saturating_add (1) ;"
      },
      {
        "id": 21,
        "label": "msg ! (\"User profile for '{}' created with a starting score of 500.\" , profile . username) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 10,
        "to": 10,
        "label": "def: profile"
      },
      {
        "from": 11,
        "to": 11,
        "label": "def: board"
      },
      {
        "from": 11,
        "to": 12,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 14,
        "label": "data_dep: profile"
      },
      {
        "from": 11,
        "to": 14,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 15,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 17,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 18,
        "label": "data_dep: profile"
      },
      {
        "from": 10,
        "to": 19,
        "label": "data_dep: profile"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: board"
      },
      {
        "from": 11,
        "to": 20,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "transfer_trust_score",
    "inputs": [
      "ctx: Context < TransferTrustScore >",
      "score_to_transfer: u32"
    ],
    "nodes": [
      {
        "id": 23,
        "label": "Entry"
      },
      {
        "id": 24,
        "label": "let target_profile = & mut ctx . accounts . target_profile ;"
      },
      {
        "id": 25,
        "label": "let source_profile = & mut ctx . accounts . source_profile ;"
      },
      {
        "id": 26,
        "label": "if target_profile . profile_status != ProfileStatus :: Active || source_profile . profile_status != ProfileStatus :: Active { return Err (error ! (ReputationError :: ProfileInactive)) ; }"
      },
      {
        "id": 27,
        "label": "return Err (error ! (ReputationError :: ProfileInactive)) ;"
      },
      {
        "id": 28,
        "label": "let mut final_transfer = score_to_transfer ;"
      },
      {
        "id": 29,
        "label": "if source_profile . trust_score < final_transfer { final_transfer = source_profile . trust_score ; }"
      },
      {
        "id": 30,
        "label": "final_transfer = source_profile . trust_score ;"
      },
      {
        "id": 31,
        "label": "let mut a_factor = 1 ;"
      },
      {
        "id": 32,
        "label": "let mut b_factor = 1 ;"
      },
      {
        "id": 33,
        "label": "if target_profile . trust_score > 1000 { a_factor = 2 ; msg ! (\"Target is high-reputation, receives double bonus.\") ; }"
      },
      {
        "id": 34,
        "label": "a_factor = 2 ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Target is high-reputation, receives double bonus.\") ;"
      },
      {
        "id": 36,
        "label": "if source_profile . trust_score < 100 { b_factor = 0 ; msg ! (\"Source is low-reputation, cannot transfer.\") ; }"
      },
      {
        "id": 37,
        "label": "b_factor = 0 ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Source is low-reputation, cannot transfer.\") ;"
      },
      {
        "id": 39,
        "label": "target_profile . trust_score = target_profile . trust_score . saturating_add (final_transfer . checked_mul (a_factor) . unwrap_or (u32 :: MAX)) ;"
      },
      {
        "id": 40,
        "label": "source_profile . trust_score = source_profile . trust_score . checked_sub (final_transfer . checked_mul (b_factor) . unwrap_or (0)) . unwrap_or (0) ;"
      },
      {
        "id": 41,
        "label": "if target_profile . trust_score > 10000 { target_profile . profile_status = ProfileStatus :: Maxed ; msg ! (\"Target profile achieved maximum reputation!\") ; } else { msg ! (\"Target score is now {}.\" , target_profile . trust_score) ; }"
      },
      {
        "id": 42,
        "label": "target_profile . profile_status = ProfileStatus :: Maxed ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"Target profile achieved maximum reputation!\") ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"Target score is now {}.\" , target_profile . trust_score) ;"
      },
      {
        "id": 45,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 24,
        "to": 24,
        "label": "def: target_profile"
      },
      {
        "from": 25,
        "to": 25,
        "label": "def: source_profile"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: target_profile"
      },
      {
        "from": 25,
        "to": 26,
        "label": "data_dep: source_profile"
      },
      {
        "from": 28,
        "to": 28,
        "label": "def: final_transfer"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: source_profile"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: final_transfer"
      },
      {
        "from": 28,
        "to": 29,
        "label": "data_dep: final_transfer"
      },
      {
        "from": 25,
        "to": 29,
        "label": "data_dep: source_profile"
      },
      {
        "from": 28,
        "to": 30,
        "label": "data_dep: final_transfer"
      },
      {
        "from": 25,
        "to": 30,
        "label": "data_dep: source_profile"
      },
      {
        "from": 31,
        "to": 31,
        "label": "def: a_factor"
      },
      {
        "from": 32,
        "to": 32,
        "label": "def: b_factor"
      },
      {
        "from": 24,
        "to": 33,
        "label": "data_dep: target_profile"
      },
      {
        "from": 31,
        "to": 33,
        "label": "data_dep: a_factor"
      },
      {
        "from": 31,
        "to": 34,
        "label": "data_dep: a_factor"
      },
      {
        "from": 25,
        "to": 36,
        "label": "data_dep: source_profile"
      },
      {
        "from": 32,
        "to": 36,
        "label": "data_dep: b_factor"
      },
      {
        "from": 32,
        "to": 37,
        "label": "data_dep: b_factor"
      },
      {
        "from": 24,
        "to": 39,
        "label": "data_dep: target_profile"
      },
      {
        "from": 24,
        "to": 39,
        "label": "data_dep: target_profile"
      },
      {
        "from": 28,
        "to": 39,
        "label": "data_dep: final_transfer"
      },
      {
        "from": 31,
        "to": 39,
        "label": "data_dep: a_factor"
      },
      {
        "from": 25,
        "to": 40,
        "label": "data_dep: source_profile"
      },
      {
        "from": 25,
        "to": 40,
        "label": "data_dep: source_profile"
      },
      {
        "from": 28,
        "to": 40,
        "label": "data_dep: final_transfer"
      },
      {
        "from": 32,
        "to": 40,
        "label": "data_dep: b_factor"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: target_profile"
      },
      {
        "from": 24,
        "to": 41,
        "label": "data_dep: target_profile"
      },
      {
        "from": 24,
        "to": 42,
        "label": "data_dep: target_profile"
      }
    ]
  }
]