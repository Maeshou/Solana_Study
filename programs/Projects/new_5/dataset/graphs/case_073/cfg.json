[
  {
    "name": "init_federation",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let federation = & mut ctx . accounts . federation_core ;"
      },
      {
        "id": 2,
        "label": "federation . founding_era = founding_era . rotate_left (8) ;"
      },
      {
        "id": 3,
        "label": "federation . max_members = member_slots . checked_add (100) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 4,
        "label": "federation . current_members = founding_era . checked_rem (10) . unwrap_or (0) as u32 ;"
      },
      {
        "id": 5,
        "label": "federation . federation_status = FederationStatus :: Forming ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Galactic Federation established in era {} with {} member slots.\" , federation . founding_era , federation . max_members) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_member",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let member_profile = & mut ctx . accounts . member_profile ;"
      },
      {
        "id": 10,
        "label": "member_profile . parent_federation = ctx . accounts . federation_core . key () ;"
      },
      {
        "id": 11,
        "label": "member_profile . member_id = member_id ^ 0xF0F0F0F0F0F0F0F0 ;"
      },
      {
        "id": 12,
        "label": "member_profile . security_clearance = security_clearance . checked_add (10) . unwrap_or (u8 :: MAX) ;"
      },
      {
        "id": 13,
        "label": "member_profile . is_active = (security_clearance % 2) == 1 ;"
      },
      {
        "id": 14,
        "label": "member_profile . contribution_score = member_id . checked_rem (1000) . unwrap_or (0) ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"New member {} joined with clearance {}.\" , member_profile . member_id , member_profile . security_clearance) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      }
    ]
  },
  {
    "name": "process_task_assignments",
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let federation = & mut ctx . accounts . federation_core ;"
      },
      {
        "id": 19,
        "label": "let commander_profile = & mut ctx . accounts . commander_profile ;"
      },
      {
        "id": 20,
        "label": "let field_agent_profile = & mut ctx . accounts . field_agent_profile ;"
      },
      {
        "id": 21,
        "label": "let mut total_score_added = 0u64 ;"
      },
      {
        "id": 22,
        "label": "Loop Start"
      },
      {
        "id": 23,
        "label": "if statement"
      },
      {
        "id": 24,
        "label": "predicate"
      },
      {
        "id": 25,
        "label": "commander_profile . is_active"
      },
      {
        "id": 26,
        "label": "True body"
      },
      {
        "id": 27,
        "label": "let score_gain = (task_difficulty as u64) . checked_add (i as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 28,
        "label": "commander_profile . contribution_score = commander_profile . contribution_score . checked_add (score_gain) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 29,
        "label": "federation . current_members = federation . current_members . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 30,
        "label": "federation . founding_era = federation . founding_era . checked_add (100) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 31,
        "label": "total_score_added = total_score_added . checked_add (score_gain) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 32,
        "label": "msg ! (\"Commander task processed, score increased by {}.\" , score_gain) ;"
      },
      {
        "id": 33,
        "label": "False body"
      },
      {
        "id": 34,
        "label": "let reactivation_cost = (task_difficulty as u64) . checked_mul (2) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 35,
        "label": "commander_profile . is_active = commander_profile . security_clearance > 50 ;"
      },
      {
        "id": 36,
        "label": "commander_profile . contribution_score = commander_profile . contribution_score . checked_sub (reactivation_cost) . unwrap_or (0) ;"
      },
      {
        "id": 37,
        "label": "federation . current_members = federation . current_members . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 38,
        "label": "federation . founding_era = federation . founding_era . checked_add (50) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"Commander reactivated at a cost of {} points.\" , reactivation_cost) ;"
      },
      {
        "id": 40,
        "label": "merge"
      },
      {
        "id": 41,
        "label": "if statement"
      },
      {
        "id": 42,
        "label": "predicate"
      },
      {
        "id": 43,
        "label": "field_agent_profile . is_active"
      },
      {
        "id": 44,
        "label": "True body"
      },
      {
        "id": 45,
        "label": "let score_gain = (task_difficulty as u64) . checked_mul (i as u64) . unwrap_or (0) ;"
      },
      {
        "id": 46,
        "label": "field_agent_profile . contribution_score = field_agent_profile . contribution_score . checked_add (score_gain) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 47,
        "label": "federation . current_members = federation . current_members . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 48,
        "label": "federation . founding_era = federation . founding_era . checked_add (120) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 49,
        "label": "total_score_added = total_score_added . checked_add (score_gain) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 50,
        "label": "msg ! (\"Field Agent task processed, score increased by {}.\" , score_gain) ;"
      },
      {
        "id": 51,
        "label": "False body"
      },
      {
        "id": 52,
        "label": "let reactivation_cost = (task_difficulty as u64) . checked_mul (3) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 53,
        "label": "field_agent_profile . is_active = field_agent_profile . security_clearance > 60 ;"
      },
      {
        "id": 54,
        "label": "field_agent_profile . contribution_score = field_agent_profile . contribution_score . checked_sub (reactivation_cost) . unwrap_or (0) ;"
      },
      {
        "id": 55,
        "label": "federation . current_members = federation . current_members . checked_add (1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 56,
        "label": "federation . founding_era = federation . founding_era . checked_add (60) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 57,
        "label": "msg ! (\"Field Agent reactivated at a cost of {} points.\" , reactivation_cost) ;"
      },
      {
        "id": 58,
        "label": "merge"
      },
      {
        "id": 59,
        "label": "Loop End"
      },
      {
        "id": 60,
        "label": "msg ! (\"Total contribution score added this round: {}\" , total_score_added) ;"
      },
      {
        "id": 61,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "predicate"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 23,
        "to": 26,
        "label": "true"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 23,
        "to": 33,
        "label": "false"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 32,
        "to": 40,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "predicate"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 41,
        "to": 44,
        "label": "true"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 41,
        "to": 51,
        "label": "false"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 50,
        "to": 58,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 22,
        "to": 59,
        "label": "for"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      }
    ]
  }
]