[
  {
    "name": "init_quest_board",
    "inputs": [
      "ctx: Context < InitQuestBoard >",
      "name: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "board . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "board . name = name ;"
      },
      {
        "id": 4,
        "label": "board . total_quests = 0 ;"
      },
      {
        "id": 5,
        "label": "board . is_open = true ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Quest board '{}' initialized.\" , board . name) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: board"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: board"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "init_quest",
    "inputs": [
      "ctx: Context < InitQuest >",
      "quest_id: u32",
      "difficulty: u8",
      "reward_amount: u64"
    ],
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let quest = & mut ctx . accounts . quest ;"
      },
      {
        "id": 10,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 11,
        "label": "quest . quest_board = board . key () ;"
      },
      {
        "id": 12,
        "label": "quest . quest_id = quest_id ;"
      },
      {
        "id": 13,
        "label": "quest . difficulty = difficulty ;"
      },
      {
        "id": 14,
        "label": "quest . reward_amount = reward_amount ;"
      },
      {
        "id": 15,
        "label": "quest . is_completed = false ;"
      },
      {
        "id": 16,
        "label": "board . total_quests = board . total_quests . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Quest {} added to board {}.\" , quest . quest_id , board . name) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 9,
        "label": "def: quest"
      },
      {
        "from": 10,
        "to": 10,
        "label": "def: board"
      },
      {
        "from": 9,
        "to": 11,
        "label": "data_dep: quest"
      },
      {
        "from": 10,
        "to": 11,
        "label": "data_dep: board"
      },
      {
        "from": 9,
        "to": 12,
        "label": "data_dep: quest"
      },
      {
        "from": 9,
        "to": 13,
        "label": "data_dep: quest"
      },
      {
        "from": 9,
        "to": 14,
        "label": "data_dep: quest"
      },
      {
        "from": 9,
        "to": 15,
        "label": "data_dep: quest"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: board"
      },
      {
        "from": 10,
        "to": 16,
        "label": "data_dep: board"
      }
    ]
  },
  {
    "name": "complete_quests",
    "inputs": [
      "ctx: Context < CompleteQuests >",
      "scores: Vec < u8 >"
    ],
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let quest_a = & mut ctx . accounts . quest_a ;"
      },
      {
        "id": 21,
        "label": "let quest_b = & mut ctx . accounts . quest_b ;"
      },
      {
        "id": 22,
        "label": "if ! ctx . accounts . board . is_open { return Err (ErrorCode :: BoardClosed . into ()) ; }"
      },
      {
        "id": 23,
        "label": "return Err (ErrorCode :: BoardClosed . into ()) ;"
      },
      {
        "id": 24,
        "label": "let mut points_a : u64 = 0 ;"
      },
      {
        "id": 25,
        "label": "let mut points_b : u64 = 0 ;"
      },
      {
        "id": 26,
        "label": "let mut score_sum = 0 ;"
      },
      {
        "id": 27,
        "label": "for score in scores . iter () { score_sum = score_sum . saturating_add (* score) ; let success_factor = if * score > 80 { 1.5 } else { 1.0 } ; if quest_a . difficulty > quest_b . difficulty { points_a = points_a . saturating_add ((quest_a . reward_amount as f64 * success_factor) as u64) ; points_b = points_b . saturating_add (quest_b . reward_amount . saturating_sub (10)) ; msg ! (\"Quest A is harder, giving it bonus points.\") ; } else { points_b = points_b . saturating_add ((quest_b . reward_amount as f64 * success_factor) as u64) ; points_a = points_a . saturating_add (quest_a . reward_amount . saturating_sub (10)) ; msg ! (\"Quest B is harder, giving it bonus points.\") ; } }"
      },
      {
        "id": 28,
        "label": "score_sum = score_sum . saturating_add (* score) ;"
      },
      {
        "id": 29,
        "label": "let success_factor = if * score > 80 { 1.5 } else { 1.0 } ;"
      },
      {
        "id": 30,
        "label": "1.5"
      },
      {
        "id": 31,
        "label": "1.0"
      },
      {
        "id": 32,
        "label": "if quest_a . difficulty > quest_b . difficulty { points_a = points_a . saturating_add ((quest_a . reward_amount as f64 * success_factor) as u64) ; points_b = points_b . saturating_add (quest_b . reward_amount . saturating_sub (10)) ; msg ! (\"Quest A is harder, giving it bonus points.\") ; } else { points_b = points_b . saturating_add ((quest_b . reward_amount as f64 * success_factor) as u64) ; points_a = points_a . saturating_add (quest_a . reward_amount . saturating_sub (10)) ; msg ! (\"Quest B is harder, giving it bonus points.\") ; }"
      },
      {
        "id": 33,
        "label": "points_a = points_a . saturating_add ((quest_a . reward_amount as f64 * success_factor) as u64) ;"
      },
      {
        "id": 34,
        "label": "points_b = points_b . saturating_add (quest_b . reward_amount . saturating_sub (10)) ;"
      },
      {
        "id": 35,
        "label": "msg ! (\"Quest A is harder, giving it bonus points.\") ;"
      },
      {
        "id": 36,
        "label": "points_b = points_b . saturating_add ((quest_b . reward_amount as f64 * success_factor) as u64) ;"
      },
      {
        "id": 37,
        "label": "points_a = points_a . saturating_add (quest_a . reward_amount . saturating_sub (10)) ;"
      },
      {
        "id": 38,
        "label": "msg ! (\"Quest B is harder, giving it bonus points.\") ;"
      },
      {
        "id": 39,
        "label": "if score_sum > 200 { quest_a . is_completed = true ; quest_b . is_completed = true ; quest_a . reward_amount = quest_a . reward_amount . saturating_add (points_a) ; quest_b . reward_amount = quest_b . reward_amount . saturating_add (points_b) ; msg ! (\"Both quests completed! Final rewards: A: {}, B: {}\" , quest_a . reward_amount , quest_b . reward_amount) ; } else { msg ! (\"Scores too low, neither quest completed.\") ; }"
      },
      {
        "id": 40,
        "label": "quest_a . is_completed = true ;"
      },
      {
        "id": 41,
        "label": "quest_b . is_completed = true ;"
      },
      {
        "id": 42,
        "label": "quest_a . reward_amount = quest_a . reward_amount . saturating_add (points_a) ;"
      },
      {
        "id": 43,
        "label": "quest_b . reward_amount = quest_b . reward_amount . saturating_add (points_b) ;"
      },
      {
        "id": 44,
        "label": "msg ! (\"Both quests completed! Final rewards: A: {}, B: {}\" , quest_a . reward_amount , quest_b . reward_amount) ;"
      },
      {
        "id": 45,
        "label": "msg ! (\"Scores too low, neither quest completed.\") ;"
      },
      {
        "id": 46,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 20,
        "label": "def: quest_a"
      },
      {
        "from": 21,
        "to": 21,
        "label": "def: quest_b"
      },
      {
        "from": 26,
        "to": 26,
        "label": "def: score_sum"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: score_sum"
      },
      {
        "from": 26,
        "to": 27,
        "label": "data_dep: score_sum"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: quest_b"
      },
      {
        "from": 21,
        "to": 27,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 27,
        "label": "data_dep: quest_a"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: score_sum"
      },
      {
        "from": 26,
        "to": 28,
        "label": "data_dep: score_sum"
      },
      {
        "from": 29,
        "to": 29,
        "label": "def: success_factor"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: quest_a"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: success_factor"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: quest_b"
      },
      {
        "from": 21,
        "to": 32,
        "label": "data_dep: quest_b"
      },
      {
        "from": 29,
        "to": 32,
        "label": "data_dep: success_factor"
      },
      {
        "from": 20,
        "to": 32,
        "label": "data_dep: quest_a"
      },
      {
        "from": 20,
        "to": 33,
        "label": "data_dep: quest_a"
      },
      {
        "from": 29,
        "to": 33,
        "label": "data_dep: success_factor"
      },
      {
        "from": 21,
        "to": 34,
        "label": "data_dep: quest_b"
      },
      {
        "from": 21,
        "to": 36,
        "label": "data_dep: quest_b"
      },
      {
        "from": 29,
        "to": 36,
        "label": "data_dep: success_factor"
      },
      {
        "from": 20,
        "to": 37,
        "label": "data_dep: quest_a"
      },
      {
        "from": 26,
        "to": 39,
        "label": "data_dep: score_sum"
      },
      {
        "from": 20,
        "to": 39,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 39,
        "label": "data_dep: quest_a"
      },
      {
        "from": 20,
        "to": 39,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: quest_b"
      },
      {
        "from": 21,
        "to": 39,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 40,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 41,
        "label": "data_dep: quest_b"
      },
      {
        "from": 20,
        "to": 42,
        "label": "data_dep: quest_a"
      },
      {
        "from": 20,
        "to": 42,
        "label": "data_dep: quest_a"
      },
      {
        "from": 21,
        "to": 43,
        "label": "data_dep: quest_b"
      },
      {
        "from": 21,
        "to": 43,
        "label": "data_dep: quest_b"
      }
    ]
  }
]