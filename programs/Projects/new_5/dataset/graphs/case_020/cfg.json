[
  {
    "name": "init_quest_board",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 2,
        "label": "board . admin = ctx . accounts . admin . key () ;"
      },
      {
        "id": 3,
        "label": "board . name = name ;"
      },
      {
        "id": 4,
        "label": "board . total_quests = 0 ;"
      },
      {
        "id": 5,
        "label": "board . is_open = true ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Quest board '{}' initialized.\" , board . name) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_quest",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let quest = & mut ctx . accounts . quest ;"
      },
      {
        "id": 10,
        "label": "let board = & mut ctx . accounts . board ;"
      },
      {
        "id": 11,
        "label": "quest . quest_board = board . key () ;"
      },
      {
        "id": 12,
        "label": "quest . quest_id = quest_id ;"
      },
      {
        "id": 13,
        "label": "quest . difficulty = difficulty ;"
      },
      {
        "id": 14,
        "label": "quest . reward_amount = reward_amount ;"
      },
      {
        "id": 15,
        "label": "quest . is_completed = false ;"
      },
      {
        "id": 16,
        "label": "board . total_quests = board . total_quests . saturating_add (1) ;"
      },
      {
        "id": 17,
        "label": "msg ! (\"Quest {} added to board {}.\" , quest . quest_id , board . name) ;"
      },
      {
        "id": 18,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      }
    ]
  },
  {
    "name": "complete_quests",
    "nodes": [
      {
        "id": 19,
        "label": "Entry"
      },
      {
        "id": 20,
        "label": "let quest_a = & mut ctx . accounts . quest_a ;"
      },
      {
        "id": 21,
        "label": "let quest_b = & mut ctx . accounts . quest_b ;"
      },
      {
        "id": 22,
        "label": "if statement"
      },
      {
        "id": 23,
        "label": "predicate"
      },
      {
        "id": 24,
        "label": "! ctx . accounts . board . is_open"
      },
      {
        "id": 25,
        "label": "True body"
      },
      {
        "id": 26,
        "label": "return Err (ErrorCode :: BoardClosed . into ()) ;"
      },
      {
        "id": 27,
        "label": "False body"
      },
      {
        "id": 28,
        "label": "No-op"
      },
      {
        "id": 29,
        "label": "merge"
      },
      {
        "id": 30,
        "label": "let mut points_a : u64 = 0 ;"
      },
      {
        "id": 31,
        "label": "let mut points_b : u64 = 0 ;"
      },
      {
        "id": 32,
        "label": "let mut score_sum = 0 ;"
      },
      {
        "id": 33,
        "label": "Loop Start"
      },
      {
        "id": 34,
        "label": "score_sum = score_sum . saturating_add (* score) ;"
      },
      {
        "id": 35,
        "label": "let success_factor = if * score > 80 { 1.5 } else { 1.0 } ;"
      },
      {
        "id": 36,
        "label": "if statement"
      },
      {
        "id": 37,
        "label": "predicate"
      },
      {
        "id": 38,
        "label": "quest_a . difficulty > quest_b . difficulty"
      },
      {
        "id": 39,
        "label": "True body"
      },
      {
        "id": 40,
        "label": "points_a = points_a . saturating_add ((quest_a . reward_amount as f64 * success_factor) as u64) ;"
      },
      {
        "id": 41,
        "label": "points_b = points_b . saturating_add (quest_b . reward_amount . saturating_sub (10)) ;"
      },
      {
        "id": 42,
        "label": "msg ! (\"Quest A is harder, giving it bonus points.\") ;"
      },
      {
        "id": 43,
        "label": "False body"
      },
      {
        "id": 44,
        "label": "points_b = points_b . saturating_add ((quest_b . reward_amount as f64 * success_factor) as u64) ;"
      },
      {
        "id": 45,
        "label": "points_a = points_a . saturating_add (quest_a . reward_amount . saturating_sub (10)) ;"
      },
      {
        "id": 46,
        "label": "msg ! (\"Quest B is harder, giving it bonus points.\") ;"
      },
      {
        "id": 47,
        "label": "merge"
      },
      {
        "id": 48,
        "label": "Loop End"
      },
      {
        "id": 49,
        "label": "if statement"
      },
      {
        "id": 50,
        "label": "predicate"
      },
      {
        "id": 51,
        "label": "score_sum > 200"
      },
      {
        "id": 52,
        "label": "True body"
      },
      {
        "id": 53,
        "label": "quest_a . is_completed = true ;"
      },
      {
        "id": 54,
        "label": "quest_b . is_completed = true ;"
      },
      {
        "id": 55,
        "label": "quest_a . reward_amount = quest_a . reward_amount . saturating_add (points_a) ;"
      },
      {
        "id": 56,
        "label": "quest_b . reward_amount = quest_b . reward_amount . saturating_add (points_b) ;"
      },
      {
        "id": 57,
        "label": "msg ! (\"Both quests completed! Final rewards: A: {}, B: {}\" , quest_a . reward_amount , quest_b . reward_amount) ;"
      },
      {
        "id": 58,
        "label": "False body"
      },
      {
        "id": 59,
        "label": "msg ! (\"Scores too low, neither quest completed.\") ;"
      },
      {
        "id": 60,
        "label": "merge"
      },
      {
        "id": 61,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "predicate"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 22,
        "to": 25,
        "label": "true"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 22,
        "to": 27,
        "label": "false"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 26,
        "to": 29,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "predicate"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 36,
        "to": 39,
        "label": "true"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 36,
        "to": 43,
        "label": "false"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 42,
        "to": 47,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 33,
        "to": 48,
        "label": "for"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "predicate"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 49,
        "to": 52,
        "label": "true"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 49,
        "to": 58,
        "label": "false"
      },
      {
        "from": 58,
        "to": 59,
        "label": "next"
      },
      {
        "from": 57,
        "to": 60,
        "label": "next"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      }
    ]
  }
]