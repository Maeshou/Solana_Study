[
  {
    "name": "init_guild",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let guild = & mut ctx . accounts . guild ;"
      },
      {
        "id": 2,
        "label": "guild . founder = ctx . accounts . founder . key () ;"
      },
      {
        "id": 3,
        "label": "guild . guild_id = guild_id ;"
      },
      {
        "id": 4,
        "label": "guild . name = name ;"
      },
      {
        "id": 5,
        "label": "guild . reputation = 0 ;"
      },
      {
        "id": 6,
        "label": "guild . member_count = 0 ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Guild '{}' initialized.\" , guild . name) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_member_profile",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let profile = & mut ctx . accounts . profile ;"
      },
      {
        "id": 11,
        "label": "let guild = & mut ctx . accounts . guild ;"
      },
      {
        "id": 12,
        "label": "profile . guild = guild . key () ;"
      },
      {
        "id": 13,
        "label": "profile . profile_id = profile_id ;"
      },
      {
        "id": 14,
        "label": "profile . player = ctx . accounts . player . key () ;"
      },
      {
        "id": 15,
        "label": "profile . personal_reputation = 0 ;"
      },
      {
        "id": 16,
        "label": "profile . is_verified = false ;"
      },
      {
        "id": 17,
        "label": "guild . member_count = guild . member_count . saturating_add (1) ;"
      },
      {
        "id": 18,
        "label": "msg ! (\"Member profile {} created for guild {}.\" , profile . profile_id , guild . name) ;"
      },
      {
        "id": 19,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      }
    ]
  },
  {
    "name": "update_reputation_profiles",
    "nodes": [
      {
        "id": 20,
        "label": "Entry"
      },
      {
        "id": 21,
        "label": "let profile_a = & mut ctx . accounts . profile_a ;"
      },
      {
        "id": 22,
        "label": "let profile_b = & mut ctx . accounts . profile_b ;"
      },
      {
        "id": 23,
        "label": "let mut a_final_score : i64 = profile_a . personal_reputation as i64 + score_diff ;"
      },
      {
        "id": 24,
        "label": "let mut b_final_score : i64 = profile_b . personal_reputation as i64 - score_diff ;"
      },
      {
        "id": 25,
        "label": "let mut loop_count = 0 ;"
      },
      {
        "id": 26,
        "label": "Loop Start"
      },
      {
        "id": 27,
        "label": "if statement"
      },
      {
        "id": 28,
        "label": "predicate"
      },
      {
        "id": 29,
        "label": "a_final_score > b_final_score"
      },
      {
        "id": 30,
        "label": "True body"
      },
      {
        "id": 31,
        "label": "a_final_score = a_final_score . saturating_add (100) ;"
      },
      {
        "id": 32,
        "label": "b_final_score = b_final_score . saturating_sub (100) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"A has higher score, applying bonus to A and penalty to B.\") ;"
      },
      {
        "id": 34,
        "label": "False body"
      },
      {
        "id": 35,
        "label": "b_final_score = b_final_score . saturating_add (100) ;"
      },
      {
        "id": 36,
        "label": "a_final_score = a_final_score . saturating_sub (100) ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"B has higher or equal score, applying bonus to B and penalty to A.\") ;"
      },
      {
        "id": 38,
        "label": "merge"
      },
      {
        "id": 39,
        "label": "loop_count += 1 ;"
      },
      {
        "id": 40,
        "label": "Loop End"
      },
      {
        "id": 41,
        "label": "if statement"
      },
      {
        "id": 42,
        "label": "predicate"
      },
      {
        "id": 43,
        "label": "a_final_score > 0"
      },
      {
        "id": 44,
        "label": "True body"
      },
      {
        "id": 45,
        "label": "profile_a . personal_reputation = a_final_score as u64 ;"
      },
      {
        "id": 46,
        "label": "profile_a . is_verified = true ;"
      },
      {
        "id": 47,
        "label": "ctx . accounts . guild . reputation = ctx . accounts . guild . reputation . saturating_add (profile_a . personal_reputation) ;"
      },
      {
        "id": 48,
        "label": "False body"
      },
      {
        "id": 49,
        "label": "profile_a . personal_reputation = 0 ;"
      },
      {
        "id": 50,
        "label": "profile_a . is_verified = false ;"
      },
      {
        "id": 51,
        "label": "merge"
      },
      {
        "id": 52,
        "label": "if statement"
      },
      {
        "id": 53,
        "label": "predicate"
      },
      {
        "id": 54,
        "label": "b_final_score > 0"
      },
      {
        "id": 55,
        "label": "True body"
      },
      {
        "id": 56,
        "label": "profile_b . personal_reputation = b_final_score as u64 ;"
      },
      {
        "id": 57,
        "label": "profile_b . is_verified = true ;"
      },
      {
        "id": 58,
        "label": "ctx . accounts . guild . reputation = ctx . accounts . guild . reputation . saturating_add (profile_b . personal_reputation) ;"
      },
      {
        "id": 59,
        "label": "False body"
      },
      {
        "id": 60,
        "label": "profile_b . personal_reputation = 0 ;"
      },
      {
        "id": 61,
        "label": "profile_b . is_verified = false ;"
      },
      {
        "id": 62,
        "label": "merge"
      },
      {
        "id": 63,
        "label": "msg ! (\"Final reputation scores: A={}, B={}.\" , profile_a . personal_reputation , profile_b . personal_reputation) ;"
      },
      {
        "id": 64,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "predicate"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 27,
        "to": 30,
        "label": "true"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 27,
        "to": 34,
        "label": "false"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 33,
        "to": 38,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 26,
        "to": 40,
        "label": "while"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      },
      {
        "from": 41,
        "to": 42,
        "label": "predicate"
      },
      {
        "from": 42,
        "to": 43,
        "label": "next"
      },
      {
        "from": 41,
        "to": 44,
        "label": "true"
      },
      {
        "from": 44,
        "to": 45,
        "label": "next"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 41,
        "to": 48,
        "label": "false"
      },
      {
        "from": 48,
        "to": 49,
        "label": "next"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 47,
        "to": 51,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 51,
        "to": 52,
        "label": "next"
      },
      {
        "from": 52,
        "to": 53,
        "label": "predicate"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 52,
        "to": 55,
        "label": "true"
      },
      {
        "from": 55,
        "to": 56,
        "label": "next"
      },
      {
        "from": 56,
        "to": 57,
        "label": "next"
      },
      {
        "from": 57,
        "to": 58,
        "label": "next"
      },
      {
        "from": 52,
        "to": 59,
        "label": "false"
      },
      {
        "from": 59,
        "to": 60,
        "label": "next"
      },
      {
        "from": 60,
        "to": 61,
        "label": "next"
      },
      {
        "from": 58,
        "to": 62,
        "label": "next"
      },
      {
        "from": 61,
        "to": 62,
        "label": "next"
      },
      {
        "from": 62,
        "to": 63,
        "label": "next"
      },
      {
        "from": 63,
        "to": 64,
        "label": "next"
      }
    ]
  }
]