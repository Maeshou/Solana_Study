[
  {
    "name": "init_citadel",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitCitadel >",
      "core_id: u64",
      "defense_level: u32"
    ],
    "attributes": [],
    "body": [
      "let citadel = & mut ctx . accounts . citadel_core ;",
      "citadel . core_id = core_id . checked_add (100000) . unwrap_or (u64 :: MAX) ;",
      "citadel . defense_level = defense_level . checked_sub (100) . unwrap_or (0) ;",
      "citadel . resource_reserve = core_id . checked_mul (100) . unwrap_or (1) ;",
      "citadel . citadel_state = CitadelState :: Peaceful ;",
      "msg ! (\"Citadel core {} established with defense level {}.\" , citadel . core_id , citadel . defense_level) ;",
      "Ok (())"
    ]
  },
  {
    "name": "init_module",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitModule >",
      "module_id: u32",
      "module_type: u8"
    ],
    "attributes": [],
    "body": [
      "let module = & mut ctx . accounts . defense_module ;",
      "module . parent_citadel = ctx . accounts . citadel_core . key () ;",
      "module . module_id = module_id . checked_add (50) . unwrap_or (u32 :: MAX) ;",
      "module . module_type = module_type . rotate_right (3) ;",
      "module . is_online = (module_id % 2) != 0 ;",
      "module . energy_consumption = module_id . checked_rem (100) . unwrap_or (1) ;",
      "module . last_update_cycle = module_id . checked_rem (50) . unwrap_or (0) ;",
      "msg ! (\"Module {} installed with type {}.\" , module . module_id , module . module_type) ;",
      "Ok (())"
    ]
  },
  {
    "name": "activate_modules",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ActivateModules >",
      "energy_injection: u32"
    ],
    "attributes": [],
    "body": [
      "let citadel = & mut ctx . accounts . citadel_core ;",
      "let module_primary = & mut ctx . accounts . module_primary ;",
      "let module_secondary = & mut ctx . accounts . module_secondary ;",
      "let mut loop_counter = 0 ;",
      "while loop_counter < 10",
      "{",
      "if module_primary . is_online",
      "{",
      "let energy_use = energy_injection . checked_add (loop_counter) . unwrap_or (u32 :: MAX) ;",
      "citadel . resource_reserve = citadel . resource_reserve . checked_sub (energy_use as u64) . unwrap_or (0) ;",
      "module_primary . energy_consumption = module_primary . energy_consumption . checked_add (energy_use) . unwrap_or (u32 :: MAX) ;",
      "citadel . defense_level = citadel . defense_level . checked_add (energy_use) . unwrap_or (u32 :: MAX) ;",
      "module_primary . last_update_cycle = loop_counter ;",
      "msg ! (\"Primary module consumed",
      "{",
      "} energy, defense level increased.\" , energy_use) ;",
      "} else",
      "{",
      "let repair_cost = 1000u64 . checked_div (citadel . defense_level as u64) . unwrap_or (10) ;",
      "module_primary . is_online = (module_primary . module_type % 2) == 0 ;",
      "citadel . resource_reserve = citadel . resource_reserve . checked_sub (repair_cost) . unwrap_or (0) ;",
      "module_primary . energy_consumption = module_primary . energy_consumption . checked_div (2) . unwrap_or (0) ;",
      "module_primary . last_update_cycle = module_primary . last_update_cycle . checked_add (10) . unwrap_or (u32 :: MAX) ;",
      "msg ! (\"Primary module is brought back online at a cost of",
      "{",
      "}.\" , repair_cost) ;",
      "} if module_secondary . is_online",
      "{",
      "let energy_use = energy_injection . checked_mul (loop_counter . checked_add (1) . unwrap_or (1)) . unwrap_or (u32 :: MAX) ;",
      "citadel . resource_reserve = citadel . resource_reserve . checked_sub (energy_use as u64) . unwrap_or (0) ;",
      "module_secondary . energy_consumption = module_secondary . energy_consumption . checked_add (energy_use) . unwrap_or (u32 :: MAX) ;",
      "citadel . defense_level = citadel . defense_level . checked_add (energy_use) . unwrap_or (u32 :: MAX) ;",
      "module_secondary . last_update_cycle = loop_counter ;",
      "msg ! (\"Secondary module consumed",
      "{",
      "} energy, defense level increased.\" , energy_use) ;",
      "} else",
      "{",
      "let repair_cost = 2000u64 . checked_div (citadel . defense_level as u64) . unwrap_or (10) ;",
      "module_secondary . is_online = (module_secondary . module_type % 3) == 0 ;",
      "citadel . resource_reserve = citadel . resource_reserve . checked_sub (repair_cost) . unwrap_or (0) ;",
      "module_secondary . energy_consumption = module_secondary . energy_consumption . checked_div (3) . unwrap_or (0) ;",
      "module_secondary . last_update_cycle = module_secondary . last_update_cycle . checked_add (20) . unwrap_or (u32 :: MAX) ;",
      "msg ! (\"Secondary module is brought back online at a cost of",
      "{",
      "}.\" , repair_cost) ;",
      "} loop_counter = loop_counter . checked_add (1) . unwrap_or (u32 :: MAX) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitCitadel",
    "node_type": "struct",
    "fields": [
      {
        "name": "citadel_core",
        "attribute": "# [account (init , payer = signer , space = 8 + 8 + 4 + 8 + 4)]",
        "field_type": "Account < 'info , CitadelCore >"
      },
      {
        "name": "signer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitModule",
    "node_type": "struct",
    "fields": [
      {
        "name": "defense_module",
        "attribute": "# [account (init , payer = signer , space = 8 + 32 + 4 + 1 + 1 + 4 + 4)]",
        "field_type": "Account < 'info , DefenseModule >"
      },
      {
        "name": "citadel_core",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , CitadelCore >"
      },
      {
        "name": "signer",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ActivateModules",
    "node_type": "struct",
    "fields": [
      {
        "name": "citadel_core",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , CitadelCore >"
      },
      {
        "name": "module_primary",
        "attribute": "# [account (mut , has_one = parent_citadel)]",
        "field_type": "Account < 'info , DefenseModule >"
      },
      {
        "name": "module_secondary",
        "attribute": "# [account (mut , has_one = parent_citadel)]",
        "field_type": "Account < 'info , DefenseModule >"
      },
      {
        "name": "signer",
        "attribute": null,
        "field_type": "Signer < 'info >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "CitadelCore",
    "node_type": "struct",
    "fields": [
      {
        "name": "core_id",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "defense_level",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "resource_reserve",
        "attribute": null,
        "field_type": "u64"
      },
      {
        "name": "citadel_state",
        "attribute": null,
        "field_type": "CitadelState"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "DefenseModule",
    "node_type": "struct",
    "fields": [
      {
        "name": "parent_citadel",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "module_id",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "module_type",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "is_online",
        "attribute": null,
        "field_type": "bool"
      },
      {
        "name": "energy_consumption",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "last_update_cycle",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]