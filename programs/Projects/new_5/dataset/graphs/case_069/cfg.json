[
  {
    "name": "create_team",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let team = & mut ctx . accounts . team ;"
      },
      {
        "id": 2,
        "label": "team . leader = ctx . accounts . leader . key () ;"
      },
      {
        "id": 3,
        "label": "team . team_id = team_id ;"
      },
      {
        "id": 4,
        "label": "team . supply_count = supply_count ;"
      },
      {
        "id": 5,
        "label": "team . mission_count = 0 ;"
      },
      {
        "id": 6,
        "label": "team . is_active = true ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Disaster relief team {} created with {} supplies.\" , team . team_id , team . supply_count) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "start_mission",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let mission = & mut ctx . accounts . mission ;"
      },
      {
        "id": 11,
        "label": "let team = & mut ctx . accounts . team ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "matches ! (team . is_active , true)"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "mission . is_completed = false ;"
      },
      {
        "id": 17,
        "label": "if statement"
      },
      {
        "id": 18,
        "label": "predicate"
      },
      {
        "id": 19,
        "label": "priority_code == 1"
      },
      {
        "id": 20,
        "label": "True body"
      },
      {
        "id": 21,
        "label": "mission . priority = MissionPriority :: High ;"
      },
      {
        "id": 22,
        "label": "False body"
      },
      {
        "id": 23,
        "label": "mission . priority = MissionPriority :: Low ;"
      },
      {
        "id": 24,
        "label": "merge"
      },
      {
        "id": 25,
        "label": "team . mission_count = team . mission_count . saturating_add (1) ;"
      },
      {
        "id": 26,
        "label": "msg ! (\"Mission {} started with priority {:?}.\" , mission . mission_id , mission . priority) ;"
      },
      {
        "id": 27,
        "label": "False body"
      },
      {
        "id": 28,
        "label": "mission . is_completed = true ;"
      },
      {
        "id": 29,
        "label": "mission . priority = MissionPriority :: Low ;"
      },
      {
        "id": 30,
        "label": "msg ! (\"Team is inactive. Mission {} could not be started.\" , mission . mission_id) ;"
      },
      {
        "id": 31,
        "label": "merge"
      },
      {
        "id": 32,
        "label": "mission . team = team . key () ;"
      },
      {
        "id": 33,
        "label": "mission . mission_id = mission_id ;"
      },
      {
        "id": 34,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "predicate"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 17,
        "to": 20,
        "label": "true"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 17,
        "to": 22,
        "label": "false"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 21,
        "to": 24,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 12,
        "to": 27,
        "label": "false"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 26,
        "to": 31,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      }
    ]
  },
  {
    "name": "dispatch_supplies",
    "nodes": [
      {
        "id": 35,
        "label": "Entry"
      },
      {
        "id": 36,
        "label": "let team1 = & mut ctx . accounts . team1 ;"
      },
      {
        "id": 37,
        "label": "let team2 = & mut ctx . accounts . team2 ;"
      },
      {
        "id": 38,
        "label": "if statement"
      },
      {
        "id": 39,
        "label": "predicate"
      },
      {
        "id": 40,
        "label": "matches ! (team1 . is_active , true) && matches ! (team2 . is_active , true)"
      },
      {
        "id": 41,
        "label": "True body"
      },
      {
        "id": 42,
        "label": "if statement"
      },
      {
        "id": 43,
        "label": "predicate"
      },
      {
        "id": 44,
        "label": "team1 . supply_count >= supplies_to_dispatch"
      },
      {
        "id": 45,
        "label": "True body"
      },
      {
        "id": 46,
        "label": "team1 . supply_count = team1 . supply_count . checked_sub (supplies_to_dispatch) . unwrap_or (0) ;"
      },
      {
        "id": 47,
        "label": "team2 . supply_count = team2 . supply_count . checked_add (supplies_to_dispatch) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 48,
        "label": "msg ! (\"Dispatched {} supplies from team 1 to team 2.\" , supplies_to_dispatch) ;"
      },
      {
        "id": 49,
        "label": "False body"
      },
      {
        "id": 50,
        "label": "msg ! (\"Team 1 has insufficient supplies.\") ;"
      },
      {
        "id": 51,
        "label": "merge"
      },
      {
        "id": 52,
        "label": "False body"
      },
      {
        "id": 53,
        "label": "msg ! (\"One or both teams are inactive. No supplies dispatched.\") ;"
      },
      {
        "id": 54,
        "label": "merge"
      },
      {
        "id": 55,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 37,
        "to": 38,
        "label": "next"
      },
      {
        "from": 38,
        "to": 39,
        "label": "predicate"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 38,
        "to": 41,
        "label": "true"
      },
      {
        "from": 41,
        "to": 42,
        "label": "next"
      },
      {
        "from": 42,
        "to": 43,
        "label": "predicate"
      },
      {
        "from": 43,
        "to": 44,
        "label": "next"
      },
      {
        "from": 42,
        "to": 45,
        "label": "true"
      },
      {
        "from": 45,
        "to": 46,
        "label": "next"
      },
      {
        "from": 46,
        "to": 47,
        "label": "next"
      },
      {
        "from": 47,
        "to": 48,
        "label": "next"
      },
      {
        "from": 42,
        "to": 49,
        "label": "false"
      },
      {
        "from": 49,
        "to": 50,
        "label": "next"
      },
      {
        "from": 48,
        "to": 51,
        "label": "next"
      },
      {
        "from": 50,
        "to": 51,
        "label": "next"
      },
      {
        "from": 38,
        "to": 52,
        "label": "false"
      },
      {
        "from": 52,
        "to": 53,
        "label": "next"
      },
      {
        "from": 51,
        "to": 54,
        "label": "next"
      },
      {
        "from": 53,
        "to": 54,
        "label": "next"
      },
      {
        "from": 54,
        "to": 55,
        "label": "next"
      }
    ]
  }
]