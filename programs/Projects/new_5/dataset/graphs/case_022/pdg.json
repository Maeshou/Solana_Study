[
  {
    "name": "rent_nft",
    "inputs": [
      "ctx: Context < RentNft >",
      "duration_secs: i64",
      "memo: String"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let owner_acc = & mut ctx . accounts . owner_account ;"
      },
      {
        "id": 2,
        "label": "let renter_acc = & mut ctx . accounts . renter_account ;"
      },
      {
        "id": 3,
        "label": "let nft = & mut ctx . accounts . nft ;"
      },
      {
        "id": 4,
        "label": "let now = ctx . accounts . clock . unix_timestamp ;"
      },
      {
        "id": 5,
        "label": "owner_acc . rental_count = owner_acc . rental_count + 1 ;"
      },
      {
        "id": 6,
        "label": "renter_acc . rental_count = renter_acc . rental_count + 1 ;"
      },
      {
        "id": 7,
        "label": "nft . is_rented = true ;"
      },
      {
        "id": 8,
        "label": "nft . rental_start = now ;"
      },
      {
        "id": 9,
        "label": "nft . rental_end = now + duration_secs ;"
      },
      {
        "id": 10,
        "label": "owner_acc . last_action = now ;"
      },
      {
        "id": 11,
        "label": "renter_acc . last_action = now ;"
      },
      {
        "id": 12,
        "label": "owner_acc . notes = owner_acc . notes . clone () + \"|rent@\" + & now . to_string () + \":\" + & memo ;"
      },
      {
        "id": 13,
        "label": "renter_acc . notes = renter_acc . notes . clone () + \"|lend@\" + & now . to_string () + \":\" + & memo ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Rental started: NFT {} rented by {} from {} for {} seconds\" , nft . id , ctx . accounts . renter . key () , ctx . accounts . owner . key () , duration_secs) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: owner_acc"
      },
      {
        "from": 2,
        "to": 2,
        "label": "def: renter_acc"
      },
      {
        "from": 3,
        "to": 3,
        "label": "def: nft"
      },
      {
        "from": 4,
        "to": 4,
        "label": "def: now"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: owner_acc"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: owner_acc"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: renter_acc"
      },
      {
        "from": 2,
        "to": 6,
        "label": "data_dep: renter_acc"
      },
      {
        "from": 3,
        "to": 7,
        "label": "data_dep: nft"
      },
      {
        "from": 3,
        "to": 8,
        "label": "data_dep: nft"
      },
      {
        "from": 4,
        "to": 8,
        "label": "data_dep: now"
      },
      {
        "from": 3,
        "to": 9,
        "label": "data_dep: nft"
      },
      {
        "from": 4,
        "to": 9,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 10,
        "label": "data_dep: owner_acc"
      },
      {
        "from": 4,
        "to": 10,
        "label": "data_dep: now"
      },
      {
        "from": 2,
        "to": 11,
        "label": "data_dep: renter_acc"
      },
      {
        "from": 4,
        "to": 11,
        "label": "data_dep: now"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: owner_acc"
      },
      {
        "from": 1,
        "to": 12,
        "label": "data_dep: owner_acc"
      },
      {
        "from": 4,
        "to": 12,
        "label": "data_dep: now"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: renter_acc"
      },
      {
        "from": 2,
        "to": 13,
        "label": "data_dep: renter_acc"
      },
      {
        "from": 4,
        "to": 13,
        "label": "data_dep: now"
      }
    ]
  }
]