[
  {
    "name": "init_relay",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let relay = & mut ctx . accounts . relay_core ;"
      },
      {
        "id": 2,
        "label": "relay . relay_id = relay_id ^ 0xABCDABCDABCDABCD ;"
      },
      {
        "id": 3,
        "label": "relay . max_packets = max_packets . checked_add (10) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 4,
        "label": "relay . total_packets_sent = 0 ;"
      },
      {
        "id": 5,
        "label": "relay . is_online = true ;"
      },
      {
        "id": 6,
        "label": "msg ! (\"Quantum Relay {} online with capacity for {} packets.\" , relay . relay_id , relay . max_packets) ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      }
    ]
  },
  {
    "name": "init_packet",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let packet = & mut ctx . accounts . packet_data ;"
      },
      {
        "id": 10,
        "label": "packet . parent_relay = ctx . accounts . relay_core . key () ;"
      },
      {
        "id": 11,
        "label": "packet . packet_id = packet_id . checked_add (999) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 12,
        "label": "packet . priority = priority . checked_add (10) . unwrap_or (u8 :: MAX) ;"
      },
      {
        "id": 13,
        "label": "packet . is_sent = false ;"
      },
      {
        "id": 14,
        "label": "packet . retries = 0 ;"
      },
      {
        "id": 15,
        "label": "msg ! (\"New packet {} created with priority {}.\" , packet . packet_id , packet . priority) ;"
      },
      {
        "id": 16,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      }
    ]
  },
  {
    "name": "transmit_packets",
    "nodes": [
      {
        "id": 17,
        "label": "Entry"
      },
      {
        "id": 18,
        "label": "let relay = & mut ctx . accounts . relay_core ;"
      },
      {
        "id": 19,
        "label": "let packet1 = & mut ctx . accounts . packet1 ;"
      },
      {
        "id": 20,
        "label": "let packet2 = & mut ctx . accounts . packet2 ;"
      },
      {
        "id": 21,
        "label": "let mut loop_counter = cycles ;"
      },
      {
        "id": 22,
        "label": "Loop Start"
      },
      {
        "id": 23,
        "label": "let transmission_successful1 = packet1 . priority > 50 && relay . is_online ;"
      },
      {
        "id": 24,
        "label": "packet1 . is_sent = transmission_successful1 ;"
      },
      {
        "id": 25,
        "label": "packet1 . retries = (transmission_successful1 == false) as u8 ;"
      },
      {
        "id": 26,
        "label": "relay . total_packets_sent = relay . total_packets_sent . checked_add (transmission_successful1 as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 27,
        "label": "let transmission_successful2 = packet2 . priority > 60 && relay . is_online ;"
      },
      {
        "id": 28,
        "label": "packet2 . is_sent = transmission_successful2 ;"
      },
      {
        "id": 29,
        "label": "packet2 . retries = (transmission_successful2 == false) as u8 ;"
      },
      {
        "id": 30,
        "label": "relay . total_packets_sent = relay . total_packets_sent . checked_add (transmission_successful2 as u64) . unwrap_or (u64 :: MAX) ;"
      },
      {
        "id": 31,
        "label": "relay . is_online = (packet1 . retries + packet2 . retries) < 5 ;"
      },
      {
        "id": 32,
        "label": "loop_counter = loop_counter . checked_sub (1) . unwrap_or (0) ;"
      },
      {
        "id": 33,
        "label": "Loop End"
      },
      {
        "id": 34,
        "label": "msg ! (\"Transmitted packets for {} cycles. Total packets sent: {}.\" , cycles , relay . total_packets_sent) ;"
      },
      {
        "id": 35,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      },
      {
        "from": 27,
        "to": 28,
        "label": "next"
      },
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "next"
      },
      {
        "from": 22,
        "to": 33,
        "label": "while"
      },
      {
        "from": 33,
        "to": 34,
        "label": "next"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      }
    ]
  }
]