[
  {
    "name": "create_community",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let community = & mut ctx . accounts . community ;"
      },
      {
        "id": 2,
        "label": "community . founder = ctx . accounts . founder . key () ;"
      },
      {
        "id": 3,
        "label": "community . community_id = community_id ;"
      },
      {
        "id": 4,
        "label": "community . artist_count = 0 ;"
      },
      {
        "id": 5,
        "label": "community . max_artists = max_artists ;"
      },
      {
        "id": 6,
        "label": "community . is_moderated = false ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Artist community {} created.\" , community . community_id) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "register_artist",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let artist = & mut ctx . accounts . artist ;"
      },
      {
        "id": 11,
        "label": "let community = & mut ctx . accounts . community ;"
      },
      {
        "id": 12,
        "label": "if statement"
      },
      {
        "id": 13,
        "label": "predicate"
      },
      {
        "id": 14,
        "label": "community . artist_count < community . max_artists"
      },
      {
        "id": 15,
        "label": "True body"
      },
      {
        "id": 16,
        "label": "artist . current_rating = initial_rating ;"
      },
      {
        "id": 17,
        "label": "artist . is_active = ArtistStatus :: Active ;"
      },
      {
        "id": 18,
        "label": "community . artist_count = community . artist_count . saturating_add (1) ;"
      },
      {
        "id": 19,
        "label": "msg ! (\"Artist {} registered successfully.\" , artist . artist_id) ;"
      },
      {
        "id": 20,
        "label": "False body"
      },
      {
        "id": 21,
        "label": "artist . is_active = ArtistStatus :: Inactive ;"
      },
      {
        "id": 22,
        "label": "msg ! (\"Community is full. Artist {} registration failed.\" , artist . artist_id) ;"
      },
      {
        "id": 23,
        "label": "merge"
      },
      {
        "id": 24,
        "label": "artist . community = community . key () ;"
      },
      {
        "id": 25,
        "label": "artist . artist_id = artist_id ;"
      },
      {
        "id": 26,
        "label": "artist . wallet_address = ctx . accounts . artist_wallet . key () ;"
      },
      {
        "id": 27,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "predicate"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 12,
        "to": 15,
        "label": "true"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 12,
        "to": 20,
        "label": "false"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 19,
        "to": 23,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      },
      {
        "from": 23,
        "to": 24,
        "label": "next"
      },
      {
        "from": 24,
        "to": 25,
        "label": "next"
      },
      {
        "from": 25,
        "to": 26,
        "label": "next"
      },
      {
        "from": 26,
        "to": 27,
        "label": "next"
      }
    ]
  },
  {
    "name": "rate_artworks",
    "nodes": [
      {
        "id": 28,
        "label": "Entry"
      },
      {
        "id": 29,
        "label": "let artist1 = & mut ctx . accounts . artist1 ;"
      },
      {
        "id": 30,
        "label": "let artist2 = & mut ctx . accounts . artist2 ;"
      },
      {
        "id": 31,
        "label": "if statement"
      },
      {
        "id": 32,
        "label": "predicate"
      },
      {
        "id": 33,
        "label": "matches ! (artist1 . is_active , ArtistStatus :: Active) && matches ! (artist2 . is_active , ArtistStatus :: Active)"
      },
      {
        "id": 34,
        "label": "True body"
      },
      {
        "id": 35,
        "label": "artist1 . current_rating = artist1 . current_rating . saturating_add (rating) . min (255) ;"
      },
      {
        "id": 36,
        "label": "artist2 . current_rating = artist2 . current_rating . saturating_sub (rating) . max (0) ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"Artist 1 rating increased, artist 2 rating decreased.\") ;"
      },
      {
        "id": 38,
        "label": "False body"
      },
      {
        "id": 39,
        "label": "msg ! (\"One or both artists are not active.\") ;"
      },
      {
        "id": 40,
        "label": "merge"
      },
      {
        "id": 41,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 28,
        "to": 29,
        "label": "next"
      },
      {
        "from": 29,
        "to": 30,
        "label": "next"
      },
      {
        "from": 30,
        "to": 31,
        "label": "next"
      },
      {
        "from": 31,
        "to": 32,
        "label": "predicate"
      },
      {
        "from": 32,
        "to": 33,
        "label": "next"
      },
      {
        "from": 31,
        "to": 34,
        "label": "true"
      },
      {
        "from": 34,
        "to": 35,
        "label": "next"
      },
      {
        "from": 35,
        "to": 36,
        "label": "next"
      },
      {
        "from": 36,
        "to": 37,
        "label": "next"
      },
      {
        "from": 31,
        "to": 38,
        "label": "false"
      },
      {
        "from": 38,
        "to": 39,
        "label": "next"
      },
      {
        "from": 37,
        "to": 40,
        "label": "next"
      },
      {
        "from": 39,
        "to": 40,
        "label": "next"
      },
      {
        "from": 40,
        "to": 41,
        "label": "next"
      }
    ]
  }
]