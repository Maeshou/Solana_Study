[
  {
    "name": "init_moderator",
    "inputs": [
      "ctx: Context < InitModerator >",
      "level: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let m = & mut ctx . accounts . moderator ;"
      },
      {
        "id": 2,
        "label": "m . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "m . level = level ;"
      },
      {
        "id": 4,
        "label": "m . queue = 0 ;"
      },
      {
        "id": 5,
        "label": "m . bias = 50 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: m"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: m"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: m"
      }
    ]
  },
  {
    "name": "init_draft",
    "inputs": [
      "ctx: Context < InitDraft >",
      "tag: u32"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let d = & mut ctx . accounts . draft ;"
      },
      {
        "id": 9,
        "label": "d . parent = ctx . accounts . moderator . key () ;"
      },
      {
        "id": 10,
        "label": "d . tag = tag ;"
      },
      {
        "id": 11,
        "label": "d . score = 0 ;"
      },
      {
        "id": 12,
        "label": "d . verdict = Pending ;"
      },
      {
        "id": 13,
        "label": "d . flags = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: d"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: d"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: d"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: d"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: d"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: d"
      }
    ]
  },
  {
    "name": "judge_pair",
    "inputs": [
      "ctx: Context < JudgePair >",
      "weight: u32"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let m = & mut ctx . accounts . moderator ;"
      },
      {
        "id": 17,
        "label": "let d1 = & mut ctx . accounts . first ;"
      },
      {
        "id": 18,
        "label": "let d2 = & mut ctx . accounts . second ;"
      },
      {
        "id": 19,
        "label": "for t in 0 .. 5 { let jitter = ((m . level as u32 + weight + t) % 9) as u32 ; m . bias = (m . bias + jitter) . min (100) ; m . queue = m . queue . saturating_add (1) ; }"
      },
      {
        "id": 20,
        "label": "let jitter = ((m . level as u32 + weight + t) % 9) as u32 ;"
      },
      {
        "id": 21,
        "label": "m . bias = (m . bias + jitter) . min (100) ;"
      },
      {
        "id": 22,
        "label": "m . queue = m . queue . saturating_add (1) ;"
      },
      {
        "id": 23,
        "label": "if d1 . tag & 2 == 0 { d1 . verdict = Approved ; d1 . score = d1 . score . saturating_add (weight / 2 + (m . level as u32)) ; d1 . flags = d1 . flags . saturating_sub (d1 . flags . min (1)) ; m . queue = m . queue . saturating_sub (1) ; msg ! (\"D1 approved; score={}, queue={}\" , d1 . score , m . queue) ; } else { d1 . verdict = Rejected ; d1 . score = d1 . score / 2 + 3 ; d1 . flags = d1 . flags . saturating_add (2) ; m . bias = m . bias . saturating_sub (1) ; msg ! (\"D1 rejected; score={}, bias={}\" , d1 . score , m . bias) ; }"
      },
      {
        "id": 24,
        "label": "d1 . verdict = Approved ;"
      },
      {
        "id": 25,
        "label": "d1 . score = d1 . score . saturating_add (weight / 2 + (m . level as u32)) ;"
      },
      {
        "id": 26,
        "label": "d1 . flags = d1 . flags . saturating_sub (d1 . flags . min (1)) ;"
      },
      {
        "id": 27,
        "label": "m . queue = m . queue . saturating_sub (1) ;"
      },
      {
        "id": 28,
        "label": "msg ! (\"D1 approved; score={}, queue={}\" , d1 . score , m . queue) ;"
      },
      {
        "id": 29,
        "label": "d1 . verdict = Rejected ;"
      },
      {
        "id": 30,
        "label": "d1 . score = d1 . score / 2 + 3 ;"
      },
      {
        "id": 31,
        "label": "d1 . flags = d1 . flags . saturating_add (2) ;"
      },
      {
        "id": 32,
        "label": "m . bias = m . bias . saturating_sub (1) ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"D1 rejected; score={}, bias={}\" , d1 . score , m . bias) ;"
      },
      {
        "id": 34,
        "label": "for _ in 0 .. 3 { if d2 . score & 1 == 1 { d2 . verdict = Approved ; d2 . score = d2 . score . saturating_add ((m . bias % 13) as u32 + 1) ; m . queue = m . queue . saturating_sub (1) ; msg ! (\"D2 approve+; score={}, queue={}\" , d2 . score , m . queue) ; } else { d2 . verdict = Pending ; d2 . flags = d2 . flags . saturating_add (1) ; m . bias = m . bias / 2 + 10 ; msg ! (\"D2 pending; flags={}, bias={}\" , d2 . flags , m . bias) ; } }"
      },
      {
        "id": 35,
        "label": "if d2 . score & 1 == 1 { d2 . verdict = Approved ; d2 . score = d2 . score . saturating_add ((m . bias % 13) as u32 + 1) ; m . queue = m . queue . saturating_sub (1) ; msg ! (\"D2 approve+; score={}, queue={}\" , d2 . score , m . queue) ; } else { d2 . verdict = Pending ; d2 . flags = d2 . flags . saturating_add (1) ; m . bias = m . bias / 2 + 10 ; msg ! (\"D2 pending; flags={}, bias={}\" , d2 . flags , m . bias) ; }"
      },
      {
        "id": 36,
        "label": "d2 . verdict = Approved ;"
      },
      {
        "id": 37,
        "label": "d2 . score = d2 . score . saturating_add ((m . bias % 13) as u32 + 1) ;"
      },
      {
        "id": 38,
        "label": "m . queue = m . queue . saturating_sub (1) ;"
      },
      {
        "id": 39,
        "label": "msg ! (\"D2 approve+; score={}, queue={}\" , d2 . score , m . queue) ;"
      },
      {
        "id": 40,
        "label": "d2 . verdict = Pending ;"
      },
      {
        "id": 41,
        "label": "d2 . flags = d2 . flags . saturating_add (1) ;"
      },
      {
        "id": 42,
        "label": "m . bias = m . bias / 2 + 10 ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"D2 pending; flags={}, bias={}\" , d2 . flags , m . bias) ;"
      },
      {
        "id": 44,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: m"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: d1"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: d2"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: m"
      },
      {
        "from": 20,
        "to": 20,
        "label": "def: jitter"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 21,
        "label": "data_dep: m"
      },
      {
        "from": 20,
        "to": 21,
        "label": "data_dep: jitter"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 22,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 23,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 23,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 24,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 25,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 26,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: m"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: d1"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: d1"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 32,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 34,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 35,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 35,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 36,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 37,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 37,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: m"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: d2"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: d2"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: m"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: m"
      }
    ]
  }
]