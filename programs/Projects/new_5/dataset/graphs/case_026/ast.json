[
  {
    "name": "init_smith",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitSmith >",
      "tier: u8"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . smithy ;",
      "s . owner = ctx . accounts . owner . key () ;",
      "s . tier = tier ;",
      "s . heat = 300 ;",
      "s . total_work = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "init_item",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < InitItem >",
      "code: u32"
    ],
    "attributes": [],
    "body": [
      "let it = & mut ctx . accounts . item ;",
      "it . parent = ctx . accounts . smithy . key () ;",
      "it . code = code ;",
      "it . step = Raw ;",
      "it . durability = 500 ;",
      "it . quality = 0 ;",
      "Ok (())"
    ]
  },
  {
    "name": "process_dual",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < ProcessDual >",
      "fuel: u32"
    ],
    "attributes": [],
    "body": [
      "let s = & mut ctx . accounts . smithy ;",
      "let left = & mut ctx . accounts . first_item ;",
      "let right = & mut ctx . accounts . second_item ;",
      "let mut phase : i32 = (s . heat as i32) % 40 - 20 ;",
      "for _ in 0 .. 5",
      "{",
      "phase = if phase < 0",
      "{",
      "- phase } else { 20 - phase } ;",
      "let delta = (phase . abs () as u32) . min (25) ;",
      "s . total_work = s . total_work . saturating_add (delta as u64) ;",
      "s . heat = s . heat . saturating_add (fuel / 10 + delta) ;",
      "if s . heat > 2000",
      "{",
      "s . heat = 800 + (s . heat % 300) ;",
      "}",
      "}",
      "if left . durability > 0",
      "{",
      "left . durability = left . durability . saturating_sub ((fuel / 8) + 3) ;",
      "left . quality = left . quality . checked_add (s . tier as u32 + 1) . unwrap_or (u32 :: MAX) ;",
      "left . step = Tempered ;",
      "msg ! (\"Left tempered;",
      "qual=",
      "{",
      "}, dura={}\" , left . quality , left . durability) ;",
      "} else",
      "{",
      "left . quality = (left . quality / 2) + (s . tier as u32) ;",
      "left . step = Scrapped ;",
      "s . heat = s . heat / 2 + 111 ;",
      "msg ! (\"Left scrapped;",
      "heat=",
      "{",
      "}, qual={}\" , s . heat , left . quality) ;",
      "}",
      "let mix = (right . code ^ (s . heat as u32)) . rotate_left ((s . tier % 31) as u32) ;",
      "if (mix & 0xFF) > 127",
      "{",
      "right . step = Polished ;",
      "right . quality = right . quality . saturating_add ((mix & 255) + 5) ;",
      "s . total_work = s . total_work . saturating_add (7) ;",
      "msg ! (\"Right polished;",
      "q=",
      "{",
      "}, work={}\" , right . quality , s . total_work) ;",
      "} else",
      "{",
      "right . step = Tempered ;",
      "right . durability = right . durability . saturating_add ((mix % 41) + 1) ;",
      "s . heat = s . heat . saturating_sub ((mix % 13) as u32) ;",
      "msg ! (\"Right tempered alt;",
      "dura=",
      "{",
      "}, heat={}\" , right . durability , s . heat) ;",
      "}",
      "Ok (())"
    ]
  },
  {
    "name": "InitSmith",
    "node_type": "struct",
    "fields": [
      {
        "name": "smithy",
        "attribute": "# [account (init , payer = owner , space = 8 + 32 + 1 + 4 + 8)]",
        "field_type": "Account < 'info , Smithy >"
      },
      {
        "name": "owner",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "InitItem",
    "node_type": "struct",
    "fields": [
      {
        "name": "smithy",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Smithy >"
      },
      {
        "name": "item",
        "attribute": "# [account (init , payer = user , space = 8 + 32 + 4 + 1 + 4 + 4)]",
        "field_type": "Account < 'info , Item >"
      },
      {
        "name": "user",
        "attribute": "# [account (mut)]",
        "field_type": "Signer < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "ProcessDual",
    "node_type": "struct",
    "fields": [
      {
        "name": "smithy",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , Smithy >"
      },
      {
        "name": "first_item",
        "attribute": "# [account (mut , has_one = parent)]",
        "field_type": "Account < 'info , Item >"
      },
      {
        "name": "second_item",
        "attribute": "# [account (mut , has_one = parent)]",
        "field_type": "Account < 'info , Item >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Smithy",
    "node_type": "struct",
    "fields": [
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "tier",
        "attribute": null,
        "field_type": "u8"
      },
      {
        "name": "heat",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "total_work",
        "attribute": null,
        "field_type": "u64"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  },
  {
    "name": "Item",
    "node_type": "struct",
    "fields": [
      {
        "name": "parent",
        "attribute": null,
        "field_type": "Pubkey"
      },
      {
        "name": "code",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "step",
        "attribute": null,
        "field_type": "ForgeStep"
      },
      {
        "name": "durability",
        "attribute": null,
        "field_type": "u32"
      },
      {
        "name": "quality",
        "attribute": null,
        "field_type": "u32"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]