[
  {
    "name": "init_smith",
    "inputs": [
      "ctx: Context < InitSmith >",
      "tier: u8"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let s = & mut ctx . accounts . smithy ;"
      },
      {
        "id": 2,
        "label": "s . owner = ctx . accounts . owner . key () ;"
      },
      {
        "id": 3,
        "label": "s . tier = tier ;"
      },
      {
        "id": 4,
        "label": "s . heat = 300 ;"
      },
      {
        "id": 5,
        "label": "s . total_work = 0 ;"
      },
      {
        "id": 6,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 1,
        "to": 1,
        "label": "def: s"
      },
      {
        "from": 1,
        "to": 2,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 3,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 4,
        "label": "data_dep: s"
      },
      {
        "from": 1,
        "to": 5,
        "label": "data_dep: s"
      }
    ]
  },
  {
    "name": "init_item",
    "inputs": [
      "ctx: Context < InitItem >",
      "code: u32"
    ],
    "nodes": [
      {
        "id": 7,
        "label": "Entry"
      },
      {
        "id": 8,
        "label": "let it = & mut ctx . accounts . item ;"
      },
      {
        "id": 9,
        "label": "it . parent = ctx . accounts . smithy . key () ;"
      },
      {
        "id": 10,
        "label": "it . code = code ;"
      },
      {
        "id": 11,
        "label": "it . step = Raw ;"
      },
      {
        "id": 12,
        "label": "it . durability = 500 ;"
      },
      {
        "id": 13,
        "label": "it . quality = 0 ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 8,
        "label": "def: it"
      },
      {
        "from": 8,
        "to": 9,
        "label": "data_dep: it"
      },
      {
        "from": 8,
        "to": 10,
        "label": "data_dep: it"
      },
      {
        "from": 8,
        "to": 11,
        "label": "data_dep: it"
      },
      {
        "from": 8,
        "to": 12,
        "label": "data_dep: it"
      },
      {
        "from": 8,
        "to": 13,
        "label": "data_dep: it"
      }
    ]
  },
  {
    "name": "process_dual",
    "inputs": [
      "ctx: Context < ProcessDual >",
      "fuel: u32"
    ],
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let s = & mut ctx . accounts . smithy ;"
      },
      {
        "id": 17,
        "label": "let left = & mut ctx . accounts . first_item ;"
      },
      {
        "id": 18,
        "label": "let right = & mut ctx . accounts . second_item ;"
      },
      {
        "id": 19,
        "label": "let mut phase : i32 = (s . heat as i32) % 40 - 20 ;"
      },
      {
        "id": 20,
        "label": "for _ in 0 .. 5 { phase = if phase < 0 { - phase } else { 20 - phase } ; let delta = (phase . abs () as u32) . min (25) ; s . total_work = s . total_work . saturating_add (delta as u64) ; s . heat = s . heat . saturating_add (fuel / 10 + delta) ; if s . heat > 2000 { s . heat = 800 + (s . heat % 300) ; } }"
      },
      {
        "id": 21,
        "label": "phase = if phase < 0 { - phase } else { 20 - phase } ;"
      },
      {
        "id": 22,
        "label": "- phase"
      },
      {
        "id": 23,
        "label": "20 - phase"
      },
      {
        "id": 24,
        "label": "let delta = (phase . abs () as u32) . min (25) ;"
      },
      {
        "id": 25,
        "label": "s . total_work = s . total_work . saturating_add (delta as u64) ;"
      },
      {
        "id": 26,
        "label": "s . heat = s . heat . saturating_add (fuel / 10 + delta) ;"
      },
      {
        "id": 27,
        "label": "if s . heat > 2000 { s . heat = 800 + (s . heat % 300) ; }"
      },
      {
        "id": 28,
        "label": "s . heat = 800 + (s . heat % 300) ;"
      },
      {
        "id": 29,
        "label": "if left . durability > 0 { left . durability = left . durability . saturating_sub ((fuel / 8) + 3) ; left . quality = left . quality . checked_add (s . tier as u32 + 1) . unwrap_or (u32 :: MAX) ; left . step = Tempered ; msg ! (\"Left tempered; qual={}, dura={}\" , left . quality , left . durability) ; } else { left . quality = (left . quality / 2) + (s . tier as u32) ; left . step = Scrapped ; s . heat = s . heat / 2 + 111 ; msg ! (\"Left scrapped; heat={}, qual={}\" , s . heat , left . quality) ; }"
      },
      {
        "id": 30,
        "label": "left . durability = left . durability . saturating_sub ((fuel / 8) + 3) ;"
      },
      {
        "id": 31,
        "label": "left . quality = left . quality . checked_add (s . tier as u32 + 1) . unwrap_or (u32 :: MAX) ;"
      },
      {
        "id": 32,
        "label": "left . step = Tempered ;"
      },
      {
        "id": 33,
        "label": "msg ! (\"Left tempered; qual={}, dura={}\" , left . quality , left . durability) ;"
      },
      {
        "id": 34,
        "label": "left . quality = (left . quality / 2) + (s . tier as u32) ;"
      },
      {
        "id": 35,
        "label": "left . step = Scrapped ;"
      },
      {
        "id": 36,
        "label": "s . heat = s . heat / 2 + 111 ;"
      },
      {
        "id": 37,
        "label": "msg ! (\"Left scrapped; heat={}, qual={}\" , s . heat , left . quality) ;"
      },
      {
        "id": 38,
        "label": "let mix = (right . code ^ (s . heat as u32)) . rotate_left ((s . tier % 31) as u32) ;"
      },
      {
        "id": 39,
        "label": "if (mix & 0xFF) > 127 { right . step = Polished ; right . quality = right . quality . saturating_add ((mix & 255) + 5) ; s . total_work = s . total_work . saturating_add (7) ; msg ! (\"Right polished; q={}, work={}\" , right . quality , s . total_work) ; } else { right . step = Tempered ; right . durability = right . durability . saturating_add ((mix % 41) + 1) ; s . heat = s . heat . saturating_sub ((mix % 13) as u32) ; msg ! (\"Right tempered alt; dura={}, heat={}\" , right . durability , s . heat) ; }"
      },
      {
        "id": 40,
        "label": "right . step = Polished ;"
      },
      {
        "id": 41,
        "label": "right . quality = right . quality . saturating_add ((mix & 255) + 5) ;"
      },
      {
        "id": 42,
        "label": "s . total_work = s . total_work . saturating_add (7) ;"
      },
      {
        "id": 43,
        "label": "msg ! (\"Right polished; q={}, work={}\" , right . quality , s . total_work) ;"
      },
      {
        "id": 44,
        "label": "right . step = Tempered ;"
      },
      {
        "id": 45,
        "label": "right . durability = right . durability . saturating_add ((mix % 41) + 1) ;"
      },
      {
        "id": 46,
        "label": "s . heat = s . heat . saturating_sub ((mix % 13) as u32) ;"
      },
      {
        "id": 47,
        "label": "msg ! (\"Right tempered alt; dura={}, heat={}\" , right . durability , s . heat) ;"
      },
      {
        "id": 48,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 16,
        "to": 16,
        "label": "def: s"
      },
      {
        "from": 17,
        "to": 17,
        "label": "def: left"
      },
      {
        "from": 18,
        "to": 18,
        "label": "def: right"
      },
      {
        "from": 16,
        "to": 19,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 20,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 24,
        "label": "def: delta"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 25,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 25,
        "label": "data_dep: delta"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 26,
        "label": "data_dep: s"
      },
      {
        "from": 24,
        "to": 26,
        "label": "data_dep: delta"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 27,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 28,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 29,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 29,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 30,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 31,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 31,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 32,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 34,
        "label": "data_dep: left"
      },
      {
        "from": 17,
        "to": 34,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 34,
        "label": "data_dep: s"
      },
      {
        "from": 17,
        "to": 35,
        "label": "data_dep: left"
      },
      {
        "from": 16,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 36,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 38,
        "label": "def: mix"
      },
      {
        "from": 18,
        "to": 38,
        "label": "data_dep: right"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 38,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: mix"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: mix"
      },
      {
        "from": 16,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 39,
        "label": "data_dep: right"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: mix"
      },
      {
        "from": 16,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 39,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 39,
        "label": "data_dep: mix"
      },
      {
        "from": 18,
        "to": 40,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 41,
        "label": "data_dep: right"
      },
      {
        "from": 38,
        "to": 41,
        "label": "data_dep: mix"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 42,
        "label": "data_dep: s"
      },
      {
        "from": 18,
        "to": 44,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 45,
        "label": "data_dep: right"
      },
      {
        "from": 18,
        "to": 45,
        "label": "data_dep: right"
      },
      {
        "from": 38,
        "to": 45,
        "label": "data_dep: mix"
      },
      {
        "from": 16,
        "to": 46,
        "label": "data_dep: s"
      },
      {
        "from": 16,
        "to": 46,
        "label": "data_dep: s"
      },
      {
        "from": 38,
        "to": 46,
        "label": "data_dep: mix"
      }
    ]
  }
]