[
  {
    "name": "process_490",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx490 >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let source = ctx . accounts . src . to_account_info () ;",
      "let dest = ctx . accounts . dst . to_account_info () ;",
      "require ! (source . key () != dest . key () , ErrorCode :: SameAccount) ;",
      "let bal = * * source . try_borrow_lamports () ? ;",
      "require ! (bal >= amount , ErrorCode :: InsufficientFunds) ;",
      "let fee = amount / 2 ;",
      "let net = amount . checked_sub (fee) . unwrap () ;",
      "let updated_src = bal . checked_sub (amount) . unwrap () ;",
      "* * source . try_borrow_mut_lamports () ? = updated_src ;",
      "* * dest . try_borrow_mut_lamports () ? += net ;",
      "* * ctx . accounts . rent_acc . to_account_info () . try_borrow_mut_lamports () ? += fee ;",
      "msg ! (\"Transferred {} lamports, fee {}\" , net , fee) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx490",
    "node_type": "struct",
    "fields": [
      {
        "name": "src",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "dst",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "rent_acc",
        "attribute": "# [account (mut)]",
        "field_type": "AccountInfo < 'info >"
      },
      {
        "name": "system_program",
        "attribute": null,
        "field_type": "Program < 'info , System >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]