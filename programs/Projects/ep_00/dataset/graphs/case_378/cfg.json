[
  {
    "name": "start",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let data = & mut ctx . accounts . data ;"
      },
      {
        "id": 2,
        "label": "data . owner = ctx . accounts . user . key () ;"
      },
      {
        "id": 3,
        "label": "let sum_val = a . checked_add (b) . unwrap () ;"
      },
      {
        "id": 4,
        "label": "let xor_val = sum_val ^ 0xA ;"
      },
      {
        "id": 5,
        "label": "data . val1 = xor_val ;"
      },
      {
        "id": 6,
        "label": "data . val2 = xor_val . checked_mul (3) . unwrap () ;"
      },
      {
        "id": 7,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "call"
      }
    ]
  },
  {
    "name": "swap_values",
    "nodes": [
      {
        "id": 8,
        "label": "Entry"
      },
      {
        "id": 9,
        "label": "let data = & mut ctx . accounts . data ;"
      },
      {
        "id": 10,
        "label": "require_keys_eq ! (data . owner , ctx . accounts . user . key () , CustomError :: AccessDenied) ;"
      },
      {
        "id": 11,
        "label": "let temp = data . val1 ;"
      },
      {
        "id": 12,
        "label": "data . val1 = data . val2 ;"
      },
      {
        "id": 13,
        "label": "data . val2 = temp ;"
      },
      {
        "id": 14,
        "label": "msg ! (\"Values swapped: {} and {}\" , data . val1 , data . val2) ;"
      },
      {
        "id": 15,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "call"
      }
    ]
  }
]