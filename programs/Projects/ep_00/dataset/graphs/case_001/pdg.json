[
  {
    "name": "execute_case_001",
    "inputs": [
      "ctx: Context < SafeCtx001 >",
      "amount: u64"
    ],
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "require ! (ctx . accounts . authority_001 . is_signer , CustomError :: MissingSigner) ;"
      },
      {
        "id": 2,
        "label": "require_keys_eq (ctx . accounts . vault_001 . owner , ctx . program_id , CustomError :: InvalidOwner) ;"
      },
      {
        "id": 3,
        "label": "let initial = ctx . accounts . vault_001 . to_account_info () . lamports () ;"
      },
      {
        "id": 4,
        "label": "* * ctx . accounts . vault_001 . to_account_info () . try_borrow_mut_lamports () ? = initial . checked_sub (amount) . ok_or (CustomError :: Underflow) ? ;"
      },
      {
        "id": 5,
        "label": "let recipient_initial = ctx . accounts . recipient_001 . to_account_info () . lamports () ;"
      },
      {
        "id": 6,
        "label": "* * ctx . accounts . recipient_001 . to_account_info () . try_borrow_mut_lamports () ? = recipient_initial . checked_add (amount) . ok_or (CustomError :: Overflow) ? ;"
      },
      {
        "id": 7,
        "label": "msg ! (\"Transferred lamports: {}\" , amount) ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 3,
        "to": 3,
        "label": "def: initial"
      },
      {
        "from": 3,
        "to": 4,
        "label": "data_dep: initial"
      },
      {
        "from": 5,
        "to": 5,
        "label": "def: recipient_initial"
      },
      {
        "from": 5,
        "to": 6,
        "label": "data_dep: recipient_initial"
      }
    ]
  }
]