[
  {
    "name": "process_479",
    "node_type": "function",
    "fields": null,
    "inputs": [
      "ctx: Context < Ctx479 >",
      "amount: u64"
    ],
    "attributes": [],
    "body": [
      "let from_t = & ctx . accounts . from_token ;",
      "let to_t = & ctx . accounts . to_token ;",
      "require ! (from_t . key () != to_t . key () , ErrorCode :: DuplicateToken) ;",
      "let owner_key = ctx . accounts . owner . key () ;",
      "require ! (owner_key == from_t . owner , ErrorCode :: BadOwner) ;",
      "let before = from_t . amount ;",
      "require ! (before >= amount , ErrorCode :: NotEnoughTokens) ;",
      "let cpi_accounts = Transfer { from : from_t . to_account_info () , to : to_t . to_account_info () , authority : ctx . accounts . owner . to_account_info () , } ;",
      "let cpi_ctx = CpiContext :: new (ctx . accounts . token_prog . to_account_info () , cpi_accounts) ;",
      "token :: transfer (cpi_ctx , amount) ? ;",
      "let after = from_t . reload () ? . amount ;",
      "let diff = before . checked_sub (after) . unwrap_or (0) ;",
      "let _ = diff * 4 ;",
      "msg ! (\"{} tokens moved\" , diff) ;",
      "Ok (())"
    ]
  },
  {
    "name": "Ctx479",
    "node_type": "struct",
    "fields": [
      {
        "name": "from_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "to_token",
        "attribute": "# [account (mut)]",
        "field_type": "Account < 'info , TokenAccount >"
      },
      {
        "name": "owner",
        "attribute": null,
        "field_type": "Signer < 'info >"
      },
      {
        "name": "token_prog",
        "attribute": null,
        "field_type": "Program < 'info , Token >"
      }
    ],
    "inputs": null,
    "attributes": null,
    "body": null
  }
]