[
  {
    "name": "create_plan",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let p = & mut ctx . accounts . plan ;"
      },
      {
        "id": 2,
        "label": "p . provider = ctx . accounts . provider . key () ;"
      },
      {
        "id": 3,
        "label": "p . name = name ;"
      },
      {
        "id": 4,
        "label": "p . interval = interval_days ;"
      },
      {
        "id": 5,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      }
    ]
  },
  {
    "name": "subscribe",
    "nodes": [
      {
        "id": 6,
        "label": "Entry"
      },
      {
        "id": 7,
        "label": "let plan = & ctx . accounts . plan ;"
      },
      {
        "id": 8,
        "label": "let sub = & mut ctx . accounts . subscription ;"
      },
      {
        "id": 9,
        "label": "sub . subscriber = ctx . accounts . subscriber . key () ;"
      },
      {
        "id": 10,
        "label": "sub . plan = plan . key () ;"
      },
      {
        "id": 11,
        "label": "sub . expires_at = Clock :: get () ? . unix_timestamp + duration_seconds ;"
      },
      {
        "id": 12,
        "label": "require_keys_eq ! (sub . plan , plan . key () , SubError :: PlanMismatch) ;"
      },
      {
        "id": 13,
        "label": "require_keys_eq ! (sub . subscriber , ctx . accounts . subscriber . key () , SubError :: SubscriberMismatch) ;"
      },
      {
        "id": 14,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      },
      {
        "from": 8,
        "to": 9,
        "label": "next"
      },
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      }
    ]
  },
  {
    "name": "renew",
    "nodes": [
      {
        "id": 15,
        "label": "Entry"
      },
      {
        "id": 16,
        "label": "let plan = & ctx . accounts . plan ;"
      },
      {
        "id": 17,
        "label": "let sub = & mut ctx . accounts . subscription ;"
      },
      {
        "id": 18,
        "label": "require_keys_eq ! (sub . plan , plan . key () , SubError :: PlanMismatch) ;"
      },
      {
        "id": 19,
        "label": "require_keys_eq ! (sub . subscriber , ctx . accounts . subscriber . key () , SubError :: SubscriberMismatch) ;"
      },
      {
        "id": 20,
        "label": "let extension = (plan . interval as i64) * 86_400 ;"
      },
      {
        "id": 21,
        "label": "sub . expires_at = sub . expires_at . saturating_add (extension) ;"
      },
      {
        "id": 22,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      }
    ]
  }
]