[
  {
    "name": "create_listing",
    "nodes": [
      {
        "id": 0,
        "label": "Entry"
      },
      {
        "id": 1,
        "label": "let listing = & mut ctx . accounts . listing ;"
      },
      {
        "id": 2,
        "label": "listing . seller = * ctx . accounts . seller . key ;"
      },
      {
        "id": 3,
        "label": "listing . mint = ctx . accounts . mint . key () ;"
      },
      {
        "id": 4,
        "label": "listing . price = price ;"
      },
      {
        "id": 5,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . seller_nft_account . to_account_info () , to : ctx . accounts . escrow_nft_account . to_account_info () , authority : ctx . accounts . seller . to_account_info () , } ;"
      },
      {
        "id": 6,
        "label": "let cpi_ctx = CpiContext :: new (ctx . accounts . token_program . to_account_info () , cpi_accounts) ;"
      },
      {
        "id": 7,
        "label": "transfer (cpi_ctx , 1) ? ;"
      },
      {
        "id": 8,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 0,
        "to": 1,
        "label": "next"
      },
      {
        "from": 1,
        "to": 2,
        "label": "next"
      },
      {
        "from": 2,
        "to": 3,
        "label": "next"
      },
      {
        "from": 3,
        "to": 4,
        "label": "next"
      },
      {
        "from": 4,
        "to": 5,
        "label": "next"
      },
      {
        "from": 5,
        "to": 6,
        "label": "next"
      },
      {
        "from": 6,
        "to": 7,
        "label": "next"
      },
      {
        "from": 7,
        "to": 8,
        "label": "next"
      }
    ]
  },
  {
    "name": "buy",
    "nodes": [
      {
        "id": 9,
        "label": "Entry"
      },
      {
        "id": 10,
        "label": "let listing = & ctx . accounts . listing ;"
      },
      {
        "id": 11,
        "label": "let seller = & ctx . accounts . seller ;"
      },
      {
        "id": 12,
        "label": "let buyer = & ctx . accounts . buyer ;"
      },
      {
        "id": 13,
        "label": "require ! (listing . seller != * buyer . key , MarketplaceError :: SelfPurchase) ;"
      },
      {
        "id": 14,
        "label": "* * buyer . to_account_info () . try_borrow_mut_lamports () ? = buyer . to_account_info () . lamports () . checked_sub (listing . price) . ok_or (MarketplaceError :: InsufficientFunds) ? ;"
      },
      {
        "id": 15,
        "label": "* * seller . to_account_info () . try_borrow_mut_lamports () ? = seller . to_account_info () . lamports () . checked_add (listing . price) . ok_or (MarketplaceError :: Overflow) ? ;"
      },
      {
        "id": 16,
        "label": "let expected_escrow = Pubkey :: find_program_address (& [b\"listing\" , listing . mint . as_ref ()] , ctx . program_id) . 0 ;"
      },
      {
        "id": 17,
        "label": "require ! (ctx . accounts . escrow_nft_account . key () == expected_escrow , MarketplaceError :: MismatchEscrow) ;"
      },
      {
        "id": 18,
        "label": "let cpi_accounts = Transfer { from : ctx . accounts . escrow_nft_account . to_account_info () , to : ctx . accounts . buyer_nft_account . to_account_info () , authority : ctx . accounts . listing . to_account_info () , } ;"
      },
      {
        "id": 19,
        "label": "let seeds = & [b\"listing\" , listing . mint . as_ref () , & [listing . bump]] ;"
      },
      {
        "id": 20,
        "label": "let signer = & [& seeds [..]] ;"
      },
      {
        "id": 21,
        "label": "let cpi_ctx = CpiContext :: new_with_signer (ctx . accounts . token_program . to_account_info () , cpi_accounts , signer ,) ;"
      },
      {
        "id": 22,
        "label": "transfer (cpi_ctx , 1) ? ;"
      },
      {
        "id": 23,
        "label": "Ok (())"
      }
    ],
    "edges": [
      {
        "from": 9,
        "to": 10,
        "label": "next"
      },
      {
        "from": 10,
        "to": 11,
        "label": "next"
      },
      {
        "from": 11,
        "to": 12,
        "label": "next"
      },
      {
        "from": 12,
        "to": 13,
        "label": "next"
      },
      {
        "from": 13,
        "to": 14,
        "label": "next"
      },
      {
        "from": 14,
        "to": 15,
        "label": "next"
      },
      {
        "from": 15,
        "to": 16,
        "label": "next"
      },
      {
        "from": 16,
        "to": 17,
        "label": "next"
      },
      {
        "from": 17,
        "to": 18,
        "label": "next"
      },
      {
        "from": 18,
        "to": 19,
        "label": "next"
      },
      {
        "from": 19,
        "to": 20,
        "label": "next"
      },
      {
        "from": 20,
        "to": 21,
        "label": "next"
      },
      {
        "from": 21,
        "to": 22,
        "label": "next"
      },
      {
        "from": 22,
        "to": 23,
        "label": "next"
      }
    ]
  }
]